// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const STREAM = lex.STREAM
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"STREAM",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12778

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1468,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	257, 376,
	-2, 0,
	-1, 73,
	239, 224,
	503, 224,
	-2, 0,
	-1, 84,
	227, 1216,
	241, 1216,
	257, 372,
	383, 372,
	393, 986,
	429, 372,
	441, 986,
	487, 986,
	514, 372,
	540, 986,
	-2, 0,
	-1, 90,
	132, 1468,
	234, 1468,
	525, 1468,
	526, 1468,
	-2, 0,
	-1, 106,
	150, 1439,
	169, 1439,
	182, 1439,
	237, 1439,
	270, 1439,
	335, 1439,
	345, 1439,
	520, 1439,
	-2, 1410,
	-1, 145,
	158, 847,
	256, 847,
	386, 814,
	446, 814,
	486, 814,
	506, 847,
	508, 814,
	-2, 0,
	-1, 147,
	4, 1470,
	21, 1470,
	22, 1470,
	23, 1470,
	24, 1470,
	25, 1470,
	26, 1470,
	27, 1470,
	28, 1470,
	30, 1470,
	31, 1470,
	37, 1470,
	42, 1470,
	43, 1470,
	45, 1470,
	46, 1470,
	47, 1470,
	48, 1470,
	49, 1470,
	50, 1470,
	51, 1470,
	52, 1470,
	54, 1470,
	55, 1470,
	56, 1470,
	57, 1470,
	59, 1470,
	60, 1470,
	61, 1470,
	62, 1470,
	63, 1470,
	64, 1470,
	65, 1470,
	69, 1470,
	70, 1470,
	71, 1470,
	72, 1470,
	74, 1470,
	75, 1470,
	76, 1470,
	80, 1470,
	81, 1470,
	82, 1470,
	83, 1470,
	84, 1470,
	85, 1470,
	86, 1470,
	89, 1470,
	90, 1470,
	91, 1470,
	92, 1470,
	93, 1470,
	95, 1470,
	97, 1470,
	98, 1470,
	99, 1470,
	100, 1470,
	101, 1470,
	102, 1470,
	104, 1470,
	105, 1470,
	106, 1470,
	108, 1470,
	109, 1470,
	110, 1470,
	118, 1470,
	119, 1470,
	120, 1470,
	121, 1470,
	123, 1470,
	124, 1470,
	125, 1470,
	127, 1470,
	128, 1470,
	129, 1470,
	131, 1470,
	132, 1470,
	133, 1470,
	135, 1470,
	136, 1470,
	137, 1470,
	140, 1470,
	141, 1470,
	142, 1470,
	144, 1470,
	145, 1470,
	147, 1470,
	148, 1470,
	149, 1470,
	151, 1470,
	152, 1470,
	153, 1470,
	154, 1470,
	155, 1470,
	156, 1470,
	157, 1470,
	158, 1470,
	159, 1470,
	160, 1470,
	161, 1470,
	162, 1470,
	163, 1470,
	164, 1470,
	165, 1470,
	166, 1470,
	168, 1470,
	174, 1470,
	175, 1470,
	176, 1470,
	177, 1470,
	181, 1470,
	183, 1470,
	187, 1470,
	188, 1470,
	189, 1470,
	190, 1470,
	191, 1470,
	192, 1470,
	193, 1470,
	194, 1470,
	195, 1470,
	196, 1470,
	197, 1470,
	198, 1470,
	199, 1470,
	201, 1470,
	202, 1470,
	204, 1470,
	205, 1470,
	207, 1470,
	208, 1470,
	209, 1470,
	210, 1470,
	211, 1470,
	212, 1470,
	213, 1470,
	214, 1470,
	215, 1470,
	217, 1470,
	218, 1470,
	220, 1470,
	221, 1470,
	222, 1470,
	223, 1470,
	227, 1470,
	228, 1470,
	229, 1470,
	230, 1470,
	231, 1470,
	234, 1470,
	235, 1470,
	236, 1470,
	238, 1470,
	240, 1470,
	241, 1470,
	243, 1470,
	245, 1470,
	246, 1470,
	247, 1470,
	249, 1470,
	253, 1470,
	254, 1470,
	255, 1470,
	256, 1470,
	257, 1470,
	258, 1470,
	260, 1470,
	261, 1470,
	262, 1470,
	264, 1470,
	265, 1470,
	267, 1470,
	268, 1470,
	271, 1470,
	275, 1470,
	276, 1470,
	277, 1470,
	280, 1470,
	281, 1470,
	282, 1470,
	283, 1470,
	285, 1470,
	286, 1470,
	287, 1470,
	288, 1470,
	289, 1470,
	290, 1470,
	291, 1470,
	292, 1470,
	293, 1470,
	294, 1470,
	295, 1470,
	296, 1470,
	297, 1470,
	298, 1470,
	299, 1470,
	300, 1470,
	301, 1470,
	302, 1470,
	303, 1470,
	304, 1470,
	305, 1470,
	306, 1470,
	308, 1470,
	310, 1470,
	311, 1470,
	312, 1470,
	313, 1470,
	314, 1470,
	315, 1470,
	316, 1470,
	317, 1470,
	318, 1470,
	319, 1470,
	320, 1470,
	321, 1470,
	323, 1470,
	325, 1470,
	327, 1470,
	328, 1470,
	330, 1470,
	331, 1470,
	332, 1470,
	333, 1470,
	334, 1470,
	337, 1470,
	340, 1470,
	341, 1470,
	342, 1470,
	343, 1470,
	346, 1470,
	347, 1470,
	348, 1470,
	350, 1470,
	352, 1470,
	353, 1470,
	354, 1470,
	355, 1470,
	356, 1470,
	357, 1470,
	358, 1470,
	359, 1470,
	360, 1470,
	361, 1470,
	362, 1470,
	363, 1470,
	365, 1470,
	366, 1470,
	367, 1470,
	368, 1470,
	369, 1470,
	370, 1470,
	371, 1470,
	372, 1470,
	373, 1470,
	374, 1470,
	375, 1470,
	376, 1470,
	377, 1470,
	378, 1470,
	379, 1470,
	381, 1470,
	382, 1470,
	384, 1470,
	385, 1470,
	386, 1470,
	387, 1470,
	388, 1470,
	389, 1470,
	390, 1470,
	391, 1470,
	392, 1470,
	393, 1470,
	394, 1470,
	395, 1470,
	397, 1470,
	399, 1470,
	400, 1470,
	401, 1470,
	406, 1470,
	408, 1470,
	409, 1470,
	410, 1470,
	411, 1470,
	412, 1470,
	413, 1470,
	414, 1470,
	415, 1470,
	416, 1470,
	418, 1470,
	419, 1470,
	420, 1470,
	422, 1470,
	423, 1470,
	424, 1470,
	425, 1470,
	426, 1470,
	427, 1470,
	429, 1470,
	430, 1470,
	431, 1470,
	432, 1470,
	433, 1470,
	434, 1470,
	435, 1470,
	436, 1470,
	437, 1470,
	438, 1470,
	439, 1470,
	441, 1470,
	442, 1470,
	443, 1470,
	444, 1470,
	445, 1470,
	446, 1470,
	448, 1470,
	449, 1470,
	450, 1470,
	451, 1470,
	452, 1470,
	453, 1470,
	455, 1470,
	456, 1470,
	457, 1470,
	458, 1470,
	459, 1470,
	460, 1470,
	461, 1470,
	463, 1470,
	465, 1470,
	466, 1470,
	467, 1470,
	468, 1470,
	469, 1470,
	470, 1470,
	471, 1470,
	472, 1470,
	473, 1470,
	474, 1470,
	475, 1470,
	476, 1470,
	477, 1470,
	478, 1470,
	479, 1470,
	480, 1470,
	482, 1470,
	483, 1470,
	485, 1470,
	486, 1470,
	488, 1470,
	489, 1470,
	490, 1470,
	491, 1470,
	492, 1470,
	493, 1470,
	494, 1470,
	495, 1470,
	496, 1470,
	498, 1470,
	499, 1470,
	500, 1470,
	501, 1470,
	502, 1470,
	504, 1470,
	506, 1470,
	507, 1470,
	508, 1470,
	509, 1470,
	510, 1470,
	511, 1470,
	513, 1470,
	514, 1470,
	515, 1470,
	516, 1470,
	518, 1470,
	519, 1470,
	522, 1470,
	523, 1470,
	524, 1470,
	525, 1470,
	526, 1470,
	527, 1470,
	528, 1470,
	530, 1470,
	533, 1470,
	534, 1470,
	535, 1470,
	536, 1470,
	537, 1470,
	538, 1470,
	540, 1470,
	541, 1470,
	542, 1470,
	543, 1470,
	549, 1470,
	550, 1470,
	551, 1470,
	552, 1470,
	553, 1470,
	554, 1470,
	-2, 0,
	-1, 148,
	1, 1325,
	130, 1325,
	245, 1325,
	324, 1325,
	381, 1325,
	390, 1325,
	558, 1325,
	582, 1325,
	-2, 0,
	-1, 150,
	1, 1325,
	582, 1325,
	-2, 0,
	-1, 151,
	1, 1325,
	582, 1325,
	-2, 0,
	-1, 152,
	1, 1325,
	503, 1325,
	582, 1325,
	-2, 0,
	-1, 181,
	150, 1438,
	169, 1438,
	182, 1438,
	237, 1438,
	270, 1438,
	335, 1438,
	345, 1438,
	520, 1438,
	-2, 1413,
	-1, 227,
	4, 1477,
	5, 1477,
	6, 1477,
	7, 1477,
	8, 1477,
	9, 1477,
	10, 1477,
	21, 1477,
	22, 1477,
	23, 1477,
	24, 1477,
	25, 1477,
	26, 1477,
	27, 1477,
	28, 1477,
	30, 1477,
	31, 1477,
	37, 1477,
	38, 1477,
	42, 1477,
	43, 1477,
	44, 1477,
	45, 1477,
	46, 1477,
	47, 1477,
	48, 1477,
	49, 1477,
	50, 1477,
	51, 1477,
	52, 1477,
	54, 1477,
	55, 1477,
	56, 1477,
	57, 1477,
	59, 1477,
	60, 1477,
	61, 1477,
	62, 1477,
	63, 1477,
	64, 1477,
	65, 1477,
	66, 1477,
	67, 1477,
	68, 1477,
	69, 1477,
	70, 1477,
	71, 1477,
	72, 1477,
	74, 1477,
	75, 1477,
	76, 1477,
	78, 1477,
	80, 1477,
	81, 1477,
	82, 1477,
	83, 1477,
	84, 1477,
	85, 1477,
	86, 1477,
	89, 1477,
	90, 1477,
	91, 1477,
	92, 1477,
	93, 1477,
	95, 1477,
	97, 1477,
	98, 1477,
	99, 1477,
	100, 1477,
	101, 1477,
	102, 1477,
	104, 1477,
	105, 1477,
	106, 1477,
	107, 1477,
	108, 1477,
	109, 1477,
	110, 1477,
	111, 1477,
	112, 1477,
	113, 1477,
	114, 1477,
	115, 1477,
	116, 1477,
	117, 1477,
	118, 1477,
	119, 1477,
	120, 1477,
	121, 1477,
	122, 1477,
	123, 1477,
	124, 1477,
	125, 1477,
	126, 1477,
	127, 1477,
	128, 1477,
	129, 1477,
	131, 1477,
	132, 1477,
	133, 1477,
	135, 1477,
	136, 1477,
	137, 1477,
	140, 1477,
	141, 1477,
	142, 1477,
	144, 1477,
	145, 1477,
	147, 1477,
	148, 1477,
	149, 1477,
	151, 1477,
	152, 1477,
	153, 1477,
	154, 1477,
	155, 1477,
	156, 1477,
	157, 1477,
	158, 1477,
	159, 1477,
	160, 1477,
	161, 1477,
	162, 1477,
	163, 1477,
	164, 1477,
	165, 1477,
	166, 1477,
	167, 1477,
	168, 1477,
	174, 1477,
	175, 1477,
	176, 1477,
	177, 1477,
	181, 1477,
	183, 1477,
	186, 1477,
	187, 1477,
	188, 1477,
	189, 1477,
	190, 1477,
	191, 1477,
	192, 1477,
	193, 1477,
	194, 1477,
	195, 1477,
	196, 1477,
	197, 1477,
	198, 1477,
	199, 1477,
	201, 1477,
	202, 1477,
	204, 1477,
	205, 1477,
	207, 1477,
	208, 1477,
	209, 1477,
	210, 1477,
	211, 1477,
	212, 1477,
	213, 1477,
	214, 1477,
	215, 1477,
	216, 1477,
	217, 1477,
	218, 1477,
	220, 1477,
	221, 1477,
	222, 1477,
	223, 1477,
	227, 1477,
	228, 1477,
	229, 1477,
	230, 1477,
	231, 1477,
	233, 1477,
	234, 1477,
	235, 1477,
	236, 1477,
	238, 1477,
	240, 1477,
	241, 1477,
	242, 1477,
	243, 1477,
	244, 1477,
	245, 1477,
	246, 1477,
	247, 1477,
	248, 1477,
	249, 1477,
	253, 1477,
	254, 1477,
	255, 1477,
	256, 1477,
	257, 1477,
	258, 1477,
	260, 1477,
	261, 1477,
	262, 1477,
	264, 1477,
	265, 1477,
	266, 1477,
	267, 1477,
	268, 1477,
	269, 1477,
	271, 1477,
	275, 1477,
	276, 1477,
	277, 1477,
	278, 1477,
	279, 1477,
	280, 1477,
	281, 1477,
	282, 1477,
	283, 1477,
	285, 1477,
	286, 1477,
	287, 1477,
	288, 1477,
	289, 1477,
	290, 1477,
	291, 1477,
	292, 1477,
	293, 1477,
	294, 1477,
	295, 1477,
	296, 1477,
	297, 1477,
	298, 1477,
	299, 1477,
	300, 1477,
	301, 1477,
	302, 1477,
	303, 1477,
	304, 1477,
	305, 1477,
	306, 1477,
	308, 1477,
	309, 1477,
	310, 1477,
	311, 1477,
	312, 1477,
	313, 1477,
	314, 1477,
	315, 1477,
	316, 1477,
	317, 1477,
	318, 1477,
	319, 1477,
	320, 1477,
	321, 1477,
	322, 1477,
	323, 1477,
	324, 1477,
	325, 1477,
	326, 1477,
	327, 1477,
	328, 1477,
	329, 1477,
	330, 1477,
	331, 1477,
	332, 1477,
	333, 1477,
	334, 1477,
	337, 1477,
	341, 1477,
	342, 1477,
	343, 1477,
	346, 1477,
	347, 1477,
	348, 1477,
	349, 1477,
	350, 1477,
	351, 1477,
	352, 1477,
	353, 1477,
	354, 1477,
	355, 1477,
	356, 1477,
	357, 1477,
	358, 1477,
	359, 1477,
	360, 1477,
	361, 1477,
	362, 1477,
	363, 1477,
	365, 1477,
	366, 1477,
	367, 1477,
	368, 1477,
	369, 1477,
	370, 1477,
	371, 1477,
	372, 1477,
	373, 1477,
	374, 1477,
	375, 1477,
	376, 1477,
	377, 1477,
	378, 1477,
	379, 1477,
	381, 1477,
	382, 1477,
	384, 1477,
	385, 1477,
	386, 1477,
	387, 1477,
	388, 1477,
	389, 1477,
	390, 1477,
	391, 1477,
	392, 1477,
	393, 1477,
	394, 1477,
	395, 1477,
	397, 1477,
	399, 1477,
	400, 1477,
	401, 1477,
	406, 1477,
	408, 1477,
	409, 1477,
	410, 1477,
	411, 1477,
	412, 1477,
	413, 1477,
	414, 1477,
	415, 1477,
	416, 1477,
	418, 1477,
	419, 1477,
	420, 1477,
	421, 1477,
	422, 1477,
	423, 1477,
	424, 1477,
	425, 1477,
	426, 1477,
	427, 1477,
	429, 1477,
	430, 1477,
	431, 1477,
	432, 1477,
	433, 1477,
	434, 1477,
	435, 1477,
	436, 1477,
	437, 1477,
	438, 1477,
	439, 1477,
	441, 1477,
	442, 1477,
	443, 1477,
	444, 1477,
	445, 1477,
	446, 1477,
	447, 1477,
	448, 1477,
	449, 1477,
	450, 1477,
	451, 1477,
	452, 1477,
	453, 1477,
	454, 1477,
	455, 1477,
	456, 1477,
	457, 1477,
	458, 1477,
	459, 1477,
	460, 1477,
	461, 1477,
	463, 1477,
	465, 1477,
	466, 1477,
	467, 1477,
	468, 1477,
	469, 1477,
	470, 1477,
	471, 1477,
	472, 1477,
	473, 1477,
	474, 1477,
	475, 1477,
	476, 1477,
	477, 1477,
	478, 1477,
	479, 1477,
	480, 1477,
	482, 1477,
	483, 1477,
	484, 1477,
	485, 1477,
	486, 1477,
	488, 1477,
	489, 1477,
	490, 1477,
	491, 1477,
	492, 1477,
	493, 1477,
	494, 1477,
	495, 1477,
	496, 1477,
	498, 1477,
	499, 1477,
	500, 1477,
	501, 1477,
	502, 1477,
	504, 1477,
	506, 1477,
	507, 1477,
	508, 1477,
	509, 1477,
	510, 1477,
	511, 1477,
	512, 1477,
	513, 1477,
	514, 1477,
	515, 1477,
	516, 1477,
	518, 1477,
	519, 1477,
	521, 1477,
	522, 1477,
	523, 1477,
	524, 1477,
	525, 1477,
	526, 1477,
	527, 1477,
	528, 1477,
	529, 1477,
	530, 1477,
	533, 1477,
	534, 1477,
	535, 1477,
	536, 1477,
	537, 1477,
	538, 1477,
	540, 1477,
	541, 1477,
	542, 1477,
	543, 1477,
	549, 1477,
	550, 1477,
	551, 1477,
	552, 1477,
	553, 1477,
	554, 1477,
	555, 1477,
	563, 1477,
	570, 1477,
	571, 1477,
	572, 1477,
	579, 1477,
	583, 1477,
	-2, 0,
	-1, 720,
	4, 1214,
	21, 1214,
	22, 1214,
	23, 1214,
	24, 1214,
	25, 1214,
	26, 1214,
	27, 1214,
	28, 1214,
	30, 1214,
	31, 1214,
	37, 1214,
	42, 1214,
	43, 1214,
	45, 1214,
	46, 1214,
	47, 1214,
	48, 1214,
	49, 1214,
	50, 1214,
	51, 1214,
	52, 1214,
	54, 1214,
	55, 1214,
	56, 1214,
	57, 1214,
	59, 1214,
	60, 1214,
	61, 1214,
	62, 1214,
	63, 1214,
	64, 1214,
	65, 1214,
	69, 1214,
	70, 1214,
	71, 1214,
	72, 1214,
	74, 1214,
	75, 1214,
	76, 1214,
	80, 1214,
	81, 1214,
	82, 1214,
	83, 1214,
	84, 1214,
	85, 1214,
	86, 1214,
	89, 1214,
	90, 1214,
	91, 1214,
	92, 1214,
	93, 1214,
	95, 1214,
	97, 1214,
	98, 1214,
	99, 1214,
	100, 1214,
	101, 1214,
	102, 1214,
	104, 1214,
	105, 1214,
	106, 1214,
	108, 1214,
	109, 1214,
	110, 1214,
	118, 1214,
	119, 1214,
	120, 1214,
	121, 1214,
	123, 1214,
	124, 1214,
	125, 1214,
	127, 1214,
	128, 1214,
	129, 1214,
	131, 1214,
	132, 1214,
	133, 1214,
	135, 1214,
	136, 1214,
	137, 1214,
	140, 1214,
	141, 1214,
	142, 1214,
	144, 1214,
	145, 1214,
	147, 1214,
	148, 1214,
	149, 1214,
	151, 1214,
	152, 1214,
	153, 1214,
	154, 1214,
	155, 1214,
	156, 1214,
	157, 1214,
	158, 1214,
	159, 1214,
	160, 1214,
	161, 1214,
	162, 1214,
	163, 1214,
	164, 1214,
	165, 1214,
	166, 1214,
	168, 1214,
	174, 1214,
	175, 1214,
	176, 1214,
	177, 1214,
	181, 1214,
	183, 1214,
	187, 1214,
	188, 1214,
	189, 1214,
	190, 1214,
	191, 1214,
	192, 1214,
	193, 1214,
	194, 1214,
	195, 1214,
	196, 1214,
	197, 1214,
	198, 1214,
	199, 1214,
	201, 1214,
	202, 1214,
	204, 1214,
	205, 1214,
	207, 1214,
	208, 1214,
	209, 1214,
	210, 1214,
	211, 1214,
	212, 1214,
	213, 1214,
	214, 1214,
	215, 1214,
	217, 1214,
	218, 1214,
	220, 1214,
	221, 1214,
	222, 1214,
	223, 1214,
	227, 1214,
	228, 1214,
	229, 1214,
	230, 1214,
	231, 1214,
	234, 1214,
	235, 1214,
	236, 1214,
	238, 1214,
	240, 1214,
	241, 1214,
	243, 1214,
	245, 1214,
	246, 1214,
	247, 1214,
	249, 1214,
	253, 1214,
	254, 1214,
	255, 1214,
	256, 1214,
	257, 1214,
	258, 1214,
	260, 1214,
	261, 1214,
	262, 1214,
	264, 1214,
	265, 1214,
	267, 1214,
	268, 1214,
	271, 1214,
	275, 1214,
	276, 1214,
	277, 1214,
	280, 1214,
	281, 1214,
	282, 1214,
	283, 1214,
	285, 1214,
	286, 1214,
	287, 1214,
	288, 1214,
	289, 1214,
	290, 1214,
	291, 1214,
	292, 1214,
	293, 1214,
	294, 1214,
	295, 1214,
	296, 1214,
	297, 1214,
	298, 1214,
	299, 1214,
	300, 1214,
	301, 1214,
	302, 1214,
	303, 1214,
	304, 1214,
	305, 1214,
	306, 1214,
	308, 1214,
	310, 1214,
	311, 1214,
	312, 1214,
	313, 1214,
	314, 1214,
	315, 1214,
	316, 1214,
	317, 1214,
	318, 1214,
	319, 1214,
	320, 1214,
	321, 1214,
	323, 1214,
	325, 1214,
	327, 1214,
	328, 1214,
	330, 1214,
	331, 1214,
	332, 1214,
	333, 1214,
	334, 1214,
	337, 1214,
	341, 1214,
	342, 1214,
	343, 1214,
	346, 1214,
	347, 1214,
	348, 1214,
	350, 1214,
	352, 1214,
	353, 1214,
	354, 1214,
	355, 1214,
	356, 1214,
	357, 1214,
	358, 1214,
	359, 1214,
	360, 1214,
	361, 1214,
	362, 1214,
	363, 1214,
	365, 1214,
	366, 1214,
	367, 1214,
	368, 1214,
	369, 1214,
	370, 1214,
	371, 1214,
	372, 1214,
	373, 1214,
	374, 1214,
	375, 1214,
	376, 1214,
	377, 1214,
	378, 1214,
	379, 1214,
	381, 1214,
	382, 1214,
	384, 1214,
	385, 1214,
	386, 1214,
	387, 1214,
	388, 1214,
	389, 1214,
	390, 1214,
	391, 1214,
	392, 1214,
	393, 1214,
	394, 1214,
	395, 1214,
	397, 1214,
	399, 1214,
	400, 1214,
	401, 1214,
	406, 1214,
	408, 1214,
	409, 1214,
	410, 1214,
	411, 1214,
	412, 1214,
	413, 1214,
	414, 1214,
	415, 1214,
	416, 1214,
	418, 1214,
	419, 1214,
	420, 1214,
	422, 1214,
	423, 1214,
	424, 1214,
	425, 1214,
	426, 1214,
	427, 1214,
	429, 1214,
	430, 1214,
	431, 1214,
	432, 1214,
	433, 1214,
	434, 1214,
	435, 1214,
	436, 1214,
	437, 1214,
	438, 1214,
	439, 1214,
	441, 1214,
	442, 1214,
	443, 1214,
	444, 1214,
	445, 1214,
	446, 1214,
	448, 1214,
	449, 1214,
	450, 1214,
	451, 1214,
	452, 1214,
	453, 1214,
	455, 1214,
	456, 1214,
	457, 1214,
	458, 1214,
	459, 1214,
	460, 1214,
	461, 1214,
	463, 1214,
	465, 1214,
	466, 1214,
	467, 1214,
	468, 1214,
	469, 1214,
	470, 1214,
	471, 1214,
	472, 1214,
	473, 1214,
	474, 1214,
	475, 1214,
	476, 1214,
	477, 1214,
	478, 1214,
	479, 1214,
	480, 1214,
	482, 1214,
	483, 1214,
	485, 1214,
	486, 1214,
	488, 1214,
	489, 1214,
	490, 1214,
	491, 1214,
	492, 1214,
	493, 1214,
	494, 1214,
	495, 1214,
	496, 1214,
	498, 1214,
	499, 1214,
	500, 1214,
	501, 1214,
	502, 1214,
	504, 1214,
	506, 1214,
	507, 1214,
	508, 1214,
	509, 1214,
	510, 1214,
	511, 1214,
	513, 1214,
	514, 1214,
	515, 1214,
	516, 1214,
	518, 1214,
	519, 1214,
	522, 1214,
	523, 1214,
	524, 1214,
	525, 1214,
	526, 1214,
	527, 1214,
	528, 1214,
	530, 1214,
	533, 1214,
	534, 1214,
	535, 1214,
	536, 1214,
	537, 1214,
	538, 1214,
	540, 1214,
	541, 1214,
	542, 1214,
	543, 1214,
	549, 1214,
	550, 1214,
	551, 1214,
	552, 1214,
	553, 1214,
	554, 1214,
	-2, 0,
	-1, 739,
	185, 2235,
	503, 2235,
	562, 2235,
	581, 2235,
	-2, 0,
	-1, 740,
	185, 2338,
	503, 2338,
	562, 2338,
	581, 2338,
	-2, 0,
	-1, 741,
	185, 2222,
	503, 2222,
	562, 2222,
	581, 2222,
	-2, 0,
	-1, 743,
	185, 2468,
	503, 2468,
	562, 2468,
	581, 2468,
	-2, 0,
	-1, 745,
	185, 2508,
	503, 2508,
	562, 2508,
	581, 2508,
	-2, 0,
	-1, 752,
	185, 2365,
	503, 2365,
	562, 2365,
	581, 2365,
	-2, 650,
	-1, 781,
	581, 2170,
	584, 2170,
	-2, 917,
	-1, 782,
	581, 2172,
	584, 2172,
	-2, 918,
	-1, 783,
	581, 2171,
	584, 2171,
	-2, 919,
	-1, 784,
	584, 2097,
	-2, 920,
	-1, 807,
	182, 238,
	-2, 0,
	-1, 830,
	44, 2144,
	-2, 0,
	-1, 831,
	540, 1192,
	-2, 987,
	-1, 847,
	4, 1606,
	21, 1606,
	22, 1606,
	23, 1606,
	24, 1606,
	25, 1606,
	26, 1606,
	27, 1606,
	28, 1606,
	30, 1606,
	31, 1606,
	37, 1606,
	42, 1606,
	43, 1606,
	45, 1606,
	46, 1606,
	47, 1606,
	48, 1606,
	49, 1606,
	50, 1606,
	51, 1606,
	52, 1606,
	54, 1606,
	55, 1606,
	56, 1606,
	57, 1606,
	59, 1606,
	60, 1606,
	61, 1606,
	62, 1606,
	63, 1606,
	64, 1606,
	65, 1606,
	69, 1606,
	70, 1606,
	71, 1606,
	72, 1606,
	74, 1606,
	75, 1606,
	76, 1606,
	80, 1606,
	81, 1606,
	82, 1606,
	83, 1606,
	84, 1606,
	85, 1606,
	86, 1606,
	89, 1606,
	90, 1606,
	91, 1606,
	92, 1606,
	93, 1606,
	95, 1606,
	97, 1606,
	98, 1606,
	99, 1606,
	100, 1606,
	101, 1606,
	102, 1606,
	104, 1606,
	105, 1606,
	106, 1606,
	108, 1606,
	109, 1606,
	110, 1606,
	118, 1606,
	119, 1606,
	120, 1606,
	121, 1606,
	123, 1606,
	124, 1606,
	125, 1606,
	127, 1606,
	128, 1606,
	129, 1606,
	131, 1606,
	132, 1606,
	133, 1606,
	135, 1606,
	136, 1606,
	137, 1606,
	140, 1606,
	141, 1606,
	142, 1606,
	144, 1606,
	145, 1606,
	147, 1606,
	148, 1606,
	149, 1606,
	151, 1606,
	152, 1606,
	153, 1606,
	154, 1606,
	155, 1606,
	156, 1606,
	157, 1606,
	158, 1606,
	159, 1606,
	160, 1606,
	161, 1606,
	162, 1606,
	163, 1606,
	164, 1606,
	165, 1606,
	166, 1606,
	168, 1606,
	174, 1606,
	175, 1606,
	176, 1606,
	177, 1606,
	181, 1606,
	183, 1606,
	187, 1606,
	188, 1606,
	189, 1606,
	190, 1606,
	191, 1606,
	192, 1606,
	193, 1606,
	194, 1606,
	195, 1606,
	196, 1606,
	197, 1606,
	198, 1606,
	199, 1606,
	201, 1606,
	202, 1606,
	204, 1606,
	205, 1606,
	207, 1606,
	208, 1606,
	209, 1606,
	210, 1606,
	211, 1606,
	212, 1606,
	213, 1606,
	214, 1606,
	215, 1606,
	217, 1606,
	218, 1606,
	220, 1606,
	221, 1606,
	222, 1606,
	223, 1606,
	227, 1606,
	228, 1606,
	229, 1606,
	230, 1606,
	231, 1606,
	234, 1606,
	235, 1606,
	236, 1606,
	238, 1606,
	240, 1606,
	241, 1606,
	243, 1606,
	245, 1606,
	246, 1606,
	247, 1606,
	249, 1606,
	253, 1606,
	254, 1606,
	255, 1606,
	256, 1606,
	257, 1606,
	258, 1606,
	260, 1606,
	261, 1606,
	262, 1606,
	264, 1606,
	265, 1606,
	267, 1606,
	268, 1606,
	271, 1606,
	275, 1606,
	276, 1606,
	277, 1606,
	280, 1606,
	281, 1606,
	282, 1606,
	283, 1606,
	285, 1606,
	286, 1606,
	287, 1606,
	288, 1606,
	289, 1606,
	290, 1606,
	291, 1606,
	292, 1606,
	293, 1606,
	294, 1606,
	295, 1606,
	296, 1606,
	297, 1606,
	298, 1606,
	299, 1606,
	300, 1606,
	301, 1606,
	302, 1606,
	303, 1606,
	304, 1606,
	305, 1606,
	306, 1606,
	308, 1606,
	310, 1606,
	311, 1606,
	312, 1606,
	313, 1606,
	314, 1606,
	315, 1606,
	316, 1606,
	317, 1606,
	318, 1606,
	319, 1606,
	320, 1606,
	321, 1606,
	323, 1606,
	325, 1606,
	327, 1606,
	328, 1606,
	330, 1606,
	331, 1606,
	332, 1606,
	333, 1606,
	334, 1606,
	337, 1606,
	341, 1606,
	342, 1606,
	343, 1606,
	346, 1606,
	347, 1606,
	348, 1606,
	350, 1606,
	352, 1606,
	353, 1606,
	354, 1606,
	355, 1606,
	356, 1606,
	357, 1606,
	358, 1606,
	359, 1606,
	360, 1606,
	361, 1606,
	362, 1606,
	363, 1606,
	365, 1606,
	366, 1606,
	367, 1606,
	368, 1606,
	369, 1606,
	370, 1606,
	371, 1606,
	372, 1606,
	373, 1606,
	374, 1606,
	375, 1606,
	376, 1606,
	377, 1606,
	378, 1606,
	379, 1606,
	381, 1606,
	382, 1606,
	384, 1606,
	385, 1606,
	386, 1606,
	387, 1606,
	388, 1606,
	389, 1606,
	390, 1606,
	391, 1606,
	392, 1606,
	393, 1606,
	394, 1606,
	395, 1606,
	397, 1606,
	399, 1606,
	400, 1606,
	401, 1606,
	406, 1606,
	408, 1606,
	409, 1606,
	410, 1606,
	411, 1606,
	412, 1606,
	413, 1606,
	414, 1606,
	415, 1606,
	416, 1606,
	418, 1606,
	419, 1606,
	420, 1606,
	422, 1606,
	423, 1606,
	424, 1606,
	425, 1606,
	426, 1606,
	427, 1606,
	429, 1606,
	430, 1606,
	431, 1606,
	432, 1606,
	433, 1606,
	434, 1606,
	435, 1606,
	436, 1606,
	437, 1606,
	438, 1606,
	439, 1606,
	441, 1606,
	442, 1606,
	443, 1606,
	444, 1606,
	445, 1606,
	446, 1606,
	448, 1606,
	449, 1606,
	450, 1606,
	451, 1606,
	452, 1606,
	453, 1606,
	455, 1606,
	456, 1606,
	457, 1606,
	458, 1606,
	459, 1606,
	460, 1606,
	461, 1606,
	463, 1606,
	465, 1606,
	466, 1606,
	467, 1606,
	468, 1606,
	469, 1606,
	470, 1606,
	471, 1606,
	472, 1606,
	473, 1606,
	474, 1606,
	475, 1606,
	476, 1606,
	477, 1606,
	478, 1606,
	479, 1606,
	480, 1606,
	482, 1606,
	483, 1606,
	485, 1606,
	486, 1606,
	488, 1606,
	489, 1606,
	490, 1606,
	491, 1606,
	492, 1606,
	493, 1606,
	494, 1606,
	495, 1606,
	496, 1606,
	498, 1606,
	499, 1606,
	500, 1606,
	501, 1606,
	502, 1606,
	504, 1606,
	506, 1606,
	507, 1606,
	508, 1606,
	509, 1606,
	510, 1606,
	511, 1606,
	513, 1606,
	514, 1606,
	515, 1606,
	516, 1606,
	518, 1606,
	519, 1606,
	522, 1606,
	523, 1606,
	524, 1606,
	525, 1606,
	526, 1606,
	527, 1606,
	528, 1606,
	530, 1606,
	533, 1606,
	534, 1606,
	535, 1606,
	536, 1606,
	537, 1606,
	538, 1606,
	540, 1606,
	541, 1606,
	542, 1606,
	543, 1606,
	549, 1606,
	550, 1606,
	551, 1606,
	552, 1606,
	553, 1606,
	554, 1606,
	-2, 0,
	-1, 855,
	257, 376,
	-2, 0,
	-1, 925,
	386, 815,
	446, 815,
	486, 815,
	508, 815,
	-2, 0,
	-1, 926,
	386, 814,
	446, 814,
	486, 814,
	508, 814,
	-2, 754,
	-1, 930,
	1, 861,
	578, 861,
	580, 861,
	582, 861,
	-2, 0,
	-1, 931,
	1, 789,
	578, 789,
	580, 789,
	582, 789,
	-2, 0,
	-1, 932,
	1, 793,
	578, 793,
	580, 793,
	582, 793,
	-2, 0,
	-1, 933,
	1, 916,
	182, 916,
	578, 916,
	580, 916,
	582, 916,
	-2, 0,
	-1, 941,
	1, 820,
	578, 820,
	580, 820,
	582, 820,
	-2, 0,
	-1, 947,
	1, 861,
	578, 861,
	580, 861,
	582, 861,
	-2, 0,
	-1, 948,
	1, 863,
	578, 863,
	580, 863,
	582, 863,
	-2, 0,
	-1, 949,
	1, 866,
	578, 866,
	580, 866,
	582, 866,
	-2, 0,
	-1, 955,
	1, 884,
	578, 884,
	580, 884,
	582, 884,
	-2, 0,
	-1, 956,
	1, 886,
	578, 886,
	580, 886,
	582, 886,
	-2, 0,
	-1, 961,
	1, 911,
	578, 911,
	580, 911,
	582, 911,
	-2, 0,
	-1, 1007,
	169, 1481,
	182, 1481,
	270, 1481,
	335, 1481,
	-2, 1417,
	-1, 1022,
	169, 1480,
	182, 1480,
	270, 1480,
	335, 1480,
	-2, 1414,
	-1, 1048,
	581, 2169,
	-2, 658,
	-1, 1076,
	5, 2161,
	579, 2159,
	-2, 2150,
	-1, 1084,
	5, 2182,
	579, 2179,
	-2, 2170,
	-1, 1085,
	5, 2183,
	579, 2180,
	-2, 2171,
	-1, 1093,
	581, 2167,
	-2, 2149,
	-1, 1094,
	579, 2590,
	-2, 2168,
	-1, 1117,
	579, 2589,
	-2, 2184,
	-1, 1118,
	5, 1681,
	-2, 2560,
	-1, 1119,
	5, 1682,
	-2, 2561,
	-1, 1120,
	5, 1683,
	-2, 2575,
	-1, 1121,
	5, 1684,
	-2, 2539,
	-1, 1122,
	5, 1685,
	-2, 2573,
	-1, 1123,
	5, 1693,
	-2, 2552,
	-1, 1124,
	5, 1680,
	-2, 2548,
	-1, 1125,
	5, 1680,
	-2, 2547,
	-1, 1126,
	5, 1680,
	-2, 2566,
	-1, 1127,
	5, 1691,
	-2, 2541,
	-1, 1128,
	5, 1696,
	-2, 2540,
	-1, 1129,
	5, 1698,
	-2, 2585,
	-1, 1132,
	5, 1720,
	-2, 2578,
	-1, 1133,
	5, 1712,
	-2, 2579,
	-1, 1134,
	5, 1720,
	-2, 2580,
	-1, 1135,
	5, 1716,
	-2, 2581,
	-1, 1136,
	5, 1666,
	-2, 2553,
	-1, 1137,
	5, 1667,
	-2, 2554,
	-1, 1138,
	5, 1668,
	-2, 2542,
	-1, 1166,
	5, 1703,
	-2, 2586,
	-1, 1167,
	5, 1704,
	-2, 2576,
	-1, 1168,
	5, 1705,
	541, 1705,
	-2, 2543,
	-1, 1169,
	5, 1706,
	541, 1706,
	-2, 2544,
	-1, 1206,
	579, 2179,
	-2, 2170,
	-1, 1207,
	579, 2180,
	-2, 2171,
	-1, 1306,
	185, 2508,
	503, 2508,
	562, 2508,
	581, 2508,
	-2, 0,
	-1, 1309,
	1, 636,
	582, 636,
	-2, 1333,
	-1, 1437,
	354, 2145,
	408, 2145,
	448, 2145,
	572, 2145,
	-2, 2135,
	-1, 1448,
	583, 2145,
	-2, 2146,
	-1, 1453,
	1, 1189,
	578, 1189,
	580, 1189,
	582, 1189,
	-2, 1466,
	-1, 1501,
	393, 986,
	540, 986,
	-2, 371,
	-1, 1517,
	44, 2143,
	-2, 952,
	-1, 1524,
	1, 1189,
	578, 1189,
	580, 1189,
	582, 1189,
	-2, 1466,
	-1, 1532,
	4, 1214,
	21, 1214,
	22, 1214,
	23, 1214,
	24, 1214,
	25, 1214,
	26, 1214,
	27, 1214,
	28, 1214,
	30, 1214,
	31, 1214,
	37, 1214,
	42, 1214,
	43, 1214,
	45, 1214,
	46, 1214,
	47, 1214,
	48, 1214,
	49, 1214,
	50, 1214,
	51, 1214,
	52, 1214,
	54, 1214,
	55, 1214,
	56, 1214,
	57, 1214,
	59, 1214,
	60, 1214,
	61, 1214,
	62, 1214,
	63, 1214,
	64, 1214,
	65, 1214,
	69, 1214,
	70, 1214,
	71, 1214,
	72, 1214,
	74, 1214,
	75, 1214,
	76, 1214,
	80, 1214,
	81, 1214,
	82, 1214,
	83, 1214,
	84, 1214,
	85, 1214,
	86, 1214,
	89, 1214,
	90, 1214,
	91, 1214,
	92, 1214,
	93, 1214,
	95, 1214,
	97, 1214,
	98, 1214,
	99, 1214,
	100, 1214,
	101, 1214,
	102, 1214,
	104, 1214,
	105, 1214,
	106, 1214,
	108, 1214,
	109, 1214,
	110, 1214,
	118, 1214,
	119, 1214,
	120, 1214,
	121, 1214,
	123, 1214,
	124, 1214,
	125, 1214,
	127, 1214,
	128, 1214,
	129, 1214,
	131, 1214,
	132, 1214,
	133, 1214,
	135, 1214,
	136, 1214,
	137, 1214,
	140, 1214,
	141, 1214,
	142, 1214,
	144, 1214,
	145, 1214,
	147, 1214,
	148, 1214,
	149, 1214,
	151, 1214,
	152, 1214,
	153, 1214,
	154, 1214,
	155, 1214,
	156, 1214,
	157, 1214,
	158, 1214,
	159, 1214,
	160, 1214,
	161, 1214,
	162, 1214,
	163, 1214,
	164, 1214,
	165, 1214,
	166, 1214,
	174, 1214,
	175, 1214,
	176, 1214,
	177, 1214,
	181, 1214,
	183, 1214,
	187, 1214,
	188, 1214,
	189, 1214,
	190, 1214,
	191, 1214,
	192, 1214,
	193, 1214,
	194, 1214,
	195, 1214,
	196, 1214,
	197, 1214,
	198, 1214,
	199, 1214,
	201, 1214,
	202, 1214,
	204, 1214,
	205, 1214,
	207, 1214,
	208, 1214,
	209, 1214,
	210, 1214,
	211, 1214,
	212, 1214,
	213, 1214,
	214, 1214,
	215, 1214,
	217, 1214,
	218, 1214,
	220, 1214,
	221, 1214,
	222, 1214,
	223, 1214,
	228, 1214,
	229, 1214,
	230, 1214,
	231, 1214,
	234, 1214,
	235, 1214,
	236, 1214,
	238, 1214,
	240, 1214,
	241, 1214,
	243, 1214,
	245, 1214,
	246, 1214,
	247, 1214,
	249, 1214,
	253, 1214,
	254, 1214,
	255, 1214,
	256, 1214,
	257, 1214,
	258, 1214,
	260, 1214,
	261, 1214,
	262, 1214,
	264, 1214,
	265, 1214,
	267, 1214,
	268, 1214,
	271, 1214,
	275, 1214,
	276, 1214,
	277, 1214,
	280, 1214,
	281, 1214,
	282, 1214,
	283, 1214,
	285, 1214,
	286, 1214,
	287, 1214,
	288, 1214,
	289, 1214,
	290, 1214,
	291, 1214,
	292, 1214,
	293, 1214,
	294, 1214,
	295, 1214,
	296, 1214,
	297, 1214,
	298, 1214,
	299, 1214,
	300, 1214,
	301, 1214,
	302, 1214,
	303, 1214,
	304, 1214,
	305, 1214,
	306, 1214,
	308, 1214,
	310, 1214,
	311, 1214,
	312, 1214,
	313, 1214,
	314, 1214,
	315, 1214,
	316, 1214,
	317, 1214,
	318, 1214,
	319, 1214,
	320, 1214,
	321, 1214,
	323, 1214,
	327, 1214,
	328, 1214,
	330, 1214,
	331, 1214,
	332, 1214,
	333, 1214,
	334, 1214,
	337, 1214,
	339, 1214,
	341, 1214,
	342, 1214,
	343, 1214,
	346, 1214,
	347, 1214,
	348, 1214,
	350, 1214,
	352, 1214,
	353, 1214,
	354, 1214,
	355, 1214,
	356, 1214,
	357, 1214,
	358, 1214,
	359, 1214,
	360, 1214,
	361, 1214,
	362, 1214,
	363, 1214,
	365, 1214,
	366, 1214,
	367, 1214,
	368, 1214,
	369, 1214,
	370, 1214,
	371, 1214,
	372, 1214,
	373, 1214,
	374, 1214,
	375, 1214,
	376, 1214,
	377, 1214,
	378, 1214,
	379, 1214,
	381, 1214,
	382, 1214,
	384, 1214,
	385, 1214,
	386, 1214,
	387, 1214,
	388, 1214,
	389, 1214,
	390, 1214,
	391, 1214,
	392, 1214,
	393, 1214,
	394, 1214,
	395, 1214,
	397, 1214,
	399, 1214,
	400, 1214,
	401, 1214,
	406, 1214,
	408, 1214,
	409, 1214,
	410, 1214,
	411, 1214,
	412, 1214,
	413, 1214,
	414, 1214,
	415, 1214,
	416, 1214,
	418, 1214,
	419, 1214,
	420, 1214,
	422, 1214,
	423, 1214,
	424, 1214,
	425, 1214,
	426, 1214,
	427, 1214,
	429, 1214,
	430, 1214,
	431, 1214,
	432, 1214,
	433, 1214,
	434, 1214,
	435, 1214,
	436, 1214,
	437, 1214,
	438, 1214,
	439, 1214,
	441, 1214,
	442, 1214,
	443, 1214,
	444, 1214,
	445, 1214,
	446, 1214,
	448, 1214,
	449, 1214,
	450, 1214,
	451, 1214,
	452, 1214,
	453, 1214,
	455, 1214,
	456, 1214,
	457, 1214,
	458, 1214,
	459, 1214,
	460, 1214,
	461, 1214,
	463, 1214,
	465, 1214,
	466, 1214,
	467, 1214,
	468, 1214,
	469, 1214,
	470, 1214,
	471, 1214,
	472, 1214,
	473, 1214,
	474, 1214,
	475, 1214,
	476, 1214,
	477, 1214,
	478, 1214,
	479, 1214,
	480, 1214,
	482, 1214,
	483, 1214,
	485, 1214,
	486, 1214,
	488, 1214,
	489, 1214,
	490, 1214,
	491, 1214,
	492, 1214,
	493, 1214,
	494, 1214,
	495, 1214,
	496, 1214,
	498, 1214,
	499, 1214,
	500, 1214,
	501, 1214,
	502, 1214,
	504, 1214,
	506, 1214,
	507, 1214,
	508, 1214,
	509, 1214,
	510, 1214,
	511, 1214,
	513, 1214,
	514, 1214,
	515, 1214,
	516, 1214,
	518, 1214,
	519, 1214,
	522, 1214,
	523, 1214,
	524, 1214,
	525, 1214,
	526, 1214,
	527, 1214,
	528, 1214,
	530, 1214,
	533, 1214,
	534, 1214,
	535, 1214,
	536, 1214,
	537, 1214,
	538, 1214,
	540, 1214,
	541, 1214,
	542, 1214,
	543, 1214,
	549, 1214,
	550, 1214,
	551, 1214,
	552, 1214,
	553, 1214,
	554, 1214,
	-2, 0,
	-1, 1555,
	1, 509,
	578, 509,
	580, 509,
	582, 509,
	-2, 1437,
	-1, 1558,
	4, 2584,
	11, 2584,
	12, 2584,
	14, 2584,
	15, 2584,
	16, 2584,
	17, 2584,
	18, 2584,
	19, 2584,
	21, 2584,
	22, 2584,
	23, 2584,
	24, 2584,
	25, 2584,
	26, 2584,
	27, 2584,
	28, 2584,
	30, 2584,
	31, 2584,
	34, 2584,
	35, 2584,
	37, 2584,
	39, 2584,
	42, 2584,
	43, 2584,
	45, 2584,
	46, 2584,
	47, 2584,
	48, 2584,
	49, 2584,
	50, 2584,
	51, 2584,
	52, 2584,
	54, 2584,
	55, 2584,
	56, 2584,
	57, 2584,
	59, 2584,
	60, 2584,
	61, 2584,
	62, 2584,
	63, 2584,
	64, 2584,
	65, 2584,
	69, 2584,
	70, 2584,
	71, 2584,
	72, 2584,
	74, 2584,
	75, 2584,
	76, 2584,
	77, 2584,
	80, 2584,
	81, 2584,
	82, 2584,
	83, 2584,
	84, 2584,
	85, 2584,
	86, 2584,
	87, 2584,
	89, 2584,
	90, 2584,
	91, 2584,
	92, 2584,
	93, 2584,
	95, 2584,
	96, 2584,
	97, 2584,
	98, 2584,
	99, 2584,
	100, 2584,
	101, 2584,
	102, 2584,
	104, 2584,
	105, 2584,
	106, 2584,
	107, 2584,
	108, 2584,
	109, 2584,
	110, 2584,
	118, 2584,
	119, 2584,
	120, 2584,
	121, 2584,
	123, 2584,
	124, 2584,
	125, 2584,
	127, 2584,
	128, 2584,
	129, 2584,
	131, 2584,
	132, 2584,
	133, 2584,
	135, 2584,
	136, 2584,
	137, 2584,
	140, 2584,
	141, 2584,
	142, 2584,
	144, 2584,
	145, 2584,
	147, 2584,
	148, 2584,
	149, 2584,
	151, 2584,
	152, 2584,
	153, 2584,
	154, 2584,
	155, 2584,
	156, 2584,
	157, 2584,
	158, 2584,
	159, 2584,
	160, 2584,
	161, 2584,
	162, 2584,
	163, 2584,
	164, 2584,
	165, 2584,
	166, 2584,
	170, 2584,
	171, 2584,
	172, 2584,
	173, 2584,
	174, 2584,
	175, 2584,
	176, 2584,
	177, 2584,
	180, 2584,
	181, 2584,
	183, 2584,
	186, 2584,
	187, 2584,
	188, 2584,
	189, 2584,
	190, 2584,
	191, 2584,
	192, 2584,
	193, 2584,
	194, 2584,
	195, 2584,
	196, 2584,
	197, 2584,
	198, 2584,
	199, 2584,
	201, 2584,
	202, 2584,
	204, 2584,
	205, 2584,
	207, 2584,
	208, 2584,
	209, 2584,
	210, 2584,
	211, 2584,
	212, 2584,
	213, 2584,
	214, 2584,
	215, 2584,
	216, 2584,
	217, 2584,
	218, 2584,
	219, 2584,
	220, 2584,
	221, 2584,
	222, 2584,
	223, 2584,
	225, 2584,
	226, 2584,
	228, 2584,
	229, 2584,
	230, 2584,
	231, 2584,
	233, 2584,
	234, 2584,
	235, 2584,
	236, 2584,
	238, 2584,
	240, 2584,
	241, 2584,
	242, 2584,
	243, 2584,
	244, 2584,
	245, 2584,
	246, 2584,
	247, 2584,
	248, 2584,
	249, 2584,
	251, 2584,
	252, 2584,
	253, 2584,
	254, 2584,
	255, 2584,
	256, 2584,
	257, 2584,
	258, 2584,
	260, 2584,
	261, 2584,
	262, 2584,
	264, 2584,
	265, 2584,
	266, 2584,
	267, 2584,
	268, 2584,
	269, 2584,
	271, 2584,
	275, 2584,
	276, 2584,
	277, 2584,
	280, 2584,
	281, 2584,
	282, 2584,
	283, 2584,
	284, 2584,
	285, 2584,
	286, 2584,
	287, 2584,
	288, 2584,
	289, 2584,
	290, 2584,
	291, 2584,
	292, 2584,
	293, 2584,
	294, 2584,
	295, 2584,
	296, 2584,
	297, 2584,
	298, 2584,
	299, 2584,
	300, 2584,
	301, 2584,
	302, 2584,
	303, 2584,
	304, 2584,
	305, 2584,
	306, 2584,
	308, 2584,
	309, 2584,
	310, 2584,
	311, 2584,
	312, 2584,
	313, 2584,
	314, 2584,
	315, 2584,
	316, 2584,
	317, 2584,
	318, 2584,
	319, 2584,
	320, 2584,
	321, 2584,
	323, 2584,
	326, 2584,
	327, 2584,
	328, 2584,
	330, 2584,
	331, 2584,
	332, 2584,
	333, 2584,
	334, 2584,
	337, 2584,
	341, 2584,
	342, 2584,
	343, 2584,
	344, 2584,
	346, 2584,
	347, 2584,
	348, 2584,
	350, 2584,
	352, 2584,
	353, 2584,
	354, 2584,
	355, 2584,
	356, 2584,
	357, 2584,
	358, 2584,
	359, 2584,
	360, 2584,
	361, 2584,
	362, 2584,
	363, 2584,
	365, 2584,
	366, 2584,
	367, 2584,
	368, 2584,
	369, 2584,
	370, 2584,
	371, 2584,
	372, 2584,
	373, 2584,
	374, 2584,
	375, 2584,
	376, 2584,
	377, 2584,
	378, 2584,
	379, 2584,
	381, 2584,
	382, 2584,
	384, 2584,
	385, 2584,
	386, 2584,
	387, 2584,
	388, 2584,
	389, 2584,
	390, 2584,
	391, 2584,
	392, 2584,
	393, 2584,
	394, 2584,
	395, 2584,
	397, 2584,
	399, 2584,
	400, 2584,
	401, 2584,
	406, 2584,
	407, 2584,
	408, 2584,
	409, 2584,
	410, 2584,
	411, 2584,
	412, 2584,
	413, 2584,
	414, 2584,
	415, 2584,
	416, 2584,
	418, 2584,
	419, 2584,
	420, 2584,
	421, 2584,
	422, 2584,
	423, 2584,
	424, 2584,
	425, 2584,
	426, 2584,
	427, 2584,
	428, 2584,
	429, 2584,
	430, 2584,
	431, 2584,
	432, 2584,
	433, 2584,
	434, 2584,
	435, 2584,
	436, 2584,
	437, 2584,
	438, 2584,
	439, 2584,
	441, 2584,
	442, 2584,
	443, 2584,
	444, 2584,
	445, 2584,
	446, 2584,
	448, 2584,
	449, 2584,
	450, 2584,
	451, 2584,
	452, 2584,
	453, 2584,
	454, 2584,
	455, 2584,
	456, 2584,
	457, 2584,
	458, 2584,
	459, 2584,
	460, 2584,
	461, 2584,
	463, 2584,
	465, 2584,
	466, 2584,
	467, 2584,
	468, 2584,
	469, 2584,
	470, 2584,
	471, 2584,
	472, 2584,
	473, 2584,
	474, 2584,
	475, 2584,
	476, 2584,
	477, 2584,
	478, 2584,
	479, 2584,
	480, 2584,
	482, 2584,
	483, 2584,
	485, 2584,
	486, 2584,
	488, 2584,
	489, 2584,
	490, 2584,
	491, 2584,
	492, 2584,
	493, 2584,
	494, 2584,
	495, 2584,
	496, 2584,
	498, 2584,
	499, 2584,
	500, 2584,
	501, 2584,
	502, 2584,
	504, 2584,
	506, 2584,
	507, 2584,
	508, 2584,
	509, 2584,
	510, 2584,
	511, 2584,
	513, 2584,
	514, 2584,
	515, 2584,
	516, 2584,
	518, 2584,
	519, 2584,
	522, 2584,
	523, 2584,
	524, 2584,
	525, 2584,
	526, 2584,
	527, 2584,
	528, 2584,
	530, 2584,
	533, 2584,
	534, 2584,
	535, 2584,
	536, 2584,
	537, 2584,
	538, 2584,
	540, 2584,
	541, 2584,
	542, 2584,
	543, 2584,
	549, 2584,
	550, 2584,
	551, 2584,
	552, 2584,
	553, 2584,
	554, 2584,
	555, 2584,
	557, 2584,
	560, 2584,
	561, 2584,
	562, 2584,
	563, 2584,
	564, 2584,
	565, 2584,
	567, 2584,
	568, 2584,
	569, 2584,
	570, 2584,
	571, 2584,
	572, 2584,
	573, 2584,
	574, 2584,
	575, 2584,
	577, 2584,
	580, 2584,
	581, 2584,
	583, 2584,
	584, 2584,
	-2, 0,
	-1, 1563,
	185, 2468,
	503, 2468,
	562, 2468,
	581, 2468,
	-2, 0,
	-1, 1612,
	386, 815,
	446, 815,
	486, 815,
	508, 815,
	-2, 0,
	-1, 1639,
	1, 810,
	578, 810,
	580, 810,
	582, 810,
	-2, 0,
	-1, 1640,
	1, 848,
	578, 848,
	580, 848,
	582, 848,
	-2, 0,
	-1, 1641,
	1, 856,
	578, 856,
	580, 856,
	582, 856,
	-2, 0,
	-1, 1644,
	1, 819,
	578, 819,
	580, 819,
	582, 819,
	-2, 0,
	-1, 1646,
	1, 823,
	578, 823,
	580, 823,
	582, 823,
	-2, 0,
	-1, 1652,
	1, 830,
	578, 830,
	580, 830,
	582, 830,
	-2, 0,
	-1, 1681,
	1, 2530,
	578, 2530,
	580, 2530,
	581, 2530,
	582, 2530,
	-2, 882,
	-1, 1682,
	1, 2465,
	578, 2465,
	580, 2465,
	581, 2465,
	582, 2465,
	-2, 883,
	-1, 1700,
	1, 1328,
	582, 1328,
	-2, 1333,
	-1, 1703,
	169, 1480,
	182, 1480,
	270, 1480,
	335, 1480,
	-2, 1418,
	-1, 1797,
	150, 1439,
	169, 1439,
	182, 1439,
	237, 1439,
	270, 1439,
	335, 1439,
	345, 1439,
	520, 1439,
	-2, 1881,
	-1, 1857,
	580, 2031,
	-2, 0,
	-1, 1892,
	150, 1439,
	169, 1439,
	182, 1439,
	237, 1439,
	270, 1439,
	335, 1439,
	345, 1439,
	520, 1439,
	-2, 1567,
	-1, 1941,
	579, 1708,
	-2, 1696,
	-1, 2019,
	1, 638,
	582, 638,
	-2, 1333,
	-1, 2144,
	219, 239,
	-2, 2178,
	-1, 2145,
	219, 240,
	-2, 284,
	-1, 2248,
	1, 812,
	578, 812,
	580, 812,
	582, 812,
	-2, 0,
	-1, 2249,
	1, 850,
	578, 850,
	580, 850,
	582, 850,
	-2, 0,
	-1, 2250,
	1, 858,
	578, 858,
	580, 858,
	582, 858,
	-2, 0,
	-1, 2284,
	1, 832,
	578, 832,
	580, 832,
	582, 832,
	-2, 0,
	-1, 2337,
	426, 1507,
	427, 1507,
	-2, 1741,
	-1, 2368,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1761,
	-1, 2369,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1762,
	-1, 2370,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1763,
	-1, 2371,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1764,
	-1, 2372,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1765,
	-1, 2373,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1766,
	-1, 2374,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1767,
	-1, 2375,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1768,
	-1, 2387,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1780,
	-1, 2388,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1781,
	-1, 2389,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1782,
	-1, 2392,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1787,
	-1, 2398,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1791,
	-1, 2400,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1799,
	-1, 2401,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1800,
	-1, 2402,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1801,
	-1, 2403,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1802,
	-1, 2539,
	5, 2182,
	185, 2042,
	579, 2179,
	-2, 2170,
	-1, 2540,
	185, 2043,
	-2, 2535,
	-1, 2541,
	185, 2044,
	-2, 2364,
	-1, 2542,
	185, 2045,
	-2, 2252,
	-1, 2543,
	185, 2046,
	-2, 2305,
	-1, 2544,
	185, 2047,
	-2, 2349,
	-1, 2545,
	185, 2048,
	-2, 2463,
	-1, 2546,
	185, 2049,
	-2, 1864,
	-1, 2616,
	1, 1568,
	2, 1568,
	107, 1568,
	150, 1568,
	169, 1568,
	182, 1568,
	186, 1568,
	203, 1568,
	206, 1568,
	233, 1568,
	237, 1568,
	248, 1568,
	266, 1568,
	270, 1568,
	309, 1568,
	335, 1568,
	339, 1568,
	345, 1568,
	417, 1568,
	421, 1568,
	520, 1568,
	531, 1568,
	546, 1568,
	547, 1568,
	548, 1568,
	558, 1568,
	578, 1568,
	580, 1568,
	582, 1568,
	584, 1568,
	-2, 1567,
	-1, 2629,
	579, 2151,
	-2, 2165,
	-1, 2631,
	1, 300,
	546, 300,
	-2, 1466,
	-1, 2656,
	579, 1707,
	-2, 1697,
	-1, 2832,
	1, 1189,
	578, 1189,
	580, 1189,
	582, 1189,
	-2, 1466,
	-1, 2999,
	340, 1510,
	-2, 2574,
	-1, 3000,
	340, 1511,
	-2, 2449,
	-1, 3004,
	426, 2108,
	427, 2108,
	-2, 1862,
	-1, 3005,
	426, 2112,
	427, 2112,
	-2, 1863,
	-1, 3006,
	426, 2109,
	427, 2109,
	-2, 1862,
	-1, 3007,
	426, 2113,
	427, 2113,
	-2, 1863,
	-1, 3020,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1789,
	-1, 3021,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1793,
	-1, 3027,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1795,
	-1, 3267,
	1, 635,
	578, 635,
	580, 635,
	582, 635,
	-2, 1333,
	-1, 3420,
	44, 2143,
	-2, 953,
	-1, 3425,
	1, 1189,
	578, 1189,
	580, 1189,
	582, 1189,
	-2, 1466,
	-1, 3530,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1797,
	-1, 3537,
	242, 0,
	244, 0,
	326, 0,
	-2, 1816,
	-1, 3604,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1845,
	-1, 3605,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1846,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1847,
	-1, 3610,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1851,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1852,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1853,
	-1, 3658,
	579, 2152,
	-2, 2166,
	-1, 3822,
	581, 2692,
	-2, 1392,
	-1, 3880,
	242, 0,
	244, 0,
	326, 0,
	-2, 1817,
	-1, 3883,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1820,
	-1, 3884,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1822,
	-1, 3981,
	581, 2167,
	-2, 1224,
	-1, 4116,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1821,
	-1, 4117,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1823,
	-1, 4128,
	242, 0,
	-2, 1854,
	-1, 4296,
	242, 0,
	-2, 1855,
	-1, 4481,
	51, 0,
	216, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 2538,
}

const sqlPrivate = 57344

const sqlLast = 122301

var sqlAct = [...]int{
	263, 4663, 3410, 4221, 4328, 4577, 3178, 4533, 2896, 4474,
	4174, 4358, 2909, 4336, 4480, 4462, 4473, 3409, 4604, 4450,
	4491, 2067, 3977, 4376, 4354, 2141, 4434, 4414, 4492, 1199,
	1465, 4493, 4431, 4160, 4546, 2782, 4249, 4228, 3569, 3863,
	4479, 1210, 4300, 4073, 4068, 4039, 4020, 4137, 4179, 2347,
	3522, 4105, 3814, 3806, 3442, 4237, 3013, 1032, 2763, 3293,
	1271, 3978, 4263, 1076, 2415, 3753, 4053, 3962, 2571, 3436,
	1282, 2001, 1278, 3789, 783, 4078, 3351, 1712, 2224, 1928,
	1023, 2355, 3296, 2348, 2931, 3405, 1579, 3773, 4133, 3201,
	3775, 3481, 1342, 3483, 2856, 2885, 1284, 1898, 783, 2918,
	2866, 3661, 2920, 3221, 3193, 750, 3862, 3161, 2882, 2928,
	3919, 3395, 2075, 2911, 2794, 2897, 2880, 1867, 3182, 2917,
	3315, 39, 2723, 2086, 2135, 2136, 4578, 3184, 857, 2609,
	2352, 1031, 172, 3629, 1843, 4301, 1620, 2428, 3160, 2457,
	1434, 1805, 1441, 778, 3290, 1276, 1519, 2809, 2927, 4,
	2131, 1080, 2112, 257, 2222, 2867, 2055, 2459, 2997, 1190,
	105, 2119, 2059, 2611, 1929, 2608, 1700, 1999, 1325, 1250,
	3228, 2568, 2721, 2589, 1083, 2448, 1087, 1868, 2412, 2317,
	2319, 2045, 2336, 2641, 1556, 1085, 1261, 2188, 2176, 1273,
	2762, 256, 3407, 2890, 1522, 1577, 2705, 1311, 681, 2921,
	2640, 1082, 2451, 1193, 784, 785, 1877, 1838, 1172, 2598,
	1130, 2579, 2429, 667, 2501, 1713, 2535, 689, 1887, 1790,
	1714, 181, 172, 3278, 732, 1652, 1639, 789, 182, 1884,
	1207, 2318, 1189, 744, 2175, 2201, 780, 1554, 1460, 2074,
	850, 2320, 1547, 4534, 2341, 4377, 1061, 1977, 2215, 1974,
	44, 789, 684, 692, 43, 41, 32, 1195, 30, 28,
	1170, 1699, 1988, 1719, 707, 792, 919, 831, 3048, 1471,
	939, 3643, 3044, 3644, 3180, 1990, 4676, 1990, 1990, 4666,
	2588, 1027, 1990, 3461, 1027, 1990, 4651, 4650, 1990, 792,
	2588, 2588, 3452, 1205, 4640, 3251, 1485, 1976, 2150, 1059,
	4622, 4620, 3250, 4565, 4178, 4178, 1464, 2150, 3461, 4522,
	4515, 2581, 3451, 4523, 2588, 1264, 4513, 4510, 4507, 4477,
	2588, 4511, 4508, 2150, 4476, 4475, 4470, 4469, 2150, 2011,
	2011, 2011, 1228, 4460, 872, 2150, 851, 4178, 4458, 3133,
	3134, 4429, 4178, 4401, 1028, 4178, 4394, 2647, 4393, 4388,
	2588, 4387, 2588, 4178, 4381, 4178, 4350, 1187, 2150, 4298,
	4031, 4280, 3236, 2647, 72, 3849, 854, 853, 4277, 4274,
	4230, 3057, 2150, 4178, 4231, 1727, 1728, 3058, 4194, 4193,
	4185, 73, 2150, 2150, 2150, 1173, 1173, 4184, 4177, 4144,
	3012, 4178, 4178, 2150, 1008, 1320, 4118, 77, 4097, 1758,
	2647, 1007, 2011, 4086, 1202, 2588, 1730, 3461, 4402, 1727,
	1728, 2666, 1760, 1761, 1762, 1770, 1771, 1772, 4015, 4000,
	3882, 2223, 2588, 2588, 2647, 3830, 3824, 1320, 2790, 3478,
	3478, 1201, 1763, 1758, 3787, 3653, 4302, 84, 3788, 3654,
	1730, 1729, 3651, 2008, 3636, 2643, 3652, 1017, 2588, 1776,
	3553, 1022, 3549, 3633, 2150, 1221, 2588, 3477, 3468, 90,
	3177, 3478, 3469, 4293, 2588, 3172, 4281, 3133, 3134, 2588,
	3151, 3152, 3153, 3171, 3124, 1729, 855, 2588, 3125, 2011,
	3098, 2150, 3090, 1174, 3099, 1749, 3091, 3088, 1727, 1728,
	104, 2588, 2665, 3059, 1746, 90, 101, 2588, 2935, 2907,
	2906, 2689, 2011, 2211, 2211, 2588, 1484, 2646, 3139, 2638,
	2632, 2647, 1758, 2588, 2150, 3633, 2580, 2587, 2210, 1730,
	2588, 2588, 2211, 3047, 4066, 1176, 1586, 1177, 4031, 1203,
	4001, 3849, 3469, 2785, 2704, 2024, 1222, 1989, 3133, 3134,
	2005, 2079, 2008, 3148, 1735, 2862, 2149, 2804, 2702, 1863,
	1459, 3738, 91, 3525, 1729, 3501, 1885, 2124, 3133, 3134,
	227, 3151, 3152, 3153, 1727, 1728, 3453, 1622, 1752, 1753,
	1754, 1755, 2625, 2624, 2623, 2622, 2454, 2621, 1735, 1178,
	1175, 3878, 1016, 1015, 227, 3454, 4498, 1014, 1758, 1757,
	1759, 1013, 1078, 1012, 1011, 1730, 1010, 1006, 1727, 1728,
	2974, 1464, 1005, 1004, 227, 1003, 1002, 229, 1001, 1000,
	999, 998, 3149, 997, 1767, 996, 995, 1777, 994, 993,
	992, 991, 1758, 1757, 1759, 1991, 255, 1991, 1991, 1730,
	1729, 229, 1991, 990, 3148, 1991, 3139, 917, 1991, 916,
	1773, 915, 1774, 914, 913, 1727, 1728, 912, 1750, 1744,
	1745, 229, 911, 910, 909, 908, 228, 1735, 907, 906,
	905, 904, 903, 2455, 1729, 902, 901, 1765, 221, 1758,
	900, 899, 898, 897, 1749, 3155, 1730, 222, 896, 895,
	228, 894, 1750, 1746, 893, 892, 891, 3133, 3134, 4478,
	890, 3451, 2484, 889, 1222, 94, 888, 887, 3154, 183,
	228, 2008, 1757, 1759, 886, 885, 1473, 3139, 4457, 875,
	2580, 1729, 221, 874, 870, 869, 863, 862, 849, 848,
	806, 222, 805, 183, 1775, 1287, 1085, 3139, 1645, 1572,
	804, 1222, 803, 1735, 227, 795, 3876, 794, 227, 793,
	3149, 765, 1764, 183, 2456, 756, 2453, 180, 97, 1085,
	100, 145, 755, 1085, 754, 738, 3150, 1752, 1753, 1754,
	1755, 1750, 251, 250, 249, 248, 247, 1735, 246, 1345,
	245, 244, 243, 1345, 227, 242, 241, 1287, 1757, 1759,
	240, 229, 856, 3133, 3134, 229, 239, 145, 238, 3154,
	237, 236, 1751, 235, 2676, 3935, 1989, 2008, 1085, 4080,
	1085, 2005, 1085, 234, 2665, 1756, 1324, 2312, 1287, 233,
	1329, 3149, 1757, 1759, 1735, 232, 231, 230, 3894, 3674,
	3647, 229, 3479, 3224, 1315, 3070, 1751, 3053, 2957, 1472,
	228, 3149, 2875, 1287, 228, 1449, 2843, 1750, 1744, 1745,
	2651, 3175, 221, 2630, 1479, 1444, 221, 147, 1294, 2615,
	2470, 222, 1768, 1287, 1846, 222, 3139, 1846, 1287, 1757,
	1759, 1845, 184, 2468, 1845, 2053, 1085, 1888, 1085, 2010,
	228, 1750, 1287, 183, 2218, 4305, 1911, 183, 1085, 3176,
	1085, 1816, 221, 1849, 3150, 1463, 1844, 1467, 1255, 1258,
	1726, 222, 2458, 1331, 1209, 1528, 1531, 3143, 3135, 3136,
	3137, 3138, 3140, 3141, 4365, 1751, 1268, 4290, 1473, 1473,
	4284, 4132, 1309, 852, 4172, 1807, 4282, 4087, 1750, 4065,
	1470, 1451, 1477, 3944, 1483, 1287, 3917, 1338, 3916, 1431,
	1436, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	789, 3910, 1590, 1085, 3133, 3134, 1085, 3909, 3908, 1557,
	3901, 3900, 3139, 1766, 3898, 3150, 2217, 3893, 1741, 1742,
	1748, 1769, 1747, 1743, 227, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 3890, 3150, 1517, 1304, 792, 3889,
	3792, 1751, 3902, 3786, 3678, 172, 172, 3677, 1570, 3676,
	1575, 1462, 1461, 3657, 1756, 2893, 3624, 3623, 3622, 4082,
	1584, 3545, 1589, 1559, 1561, 1809, 2452, 3541, 3219, 1473,
	1591, 229, 3168, 1028, 3159, 1751, 3145, 3146, 3147, 3132,
	3148, 3129, 3128, 3144, 3142, 3143, 3135, 3136, 3137, 3138,
	3140, 3141, 2660, 3736, 3126, 3097, 1807, 3096, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 3095, 1478, 1315, 3149, 1814, 1315, 3092,
	228, 3089, 1751, 1646, 3133, 3134, 1808, 3069, 1806, 1085,
	3052, 3045, 221, 2877, 2908, 1085, 2616, 2441, 1726, 1186,
	1550, 222, 2191, 2157, 1661, 2155, 1576, 1439, 1704, 1725,
	4670, 4614, 4613, 3793, 3144, 3142, 3143, 3135, 3136, 3137,
	3138, 3140, 3141, 183, 4579, 4532, 3242, 3145, 3146, 3147,
	1727, 1728, 72, 3139, 3144, 3142, 3143, 3135, 3136, 3137,
	3138, 3140, 3141, 1731, 1732, 1733, 1734, 1736, 1737, 73,
	4530, 1211, 4306, 1698, 3173, 3571, 1571, 4421, 3133, 3134,
	4357, 1730, 4346, 4343, 4342, 77, 1727, 1728, 1585, 4341,
	4322, 1747, 1743, 1534, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 4304, 1796, 4303, 227, 227, 4278, 4262,
	4261, 2418, 4059, 3216, 4247, 4244, 1729, 1730, 4243, 4190,
	1085, 1085, 1085, 4168, 4130, 84, 1085, 1596, 4113, 2424,
	4112, 4094, 4093, 1207, 4056, 1207, 4032, 1613, 3934, 3915,
	3150, 3850, 3844, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	1345, 1648, 1729, 229, 229, 1865, 3841, 3149, 1085, 3724,
	3723, 783, 3793, 3709, 855, 3708, 3706, 1946, 783, 1028,
	3639, 1287, 3627, 3139, 3536, 1794, 3480, 3462, 104, 4081,
	3428, 1701, 1914, 90, 101, 3364, 3135, 3136, 3137, 3138,
	3140, 3141, 1925, 1008, 1874, 1709, 1205, 2747, 1205, 1972,
	1007, 3326, 228, 228, 2876, 1708, 3295, 227, 3244, 1848,
	2483, 1647, 3074, 3073, 221, 221, 1703, 3068, 1918, 1735,
	3036, 2855, 227, 222, 222, 1705, 1921, 1919, 1852, 1722,
	1723, 1851, 1850, 1847, 1839, 1837, 2658, 1287, 1871, 1872,
	91, 2657, 2627, 2620, 1085, 183, 183, 3139, 1287, 227,
	2586, 2466, 1910, 1866, 229, 1735, 1861, 1860, 1902, 1859,
	1727, 1728, 1895, 1858, 1857, 1856, 1085, 1980, 172, 229,
	1855, 1854, 1345, 1840, 1841, 1173, 1853, 3149, 1834, 1833,
	3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141, 2069, 1272,
	2219, 1730, 1832, 1831, 1830, 1028, 229, 1829, 1828, 1827,
	1826, 3150, 1825, 228, 1824, 1823, 1917, 1202, 1822, 1202,
	1821, 1820, 2017, 1809, 789, 221, 1795, 1793, 228, 1788,
	227, 789, 2042, 2051, 222, 1315, 1729, 1303, 1226, 1548,
	221, 1217, 3940, 1980, 1201, 3886, 1201, 1437, 1893, 222,
	1448, 1272, 3673, 1940, 1980, 228, 183, 2016, 3650, 3642,
	3056, 2618, 792, 1295, 1896, 1553, 2649, 221, 4148, 792,
	1886, 183, 3942, 2645, 1993, 2044, 222, 229, 2469, 3133,
	3134, 3672, 1864, 227, 1808, 3240, 1791, 1943, 3457, 1906,
	4003, 2467, 4611, 94, 4603, 3329, 2783, 1905, 2892, 1030,
	1890, 1904, 1903, 1901, 2121, 1900, 1899, 1922, 1287, 1287,
	4285, 1272, 1272, 4344, 1969, 4233, 4283, 2044, 1345, 2044,
	1326, 4232, 4085, 2019, 1328, 1926, 228, 4034, 4033, 4002,
	229, 3150, 3937, 3853, 3852, 2015, 3851, 3645, 221, 3464,
	3463, 4171, 1203, 4238, 1203, 180, 97, 222, 100, 1320,
	3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141, 1829,
	1846, 1829, 1888, 3796, 3523, 3358, 1696, 1845, 1995, 183,
	2767, 1997, 227, 1320, 227, 3721, 3748, 2002, 1915, 228,
	856, 2004, 3094, 1327, 3093, 145, 2007, 3018, 2749, 1323,
	988, 221, 3297, 3473, 2142, 2147, 2013, 1320, 1818, 3412,
	222, 3411, 2106, 2240, 2111, 2022, 2454, 2116, 1621, 3974,
	4544, 1287, 2216, 1287, 4229, 1287, 4518, 2030, 2047, 229,
	2037, 229, 183, 4503, 4490, 3396, 2932, 1622, 2137, 3750,
	3745, 1287, 1287, 3729, 989, 3498, 3265, 4134, 3180, 2449,
	2085, 3573, 1287, 3970, 3062, 147, 2656, 1862, 4164, 4499,
	1662, 1842, 3403, 2020, 1287, 2185, 1287, 1287, 1287, 1527,
	184, 1456, 1298, 789, 1612, 2801, 2139, 4512, 228, 1254,
	228, 4509, 2192, 3135, 3136, 3137, 3138, 3140, 3141, 783,
	221, 1815, 221, 3447, 2798, 2796, 3701, 4337, 1600, 222,
	2079, 222, 4069, 2455, 4428, 4319, 3971, 3300, 3716, 2186,
	2915, 792, 1552, 2226, 2889, 3388, 1185, 1557, 4562, 1557,
	2198, 183, 2181, 183, 1462, 1461, 3517, 4500, 4563, 1731,
	1732, 1733, 1734, 1736, 1737, 4593, 3241, 1310, 3269, 4211,
	3990, 1495, 986, 2104, 2115, 2105, 2690, 4665, 984, 1321,
	1503, 4204, 982, 980, 4196, 4155, 2221, 977, 2148, 3137,
	3138, 3140, 3141, 2290, 1659, 4029, 844, 1733, 1734, 1736,
	1737, 4028, 2288, 2206, 1457, 2244, 1085, 3761, 1085, 2195,
	3763, 1028, 3760, 1028, 2456, 1085, 2453, 1553, 1946, 1946,
	1345, 1321, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 2168, 1085, 2167,
	1085, 1085, 1085, 1085, 1550, 1504, 2203, 2227, 2203, 2031,
	2208, 2204, 789, 1660, 2200, 2036, 2035, 3762, 1328, 2044,
	2046, 2329, 1085, 3752, 3744, 1085, 1085, 1304, 2212, 2708,
	2213, 2708, 1658, 1085, 1317, 1321, 3743, 1085, 845, 1085,
	1085, 1328, 2316, 4165, 2706, 969, 2706, 1345, 1598, 1934,
	792, 1026, 3741, 1085, 1085, 1085, 1085, 2231, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 3740, 2886, 2327, 3328,
	2248, 3728, 1448, 3688, 3966, 3687, 1317, 1327, 3392, 3967,
	2327, 227, 3391, 2239, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 2430, 2431, 2266, 3297, 1085, 3356, 3235,
	1327, 3067, 2458, 3066, 3065, 4594, 3064, 2430, 2446, 1207,
	2284, 4111, 2216, 1322, 1737, 3022, 1345, 227, 1448, 2807,
	2751, 2806, 2353, 2354, 2803, 1207, 2792, 2325, 229, 2340,
	3969, 2781, 2780, 2492, 1940, 1940, 2777, 2039, 1025, 2325,
	2232, 1085, 1345, 2776, 2166, 2775, 3972, 1643, 2754, 2753,
	1317, 3271, 2538, 2538, 2552, 1322, 2430, 2313, 2328, 2572,
	2574, 2321, 2716, 2410, 229, 2578, 2315, 2639, 1943, 1943,
	1318, 1008, 1205, 2554, 1008, 1008, 2314, 228, 2344, 1319,
	2445, 2345, 2346, 2399, 1028, 2650, 1702, 2497, 1205, 221,
	2311, 2496, 2408, 1028, 1552, 2771, 2357, 1028, 222, 3133,
	3134, 1593, 3151, 3152, 3153, 2323, 2302, 2249, 1458, 2628,
	2977, 2076, 1318, 228, 1214, 2297, 2452, 2764, 2765, 1499,
	183, 1319, 3877, 3141, 3499, 221, 2449, 2494, 974, 1322,
	2603, 1540, 2495, 1539, 222, 2498, 2595, 2499, 2500, 2426,
	4004, 1240, 1287, 1287, 2072, 3949, 1027, 1642, 1643, 2041,
	2310, 2443, 1895, 3357, 2236, 1212, 183, 1173, 1512, 2764,
	2765, 2764, 2765, 679, 2060, 2697, 2305, 2326, 2725, 2250,
	2061, 3968, 2079, 2077, 2078, 3148, 2109, 2414, 1538, 2326,
	1537, 2594, 1657, 1202, 1345, 1028, 1318, 2040, 2414, 172,
	674, 4562, 2617, 2256, 4598, 1319, 2679, 2534, 1695, 1202,
	2563, 2547, 2576, 2073, 3986, 2800, 3948, 2644, 1640, 3975,
	1201, 2938, 2631, 2584, 2585, 2685, 2596, 2980, 1946, 1594,
	2652, 2600, 2601, 1614, 763, 1848, 1201, 1671, 1893, 847,
	846, 2404, 1315, 2602, 1622, 2607, 964, 2799, 2613, 2614,
	2324, 2739, 2294, 3268, 2642, 3010, 3704, 1320, 1642, 2405,
	2995, 1906, 2324, 3712, 2406, 1345, 2797, 2795, 2411, 1876,
	2422, 1021, 1215, 4624, 4607, 4330, 2253, 2420, 3139, 1287,
	1641, 4110, 2738, 2304, 2205, 3507, 1622, 2659, 2184, 2728,
	2750, 3506, 2062, 4496, 2681, 1085, 1085, 4599, 1085, 1320,
	2717, 2663, 2670, 1840, 1841, 2247, 2673, 1599, 2674, 2066,
	2257, 2662, 2664, 3770, 2971, 3345, 2458, 883, 1203, 1707,
	3337, 1287, 1302, 1675, 2710, 2688, 3562, 978, 1610, 4027,
	2680, 1024, 2087, 978, 1203, 2793, 2746, 978, 979, 2682,
	3154, 761, 978, 2687, 3742, 2859, 1523, 2289, 1880, 2756,
	3739, 2834, 1287, 3390, 3354, 2091, 2287, 842, 2979, 841,
	3033, 2691, 965, 3725, 1287, 2707, 1287, 3771, 2693, 3346,
	2873, 2742, 2802, 1320, 3338, 2774, 2301, 2789, 2772, 2063,
	2068, 1287, 3149, 3009, 2755, 2752, 1654, 2695, 2976, 3031,
	2099, 4574, 2757, 4332, 1521, 1883, 2671, 2773, 2730, 2733,
	2720, 3974, 2675, 4582, 1940, 2835, 4601, 3769, 4581, 3344,
	1878, 2088, 3984, 2082, 3336, 2844, 2686, 1980, 2847, 2637,
	2849, 2696, 1085, 2766, 2768, 2769, 2770, 1597, 1881, 964,
	3002, 3003, 2958, 4627, 2959, 3970, 3444, 2838, 1943, 3963,
	4551, 2694, 2840, 789, 2100, 2833, 3953, 2407, 1557, 2122,
	2933, 2154, 2153, 3868, 1021, 3867, 3961, 2409, 4654, 2678,
	1934, 1934, 2064, 2891, 4497, 3965, 2891, 2083, 2711, 2955,
	1501, 1879, 3698, 1085, 2458, 1990, 4464, 4410, 4465, 1085,
	1085, 792, 172, 4408, 2098, 2727, 2914, 2978, 3971, 2122,
	2060, 2048, 2049, 3445, 1462, 2841, 2061, 1498, 3280, 2118,
	2904, 3195, 2853, 2713, 3322, 4152, 2863, 2081, 2070, 4338,
	3697, 2902, 2396, 2869, 2982, 2092, 2984, 3283, 2900, 1239,
	1523, 4605, 2936, 2117, 2884, 3954, 3150, 2941, 3028, 2942,
	3964, 2952, 1213, 2929, 1085, 1085, 2905, 675, 2895, 3367,
	1085, 2134, 2968, 2303, 2962, 965, 2964, 2784, 2966, 762,
	966, 3029, 2916, 1085, 1085, 3034, 2113, 2779, 3320, 1085,
	1085, 2934, 4495, 3985, 4398, 1085, 1672, 1880, 2975, 3713,
	2255, 3444, 876, 2778, 1085, 1085, 1085, 4352, 3270, 2903,
	1085, 2093, 2094, 1882, 4272, 2077, 2078, 1669, 728, 2961,
	1085, 2712, 4600, 3559, 2960, 2133, 1595, 764, 3321, 1224,
	3312, 760, 3025, 4048, 2110, 2089, 1835, 1085, 2062, 4550,
	3238, 3055, 2990, 676, 1883, 2114, 2711, 2715, 2865, 2939,
	2940, 2122, 4107, 975, 4606, 2066, 2726, 3024, 2070, 2597,
	2946, 2947, 2948, 3316, 2991, 3001, 2992, 4264, 2413, 3864,
	4123, 4573, 4448, 3050, 3051, 4439, 2090, 1881, 3054, 4331,
	4265, 2713, 3046, 3011, 2340, 2996, 3311, 4608, 3145, 3146,
	3147, 677, 4012, 678, 697, 3144, 3142, 3143, 3135, 3136,
	3137, 3138, 3140, 3141, 3560, 2440, 1787, 2394, 2714, 3778,
	2397, 2125, 4266, 3318, 2065, 884, 3966, 2132, 3776, 967,
	1272, 3967, 3072, 3194, 2708, 2063, 2068, 1085, 1085, 1085,
	3281, 2599, 1673, 4628, 1670, 2421, 1085, 1085, 1085, 2731,
	4525, 1085, 2954, 2612, 1027, 3023, 3575, 4615, 2711, 1028,
	4526, 1085, 1207, 1345, 2963, 2252, 2965, 1085, 2967, 1085,
	2393, 3187, 3188, 966, 3030, 4058, 3669, 1272, 1207, 2712,
	1036, 968, 3969, 4268, 3032, 3858, 3317, 4396, 1229, 3869,
	3791, 3519, 2993, 2713, 2246, 4106, 1345, 1019, 3972, 964,
	2095, 2985, 1044, 3061, 2987, 2715, 4267, 1706, 1207, 1627,
	1301, 1345, 1272, 1272, 3726, 4359, 1609, 1611, 2064, 3170,
	1717, 4494, 4561, 4269, 1021, 1205, 4397, 3778, 1946, 796,
	1674, 4559, 1345, 3209, 4375, 3189, 3776, 3222, 3779, 2126,
	1716, 1205, 1882, 3491, 4549, 4633, 1287, 1287, 4655, 4246,
	3234, 3812, 3484, 3432, 2174, 4049, 877, 878, 1873, 1227,
	1934, 1220, 2458, 666, 2070, 1991, 2714, 3913, 3865, 1085,
	1020, 1205, 3248, 2343, 3613, 1716, 2096, 2080, 2032, 4187,
	4186, 2712, 3199, 1085, 4255, 3229, 4318, 3813, 1711, 3223,
	3756, 3700, 2029, 3291, 2069, 3433, 3989, 1287, 3218, 3424,
	3287, 2874, 1946, 3988, 1437, 3197, 2868, 2715, 864, 2857,
	2199, 2193, 967, 2187, 3274, 965, 2709, 3165, 3166, 3167,
	1085, 2179, 2160, 3968, 3558, 1492, 3266, 1231, 3259, 3215,
	1448, 4108, 2069, 3628, 1287, 4360, 1202, 3227, 3181, 3684,
	3272, 1715, 1980, 1980, 4415, 3520, 3779, 3486, 3198, 1315,
	3196, 737, 1202, 3207, 3208, 2395, 1287, 4378, 1287, 3210,
	3211, 3975, 3485, 1201, 968, 3815, 1716, 2027, 2714, 2758,
	4153, 3302, 3955, 1345, 3307, 2121, 1715, 3309, 3285, 1201,
	2333, 3491, 1202, 2121, 1287, 3231, 3232, 3233, 1287, 3284,
	3484, 2295, 3239, 1980, 2025, 3245, 3246, 4524, 3247, 3288,
	3359, 4074, 3777, 3331, 1940, 1918, 1717, 2028, 3870, 1201,
	2854, 1287, 1242, 4227, 4225, 3213, 4167, 3214, 1287, 3303,
	1287, 3299, 3256, 3298, 1345, 3260, 3016, 1787, 2994, 2237,
	1980, 783, 3641, 3192, 3774, 2732, 3353, 3267, 1943, 3191,
	2065, 1717, 1287, 879, 880, 3323, 3324, 3273, 4632, 3325,
	3482, 2129, 1980, 1287, 1980, 1644, 2636, 2635, 3275, 3276,
	3614, 1203, 3914, 4270, 1448, 2634, 3292, 1715, 4271, 3615,
	1207, 2633, 1272, 797, 798, 3440, 3783, 1203, 1940, 3319,
	1980, 2861, 4325, 3301, 1980, 3486, 3305, 3365, 3361, 3362,
	3871, 3423, 3363, 3340, 1025, 1287, 1287, 3349, 3327, 4222,
	3485, 3987, 3438, 966, 3394, 2127, 3397, 1203, 3343, 1448,
	3777, 1448, 1943, 3255, 4040, 2334, 3257, 3258, 1287, 1546,
	3431, 3261, 3335, 3262, 2736, 3263, 3366, 3360, 4361, 1544,
	3449, 882, 3685, 1205, 3707, 3379, 3385, 3389, 3341, 2759,
	2760, 1532, 3342, 3252, 3253, 2128, 1628, 4175, 3663, 3370,
	3474, 3372, 865, 866, 3376, 1533, 3333, 1345, 3382, 2197,
	1345, 3399, 4570, 4356, 3487, 3488, 3489, 3490, 4162, 4150,
	4091, 2756, 2937, 2839, 3401, 2837, 3393, 2225, 3347, 1603,
	2102, 3434, 3368, 4425, 789, 4412, 3920, 3630, 3441, 4418,
	3420, 3421, 4326, 1085, 3286, 2465, 1691, 4443, 1693, 1085,
	1085, 3493, 3664, 1085, 1085, 1085, 3377, 1085, 3408, 3230,
	3383, 1690, 4163, 800, 799, 3476, 1085, 1946, 172, 172,
	3472, 3446, 792, 4572, 4514, 1085, 2590, 3665, 1085, 3662,
	3455, 3334, 3513, 1028, 1345, 736, 3458, 3459, 3448, 4090,
	1018, 1688, 967, 1085, 1202, 2929, 3470, 2079, 1666, 4176,
	1664, 1345, 3512, 3348, 2929, 3350, 2107, 1638, 1636, 3203,
	2593, 1946, 1946, 1085, 1085, 4345, 1085, 1085, 1085, 3492,
	1634, 1201, 801, 802, 1632, 4419, 3521, 3355, 4327, 2286,
	3503, 3378, 3504, 2300, 3505, 3384, 2299, 1630, 4129, 3417,
	3912, 1876, 1624, 3782, 968, 3162, 3538, 3535, 2103, 3509,
	3496, 2592, 3487, 3488, 3489, 3490, 2591, 3495, 1085, 1619,
	3547, 3548, 1085, 3494, 1946, 1946, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 3518, 1085, 3460, 3587, 867,
	868, 3163, 3249, 1085, 1085, 1946, 1617, 1542, 3127, 3035,
	1085, 2060, 2858, 3204, 2791, 2748, 1545, 2061, 2661, 2306,
	1913, 1085, 3543, 1909, 3588, 1694, 1543, 1581, 881, 1203,
	1880, 3515, 1207, 1207, 3500, 3514, 1085, 1711, 2464, 2973,
	3554, 1692, 2972, 3439, 2944, 3561, 3563, 3564, 3570, 3369,
	2322, 3577, 1653, 1940, 1689, 2261, 2159, 1973, 1819, 1592,
	1516, 4489, 3202, 4013, 3747, 1345, 3565, 3585, 3746, 4014,
	3999, 3586, 4411, 3659, 976, 4072, 4019, 1883, 3625, 3959,
	1934, 4547, 3811, 3666, 1687, 2353, 3578, 1943, 3802, 3584,
	3646, 1665, 1878, 1663, 3206, 1205, 1205, 1940, 1940, 3759,
	1637, 1635, 3719, 4067, 3592, 3717, 3667, 3668, 3617, 3590,
	1881, 3699, 1085, 1633, 3427, 3422, 3413, 1631, 2887, 2285,
	3679, 3680, 3681, 2879, 2872, 2864, 2851, 2836, 2677, 2062,
	1629, 1943, 1943, 3510, 2672, 1623, 1085, 2158, 2353, 3593,
	3618, 2156, 3516, 1448, 1448, 172, 2066, 2138, 2123, 2097,
	1940, 1940, 1618, 1879, 1934, 2084, 2071, 1720, 3437, 3637,
	3638, 3634, 3635, 3626, 2012, 2009, 2006, 1085, 1085, 3621,
	2101, 2003, 1998, 1996, 1992, 1983, 3555, 3632, 4538, 1920,
	3380, 1940, 1182, 3648, 1943, 1943, 2132, 3014, 4563, 1616,
	1541, 2033, 2988, 2986, 4453, 2309, 2110, 4096, 4089, 3693,
	3205, 4088, 4026, 3945, 1093, 1085, 1202, 1202, 2930, 1183,
	2052, 1497, 4257, 2708, 2737, 1943, 2063, 2068, 1448, 4250,
	3649, 2708, 3823, 2079, 2108, 981, 983, 985, 2706, 1287,
	1685, 1686, 1287, 1201, 1201, 3730, 2734, 2196, 2251, 1262,
	1263, 2307, 3675, 2184, 2281, 2280, 4452, 4021, 2258, 1946,
	259, 259, 259, 3991, 669, 670, 3703, 685, 669, 685,
	695, 1615, 724, 735, 4292, 1882, 1721, 753, 1727, 1728,
	3921, 3757, 759, 3751, 3734, 3722, 3749, 2740, 259, 1287,
	3899, 3015, 3689, 3735, 3737, 1085, 2308, 3314, 3727, 1727,
	1728, 2741, 2761, 1207, 1085, 2109, 861, 3825, 3381, 2064,
	1724, 1296, 259, 1230, 1287, 1287, 1287, 2756, 4566, 2741,
	4557, 4519, 680, 3816, 2850, 3832, 2283, 3755, 1184, 3799,
	1730, 1287, 2798, 1263, 252, 1263, 2180, 1307, 1980, 2796,
	2805, 1203, 1203, 3797, 1729, 776, 1287, 2786, 3820, 3754,
	2788, 2058, 1345, 2743, 2745, 2070, 1272, 832, 4403, 3817,
	3781, 4369, 4366, 2787, 3798, 1729, 1205, 2744, 4324, 3682,
	4311, 3819, 4241, 3683, 4220, 4156, 1345, 691, 4154, 1085,
	1085, 663, 4151, 3809, 3801, 1085, 1085, 1946, 3790, 3656,
	1085, 1085, 3426, 1085, 2894, 2577, 2018, 1085, 3804, 3772,
	3803, 1927, 3780, 3848, 4602, 2056, 4173, 3957, 1085, 3956,
	3696, 3282, 3821, 3800, 3237, 3818, 4631, 3826, 3718, 4368,
	3720, 3827, 1602, 3292, 1085, 3831, 1464, 3854, 1601, 4445,
	3768, 3872, 3856, 3843, 4446, 1940, 669, 669, 3846, 3839,
	3842, 3784, 3133, 3134, 259, 2057, 3837, 3838, 1727, 1728,
	2700, 2701, 3891, 4445, 2460, 4576, 3845, 1448, 4446, 2698,
	2699, 3885, 3671, 2700, 3766, 3805, 3881, 2698, 3857, 1943,
	3866, 2493, 1668, 3808, 2900, 1667, 4242, 1202, 4205, 1934,
	4023, 4018, 4017, 3887, 1207, 3758, 3670, 3566, 3374, 3371,
	3873, 1813, 1207, 1812, 4617, 3861, 1345, 4583, 1345, 3855,
	4407, 2929, 4406, 4405, 1201, 1207, 4307, 4223, 4200, 4149,
	4146, 4051, 3941, 3847, 3829, 3785, 1287, 1287, 3715, 3710,
	3926, 3430, 3429, 1934, 1934, 1345, 3308, 3254, 3123, 3122,
	3121, 2065, 3120, 3119, 3222, 3118, 3117, 3116, 3115, 3767,
	3114, 1799, 3113, 3112, 3111, 1804, 3110, 1205, 3911, 3109,
	3108, 3107, 3106, 3105, 3104, 1205, 3103, 1207, 3102, 1207,
	3101, 3100, 2970, 1940, 2951, 3836, 2950, 2949, 1205, 2878,
	2852, 2735, 2668, 2654, 2653, 2425, 1934, 1934, 2282, 1287,
	2279, 3982, 2278, 3928, 2277, 2276, 3979, 2275, 3979, 1345,
	3983, 1287, 2194, 3925, 1287, 3923, 3924, 1943, 2169, 2165,
	3932, 2164, 1203, 1345, 3994, 3995, 2163, 1934, 3933, 172,
	3929, 3922, 3936, 2162, 2161, 1986, 1985, 3951, 1984, 3927,
	1205, 1982, 1205, 1684, 1683, 1625, 1511, 3918, 1510, 3993,
	1509, 1508, 1507, 1287, 1287, 1506, 1505, 1500, 1496, 1494,
	1493, 1336, 1335, 1334, 1333, 1332, 1300, 1299, 1249, 3958,
	1287, 1248, 1247, 1246, 1245, 1244, 1243, 1241, 1202, 1236,
	1235, 1234, 1345, 1233, 1232, 1165, 1202, 1287, 2023, 987,
	973, 4329, 3973, 4025, 2298, 1980, 4038, 1677, 89, 1202,
	1502, 819, 83, 2130, 3714, 1201, 944, 1980, 4442, 1486,
	1980, 4351, 1207, 1201, 827, 4427, 3310, 4064, 2808, 2260,
	1626, 4075, 1287, 1287, 1287, 4036, 1201, 2262, 3217, 2619,
	3946, 3947, 4395, 3895, 4092, 1345, 3071, 4016, 4299, 4122,
	4037, 3979, 2463, 1817, 3174, 4095, 85, 1085, 1085, 1085,
	1069, 1202, 1115, 1202, 4030, 4011, 4047, 4076, 2606, 4057,
	3992, 4042, 4035, 4046, 3960, 1345, 1980, 4079, 3702, 2919,
	1085, 4061, 4044, 1085, 1085, 1205, 4084, 4043, 1201, 1931,
	1201, 1933, 4050, 1085, 4077, 1035, 1946, 1348, 4463, 2034,
	1075, 1085, 1085, 4062, 2050, 2043, 4070, 2655, 2537, 4008,
	4114, 1092, 4022, 1203, 4024, 1089, 1345, 1935, 1287, 4101,
	4103, 1203, 4099, 4098, 1937, 1091, 4083, 1090, 1936, 1836,
	3997, 1088, 1930, 3807, 1203, 2860, 2898, 4109, 3456, 1551,
	261, 4041, 1549, 4006, 1345, 946, 4009, 2038, 2419, 4119,
	2447, 3060, 1085, 1810, 1050, 1071, 2444, 1225, 1060, 1049,
	3200, 1085, 3179, 4125, 3443, 3655, 2332, 2146, 836, 1085,
	4063, 1946, 3130, 2450, 1216, 4131, 2560, 1272, 2553, 2549,
	1085, 1934, 3264, 1085, 2888, 1697, 1203, 4136, 1203, 1789,
	2899, 1330, 4142, 4143, 1053, 1085, 1202, 2417, 1801, 3040,
	2342, 4158, 1345, 3450, 3220, 2648, 3998, 4449, 4145, 1287,
	4183, 3574, 2173, 1181, 1287, 1287, 1218, 1180, 4007, 1223,
	1179, 4010, 4433, 1201, 4430, 4159, 2120, 3840, 3406, 2184,
	2026, 4166, 2692, 1779, 3414, 1065, 1447, 3185, 3475, 4157,
	4199, 1513, 758, 4180, 1077, 1778, 2829, 2828, 4321, 1238,
	1316, 1314, 4210, 1345, 1313, 4235, 1287, 1312, 4590, 4653,
	3711, 259, 4226, 259, 259, 226, 1267, 259, 1277, 3008,
	1718, 1710, 1940, 223, 1207, 1207, 225, 4060, 224, 1297,
	4052, 3660, 3226, 4207, 4517, 4240, 3732, 4197, 753, 3398,
	4251, 23, 4256, 1085, 1085, 4224, 4275, 4276, 4201, 22,
	4216, 4218, 4215, 3979, 3979, 1980, 1943, 21, 109, 1934,
	1085, 1946, 259, 4254, 259, 259, 1267, 4239, 259, 259,
	1277, 1203, 4234, 42, 20, 1048, 4252, 4253, 125, 4219,
	4259, 259, 144, 1466, 4273, 4189, 143, 1205, 1205, 117,
	4258, 142, 4079, 141, 140, 139, 146, 1940, 138, 1085,
	137, 132, 1085, 136, 1490, 135, 134, 133, 131, 1207,
	129, 4288, 4289, 4287, 130, 124, 128, 4248, 127, 126,
	123, 1207, 122, 1515, 121, 1277, 4317, 120, 119, 259,
	259, 1943, 1267, 4291, 118, 116, 115, 114, 3979, 113,
	4297, 112, 111, 4340, 110, 749, 746, 4214, 61, 60,
	3979, 753, 108, 259, 259, 107, 4316, 4308, 19, 3408,
	40, 2069, 4313, 1085, 1085, 14, 4339, 4334, 65, 66,
	4333, 18, 1205, 4355, 13, 1207, 861, 35, 1207, 88,
	99, 4212, 1287, 98, 1205, 4191, 4192, 36, 96, 95,
	34, 17, 1287, 1287, 16, 15, 93, 4372, 1202, 1202,
	4374, 4347, 4349, 92, 3979, 33, 31, 3979, 11, 1287,
	9, 8, 37, 4206, 1897, 4208, 12, 4209, 4386, 5,
	4363, 4364, 4367, 1085, 1085, 1201, 1201, 4371, 4362, 177,
	176, 179, 175, 1085, 178, 87, 4380, 1940, 1205, 174,
	173, 1205, 86, 4383, 4391, 4239, 4392, 4382, 2337, 259,
	29, 10, 4379, 169, 4236, 3795, 4213, 80, 4202, 171,
	170, 168, 4420, 4390, 4384, 4385, 4260, 167, 259, 166,
	4424, 1943, 4353, 4400, 1085, 1085, 4279, 1085, 81, 78,
	4404, 4389, 165, 1202, 82, 164, 3037, 3038, 79, 163,
	27, 4399, 6, 4370, 64, 1202, 7, 4104, 3497, 102,
	103, 2184, 4447, 38, 76, 75, 74, 26, 4444, 63,
	1201, 4432, 4435, 25, 4423, 4422, 210, 209, 4468, 1272,
	208, 4471, 1201, 1203, 1203, 207, 4441, 1085, 1085, 1085,
	206, 4472, 4437, 205, 204, 203, 198, 197, 202, 200,
	2423, 4454, 4436, 199, 4466, 4440, 201, 196, 4459, 1202,
	213, 212, 1202, 218, 4467, 1799, 217, 216, 215, 1085,
	214, 211, 220, 195, 194, 193, 191, 4501, 4485, 4486,
	187, 186, 4488, 4506, 190, 4487, 1201, 192, 189, 1201,
	188, 185, 4502, 219, 161, 162, 71, 2555, 4527, 4520,
	160, 159, 158, 157, 156, 4531, 155, 154, 4504, 70,
	24, 2, 4529, 4348, 1, 4541, 4543, 4542, 1203, 2559,
	0, 0, 1085, 0, 0, 0, 0, 0, 4455, 0,
	1203, 4456, 0, 4528, 0, 0, 4548, 0, 0, 4535,
	3156, 3157, 3158, 0, 4537, 0, 0, 0, 1934, 0,
	4568, 0, 4564, 0, 0, 0, 0, 0, 0, 766,
	4554, 4555, 4560, 4556, 4558, 4536, 0, 0, 0, 0,
	4451, 1207, 4567, 1207, 4586, 4588, 669, 2069, 4571, 0,
	4585, 4569, 0, 4580, 1203, 4575, 4596, 1203, 4432, 4355,
	4597, 4435, 4584, 4587, 0, 4589, 0, 259, 4595, 259,
	3979, 4592, 3979, 259, 0, 0, 4591, 0, 0, 0,
	0, 4610, 0, 0, 0, 0, 1466, 1267, 259, 0,
	259, 0, 4609, 1934, 0, 259, 1466, 685, 4612, 0,
	4619, 0, 259, 1466, 1205, 0, 1205, 0, 4625, 0,
	0, 0, 4618, 1085, 1085, 4621, 0, 1987, 4623, 0,
	4616, 0, 1085, 4626, 1085, 1085, 0, 4629, 0, 259,
	0, 0, 0, 4635, 4644, 0, 259, 4645, 4638, 4649,
	4641, 4646, 4648, 4647, 4643, 0, 4642, 771, 0, 0,
	0, 0, 0, 0, 0, 4657, 0, 4656, 4658, 4660,
	0, 4659, 4652, 0, 4661, 0, 4662, 1343, 0, 0,
	4664, 1442, 4668, 0, 4667, 0, 753, 0, 0, 0,
	0, 1085, 4672, 0, 4674, 0, 0, 4669, 4678, 4675,
	0, 4677, 4636, 4637, 0, 4671, 4664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4451, 0, 0, 0,
	0, 0, 0, 0, 4516, 1202, 0, 1202, 0, 1048,
	0, 0, 1281, 1048, 0, 0, 0, 0, 4539, 4540,
	730, 0, 0, 1934, 4545, 0, 0, 0, 0, 1429,
	0, 0, 1201, 1429, 1201, 0, 0, 0, 1448, 4673,
	0, 0, 72, 0, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 1453, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 1488, 1730, 2900, 0, 0,
	0, 0, 0, 777, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	1524, 259, 0, 0, 259, 0, 0, 0, 0, 0,
	1203, 1729, 1203, 0, 0, 0, 0, 0, 1272, 0,
	0, 1749, 0, 0, 0, 1565, 0, 0, 0, 0,
	1746, 0, 0, 0, 855, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 90, 101, 768, 0, 259, 0, 0,
	0, 259, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 259, 0, 0, 3133, 3134, 0, 3151, 3152,
	3153, 0, 0, 0, 0, 772, 0, 0, 259, 0,
	259, 0, 1604, 0, 669, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 753, 0,
	91, 0, 861, 2998, 1735, 0, 0, 0, 0, 729,
	0, 0, 3133, 3134, 0, 3151, 3152, 3153, 0, 0,
	0, 0, 775, 0, 0, 2559, 0, 259, 770, 1267,
	259, 0, 0, 0, 0, 3540, 0, 3531, 3532, 0,
	1767, 3148, 0, 1777, 753, 0, 0, 0, 0, 1757,
	1759, 259, 0, 0, 0, 0, 0, 0, 2259, 0,
	0, 0, 0, 259, 259, 0, 259, 0, 259, 0,
	259, 0, 259, 0, 767, 1744, 1745, 0, 0, 0,
	0, 0, 0, 2555, 2555, 0, 0, 0, 3148, 0,
	0, 0, 0, 1765, 0, 2291, 0, 0, 2292, 0,
	2293, 0, 774, 0, 0, 2559, 2559, 0, 1750, 0,
	0, 0, 259, 0, 0, 0, 731, 3133, 3134, 0,
	3151, 3152, 3153, 0, 0, 0, 0, 769, 0, 0,
	0, 0, 0, 0, 3139, 0, 0, 735, 0, 0,
	3539, 753, 0, 94, 0, 0, 0, 0, 0, 3594,
	3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604,
	3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 1912, 3616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3148, 0, 180, 97, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 2555, 2555, 2555,
	856, 1756, 1758, 0, 0, 145, 0, 0, 3149, 1730,
	1429, 0, 0, 3154, 0, 0, 0, 0, 0, 2559,
	2559, 2559, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 1729, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 1749, 3149, 3139, 0, 0, 0,
	2054, 0, 0, 1746, 0, 147, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 259, 0, 0, 0, 0, 228, 0,
	0, 0, 669, 0, 0, 0, 0, 0, 0, 259,
	221, 669, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 259, 0, 0, 3534, 0, 3154, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 259, 1277,
	0, 183, 1429, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 1766,
	0, 0, 3150, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	3149, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 0, 259, 1277, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2667, 0,
	0, 0, 1757, 1759, 259, 0, 2151, 259, 0, 3150,
	0, 259, 0, 259, 0, 0, 0, 0, 1267, 0,
	259, 259, 0, 1277, 1277, 2683, 0, 0, 1744, 1745,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 72, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 73, 0, 0, 0, 2724, 0, 0, 1429, 0,
	0, 0, 0, 77, 0, 0, 259, 77, 0, 0,
	0, 0, 0, 0, 3145, 3146, 3147, 0, 0, 259,
	0, 3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141,
	0, 0, 259, 0, 3150, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 3145, 3146, 3147, 0, 0, 0, 0, 3144, 3142,
	3143, 3135, 3136, 3137, 3138, 3140, 3141, 0, 0, 0,
	0, 0, 855, 0, 259, 2842, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 1875, 0, 0,
	104, 90, 101, 0, 1756, 90, 101, 0, 0, 1466,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 2214, 0, 0, 1751, 0, 0, 0, 0,
	2883, 0, 0, 0, 0, 0, 0, 0, 1281, 2228,
	2724, 0, 669, 0, 0, 0, 0, 0, 0, 2230,
	0, 2912, 861, 0, 2724, 2724, 0, 0, 91, 0,
	0, 2238, 91, 2241, 2242, 2243, 3145, 3146, 3147, 0,
	0, 259, 0, 3144, 3142, 3143, 3135, 3136, 3137, 3138,
	3140, 3141, 0, 0, 0, 0, 0, 0, 2356, 0,
	259, 1267, 259, 0, 2555, 2555, 1466, 0, 1466, 1277,
	259, 0, 0, 1267, 0, 1267, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 2559, 2559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 259, 259,
	1267, 0, 0, 1267, 0, 259, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 2461, 0, 0, 259, 0,
	0, 0, 1034, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 94, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 0, 2555, 0, 2559, 2559,
	2559, 2559, 2559, 2559, 2559, 2559, 2559, 2559, 2559, 2559,
	2559, 2559, 2559, 2559, 2559, 2559, 2559, 1429, 2559, 0,
	0, 0, 0, 180, 97, 0, 100, 180, 97, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2629, 0, 0, 0, 0, 1466, 0, 0, 0, 0,
	227, 0, 0, 0, 227, 0, 0, 0, 856, 0,
	0, 0, 856, 145, 0, 0, 0, 145, 3133, 3134,
	0, 3151, 3152, 3153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4128, 229, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 147, 0, 1727,
	1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 184, 0,
	0, 0, 184, 0, 3148, 0, 228, 0, 0, 0,
	228, 0, 1763, 1758, 0, 4169, 0, 0, 221, 0,
	1730, 0, 221, 0, 0, 0, 0, 222, 0, 1776,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2703, 0, 0, 0, 259, 0, 0, 1562,
	0, 0, 0, 1560, 0, 1729, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 1749, 0, 669, 0, 0,
	0, 0, 669, 0, 1746, 669, 0, 0, 669, 669,
	0, 0, 0, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 3139, 0, 2684,
	1281, 0, 0, 0, 1466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 259, 259, 0, 0, 0, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 3154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2724, 2724, 259, 4296, 3279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2724, 1429, 0, 3294, 0, 0,
	0, 0, 0, 0, 1767, 2724, 3294, 1777, 2724, 3294,
	0, 3149, 3294, 1757, 1759, 0, 0, 0, 0, 1727,
	1728, 0, 0, 0, 0, 259, 259, 3279, 0, 259,
	1773, 0, 1774, 0, 0, 0, 2832, 0, 0, 1744,
	1745, 0, 0, 1758, 0, 0, 0, 0, 0, 3279,
	1730, 259, 0, 3352, 3352, 0, 1267, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2724, 1750, 2724, 0, 3375, 2724, 3279, 0, 0,
	2724, 3279, 0, 0, 1117, 1729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 3402, 0, 0, 3404,
	2724, 0, 1764, 259, 0, 0, 0, 259, 2945, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 3150, 0, 0, 0, 2883,
	0, 0, 1267, 1292, 259, 0, 0, 2724, 0, 669,
	0, 0, 0, 0, 0, 0, 2724, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 1034, 0, 1735, 0,
	1034, 0, 0, 0, 0, 1756, 0, 259, 2883, 0,
	0, 2883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3502, 1757, 1759, 1468, 0, 1474, 0, 1480,
	0, 0, 1768, 1727, 1728, 0, 0, 0, 0, 3508,
	0, 0, 1267, 259, 0, 259, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3145, 3146, 3147,
	0, 259, 1750, 0, 3144, 3142, 3143, 3135, 3136, 3137,
	3138, 3140, 3141, 1568, 0, 1573, 0, 0, 0, 1729,
	0, 0, 0, 0, 1208, 1582, 0, 1587, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 3572, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 3904, 0,
	0, 0, 3903, 0, 0, 0, 0, 0, 0, 0,
	1649, 3186, 0, 1655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2824, 0,
	0, 0, 1752, 1753, 1754, 1755, 0, 0, 0, 0,
	0, 0, 1735, 0, 3212, 1756, 0, 0, 0, 0,
	0, 0, 0, 2555, 0, 0, 0, 0, 0, 3225,
	0, 2816, 2814, 0, 0, 0, 1751, 0, 2818, 2820,
	2810, 0, 0, 0, 0, 2559, 0, 0, 0, 0,
	3243, 0, 0, 1429, 0, 0, 0, 1757, 1759, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 1727, 1728,
	0, 0, 0, 0, 0, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 2555, 1744, 1745, 0, 1429, 0, 669, 669,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 1429, 0, 0, 2559, 0, 1798, 0, 0, 0,
	1466, 1466, 1811, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 1429, 0, 1466, 1466, 1466, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 3352, 0, 1048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 0, 0, 3529, 0, 0, 0,
	0, 0, 0, 0, 0, 2812, 0, 1869, 1869, 1869,
	0, 0, 0, 0, 0, 0, 2826, 1752, 1753, 1754,
	1755, 0, 0, 0, 3352, 0, 0, 1735, 0, 1756,
	2555, 0, 3225, 0, 0, 259, 0, 2825, 2817, 2815,
	2819, 2821, 2811, 2813, 2827, 0, 0, 0, 0, 0,
	1751, 2823, 2559, 1429, 0, 3279, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 2830, 0, 0, 259, 0, 0,
	1070, 106, 259, 0, 0, 0, 0, 259, 1744, 1745,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2724, 259, 3386, 0,
	0, 0, 0, 0, 0, 0, 2912, 2912, 0, 0,
	0, 1750, 861, 861, 2724, 0, 0, 0, 2883, 2883,
	0, 0, 861, 2724, 0, 0, 0, 0, 0, 3418,
	0, 0, 0, 1034, 0, 0, 0, 0, 0, 0,
	3425, 0, 0, 0, 259, 1442, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 1208,
	0, 0, 3466, 3467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3896, 1429, 0, 0,
	1429, 0, 3551, 1208, 0, 0, 0, 1208, 0, 0,
	0, 1208, 0, 0, 1756, 0, 0, 2831, 0, 3567,
	0, 0, 0, 1009, 0, 0, 2822, 0, 0, 0,
	0, 0, 0, 0, 1029, 1751, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 1466, 0, 259, 1208, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 259,
	1191, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 1429, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 2724, 2724, 0, 3352, 0, 0, 0, 0,
	0, 0, 0, 0, 2724, 0, 0, 0, 0, 0,
	0, 3981, 0, 3981, 1466, 0, 0, 0, 0, 0,
	0, 0, 2724, 0, 3294, 0, 0, 0, 1466, 1466,
	259, 3279, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 3279, 0, 259, 3279, 0, 259,
	0, 1747, 1743, 3658, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 2724, 0, 2724, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2724, 0, 0, 0, 0, 4054, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3981, 0, 0, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2331, 0, 2335, 0, 0, 0, 0,
	0, 0, 2349, 0, 0, 0, 0, 0, 0, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 0, 2398, 0, 2400, 2401, 2402,
	2403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2427,
	0, 0, 0, 0, 2724, 0, 3294, 0, 0, 4161,
	1798, 0, 0, 0, 2442, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 4181, 0, 4181, 0, 0, 0,
	2472, 2475, 2478, 2481, 0, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 0, 0, 0, 0, 753, 1208, 0, 1208,
	0, 0, 0, 0, 0, 0, 3764, 1267, 0, 0,
	0, 0, 0, 2551, 1208, 2562, 2564, 2569, 0, 0,
	0, 0, 3279, 0, 259, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 1727, 1728, 4161, 0, 0, 0, 0, 0, 0,
	0, 2724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4245, 1758, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 1466, 0, 0, 0,
	0, 3833, 3834, 3835, 0, 0, 0, 0, 3981, 3981,
	0, 0, 1429, 0, 0, 0, 0, 0, 1281, 0,
	0, 1208, 0, 0, 0, 259, 259, 1729, 0, 0,
	0, 0, 1208, 0, 0, 0, 1429, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 3572,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 3352, 4310, 106, 0, 4312,
	3352, 4315, 0, 0, 0, 0, 0, 4161, 0, 0,
	0, 0, 0, 0, 0, 0, 3931, 0, 0, 0,
	0, 0, 0, 3981, 0, 0, 0, 0, 0, 3528,
	0, 0, 0, 0, 0, 3981, 0, 0, 0, 0,
	0, 0, 0, 3943, 0, 0, 0, 0, 0, 0,
	1752, 1753, 1754, 1755, 0, 0, 259, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 106, 0, 0, 4054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 1429, 3981,
	0, 259, 3981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3294, 0, 0, 1757, 1759, 0, 0, 0,
	0, 0, 1208, 1208, 0, 1429, 0, 0, 0, 0,
	0, 0, 1208, 1029, 106, 106, 0, 0, 1466, 0,
	1466, 1744, 1745, 3938, 3939, 0, 0, 106, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 0, 0, 0, 4409, 0, 0, 0,
	0, 0, 2845, 2846, 1750, 2848, 0, 4416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	4181, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 2724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 1208, 0, 1208, 0, 1208,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 1208, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 3572, 0, 0,
	1281, 0, 1429, 0, 0, 0, 0, 0, 1208, 0,
	1208, 1208, 1208, 4120, 0, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 2969,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 1009, 0, 4120, 1429, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4100,
	0, 4102, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2356, 0, 4161, 1429, 0, 0, 0, 1797,
	0, 0, 0, 1803, 0, 0, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2724, 0,
	0, 0, 0, 0, 0, 3981, 1429, 3981, 0, 0,
	1466, 1758, 1947, 1947, 1208, 0, 0, 0, 1730, 0,
	2356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3020, 3021, 0, 1429, 4147, 0, 3027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 1466, 0, 3041, 3042, 0, 0,
	0, 0, 2442, 1749, 0, 0, 0, 0, 0, 0,
	0, 3049, 1746, 1048, 1747, 1743, 0, 1740, 1738, 1739,
	1731, 1732, 1733, 1734, 1736, 1737, 0, 3063, 0, 0,
	2912, 0, 1429, 1889, 0, 1892, 0, 106, 0, 2724,
	0, 1208, 0, 0, 3075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3026, 0, 0, 0, 0,
	0, 4217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 1208, 0, 0, 0,
	0, 1757, 1759, 2569, 2569, 2569, 0, 0, 1763, 1758,
	0, 0, 0, 0, 0, 0, 1730, 0, 1869, 0,
	0, 0, 0, 0, 0, 1776, 3190, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 1208, 0, 0,
	0, 0, 0, 1048, 1048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	1034, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 1281,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 1281, 3313, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 0, 1751, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 1048, 1773, 0, 1774, 0,
	0, 0, 0, 1208, 0, 1744, 1745, 0, 1727, 1728,
	0, 0, 0, 0, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 1750, 1730,
	0, 1029, 0, 1029, 0, 1208, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 1208, 0, 0, 0,
	1775, 0, 0, 0, 1749, 0, 0, 0, 1208, 0,
	1208, 0, 0, 1746, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 0, 0, 1009, 1009, 0, 0, 0, 1768, 0,
	0, 0, 0, 1767, 0, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	2349, 0, 0, 0, 0, 0, 3526, 3527, 0, 0,
	3530, 0, 0, 0, 3533, 0, 0, 0, 1744, 1745,
	0, 0, 0, 3537, 0, 0, 0, 0, 2416, 0,
	0, 0, 3544, 0, 0, 3190, 1765, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	3556, 1750, 0, 1797, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3579, 3580, 0, 3581, 3582, 3583, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 3084, 0, 0, 0, 3085, 0,
	0, 0, 0, 0, 0, 3589, 0, 0, 0, 3591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	2530, 2531, 2532, 2533, 2526, 2527, 2528, 2529, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	3619, 3620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3631, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 106, 0,
	0, 0, 0, 3640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2506, 2507, 2508, 2509, 0, 1208, 1208, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 2518, 2519, 2520, 2521, 2514, 2515,
	2516, 2517, 2522, 2523, 2524, 2525, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 3686,
	0, 0, 1208, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 3705, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 1208, 0, 0, 0, 0, 0, 2502, 2503, 2504,
	2505, 2510, 2511, 2512, 2513, 3731, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 106, 0, 0, 0, 0,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1758, 0, 0, 106, 0, 0, 106, 1730, 106,
	1208, 0, 1208, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 1208, 0,
	0, 3828, 1208, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 1749, 0, 106, 0, 0, 0, 0,
	0, 106, 1746, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 1208, 0, 1208, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 3874, 3875, 0, 0,
	0, 0, 3879, 3880, 1208, 0, 0, 3883, 3884, 0,
	0, 106, 0, 0, 3888, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 3892, 1735, 0, 0, 1208,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1777, 0, 0, 0, 0,
	0, 1757, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1774, 1208, 0, 0, 1208, 0, 0, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2416, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 1947, 0, 0, 0, 153, 0, 0, 260, 260,
	260, 0, 0, 0, 72, 0, 46, 45, 1208, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 148, 1208, 260, 0, 0, 0,
	1764, 0, 0, 0, 0, 1947, 1947, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 0,
	260, 0, 0, 0, 0, 48, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1947,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 1751, 0, 57, 0, 0, 1947,
	151, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	104, 0, 0, 0, 0, 90, 101, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 1208, 1208, 0, 0,
	0, 0, 1191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 0, 0, 0, 52, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 4115, 4116, 4117, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2349, 0, 0,
	4126, 4127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4135, 4138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 2438, 0, 0, 0,
	2439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4182, 0,
	0, 0, 0, 0, 0, 0, 4188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4195, 0, 0,
	1034, 0, 0, 0, 106, 106, 0, 0, 106, 0,
	0, 0, 4203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 1208, 0, 808, 0,
	0, 0, 53, 0, 0, 0, 0, 106, 106, 0,
	0, 106, 0, 1947, 0, 0, 56, 0, 810, 0,
	0, 59, 0, 0, 811, 0, 0, 1727, 1728, 0,
	69, 0, 0, 0, 0, 0, 58, 180, 97, 0,
	100, 0, 0, 1208, 54, 0, 0, 0, 152, 0,
	0, 1758, 0, 0, 0, 55, 0, 1208, 1730, 0,
	0, 0, 0, 812, 227, 829, 0, 0, 1208, 1208,
	1208, 0, 62, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	813, 149, 0, 1729, 0, 814, 0, 0, 0, 0,
	1208, 0, 0, 1749, 0, 0, 1208, 0, 0, 0,
	1191, 229, 1746, 1029, 0, 0, 837, 0, 0, 0,
	0, 0, 815, 0, 0, 0, 4320, 106, 106, 4323,
	1208, 0, 0, 0, 0, 0, 835, 147, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 809,
	228, 0, 0, 0, 0, 3019, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	816, 222, 0, 817, 0, 0, 1752, 1753, 1754, 1755,
	1034, 1034, 0, 0, 839, 0, 1735, 0, 0, 730,
	0, 0, 0, 183, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 1757, 1759, 0, 0, 0, 1208, 0, 0, 698,
	1208, 2349, 1208, 0, 0, 699, 0, 0, 0, 1208,
	4138, 0, 0, 0, 0, 0, 0, 1744, 1745, 0,
	1208, 1208, 838, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 0, 0, 0, 0, 0,
	1750, 0, 1034, 0, 0, 701, 0, 0, 0, 0,
	0, 1208, 0, 1208, 0, 0, 0, 0, 0, 260,
	0, 260, 260, 0, 0, 260, 702, 1290, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	818, 0, 0, 1208, 0, 1208, 0, 721, 1208, 0,
	0, 820, 0, 0, 4484, 4484, 4484, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 0, 0,
	260, 1290, 260, 260, 0, 1290, 260, 260, 0, 1290,
	0, 821, 0, 0, 0, 0, 4505, 1208, 1208, 260,
	704, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	1290, 705, 1191, 1191, 706, 0, 1208, 0, 729, 0,
	0, 1208, 0, 1756, 0, 0, 0, 0, 0, 807,
	730, 830, 0, 0, 0, 1290, 0, 260, 260, 4484,
	822, 0, 0, 0, 1751, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 720, 1290, 1208, 1208, 1208, 0,
	1290, 260, 260, 0, 828, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 0, 824, 842, 0, 841, 0,
	0, 0, 825, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 1081, 0, 0, 826, 0, 0, 0,
	0, 834, 0, 717, 0, 0, 0, 843, 0, 840,
	1947, 0, 0, 0, 0, 731, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 1208, 0, 0, 0, 0, 0, 0, 258,
	258, 258, 0, 0, 0, 0, 0, 260, 0, 0,
	4484, 4630, 0, 0, 0, 0, 0, 0, 1208, 4634,
	0, 0, 0, 0, 0, 0, 260, 790, 0, 0,
	1747, 1743, 708, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 1947, 0, 0, 0, 0,
	0, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 1208, 1208,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 729,
	0, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	725, 726, 723, 0, 0, 0, 0, 0, 718, 0,
	0, 711, 0, 1191, 0, 0, 0, 1208, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 719, 0, 0, 106, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 1947, 0, 714, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 260, 260, 260, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 1208,
	0, 0, 1208, 0, 1191, 0, 1208, 260, 0, 0,
	0, 0, 1191, 0, 260, 0, 1208, 1208, 0, 0,
	0, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1758, 0, 0, 0, 1290,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	1290, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	1752, 1753, 1754, 1755, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	1290, 1290, 260, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 1767, 0, 0, 1777,
	0, 0, 0, 0, 0, 1757, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 1774, 0, 0, 0, 0, 0,
	0, 1744, 1745, 0, 0, 260, 0, 0, 0, 260,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 1765,
	260, 0, 0, 0, 0, 1208, 0, 1208, 0, 0,
	0, 0, 0, 0, 1750, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 1290, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 1290, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 1290, 260, 0, 0, 260, 0,
	0, 0, 0, 0, 1764, 0, 1290, 0, 1290, 1290,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	258, 0, 258, 258, 0, 0, 258, 0, 0, 0,
	0, 260, 260, 0, 260, 0, 260, 0, 260, 0,
	260, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 1763, 1758,
	0, 258, 0, 258, 258, 0, 1730, 258, 258, 0,
	260, 0, 0, 0, 0, 1776, 0, 0, 1751, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2416, 1197, 0, 0,
	0, 1729, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 1290, 0, 0, 0, 0, 0, 258, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 254, 665, 0, 0, 0, 0,
	0, 0, 258, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 0, 1735, 1766, 0, 0, 0, 1290,
	1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739,
	1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0,
	0, 106, 0, 0, 3542, 0, 0, 0, 0, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 258, 1757,
	1759, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 258, 1774, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 1290, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	106, 0, 260, 0, 0, 260, 0, 0, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 1290, 1290, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 1768, 0,
	0, 0, 0, 0, 0, 0, 1891, 0, 1204, 0,
	260, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 1891, 258,
	0, 0, 0, 0, 790, 0, 260, 1290, 0, 0,
	0, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 1290, 0, 0, 0, 0, 260, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 1290, 0, 0, 0, 3087, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	260, 715, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 0, 0, 0, 0, 0, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 260, 260, 0, 0,
	0, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 702, 0,
	258, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 258, 0, 0, 0,
	258, 0, 704, 0, 1253, 258, 1253, 1253, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 706, 258, 0, 258,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 1446, 0, 0, 0, 0, 720, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 258, 0, 258, 0, 258, 0, 258,
	0, 258, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770,
	1771, 1772, 0, 0, 0, 0, 1566, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1758, 0, 0,
	0, 258, 0, 0, 1730, 1290, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 708, 0, 0, 0, 1290, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 1290, 0, 0, 0, 0, 1746, 0,
	0, 0, 728, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 1290, 1290,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 260,
	260, 729, 0, 0, 0, 0, 0, 0, 710, 0,
	0, 0, 725, 726, 723, 0, 0, 0, 0, 0,
	718, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	260, 0, 1752, 1753, 1754, 1755, 0, 0, 0, 1290,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 719, 0, 0, 0,
	0, 0, 0, 260, 260, 713, 1290, 260, 1767, 0,
	0, 1777, 0, 0, 260, 0, 0, 1757, 1759, 714,
	0, 0, 0, 0, 722, 0, 0, 0, 1290, 260,
	1290, 0, 1204, 0, 1773, 0, 1774, 0, 731, 0,
	0, 0, 0, 1744, 1745, 1290, 0, 0, 1204, 716,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	1290, 1765, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 258, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 260,
	1290, 0, 1290, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 1290, 260, 0, 0, 1775, 0,
	0, 0, 0, 0, 258, 1290, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 258, 0, 0, 0,
	258, 0, 258, 0, 0, 0, 1907, 0, 0, 258,
	258, 0, 0, 0, 0, 0, 0, 1290, 1290, 258,
	0, 1916, 0, 1446, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 1446,
	1751, 0, 0, 0, 0, 258, 0, 0, 0, 1290,
	0, 260, 1290, 260, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 3086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 1346, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 258, 258, 258, 0,
	0, 0, 0, 0, 258, 0, 258, 0, 0, 0,
	2171, 1288, 0, 0, 2178, 0, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 2190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 258, 0, 0,
	0, 2202, 0, 2202, 0, 258, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	2178, 0, 0, 2234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2267, 1288, 2269,
	0, 2271, 0, 2273, 0, 2274, 0, 0, 0, 0,
	0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 1763, 1758, 0, 0, 0,
	0, 0, 0, 1730, 0, 2296, 0, 0, 0, 0,
	0, 1290, 1776, 0, 1290, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 1729, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 1749, 0,
	260, 0, 0, 0, 0, 260, 0, 1746, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1290, 1290, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 1204, 260, 0, 1290, 0, 0, 0, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	1777, 0, 0, 0, 0, 0, 1757, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	258, 258, 0, 1773, 0, 1774, 0, 0, 0, 0,
	0, 0, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 258, 0, 0, 0, 0, 2626, 0, 0, 0,
	0, 0, 0, 1346, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 0, 0, 0,
	0, 782, 0, 0, 1288, 0, 0, 0, 1290, 0,
	1290, 0, 0, 0, 258, 258, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 1891, 0, 1775, 1290, 1290,
	0, 0, 0, 0, 0, 0, 0, 1290, 0, 0,
	258, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2669, 0, 0,
	1253, 0, 0, 0, 1253, 0, 1253, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 2190, 0, 0, 0, 0, 260, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 1290, 0, 1290, 260, 1346, 1290, 260, 1756, 0,
	0, 0, 0, 0, 790, 1290, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 260, 258, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 1290, 1290, 0, 0, 0,
	0, 0, 0, 1204, 0, 1768, 0, 0, 0, 0,
	0, 0, 1290, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 260, 0, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 1290, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 0, 0,
	0, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 258, 0, 258, 2178, 0, 0, 0, 0,
	0, 0, 0, 2190, 0, 0, 1766, 1290, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0,
	258, 0, 0, 0, 0, 3083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	1290, 0, 0, 0, 2943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2953, 0, 2956, 1290, 0, 0, 0,
	0, 0, 0, 0, 1288, 260, 1288, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 0, 0, 2981,
	1446, 2983, 1446, 0, 0, 0, 1289, 1288, 2989, 1288,
	1288, 1288, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 1290, 260, 0, 0, 0, 1290, 1290, 0, 0,
	0, 0, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 3017,
	1347, 0, 0, 0, 1347, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 1290, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 1204, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 1289, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 1290, 0, 0, 0, 1763, 1758,
	0, 0, 0, 0, 1290, 1290, 1730, 0, 0, 0,
	0, 0, 0, 0, 258, 1776, 0, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 1346,
	0, 1729, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 258, 0, 0,
	1746, 0, 0, 0, 0, 1346, 258, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	1253, 0, 0, 0, 1446, 1446, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 258, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 260, 0, 0, 0, 0, 0, 0, 3330, 3332,
	0, 0, 2190, 0, 0, 0, 1773, 1346, 1774, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 1346, 0,
	0, 0, 0, 0, 0, 1204, 0, 0, 0, 0,
	1775, 0, 1288, 0, 0, 0, 0, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 3415, 0, 1764, 0,
	3419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1891, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 1288, 0, 0, 0, 258,
	3471, 1756, 0, 0, 0, 0, 0, 1288, 0, 1288,
	0, 0, 0, 0, 0, 258, 0, 0, 258, 0,
	0, 0, 1751, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 3511, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 3524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 1289,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 3082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 1289, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 1289, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 1289, 1289, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 1346, 1891, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1758,
	0, 0, 0, 0, 258, 258, 1730, 0, 0, 0,
	0, 1347, 0, 0, 0, 1776, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 1346, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1288, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 0, 0, 0, 0,
	2190, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 2190, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 3794, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 2190, 0, 0, 0, 0,
	3810, 0, 0, 0, 1752, 1753, 1754, 1755, 1891, 0,
	258, 1891, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1767, 1288, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 1347, 0, 0, 1346, 3859, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1288, 1774, 0,
	0, 1288, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 1765, 1288, 0, 0, 0, 0, 0,
	0, 1288, 0, 1288, 0, 0, 0, 1346, 1750, 0,
	0, 0, 0, 0, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 1289, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 1288, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1768, 0,
	1289, 0, 0, 3996, 1891, 0, 1891, 0, 0, 0,
	1763, 1758, 0, 0, 0, 0, 0, 0, 1730, 2190,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 1289, 0, 0, 0, 0, 0, 0,
	2190, 0, 0, 0, 0, 1289, 0, 1289, 0, 0,
	4071, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 1289, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 3081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1777, 0, 0, 0, 0,
	0, 1757, 1759, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1774, 0, 0, 0, 0, 0, 0, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	4170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 4286, 1446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 1288, 1288, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 1288,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4373, 0, 0, 1289, 1289, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	2439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 4426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1346, 0, 0, 0, 0, 0, 1289, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1288, 0, 0, 4461, 1347, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 1289, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 1289,
	0, 1289, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1289, 1288, 0, 4521, 1288, 0, 0,
	0, 0, 0, 0, 1289, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 1289, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 1289,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 1288, 1288, 1288, 1347, 0,
	0, 1347, 0, 1763, 1758, 0, 0, 0, 1346, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 1763, 1758, 1729, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 1749, 0, 0, 0,
	0, 1776, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 1346,
	0, 1288, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 1288, 1288, 0,
	1752, 1753, 1754, 1755, 0, 1767, 0, 0, 1777, 0,
	1735, 0, 0, 0, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 1774, 0, 0, 1346, 0, 0, 1288,
	1744, 1745, 0, 0, 0, 0, 1767, 0, 0, 1777,
	0, 0, 0, 0, 0, 1757, 1759, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 1773, 1750, 1774, 0, 0, 0, 0, 0,
	0, 1744, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 1288, 1288, 0, 0, 0,
	1289, 0, 0, 1289, 0, 0, 0, 1756, 0, 0,
	0, 0, 1288, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 1289, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 1347, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 1347, 0, 4417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739,
	1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0,
	4413, 0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1758, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 1347, 0, 1347,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 1289, 1289, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 1752, 1753, 1754, 1755, 0, 0, 0,
	1347, 0, 1289, 1735, 0, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 1777, 0, 1289, 1289, 0, 0, 1757, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 0, 1773, 0, 1774, 0, 0,
	0, 0, 0, 1347, 1744, 1745, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 1289, 1289, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 0, 1289, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 4335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 1289, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 1349, 276, 277, 1350, 1351, 1352,
	1289, 1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 1358, 616, 288, 289, 290, 291, 292,
	293, 1359, 1360, 0, 294, 617, 618, 619, 1361, 295,
	296, 620, 1362, 1291, 1363, 297, 298, 299, 300, 301,
	302, 303, 0, 1364, 305, 306, 307, 304, 308, 1365,
	309, 0, 310, 311, 312, 313, 314, 315, 1366, 316,
	317, 318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369,
	1371, 1372, 1373, 322, 323, 324, 325, 0, 326, 621,
	622, 1374, 330, 327, 328, 1375, 331, 329, 332, 1376,
	333, 334, 335, 1377, 1378, 336, 337, 338, 1379, 339,
	340, 1380, 341, 342, 343, 1381, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 1382, 265, 1383, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 1384, 362, 1385,
	1386, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 1387, 374, 629, 1388, 630,
	375, 1389, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 1390, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 1391, 1151, 390,
	634, 635, 1392, 636, 1393, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 1394, 404, 406, 405, 1395, 407,
	638, 1156, 408, 409, 1157, 1396, 410, 0, 0, 0,
	411, 412, 415, 1397, 1398, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 1399,
	267, 1160, 454, 455, 1400, 639, 456, 640, 458, 459,
	1401, 0, 460, 0, 1402, 1403, 462, 463, 464, 1404,
	1405, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 1406,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 1407, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 1408, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 1409, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 1410, 539, 540, 538, 541,
	542, 543, 1411, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 1412,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 1413, 570, 571, 0,
	567, 558, 1414, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 1415, 580, 652, 653, 654, 655, 1416, 589,
	1417, 581, 582, 583, 656, 584, 657, 1418, 585, 586,
	587, 588, 0, 590, 591, 1419, 1420, 592, 593, 594,
	596, 597, 595, 598, 1421, 599, 1422, 0, 600, 601,
	602, 658, 659, 660, 1423, 604, 603, 605, 661, 1424,
	1425, 1426, 1427, 1428, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 2604, 0, 0, 0, 0, 0, 0, 0,
	2605, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 3550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3552, 268, 270, 269, 271, 272, 273,
	274, 275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353,
	611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 1358, 616, 288, 289, 290, 291, 292, 293, 1359,
	1360, 0, 294, 617, 618, 619, 1361, 295, 296, 620,
	1362, 1291, 1363, 297, 298, 299, 300, 301, 302, 303,
	0, 1364, 305, 306, 307, 304, 308, 1365, 309, 0,
	310, 311, 312, 313, 314, 315, 1366, 316, 317, 318,
	1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372,
	1373, 322, 323, 324, 325, 0, 326, 621, 622, 1374,
	330, 327, 328, 1375, 331, 329, 332, 1376, 333, 334,
	335, 1377, 1378, 336, 337, 338, 1379, 339, 340, 1380,
	341, 342, 343, 1381, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	1382, 265, 1383, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 1384, 362, 1385, 1386, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 1387, 374, 629, 1388, 630, 375, 1389,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 1390, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 1391, 1151, 390, 634, 635,
	1392, 636, 1393, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 1394, 404, 406, 405, 1395, 407, 638, 1156,
	408, 409, 1157, 1396, 410, 0, 0, 0, 411, 412,
	415, 1397, 1398, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 1399, 267, 1160,
	454, 455, 1400, 639, 456, 640, 458, 459, 1401, 0,
	460, 0, 1402, 1403, 462, 463, 464, 1404, 1405, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 1406, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 1407, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 1408,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	1409, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 1410, 539, 540, 538, 541, 542, 543,
	1411, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 1412, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 1413, 570, 571, 0, 567, 558,
	1414, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	1415, 580, 652, 653, 654, 655, 1416, 589, 1417, 581,
	582, 583, 656, 584, 657, 1418, 585, 586, 587, 588,
	0, 590, 591, 1419, 1420, 592, 593, 594, 596, 597,
	595, 598, 1421, 599, 1422, 0, 600, 601, 602, 658,
	659, 660, 1423, 604, 603, 605, 661, 1424, 1425, 1426,
	1427, 1428, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3930, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4121, 268, 270, 269, 271, 272, 273, 274,
	275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611,
	1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	1358, 616, 288, 289, 290, 291, 292, 293, 1359, 1360,
	0, 294, 617, 618, 619, 1361, 295, 296, 620, 1362,
	1291, 1363, 297, 298, 299, 300, 301, 302, 303, 0,
	1364, 305, 306, 307, 304, 308, 1365, 309, 0, 310,
	311, 312, 313, 314, 315, 1366, 316, 317, 318, 1149,
	319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373,
	322, 323, 324, 325, 0, 326, 621, 622, 1374, 330,
	327, 328, 1375, 331, 329, 332, 1376, 333, 334, 335,
	1377, 1378, 336, 337, 338, 1379, 339, 340, 1380, 341,
	342, 343, 1381, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 1382,
	265, 1383, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 1384, 362, 1385, 1386, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 1387, 374, 629, 1388, 630, 375, 1389, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 1390, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 1391, 1151, 390, 634, 635, 1392,
	636, 1393, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 1394, 404, 406, 405, 1395, 407, 638, 1156, 408,
	409, 1157, 1396, 410, 0, 0, 0, 411, 412, 415,
	1397, 1398, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1399, 267, 1160, 454,
	455, 1400, 639, 456, 640, 458, 459, 1401, 0, 460,
	0, 1402, 1403, 462, 463, 464, 1404, 1405, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 1406, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 1407, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 1408, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 1409,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 1410, 539, 540, 538, 541, 542, 543, 1411,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 1412, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 1413, 570, 571, 0, 567, 558, 1414,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 1415,
	580, 652, 653, 654, 655, 1416, 589, 1417, 581, 582,
	583, 656, 584, 657, 1418, 585, 586, 587, 588, 0,
	590, 591, 1419, 1420, 592, 593, 594, 596, 597, 595,
	598, 1421, 599, 1422, 0, 600, 601, 602, 658, 659,
	660, 1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427,
	1428, 606, 607, 662, 608, 609, 610, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4005, 268, 270, 269, 271, 272,
	273, 274, 275, 1349, 276, 277, 1350, 1351, 1352, 0,
	1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 1358, 616, 288, 289, 290, 291, 292, 293,
	1359, 1360, 0, 294, 617, 618, 619, 1361, 295, 296,
	620, 1362, 1291, 1363, 297, 298, 299, 300, 301, 302,
	303, 0, 1364, 305, 306, 307, 304, 308, 1365, 309,
	0, 310, 311, 312, 313, 314, 315, 1366, 316, 317,
	318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371,
	1372, 1373, 322, 323, 324, 325, 0, 326, 621, 622,
	1374, 330, 327, 328, 1375, 331, 329, 332, 1376, 333,
	334, 335, 1377, 1378, 336, 337, 338, 1379, 339, 340,
	1380, 341, 342, 343, 1381, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 1382, 265, 1383, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 1384, 362, 1385, 1386,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 1387, 374, 629, 1388, 630, 375,
	1389, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 1390, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 1391, 1151, 390, 634,
	635, 1392, 636, 1393, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 1394, 404, 406, 405, 1395, 407, 638,
	1156, 408, 409, 1157, 1396, 410, 0, 0, 0, 411,
	412, 415, 1397, 1398, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1399, 267,
	1160, 454, 455, 1400, 639, 456, 640, 458, 459, 1401,
	0, 460, 0, 1402, 1403, 462, 463, 464, 1404, 1405,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 1406, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 1407, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	1408, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 1409, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 1410, 539, 540, 538, 541, 542,
	543, 1411, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 1412, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 1413, 570, 571, 0, 567,
	558, 1414, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 1415, 580, 652, 653, 654, 655, 1416, 589, 1417,
	581, 582, 583, 656, 584, 657, 1418, 585, 586, 587,
	588, 0, 590, 591, 1419, 1420, 592, 593, 594, 596,
	597, 595, 598, 1421, 599, 1422, 0, 600, 601, 602,
	658, 659, 660, 1423, 604, 603, 605, 661, 1424, 1425,
	1426, 1427, 1428, 606, 607, 662, 608, 609, 610, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3860, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3568, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3400, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2462, 268, 270, 269, 271, 272, 273, 274,
	275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611,
	1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	1358, 616, 288, 289, 290, 291, 292, 293, 1359, 1360,
	0, 294, 617, 618, 619, 1361, 295, 296, 620, 1362,
	1291, 1363, 297, 298, 299, 300, 301, 302, 303, 0,
	1364, 305, 306, 307, 304, 308, 1365, 309, 0, 310,
	311, 312, 313, 314, 315, 1366, 316, 317, 318, 1149,
	319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373,
	322, 323, 324, 325, 0, 326, 621, 622, 1374, 330,
	327, 328, 1375, 331, 329, 332, 1376, 333, 334, 335,
	1377, 1378, 336, 337, 338, 1379, 339, 340, 1380, 341,
	342, 343, 1381, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 1382,
	265, 1383, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 1384, 362, 1385, 1386, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 1387, 374, 629, 1388, 630, 375, 1389, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 1390, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 1391, 1151, 390, 634, 635, 1392,
	636, 1393, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 1394, 404, 406, 405, 1395, 407, 638, 1156, 408,
	409, 1157, 1396, 410, 0, 0, 0, 411, 412, 415,
	1397, 1398, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1399, 267, 1160, 454,
	455, 1400, 639, 456, 640, 458, 459, 1401, 0, 460,
	0, 1402, 1403, 462, 463, 464, 1404, 1405, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 1406, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 1407, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 1408, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 1409,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 1410, 539, 540, 538, 541, 542, 543, 1411,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 1412, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 1413, 570, 571, 0, 567, 558, 1414,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 1415,
	580, 652, 653, 654, 655, 1416, 589, 1417, 581, 582,
	583, 656, 584, 657, 1418, 585, 586, 587, 588, 0,
	590, 591, 1419, 1420, 592, 593, 594, 596, 597, 595,
	598, 1421, 599, 1422, 0, 600, 601, 602, 658, 659,
	660, 1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427,
	1428, 606, 607, 662, 608, 609, 610, 1440, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2152, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 1349, 276, 277, 1350, 1351, 1352,
	0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 1358, 616, 288, 289, 290, 291, 292,
	293, 1359, 1360, 0, 294, 617, 618, 619, 1361, 295,
	296, 620, 1362, 1291, 1363, 297, 298, 299, 300, 301,
	302, 303, 0, 1364, 305, 306, 307, 304, 308, 1365,
	309, 0, 310, 311, 312, 313, 314, 315, 1366, 316,
	317, 318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369,
	1371, 1372, 1373, 322, 323, 324, 325, 0, 326, 621,
	622, 1374, 330, 327, 328, 1375, 331, 329, 332, 1376,
	333, 334, 335, 1377, 1378, 336, 337, 338, 1379, 339,
	340, 1380, 341, 342, 343, 1381, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 1382, 265, 1383, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 1384, 362, 1385,
	1386, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 1387, 374, 629, 1388, 630,
	375, 1389, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 1390, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 1391, 1151, 390,
	634, 635, 1392, 636, 1393, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 1394, 404, 406, 405, 1395, 407,
	638, 1156, 408, 409, 1157, 1396, 410, 0, 0, 0,
	411, 412, 415, 1397, 1398, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 1399,
	267, 1160, 454, 455, 1400, 639, 456, 640, 458, 459,
	1401, 0, 460, 0, 1402, 1403, 462, 463, 464, 1404,
	1405, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 1406,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 1407, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 1408, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 1409, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 1410, 539, 540, 538, 541,
	542, 543, 1411, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 1412,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 1413, 570, 571, 0,
	567, 558, 1414, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 1415, 580, 652, 653, 654, 655, 1416, 589,
	1417, 581, 582, 583, 656, 584, 657, 1418, 585, 586,
	587, 588, 0, 590, 591, 1419, 1420, 592, 593, 594,
	596, 597, 595, 598, 1421, 599, 1422, 0, 600, 601,
	602, 658, 659, 660, 1423, 604, 603, 605, 661, 1424,
	1425, 1426, 1427, 1428, 606, 607, 662, 608, 609, 610,
	1341, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1349, 276,
	277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356,
	1357, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 1358, 616, 288,
	289, 290, 291, 292, 293, 1359, 1360, 0, 294, 617,
	618, 619, 1361, 295, 296, 620, 1362, 1291, 1363, 297,
	298, 299, 300, 301, 302, 303, 0, 1364, 305, 306,
	307, 304, 308, 1365, 309, 0, 310, 311, 312, 313,
	314, 315, 1366, 316, 317, 318, 1149, 319, 320, 321,
	1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324,
	325, 0, 326, 621, 622, 1374, 330, 327, 328, 1375,
	331, 329, 332, 1376, 333, 334, 335, 1377, 1378, 336,
	337, 338, 1379, 339, 340, 1380, 341, 342, 343, 1381,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 1382, 265, 1383, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 1384, 362, 1385, 1386, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 1387,
	374, 629, 1388, 630, 375, 1389, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 1152, 381, 382, 1390, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 1391, 1151, 390, 634, 635, 1392, 636, 1393, 392,
	393, 1153, 637, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 1394, 404,
	406, 405, 1395, 407, 638, 1156, 408, 409, 1157, 1396,
	410, 0, 0, 0, 411, 412, 415, 1397, 1398, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 1399, 267, 1160, 454, 455, 1400, 639,
	456, 640, 458, 459, 1401, 0, 460, 0, 1402, 1403,
	462, 463, 464, 1404, 1405, 465, 466, 641, 1161, 467,
	1162, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 1406, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 1407,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 1408, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 1409, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 1410,
	539, 540, 538, 541, 542, 543, 1411, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 1412, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	1413, 570, 571, 0, 567, 558, 1414, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 1415, 580, 652, 653,
	654, 655, 1416, 589, 1417, 581, 582, 583, 656, 584,
	657, 1418, 585, 586, 587, 588, 0, 590, 591, 1419,
	1420, 592, 593, 594, 596, 597, 595, 598, 1421, 599,
	1422, 0, 600, 601, 602, 658, 659, 660, 1423, 604,
	603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607,
	662, 608, 609, 610, 2437, 0, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 2434, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	2435, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 2433, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 2436, 0, 0, 0, 0, 0,
	0, 1068, 2432, 0, 1030, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 227, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 229,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 1558, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	221, 606, 607, 662, 608, 609, 610, 1043, 0, 222,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1802, 1800, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	227, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 229, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 1558, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 221, 606,
	607, 662, 608, 609, 610, 1043, 0, 222, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1802,
	3039, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 227, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 229, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 1558, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 221, 606, 607, 662,
	608, 609, 610, 1043, 0, 222, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1802, 1800, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 2565, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 2570, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 2566,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 2567, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 2482, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 2480, 0, 2479, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 2477, 0, 2476, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 2474, 0, 2473, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 2471, 0, 1651, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 1650, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1033, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 1047, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 4438, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 1047, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 2351,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 2350, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 1047,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 4198,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 1047, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 3822, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1870, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 0, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 3546, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1870, 0, 0, 0,
	0, 0, 0, 1068, 0, 0, 0, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 2570,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 1800, 0, 2575, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2573, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2561, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2550, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2548, 1066, 2539, 2546, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 2542, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 2543, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 2544, 425, 2541, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 2545, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 2540, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2536, 1066, 2539, 2546, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 2542, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 2543, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 2544, 425, 2541, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 2545, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 2540, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 1808, 0, 1068,
	0, 0, 0, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 2330,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1656, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1588, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1583, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1574, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1569, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1482, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1481, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1476, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1475, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1469, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 1293, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 4483, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 4482, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 4481, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 4483, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 4482, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 4140, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 4141, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 4139, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 3006, 3007,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 3004, 3005, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 2338, 2339, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 0, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 2558, 0, 0,
	0, 0, 0, 0, 2556, 2557, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	0, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 2999, 3000,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 0, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	4483, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 0, 1111, 0, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 0, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 4482, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 1206, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 0, 1066, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	1107, 0, 294, 617, 618, 619, 0, 295, 296, 1114,
	0, 1095, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099,
	1103, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 1139, 1140, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 1146, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 1109, 1110, 1113, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 1111, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 1192, 404, 406, 405, 0, 407, 1147, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 1102, 1101, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 267, 1160,
	454, 455, 0, 1112, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 1198, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 1141, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 1142, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	1200, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 227, 539, 540, 538, 541, 542, 543,
	1105, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 1143, 568, 569, 0, 570, 571, 0, 567, 558,
	229, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 1144, 584, 1145, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 1106, 599, 0, 0, 600, 601, 602, 1558,
	659, 660, 0, 604, 603, 605, 661, 0, 1206, 0,
	0, 221, 606, 607, 662, 608, 609, 610, 0, 0,
	222, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	1196, 1108, 1894, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 1107, 0, 294, 617, 618, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 1192, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 267,
	1160, 454, 455, 0, 1112, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 1198, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 1200, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 227, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 0, 567,
	558, 229, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	1558, 659, 660, 0, 604, 603, 605, 661, 0, 3183,
	0, 1206, 221, 606, 607, 662, 608, 609, 610, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 1196, 0, 1894, 1108, 0, 0, 0, 0, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 1107, 0, 294, 617, 618, 619,
	0, 295, 296, 1114, 0, 1095, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1149, 319, 320, 321, 1098, 1096,
	1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 1139, 1140, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 1146,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 1109,
	1110, 1113, 457, 1152, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	1151, 390, 634, 635, 0, 636, 0, 392, 393, 1153,
	1111, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 1192, 404, 406, 405,
	0, 407, 1147, 1156, 408, 409, 1157, 0, 410, 0,
	0, 0, 411, 412, 415, 1102, 1101, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 0, 267, 1160, 454, 455, 0, 1112, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 1198, 462, 463,
	464, 0, 0, 465, 466, 641, 1161, 467, 1162, 1141,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 1142, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 1200, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 1105, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 1143, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 1144, 584, 1145, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 1106, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 1188, 0, 1206, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 1196, 0, 1194, 1108, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 1107, 0, 294,
	617, 618, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1192,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 0,
	1112, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	1198, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 1200, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 1206, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 1196, 1108, 1194,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 1107, 0,
	294, 617, 618, 619, 0, 295, 296, 1114, 0, 1095,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 1139, 1140, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 1146, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1109, 1110, 1113, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 1111, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	1192, 404, 406, 405, 0, 407, 1147, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 1102,
	1101, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 267, 1160, 454, 455,
	0, 1112, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 1198, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 1141, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 1142, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 1200, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 1105, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 1143,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	1144, 584, 1145, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	1106, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 1206, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 1196, 1108,
	1194, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 1107,
	0, 294, 617, 618, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 267, 1160, 454,
	455, 0, 1112, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1206, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	0, 3980, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 1107,
	0, 294, 617, 618, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 267, 1160, 454,
	455, 0, 1112, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 1200,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 1030, 0, 1286,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 1793, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 227, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 229, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 1558, 659, 660, 0, 604, 603, 605, 661, 0,
	1555, 0, 1286, 221, 606, 607, 662, 608, 609, 610,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 183, 611, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 1291, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 0, 1160, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 227, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 229, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 1558, 659, 660, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 221, 606, 607, 662,
	608, 609, 610, 0, 0, 222, 0, 0, 0, 0,
	0, 1286, 1285, 0, 0, 0, 0, 1283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 1291, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1149, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 1152, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	1151, 390, 634, 635, 0, 636, 0, 392, 393, 1153,
	637, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 1156, 408, 409, 1157, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 0, 0, 1160, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 1161, 467, 1162, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 1285, 0, 0, 0, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 1291, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 1151,
	390, 634, 635, 0, 636, 0, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	0, 0, 1160, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	1285, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3465, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 2229, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 2144,
	0, 0, 0, 0, 2145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 2143, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 1206, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1108, 0, 1564, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	1107, 0, 294, 617, 618, 619, 0, 295, 296, 1114,
	0, 1095, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099,
	1103, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 1139, 1140, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 1146, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 1109, 1110, 1113, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 1111, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 1147, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 1102, 1101, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 267, 1160,
	454, 455, 0, 1112, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 1141, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 1142, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	1105, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 1143, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 1144, 584, 1145, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 1106, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 1030, 0, 262,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 227, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 229, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 1558, 659, 660, 0, 604, 603, 605, 661, 262,
	0, 0, 0, 221, 606, 607, 662, 608, 609, 610,
	0, 0, 222, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 183, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	267, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 262,
	2913, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 1908, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 4639, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 262, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 3416, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 262, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 1552, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 2901, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 3571, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 873, 0, 781,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 2220, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 788, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	871, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	267, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 786, 572, 573, 574, 575, 576, 787, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	779, 0, 781, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 791, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 788, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 786, 572, 573, 574, 575,
	576, 787, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 1945, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 0, 1951, 0, 286, 1941, 287,
	1957, 0, 1964, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 1967, 1968, 0, 0, 295, 296, 0,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 1131, 326, 1955, 1954, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 1116, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	1953, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 1962, 1963, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 0,
	376, 377, 378, 379, 380, 0, 0, 0, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 1948, 1949,
	0, 1944, 0, 392, 393, 1153, 0, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 0, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 0, 456, 1956, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 0, 1161, 467, 1162, 0, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	1938, 480, 481, 482, 1939, 483, 484, 485, 0, 486,
	0, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1952, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 0,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 1950, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 1966, 561, 562, 563, 564,
	565, 0, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 1958, 1959, 1960, 1961, 0, 589, 0, 581,
	582, 583, 0, 584, 0, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 0,
	1942, 1965, 0, 604, 603, 605, 781, 0, 0, 0,
	0, 0, 606, 607, 0, 608, 609, 610, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1932, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 788, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 786,
	572, 573, 574, 575, 576, 787, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 781, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 791, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 788, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 2263, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 2264, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 786,
	572, 573, 574, 575, 576, 787, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 2265, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 2014, 0, 1286,
	1981, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 791, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 1978, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 1979, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 1975,
	0, 1286, 1981, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 1291, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1149, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 1978, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 1152, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	1151, 390, 634, 635, 0, 636, 0, 392, 393, 1153,
	637, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 1156, 408, 409, 1157, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 0, 0, 1160, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 1161, 467, 1162, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 1979, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 781, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 788, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 1971, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 786,
	572, 573, 574, 575, 576, 787, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 1970, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 781, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 791, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 788, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 1924, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 786,
	572, 573, 574, 575, 576, 787, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 1923, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1286, 1981, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 791, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 1978,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1979,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 3765, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 1286, 1285,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 3387, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 1608, 0, 1286, 1285, 0, 0,
	0, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 1607, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 1606, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 1605, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1526, 0, 1286,
	1285, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 1525, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	1487, 0, 1286, 1285, 0, 0, 0, 0, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 1291, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 0, 1160, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1455, 0, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1454, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 1280, 0, 1286, 1285,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1279, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1286,
	1285, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 1286,
	1981, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 2021, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 1286,
	1285, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 1286, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 262,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 2725, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 2722,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 2729, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 2926, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 2728,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 2923, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 2925, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 2922, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 2727, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 2924, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 2725, 295, 296, 620, 0, 0, 2719,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 2722, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 2729, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 2728, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 2718, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	2727, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 2726, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1679, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 1678, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 1682, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 1680,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 1681, 603, 605, 661, 1433, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1435, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 1198, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1430, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1432, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 1198, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1337, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1339, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 1198, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 694, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 693, 273, 274, 275, 683,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 686, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	687, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	688, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 682, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 683, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 686, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 687, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 688, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 267, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 1198, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 3339, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 2871, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 2870, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 2235, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 2177, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 2183, 0, 262, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 2182, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 2170, 0, 262,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 2172, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	267, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 2140, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	1198, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1530, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1529, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1450, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1443, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1445, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1270, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1269, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1260, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1259, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1257, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1256, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1252, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1251, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 664, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	253, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	3691, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	3692, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 3694, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 3695, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 3690, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 686, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 687, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 688, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 2272, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 2270, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 2268, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 2189, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	2000, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 1994, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 860, 0, 262,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 859, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 858, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 2926, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	4045, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 262,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 3950, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 3952, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 751,
	0, 262, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 1307, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 1305,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 752, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 748, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 1308, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 747, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 751, 0, 262, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 1307, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 1305, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 752, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 748, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 1308, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 747, 653,
	654, 655, 0, 589, 0, 581, 1306, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 673, 0, 262, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	672, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 671,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 262, 2913, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 262, 4055, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 4314, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 4309, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 3733, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	2610, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 262, 2913, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 2910, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 2245, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	2233, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 751, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 741, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 752, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 748, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 1563, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 747,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1536, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1535, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1520, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1518, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1514, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1491, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1489, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1452, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1438, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1275, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1274, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1266, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1265, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1219, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 757, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	751, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 741, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 739, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 740, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 752, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 742, 523, 0, 524, 525, 531,
	532, 526, 527, 748, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 743, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 747, 653, 654,
	655, 0, 589, 0, 581, 745, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 733, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 734, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 696, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 690, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 668, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 3435, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 3373, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 3306, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 3304, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 3289, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 2881, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 734, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	2207, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 0,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1237, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 1171, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 0, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 0, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 0, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 0, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1758, 0, 0, 0, 0,
	1727, 1728, 1730, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1758, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 1729, 1727, 1728,
	1776, 1760, 1761, 1762, 1770, 1771, 1772, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 1729, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 1749, 0, 1776, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	1752, 1753, 1754, 1755, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 1777,
	0, 0, 0, 0, 0, 1757, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 1773, 0, 1774, 1767, 0, 1735, 1777, 0,
	0, 1744, 1745, 0, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 1773, 0, 1774, 0, 0, 0, 0, 0, 0,
	1744, 1745, 0, 1767, 1750, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1774, 0, 1750, 0, 0, 0, 0, 1744, 1745,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 1763, 1758, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	1741, 1742, 1748, 1769, 1747, 1743, 1729, 1740, 1738, 1739,
	1731, 1732, 1733, 1734, 1736, 1737, 1749, 0, 0, 0,
	4295, 0, 0, 0, 1766, 1746, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 4294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 4124, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 1763, 1758, 0, 0, 0, 0, 1727,
	1728, 1730, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1758, 0, 1767, 0, 0, 1777, 0,
	1730, 0, 0, 0, 1757, 1759, 1729, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 1773, 0, 1774, 0, 1746, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 1729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 1765, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 1775, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 1777, 0,
	0, 0, 0, 0, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 1774, 1767, 0, 0, 1777, 0, 0,
	1744, 1745, 0, 1757, 1759, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	1773, 0, 1774, 0, 0, 0, 0, 1751, 0, 1744,
	1745, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 1756, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 1751, 0, 3976,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 1727, 1728, 1751, 1760, 1761, 1762,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1758, 0,
	0, 0, 1768, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 3907,
	0, 0, 0, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 3906, 0,
	0, 0, 0, 1752, 1753, 1754, 1755, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1758, 0, 0, 1767,
	0, 0, 1777, 1730, 0, 0, 0, 0, 1757, 1759,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 1774, 0, 0,
	0, 0, 0, 0, 1744, 1745, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 1765, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 1767, 0, 0,
	1777, 0, 0, 0, 0, 0, 1757, 1759, 0, 0,
	1756, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 1773, 0, 1774, 0, 0, 1776, 0,
	0, 1751, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 1729, 1727, 1728, 1768, 1760, 1761,
	1762, 1770, 1771, 1772, 1749, 1750, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1763, 1758,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 1766, 0,
	0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 3905, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 1767, 0, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 1773,
	0, 1774, 0, 0, 1735, 0, 0, 0, 1744, 1745,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 1727,
	1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	1767, 1750, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 1763, 1758, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 1773, 0, 1774, 1776,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 1729, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 1749, 0, 0, 1750, 0,
	0, 0, 0, 0, 1746, 0, 1766, 0, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0,
	0, 3576, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	1728, 1768, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1763, 1758, 1767, 0, 0, 1777, 0, 0,
	1730, 0, 0, 1757, 1759, 0, 0, 0, 0, 1776,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 1774, 0, 0, 0, 0, 0, 0, 1744,
	1745, 0, 0, 0, 0, 1729, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 1749, 0, 1765, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 3079, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 3078, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 1767, 0, 0, 1777, 0, 0,
	0, 0, 0, 1757, 1759, 1756, 0, 0, 1763, 1758,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	1773, 0, 1774, 0, 0, 1776, 1751, 0, 0, 1744,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 1729, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1750, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 1766, 1735, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 3077, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 0, 0, 0, 1751, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 1773, 0, 1774, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	1763, 1758, 1768, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 1765, 0, 1727, 1728, 1776, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1758,
	0, 0, 0, 1729, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 1749, 0, 1776, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 3076, 0,
	0, 0, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 4553, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 1767, 0, 1735, 1777, 3163, 0, 0, 3162,
	0, 1757, 1759, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1774, 0, 0, 0, 0, 0, 0, 1744, 1745, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1774, 0,
	1750, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	1764, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 3043, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4552, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770,
	1771, 1772, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1758, 0, 0,
	0, 1756, 3014, 0, 1730, 0, 0, 0, 0, 0,
	1768, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 1752, 1753, 1754, 1755, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 1777, 0, 0, 0, 0, 0, 1757, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 1774, 0, 0, 0,
	0, 0, 0, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2583, 0, 0, 0, 0,
	0, 1765, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1758, 0, 0, 0,
	2582, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1776, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1763, 1758, 0, 0, 0, 1729, 0,
	0, 1730, 0, 0, 0, 0, 1764, 0, 1749, 0,
	1776, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 1752, 1753, 1754, 1755, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 1767, 0, 1735,
	1777, 0, 0, 0, 0, 0, 1757, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 1774, 0, 0, 0, 0,
	0, 0, 1744, 1745, 0, 1767, 0, 0, 1777, 0,
	0, 0, 0, 0, 1757, 1759, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 1774, 0, 1750, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 1765, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 1756, 0, 0, 1730,
	0, 0, 0, 0, 0, 1768, 1727, 1728, 1776, 1760,
	1761, 1762, 1770, 1771, 1772, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1758, 0, 0, 0, 1729, 0, 0, 1730, 0, 0,
	0, 0, 0, 1768, 1749, 0, 1776, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 1752, 1753, 1754, 1755, 0,
	0, 0, 0, 1767, 0, 1735, 1777, 0, 0, 0,
	3169, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1774, 0, 0, 0, 0, 0, 0, 1744, 1745,
	0, 1767, 0, 0, 1777, 0, 0, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 1765, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 1773, 0, 1774,
	0, 1750, 0, 0, 0, 0, 1744, 1745, 0, 0,
	0, 1763, 1758, 0, 0, 0, 3164, 0, 0, 1730,
	0, 0, 0, 0, 1765, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 3557, 0, 0, 0, 0, 1773,
	0, 1774, 0, 0, 0, 0, 0, 0, 1744, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 1764, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 1756, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 1749, 0, 0, 0, 0, 0,
	0, 1768, 0, 1746, 0, 0, 0, 0, 1763, 1758,
	0, 0, 0, 3080, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 1767, 0, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 1773,
	0, 1774, 0, 0, 1735, 0, 0, 0, 1744, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 1727,
	1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	1767, 1750, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 1763, 1758, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 1773, 0, 1774, 1776,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 1729, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 1749, 0, 0, 1750, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 3131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	1728, 1768, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1763, 1758, 1767, 0, 0, 1777, 0, 0,
	1730, 0, 0, 1757, 1759, 0, 0, 0, 0, 1776,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 1774, 0, 0, 0, 0, 0, 0, 1744,
	1745, 0, 0, 0, 0, 1729, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 1749, 0, 1765, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770,
	1771, 1772, 0, 0, 1767, 0, 0, 1777, 0, 0,
	0, 0, 0, 1757, 1759, 1756, 0, 1758, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	1773, 0, 1774, 1776, 0, 0, 1751, 0, 0, 1744,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 1729,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 1750, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 1753, 1754, 1755, 0, 0, 0, 0,
	0, 0, 1735, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 1767, 0,
	0, 1777, 0, 0, 0, 0, 0, 1757, 1759, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 918, 0,
	964, 0, 0, 0, 1773, 0, 1774, 0, 0, 0,
	0, 0, 0, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 926, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 924, 923, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 0, 0, 0, 928, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 0, 0, 1775, 0,
	937, 938, 0, 0, 0, 0, 0, 0, 0, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 965, 930, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 934, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 942, 941, 0, 0, 0, 0, 0, 0,
	936, 0, 0, 0, 951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 929, 0, 0, 971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	927, 0, 0, 0, 958, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 0, 0, 0, 0, 970, 952, 0, 945,
	943, 0, 948, 0, 0, 0, 0, 0, 949, 0,
	0, 920, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 950, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	957,
}

var sqlPact = [...]int{
	9194, -1000, -1000, -1000, -1000, 235, -1000, -1000, 234, 233,
	227, 221, 211, 209, 208, 206, 204, 198, 194, -1000,
	-1000, -1000, -1000, -1000, -1000, 193, -1000, -1000, 190, -1000,
	189, 188, 186, -1000, -1000, 184, -1000, 183, -1000, -1000,
	-1000, -1000, 182, 181, 180, 88358, 87816, 88893, 2344, 109906,
	96411, 2031, 79172, 109364, 78630, 108822, 2171, 11429, 108280, 2769,
	173, -1000, 107738, 172, 170, 163, -1000, 107196, -1000, 1974,
	-1000, 159, 4517, 63968, 157, 155, 153, 2647, 150, -1000,
	148, 140, 138, -1000, 9566, 1574, -1000, 137, 136, -1000,
	334, 93715, 135, 134, 2726, 133, 132, 63425, 131, 127,
	2430, 2949, -1000, -1000, 2108, -1000, -1000, 123, 122, 115,
	114, 111, 108, 104, 103, 102, 99, 97, -1000, 96,
	91, 90, 89, 88, -1000, 84, 83, 80, -1000, 79,
	-1000, 78, 77, 76, 73, 72, 71, 70, 65, 62,
	61, 59, 57, 55, -1000, 121746, -1000, 1996, 1695, 1691,
	1690, 1686, 1680, 1033, 51, 39, 38, 37, 36, 34,
	33, 31, 29, -1000, 28, 27, 26, 24, 23, 21,
	20, 15, 144, 14, 12, 11, 9, 5, 1, 0,
	2615, -1000, 1671, 1447, 29676, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 115791, 110441, -2, -57, -3, -1000, 3340, 1077, 52530,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 313, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 552, 1905, 812, -1000, -1000,
	-1000, 106661, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2342, -48, -1000, 2077, -1000, -1000, -1000, -1000, -1000, 809,
	-1000, 2340, 147, 2266, -1000, -1000, -1000, 3402, 2457, 3812,
	3811, 3809, 3808, 3807, 115256, 1892, 3805, 2575, 3804, 3803,
	3802, 3801, 3800, 3799, 3796, -1000, 87274, 1079, 86732, 86190,
	3397, 106126, 85648, 105584, 72684, 44660, 1411, 3400, -1000, -1000,
	-1000, -1000, -1000, -1000, 110441, -1000, 1072, -1000, -1000, 3795,
	3794, 2180, 808, 95869, -1000, 1675, -1000, 985, 31380, -1000,
	1285, -1000, 31380, 312, -1000, -1000, -1000, -1000, -1000, -1000,
	3793, 3792, 3791, 3790, 3789, -1000, -1000, 78088, 22808, 77546,
	77004, 105042, 22255, 85106, 84564, 104500, 72131, 1071, 1475, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, 69919, 3568, 110441, -1000,
	306, -1000, -1000, -1000, -1000, -1000, -1000, 44080, 827, 43500,
	842, 42920, 294, -1000, -1000, -1000, -1000, 71578, -1000, 103958,
	2455, 3788, 3787, 1171, 3786, 3272, 1870, 3785, 1920, 1261,
	3784, 3783, 3780, 3779, 3778, 3776, 3774, 1541, 103416, 3038,
	102874, 1813, 71025, 1069, 84022, 88893, 2734, 102332, 1558, 1511,
	-1000, -1000, -1000, -1000, 3165, 2947, 2937, 1387, -1000, -1000,
	-1000, -1000, 55238, 5374, 5370, 9797, 101790, 58033, 88893, 88893,
	-1000, -1000, -1000, -1000, -1000, 42340, 727, 41760, 1084, -1000,
	-1000, 55797, 3002, -1000, -1000, -1000, -1000, 41180, 524, 40600,
	940, 110441, -1000, 3037, 1969, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2285, 1636, 3570, 2780, 70472, 2186, 1539, 3346, 3164, 3127,
	1556, 3110, 3773, 2627, 3105, 3092, 3088, 3076, 3075, 1632,
	2628, 726, 29096, 3030, 1812, 40020, 1546, 1598, 3068, 3066,
	3620, 2060, 2095, 2181, 76462, 3772, 3771, 3301, 3059, 3029,
	2817, 3016, -1000, 3000, -1000, -1000, -1000, -1000, 1514, -1000,
	-1000, -1000, -1000, 79707, -1000, -1000, 1559, -1000, -1000, 1559,
	-1000, -1000, -1000, -1000, -1000, 1453, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1671, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2102, -1000,
	2177, -1000, -1000, 2526, 3288, 3288, 3288, 3399, 509, 498,
	-1000, 144, -1000, -1000, 121138, -1000, -1000, 45228, 45228, 45228,
	45228, 45228, 45228, 45228, 2185, -1000, 800, -1000, -1000, 859,
	-1000, 798, 656, -1000, -1000, -1000, -1000, -1000, -1000, 797,
	-1000, -1000, -1000, -1000, -1000, -1000, 3568, -1000, 25628, -1000,
	-1000, -1000, 489, 794, 45228, -1000, -1000, 3638, 3636, 1052,
	-1000, 300, 999, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3036, 792, 791, -1000, 789,
	786, 785, 783, 781, -1000, -1000, -1000, 780, 779, 778,
	775, 774, 773, 760, 759, -1000, 2089, -1000, -1000, -1000,
	-1000, -1000, -1000, 716, 715, 715, 715, -1000, 1060, -1000,
	-1000, -1000, 307, 714, 304, 713, 712, 709, -1000, 757,
	752, 751, 746, 745, 744, 740, 738, 737, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1056, -1000, -1000, -1000, -1000,
	-35, 110441, -1000, 552, -35, -1000, -1000, 734, -1000, 33664,
	33664, 33664, -1000, -1000, 2339, 45228, -1000, 3004, -1000, -27,
	-27, 955, 54152, -1000, 51444, 955, 298, 867, 59655, -1000,
	2998, -1000, -1000, 733, 295, -1000, -1000, -1000, -1000, 23359,
	2995, 110441, 110441, 88893, 88893, 88893, 3202, 45228, -1000, -1000,
	67742, 110441, 89963, -1000, -1000, 3512, 64503, 67202, 110441, 3035,
	66667, 3769, -1000, -1000, -1000, -1000, -1000, 3182, 3766, 3764,
	3763, -1000, 110441, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	212, 3181, -1000, -1000, 93173, 212, 3180, -1000, 212, 3179,
	-1000, 92638, -1000, -1000, 2270, 3178, -1000, -1000, 217, 3173,
	-1000, -1000, -1000, 213, 3172, -1000, -1000, 288, -105, 3171,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 121138, -1000, -1000, -1000, 66125, -1000, 3312, -1000,
	-1000, 110441, -1000, 45228, -1000, 3507, 1601, 73775, 3443, -49,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2546, 2504, 1227,
	2365, -1000, 3221, 1781, -1000, 31380, 3260, -1000, -1000, -1000,
	284, 23359, -1000, -1000, -1000, -1000, -1000, -1000, 3147, 3163,
	1549, -1000, 2364, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1919, 3162, -1000, 2153, 3156, 1896, -1000, -1000, 2976,
	-1000, 3292, -1000, -1000, 1951, 3155, -26, -1000, -1000, 2517,
	-1000, 2047, -1000, 1030, 3154, -1000, 83480, 57474, 55797, 69919,
	-38, -1000, -1000, -1000, -1000, -249, -1000, 21702, 121138, -1000,
	-1000, -1000, -1000, 1878, 121138, 932, -1000, -1000, 3148, -1000,
	121138, 930, -1000, -1000, 3144, -1000, 3034, -1000, -1000, 2418,
	-1000, -1000, 3762, -1000, -1000, 3761, -1000, 3754, 3749, 3747,
	-1000, 1727, 2065, 3746, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 82945, 2335, -1000, -1000, 81861, -1000, 2417, 3442,
	-1000, 82403, 1065, -1000, 1030, 2409, -1000, 92103, 1043, 2407,
	-1000, 3740, 3395, 2752, 1030, 2406, -1000, -1000, -1000, -1000,
	-1000, 1075, -1000, 61271, -1000, 61271, -1000, 1696, -1000, 114721,
	-27, 88893, 3568, -1000, -62, -1000, -1000, -1000, 1077, -1000,
	54695, -1000, 54695, 95327, 73235, 1014, 771, 62882, 121138, -1000,
	-1000, -1000, -1000, 121138, -1000, -1000, -1000, -163, 2778, -1000,
	73235, 56915, 121138, -1000, -1000, -1000, -1000, 121138, -1000, -1000,
	-1000, 73235, 81861, -1000, 101248, 81326, -1000, -1000, 1537, 2600,
	-1000, -1000, -1000, 73235, 1334, 73235, 73235, 73235, -1000, 100706,
	-1000, -1000, 2163, 1531, 3308, 2134, 88893, -1000, 1943, -1000,
	-1000, -1000, 3327, 110441, -1000, -1000, 3033, -1000, 65582, 91568,
	-1000, 91033, -1000, 90498, -1000, 88893, -1000, 88893, -1000, 3735,
	3733, 3732, -1000, -1000, 3730, -1000, 3728, 3319, -1000, 121138,
	3318, -1000, 3726, 3429, 3030, 121138, -1000, 3097, 1710, 1701,
	110441, -1000, -1000, 110441, -1000, 110441, -1000, -1000, -1000, 1644,
	-1000, -1000, 2543, -1000, -1000, -1000, -1000, 88893, 1497, -1000,
	-1000, -1000, -1000, -1000, -1000, 2921, -1000, 1749, -1000, 1916,
	-1000, 2994, 3326, -1000, 1533, -1000, -1000, 223, -1000, -1000,
	-49, -1000, 114186, -1000, 2526, -1000, 110441, -1000, 2491, 3015,
	3028, 1585, 2305, 2617, -1000, 39440, 2624, 48636, 2360, 144,
	-1000, -1000, 144, 144, 30812, -1000, -1000, 64503, 64503, 23359,
	1467, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228,
	45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228,
	45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228, 45228,
	45228, 45228, 45228, 45228, 45228, 45228, 2321, 45228, 1450, 45228,
	45228, 45228, 45228, 1795, -1000, -1000, 2017, 592, 2101, -1000,
	3587, 3587, 3587, 1099, 1099, 121512, 121512, 610, 3723, 859,
	-1000, 45228, -1000, 120, 45228, 23912, -1000, 498, 8906, 2496,
	-1000, 497, 24492, -1000, -1000, -1000, 25628, 656, 38860, 45228,
	1044, 121138, -1000, -1000, 1433, 3596, 21150, 3023, 2812, 732,
	861, 848, 28516, 27936, 27356, 26776, 690, 45228, 45228, 45228,
	45228, 45228, 45228, 45228, 45228, -1000, -1000, 3613, -1000, 3596,
	-1000, -1000, -1000, -1000, 3596, 1462, 1458, 3596, -1000, 3596,
	3596, 8480, 8480, 38292, 37712, 37132, 49204, 36552, 45228, 26196,
	35972, 35392, -1000, 110441, -35, 3506, 45228, 126, -1000, 119851,
	-1000, 126, 126, 731, -63, 121138, 2839, 2839, 53071, 2241,
	2212, 2212, 2212, -1000, 955, 16705, 955, 99631, 2227, 955,
	955, 268, 310, 496, 50903, 3004, 99631, 833, 724, -5,
	-7, -8, -1000, -1000, -9, -10, -1000, -1000, 88893, 723,
	23912, 23359, 262, 1612, -70, 2649, 2643, 2635, -1000, 2634,
	1852, -71, 1434, 88893, 110441, -103, -1000, 1082, -73, -1000,
	1378, 259, 3596, -1000, -1000, -1000, -1000, -1000, 3722, 3721,
	-1000, 1055, 722, 717, 453, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 716, 715, 715, 715, -1000, 307, 714,
	304, 713, 712, 709, -1000, -1000, -1000, -1000, -1000, 2993,
	88893, 110441, -249, 89963, -92, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 110441, -1000, -1000, -1000, 3720, -1000, 88893,
	-1000, -1000, 88893, 212, 3141, -1000, 88893, -1000, 88893, 210,
	3135, -1000, -1000, 110441, -1000, 88893, 88893, -1000, 110441, 110441,
	110441, 73235, 73235, 220, -1000, 88893, 971, -79, 1179, -49,
	-1000, -1000, -1000, 1559, -1000, 1838, -1000, -1000, -1000, -1000,
	-1000, -1000, 1552, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1052, -1000, -1000, -1000, -1000, -1000, -1000, 3601, 3592,
	-36, -1000, -1000, 23359, -1000, -50, 1722, 2301, 1429, -1000,
	75920, 2475, 3302, 3719, 2715, 3280, 1694, -1000, 1643, -1000,
	3408, 79707, 3461, 3475, 993, -1000, 2990, -1000, -1000, 984,
	1663, 1810, 1416, 1415, 79707, 2153, -1000, 64503, -1000, 2671,
	3391, 1461, 1459, 1461, 1461, 1417, -1000, 79707, 1800, 1412,
	1410, 1403, 2034, 2018, -1000, -1000, -1000, 1399, 1398, 884,
	2008, -1000, -51, 3455, 3471, 164, -1000, 2989, 1393, -1000,
	-1000, -1000, 3390, 88893, 23359, 1592, 1591, 1572, 1797, 1391,
	-37, -1000, 3447, 1388, 1386, -1000, 6424, -1000, 73235, 1857,
	3134, 2776, 941, 2774, -1000, -1000, -1000, 941, -38, 69919,
	110441, 255, -1000, 120, 45228, 45228, 120, 45228, 120, 3427,
	3133, -1000, -1000, -1000, -1000, -1000, 3718, 1987, 2573, -1000,
	-1000, 702, 2405, 2987, 110441, 2662, -39, 88893, -1000, 3132,
	68282, 2153, 2402, -1000, -1000, 80784, -1000, 3131, 552, 2397,
	-1000, 685, 3717, 3130, -1000, 113651, -1000, 3312, 1346, 3125,
	1123, 869, 3505, -1000, 869, 61812, -1000, 110441, -1000, -27,
	4712, 74850, -80, -81, 494, -1000, 100171, 110441, 1119, 75385,
	110441, 3249, 1028, 55797, -1000, 55797, -82, -163, 2773, 1604,
	1014, 1014, 941, -1000, 941, -1000, 88893, 3022, -1000, -1000,
	73235, 1014, 1014, 1014, -1000, -1000, -1000, -1000, 3715, 3714,
	3712, -1000, -1000, -1000, 1029, 88893, 110441, 88893, -1000, 247,
	-1000, 110441, -1000, 110441, 110441, 88893, -1000, 1029, 110441, 1029,
	110441, 1029, 110441, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	120, 45228, -1000, -1000, 3710, 1729, -1000, 3020, -1000, 3017,
	-1000, 19, -1000, -1000, -1000, -1000, -1000, -1000, 1860, -1000,
	-1000, 88893, 88893, 88893, 88893, 110441, 3233, -1000, 110441, 3231,
	88893, -1000, 79707, -1000, 2491, 3015, -1000, -1000, -1000, -1000,
	-1000, -1000, 1597, 2272, -1000, 2595, -1000, 1668, -1000, -1000,
	-1000, 121138, 49772, -1000, -1000, 121138, 1864, -1000, 48068, 47500,
	-1000, -1000, 1787, 88893, 2677, -1000, 2677, -194, -1000, 119592,
	2593, 88893, -1000, -1000, -1000, -1000, -1000, 983, 1135, 1135,
	1309, 1309, 1309, 1309, 3438, 634, 553, 477, 8307, 8307,
	6098, 6098, 6098, 6098, 6098, 8307, 364, 1099, 1099, 364,
	364, 364, 364, 364, 1099, 1099, 1099, 8307, 8307, 8307,
	121512, 121318, 9586, 45228, 45228, 1382, 2006, 592, 7866, 45228,
	6322, 6322, 6322, 6322, -1000, 2082, -1000, -1000, -1000, -1000,
	2984, 701, 49204, 49204, -1000, -1000, -1000, -1000, 25060, 45228,
	-1000, -1000, -1000, -1000, 34812, -1000, -1000, 118964, -315, 491,
	-179, -61, -1000, 45228, 45228, 45228, 490, -1000, 246, 45228,
	110441, -1000, 14576, 832, -207, -1000, -87, 1451, -1000, 45228,
	-1000, -1000, 1373, -1000, 1371, 1370, 1368, -1000, 698, 487,
	-1000, 244, -1000, 2202, 694, 693, 45228, -1000, -1000, -1000,
	-1000, -1000, 118768, -1000, -1000, 118588, -1000, -1000, 118394, -1000,
	-1000, 118327, -1000, -1000, -1000, 120944, 14144, 13394, 12511, 8064,
	11712, 10804, -93, 481, -98, 479, 980, 978, 473, 457,
	455, -100, -1000, 3709, 3708, 3706, -1000, 3704, 3702, 3701,
	-1000, 3700, 3699, 3698, -1000, 3697, 3694, 3692, -1000, 3691,
	3690, 3688, -1000, 3686, 3685, 3684, -1000, 3683, 3681, 3680,
	-1000, 3678, 3677, 3676, -106, 454, -1000, 2983, -179, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, -1000, 441,
	-1000, 120877, -179, 439, 456, -1000, 49204, 49204, 49204, -1000,
	434, -1000, 119224, -1000, 120517, 34244, 34244, 34244, 432, 120295,
	45228, -179, -107, -1000, -115, -1000, -1000, 555, -120, 1042,
	33664, 51987, 23359, -1000, 1042, 1042, 45228, -1000, 45228, 2611,
	-1000, -1000, -1000, -1000, 2605, 2022, 2839, 53071, -1000, -1000,
	-1000, -1000, 99631, -1000, 3568, 3039, -1000, 99631, -1000, -1000,
	110441, 552, -1000, 99631, 99631, 23359, 955, -1000, 955, 99631,
	593, -1000, -1000, -1000, -1000, -1000, 428, 58573, -61, 242,
	23359, 1030, -1000, 2700, 2700, 2700, 2700, -1000, -1000, 110441,
	1366, -44, -141, 3539, -1000, 2105, -1000, 64503, -1000, 858,
	1098, 23359, -1000, -1000, -1000, 689, -1000, 3596, 3596, -1000,
	3596, 110441, 2977, 117, 110, 68282, 68282, 3675, -1000, -1000,
	212, -1000, 88893, 212, 212, -1000, 88893, 88893, 2270, -1000,
	217, -1000, 213, -1000, -1000, -105, -1000, 1038, 31380, -1000,
	1559, -1000, -1000, 1594, -1000, 2048, -1000, 1422, -1000, -1000,
	-1000, -1000, 31380, -1000, 2326, 110441, 110441, 88893, -1000, 110441,
	-1000, 2160, 3535, 1977, 2541, 2530, 68282, -1000, 2396, 113116,
	2389, 64503, 110441, -1000, -1000, 687, 992, 2590, 2588, 1116,
	110441, 110441, 2586, 112581, 112046, -1000, 3674, 110441, 2126, 45228,
	3386, 2218, 2010, 120, 120, -1000, -1000, 120, 682, 1308,
	88893, 88893, 110441, 68282, 88893, 1826, -1000, -1000, -1000, -1000,
	-1000, 80242, -1000, -1000, 3609, 3605, -1000, 1461, -1000, -1000,
	-1000, 1461, 2153, 1821, 110441, 68282, 88893, 68282, 110441, 110441,
	1779, 110441, 1469, -1000, 884, 2123, 120, 120, -1000, -1000,
	120, 666, 23359, 1991, -1000, 2997, 110441, 3634, 111511, 3633,
	110441, 110441, 110441, 68282, 3316, 110441, 110441, 68282, 6424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	69384, 1128, 1030, 1778, 1349, 1345, 79707, 55797, 1027, 55797,
	2758, -1000, -1000, 20598, -1000, 121138, 121138, -1000, 121138, -1000,
	65042, 110441, -1000, 1062, 110441, 75385, 1001, 3123, 60730, -249,
	1014, 73235, 88893, -39, 110441, -1000, -1000, 2153, 3122, 552,
	2395, -1000, 73235, 3503, 3121, 661, 3670, 3669, -1000, 88893,
	2334, 2391, -1000, -1000, 110976, 3174, 884, 110441, 1042, 53071,
	2014, -1000, 59115, 1097, 110441, 1879, 107, -1000, -1000, -1000,
	4, 110441, -1000, 866, -1000, -1000, 4712, 4712, 1014, -276,
	658, -1000, 928, 927, 56356, 73235, -122, -1000, -1000, -1000,
	-1000, 2389, 88893, 110441, 1316, 2743, 110441, -123, -1000, 241,
	657, -1000, 2527, -1000, -163, -1000, 1028, 55797, 2942, 2935,
	-1000, -1000, 1037, -1000, 1507, 1014, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -28, 110441, -249, -249,
	-42, -44, -1000, 1029, -1000, 1029, -1000, 1029, -1000, 121138,
	-1000, -1000, 1706, 1700, 110441, -1000, 23359, 110441, 88893, 23359,
	88893, 3013, 3009, -1000, -1000, -1000, 110441, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1141, -1000, 1864, 2271, -1000, 656,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2485,
	-1000, -47, 30812, 958, -1000, -1000, 88893, -30, 45228, 45228,
	7400, 6547, 45228, 49204, 49204, -1000, 45228, 5127, -1000, -1000,
	-1000, -1000, -1000, 2932, 655, 45228, 64503, 5036, 4931, -1000,
	427, 10430, 364, -1000, 45228, -1000, 421, 33096, -1000, 119889,
	-64, -128, -1000, 17270, -179, -130, -1000, -1000, 857, -1000,
	3190, -1000, 45228, 120257, 2451, 2243, 1895, 1737, 3596, 3632,
	20046, -1000, 62347, 1045, 2231, 118131, -1000, -1000, -1000, -1000,
	64503, 64503, 45228, 45228, -1000, 45228, 45228, 45228, -1000, -1000,
	-1000, 3596, 960, -1000, -1000, -1000, 960, -1000, -1000, 1461,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1461, -1000, 45228, -1000, -1000,
	2930, 45228, -1000, 64503, 64503, 49204, 49204, 49204, 49204, 49204,
	49204, 49204, 49204, 49204, 49204, 49204, 49204, 49204, 49204, 49204,
	49204, 49204, 49204, 49204, 2556, 49204, 3581, 3581, 3581, -1000,
	2979, 2930, 45228, 45228, 64503, 418, 417, 416, -1000, 45228,
	-179, -1000, -1000, 4712, 653, -1000, 2467, -1000, 2804, -1000,
	45228, -1000, -131, -1000, 3004, -1000, -1000, 2804, 2804, -136,
	121138, 53071, 53071, -1000, 651, 45228, 2604, -1000, -1000, 831,
	-313, -1000, 925, -1000, -1000, -1000, -1000, -1000, 552, -1000,
	-1000, -1000, 239, 99631, 99631, 830, -1000, -138, -1000, -1000,
	-145, -1000, 3500, 413, 23359, -1000, 1042, 2914, -1000, -1000,
	-1000, -1000, -1000, -1000, -249, 110441, 110441, 2254, 3631, -1000,
	3604, 854, 824, 238, 3596, 409, 407, 404, -249, 110441,
	110441, 110441, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000,
	210, -1000, -1000, -1000, -1000, 2640, -1000, -49, -1000, -1000,
	-1000, 45228, -1000, -1000, 3294, 1342, 1340, -1000, -1000, -1000,
	-1000, 3381, 89428, 3534, 1970, 1932, -1000, 3118, -1000, 2387,
	-1000, 1103, -1000, 1965, -1000, 45228, 647, 2727, 646, 644,
	3667, 1981, 3666, 1117, 3112, 2270, 3109, 2270, -1000, -1000,
	-1000, 973, -1000, 121138, 2218, -1000, 641, 640, -1000, -50,
	1720, 2199, 1338, 1035, -1000, -1000, 45228, 45228, 99096, -1000,
	450, 3292, -32, -1000, -1000, -1000, 1775, 1333, 1319, -1000,
	-1000, -1000, -1000, 2153, 1769, 1303, 1291, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1032, -1000, 3062, 3058, 972, 110441,
	-1000, 1031, -1000, -1000, 45228, -1000, -51, 1290, 3450, 2386,
	88893, -1000, 2270, 3106, 1219, -1000, 1214, -1000, -1000, -1000,
	3446, 3439, 1272, -1000, -1000, -1000, -1000, -1000, 68833, -1000,
	110441, 68282, 88893, 1819, 941, -1000, 2511, 941, 1027, 2928,
	-1000, 2657, -1000, 88893, 3663, 403, -146, -52, 64503, 3499,
	-1000, 2273, 643, 88893, 965, -1000, 3568, -1000, -1000, -1000,
	-1000, 3435, 88893, 3495, 3095, 1030, 120, 88893, 3618, -1000,
	-1000, 3494, 88893, 3089, 2332, 2383, 2523, 884, 74315, 1030,
	2229, -69, -1000, 1879, 32516, 3290, -154, -1000, -1000, -1000,
	1042, 61812, 53071, 45228, 3662, -155, -1000, -1000, -1000, -1000,
	-1000, 96951, 96951, 73235, 73235, 73235, 1014, 110441, 110441, 75385,
	-1000, -1000, 637, 110441, 110441, 623, -1000, 110441, 110441, 3661,
	73235, -53, 622, -1000, 924, 922, 921, -1000, -1000, -1000,
	-1000, -1000, 1028, -1000, -163, 55797, 120, -1000, 2262, 88893,
	-1000, 19494, -1000, -1000, -1000, -1000, -1000, -1000, 1029, -1000,
	-1000, 2141, 2355, 2141, 1889, 1887, -1000, -1000, 2269, -1000,
	-1000, -1000, -1000, 2652, 3307, 23359, 3417, 6322, 45228, 45228,
	587, 1958, 547, 6322, 45228, 45228, 64503, 4754, -160, 45228,
	45228, -1000, 45228, 817, 121138, 3628, 45228, 399, 394, -1000,
	-1000, -1000, 3594, -1000, -1000, -1000, 121138, 45228, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 377, -1000, 237, -1000, -1000,
	-1000, 116326, -1000, 45228, 374, 3379, -1000, 371, 370, 398,
	5878, 117953, 117538, 117509, 368, -1000, -1000, 367, 361, 121138,
	2979, 121138, -1000, -1000, 1127, 1127, 1418, 1418, 1418, 1418,
	3581, 328, 1053, 772, 933, 933, 933, 527, 676, 676,
	933, 933, 933, 2925, 2549, 620, 5817, -1000, -1000, 121138,
	121138, 348, -1000, -1000, -1000, -179, 346, 4712, -1000, 2800,
	3369, 121138, -1000, 53071, 2800, 2800, -1000, -1000, 2022, 110441,
	121138, 53071, -1000, 3039, -1000, 17833, -1000, 23359, -1000, -1000,
	-1000, -1000, 3568, -1000, 58573, -1000, 619, -1000, 214, -1000,
	2914, -1000, 920, -1000, -1000, 73235, 73235, -249, -249, -1000,
	-1000, 814, 3660, 845, 23359, 343, -1000, -1000, -1000, -249,
	-249, -249, -1000, -1000, -1000, 3244, 121138, 110441, 110441, 1589,
	94785, 1880, -1000, -1000, 1986, 2524, -1000, 3533, 3531, 110441,
	3086, -1000, 2222, -1000, 1116, 117359, 53612, -1000, 53612, 110441,
	-1000, -1000, 1948, 2597, 1165, -1000, 3333, 110441, -1000, 110441,
	-1000, -1000, -1000, 110441, 110441, 88893, 110441, -1000, 68282, 3070,
	-161, 121138, -54, -1000, 917, -1000, 1438, -1000, 18942, 110441,
	68282, 88893, 110441, 68282, 88893, 2166, -1000, -1000, 3057, -1000,
	3069, -162, 23359, -1000, 3627, 3626, 3083, 3330, -1000, 110441,
	3625, 110441, 88893, 3243, -1000, -1000, -1000, -1000, -1000, 1754,
	1208, 1202, 1027, -56, 617, -1000, 916, -1000, -1000, 915,
	1027, -1000, 73235, 55797, 552, -1000, 2705, -1000, 94250, 2295,
	120, -1000, 3659, 97491, 615, -1000, 2252, -1000, 594, 68282,
	2153, 120, 88893, -1000, -1000, 552, 339, -60, -1000, 3116,
	1111, 23359, 88893, 3082, 2560, 884, 74315, -1000, 1346, 2617,
	-1000, -68, -1000, 660, 120, 2229, -1000, -69, 121138, -1000,
	910, -1000, -177, -1000, -1000, 337, -1000, 3242, 3239, -1000,
	2838, 53612, 613, 612, 110441, 3238, -1000, -1000, -182, 2665,
	2665, 73235, 55797, 73235, -1000, 1028, -1000, -1000, 2388, -1000,
	-1000, -1000, -1000, -1000, 23359, 1654, -1000, 611, 609, -1000,
	-1000, -1000, -1000, 3307, 6322, 6322, 45228, 45228, 45228, 6322,
	4754, -184, -1000, 6322, 6322, -179, -1000, -1000, 119889, -1000,
	-1000, -1000, 121138, -1000, 18390, 2142, -1000, 116937, -1000, 30812,
	-1000, -1000, 45228, 45228, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 49204, 2923, 605, 64503, -1000, -1000, 331, 1040,
	45228, 46932, 3004, 1040, 1040, -1000, -191, -1000, -1000, -1000,
	3568, 214, -1000, -1000, 3658, 23359, -1000, 73235, -1000, -1000,
	841, -1000, 3657, -1000, -1000, -1000, -1000, -1000, 2770, 3493,
	-1000, -1000, 1966, 2522, -1000, 3489, 1192, 3486, -1000, 110441,
	-1000, 110441, -1000, 23359, 110441, 2820, 1269, -1000, 992, 2583,
	604, 49204, 88893, 912, -1000, 3525, 2837, -192, -1000, 110441,
	45228, 110441, -193, -200, 2371, -1000, -1000, 2370, 45228, -1000,
	64503, 600, 2270, 2270, -201, -202, -1000, -1000, -1000, 45228,
	1191, 110441, 31948, -1000, 3656, 3292, -1000, -1000, -1000, -1000,
	-1000, -1000, 110441, -1000, 45228, 1188, -1000, -1000, -1000, 3623,
	2270, 23359, 2270, -1000, 2270, 3330, 1164, 110441, 68282, 88893,
	-1000, 2403, 2403, 73235, 55797, -1000, -105, 1027, 3485, 2688,
	3655, -1000, -1000, -1000, -1000, 2581, -1000, -1000, 110441, 2580,
	1016, -1000, -210, -1000, 909, 903, 75385, 1001, 989, -1000,
	-1000, -1000, -1000, 552, 3483, -1000, 3621, 599, 596, 110441,
	2330, 595, 23359, 3286, 884, 74315, -1000, 3174, 1879, -1000,
	2379, 110441, 3278, -1000, 2617, 592, -1000, 1014, 591, 590,
	2415, 2415, -211, 53612, 53612, -212, 589, 1014, -1000, -219,
	-1000, -1000, -1000, -1000, -118, -1000, 887, 881, -1000, -1000,
	88893, 88893, 45228, 45228, -1000, 6322, 6322, 6322, -1000, 327,
	-1000, -1000, 2229, 3363, -1000, -121, 116899, 116870, 4884, 49204,
	64503, -221, -1000, -1000, 110441, 121138, -148, -1000, 121138, 586,
	584, 426, -1000, -1000, -1000, 554, -1000, -1000, 3654, -1000,
	98561, 110441, -1000, 3481, 110441, 98026, 110441, -1000, 1520, -1000,
	-1000, -1000, 110441, 2382, -1000, -1000, -1000, 1114, 45228, 5817,
	571, 45228, -1000, 3479, -1000, 2670, 2881, 2033, 53612, -1000,
	3307, -1000, 16023, -1000, 1106, 1973, -1000, -1000, 121138, 3330,
	53612, -1000, -1000, 570, 565, 121138, 564, 901, 2900, -1000,
	-1000, -1000, -1000, 121138, 563, 3450, -1000, -1000, -1000, -1000,
	2270, 88893, -1000, -1000, -1000, -1000, -224, -1000, -1000, 2043,
	120, 2130, 2764, -1000, 2295, 561, -1000, -1000, 2296, 2636,
	-1000, 97491, 31380, 31380, 324, 3473, 989, -1000, 3560, -1000,
	3472, 120, -1000, 3618, 53612, -1000, 88893, 53612, 2315, 2084,
	2507, 74315, -1000, 2523, -1000, -1000, -226, 110441, 1879, -1000,
	-1000, 73235, 73235, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1106, -229, -231, -1000, 73235, -1000,
	-1000, 2388, -1000, 110441, -1000, 110441, -1000, -1000, -232, -234,
	-1000, 2219, 45228, 30812, -1000, -1000, 4884, -237, -1000, -176,
	-1000, 3469, 46932, 3651, 3650, 3648, -1000, -1000, -1000, 1944,
	-1000, 110441, -1000, -1000, 1938, -1000, -1000, -1000, 3079, 2798,
	15450, 2479, 110441, 15409, -1000, 2878, -1000, -1000, 2688, 558,
	-1000, -1000, -1000, -1000, 958, 110441, 2688, 2796, 88893, 1113,
	-239, 2141, 2141, 45228, 30244, 2149, 45228, -1000, -1000, 3330,
	-1000, 2831, 3598, -1000, 1001, -1000, 2146, 110441, -1000, 3323,
	-1000, 3235, -1000, -1000, -1000, 2705, 120, -1000, -1000, 120,
	-1000, 128, -242, 1111, -247, 88893, 1937, -1000, 884, -1000,
	2560, 1042, -1000, -1000, -253, -254, 2033, 1106, 2123, -255,
	-1000, -256, -261, -1000, -1000, 109, 46364, 46364, 46364, -179,
	-194, -1000, 110441, 556, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3053, 1026, -1000, 2302, 1967, 6, 1124, -1000, -1000,
	2123, 110441, -1000, -1000, -1000, 1025, 552, -1000, 45228, 1106,
	-262, -1000, 1085, -263, -1000, 1081, -264, -1000, 2859, -1000,
	-270, 2270, 1018, 3424, -1000, -1000, -1000, 2296, 88893, -271,
	-1000, -1000, 2438, -1000, 2688, 1016, -1000, -1000, 1106, 551,
	2033, 526, 1567, 884, -1000, -1000, 1461, 3286, 3199, 1014,
	1014, 2688, 2033, 1012, -1000, 1014, -1000, -1000, -1000, 3090,
	-1000, 50340, 2288, 1874, 119186, 3090, 3090, -1000, -1000, 110441,
	3414, -1000, 2312, 2303, 1536, -1000, -1000, -1000, -1000, -1000,
	-1000, 2837, -277, 3412, 2479, 121138, 2688, -1000, 2141, 2763,
	-1000, 2141, 2858, -1000, 2145, -1000, -1000, -1000, 1818, 3574,
	2051, 525, -1000, 110441, 1841, 1836, 3645, 2130, 2296, 2033,
	53612, 2688, 53612, -1000, -1000, 110441, -1000, 2084, 1350, -1000,
	-1000, 2123, 2688, 1042, 514, -1000, -1000, 1954, 3520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 882, -1000, 3216,
	-1000, 1133, 2069, 2069, 1042, -1000, 880, 2302, -1000, -1000,
	513, -1000, 512, -1000, 2234, -1000, -1000, -1000, -1000, 110441,
	-1000, -1000, 3642, -1000, 1001, -1000, 2688, -279, 2123, -280,
	-1000, -249, 1937, -1000, 1685, 1012, 2123, -1000, 1867, -1000,
	-1000, 2216, 45796, 45228, -1000, 3543, -1000, -1000, 2539, -1000,
	-1000, 45228, 2837, 45228, 45228, 60195, -286, -1000, 2296, 2123,
	1106, 1012, 2033, 1567, 61812, 1042, 1012, -1000, -1000, -1000,
	121138, -1000, -1000, -1000, 121138, -1000, -293, -294, -276, 96951,
	2253, 2051, 1012, 2033, 1042, 2688, -1000, -272, -1000, 1042,
	2123, 1184, -301, -1000, -1000, -1000, -1000, 1042, 2688, -1000,
	2123, -1000, -1000, -1000, -1000, 511, -1000, -1000, 2123, 1012,
	45228, 1012, 1042, -304, 1042, -1000, 2123, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4474, 4471, 4470, 4469, 4467, 4466, 4464, 4463, 4462,
	4461, 4460, 4456, 4455, 4454, 4453, 4451, 4450, 4448, 4447,
	4444, 4441, 4440, 4436, 4435, 4434, 4433, 4432, 4431, 4430,
	4428, 4427, 4426, 4423, 4421, 4420, 4417, 4416, 4413, 4409,
	4408, 4407, 4406, 4405, 4404, 4403, 4400, 4395, 4390, 4387,
	4386, 4383, 4379, 4377, 4376, 4375, 4374, 4373, 4370, 4369,
	4368, 4367, 51, 4366, 4364, 4362, 4360, 4359, 4358, 4355,
	4354, 4352, 4349, 4348, 4339, 4337, 4331, 4330, 4329, 4327,
	4325, 4324, 55, 4323, 259, 4321, 4320, 4312, 4310, 4309,
	4305, 4304, 4302, 4301, 4300, 4299, 4289, 258, 4286, 149,
	4284, 4282, 4281, 4280, 4278, 256, 4276, 4275, 4273, 4266,
	269, 4265, 4264, 4261, 4260, 4259, 4258, 4257, 4253, 4250,
	4249, 4247, 86, 195, 4244, 4241, 121, 4239, 4238, 4235,
	4230, 4228, 4225, 4222, 4219, 4218, 4216, 233, 4215, 255,
	4214, 4212, 4211, 4209, 4207, 4206, 4205, 4204, 4198, 4197,
	4194, 4192, 4190, 4189, 4188, 4186, 4185, 4184, 4180, 4178,
	4177, 4176, 4175, 4173, 4171, 4170, 4168, 4166, 4165, 4164,
	4163, 4161, 4159, 4156, 4152, 4148, 226, 266, 170, 4144,
	4143, 254, 250, 4128, 4127, 4119, 4111, 4109, 113, 12,
	248, 4106, 4104, 111, 90, 87, 84, 93, 91, 4102,
	101, 4101, 128, 66, 4100, 17, 2, 160, 228, 6790,
	221, 4098, 4096, 4093, 241, 180, 4091, 220, 4090, 4089,
	4085, 4080, 56, 50, 162, 156, 161, 152, 262, 4079,
	144, 95, 69, 52, 43, 15, 76, 245, 23, 4078,
	243, 7, 126, 5, 36, 4077, 4074, 4071, 4070, 3364,
	108, 4068, 252, 224, 147, 4067, 4066, 4065, 299, 4064,
	4063, 46, 4062, 315, 114, 116, 172, 109, 4061, 135,
	33, 4058, 163, 59, 4057, 142, 92, 81, 10073, 10877,
	4056, 140, 60, 187, 626, 191, 153, 183, 223, 145,
	146, 189, 205, 204, 151, 63, 4055, 235, 4054, 3484,
	71, 167, 4053, 4052, 4050, 85, 192, 94, 4048, 4047,
	62, 11, 3, 1, 9, 120, 24, 21, 16, 4046,
	39, 106, 45, 32, 4044, 26, 4042, 4040, 4039, 4037,
	4033, 41, 148, 4032, 268, 4031, 80, 49, 22, 4027,
	30, 198, 4025, 211, 118, 4024, 4023, 238, 188, 169,
	4020, 68, 212, 4019, 4018, 4017, 4014, 4011, 117, 8,
	115, 4010, 4009, 133, 4007, 47, 231, 179, 4005, 54,
	4004, 4002, 155, 100, 123, 263, 136, 209, 104, 206,
	173, 216, 3999, 3998, 3996, 171, 3994, 3993, 202, 139,
	3992, 3988, 186, 270, 82, 44, 77, 215, 75, 182,
	158, 3986, 193, 3985, 3984, 261, 166, 197, 13, 4,
	99, 119, 3982, 6, 219, 137, 229, 89, 3980, 5527,
	1943, 2600, 3979, 3978, 138, 107, 64, 110, 141, 246,
	79, 3977, 3976, 2622, 3975, 3974, 3973, 3971, 175, 3970,
	3968, 3967, 129, 165, 218, 3965, 83, 61, 48, 19,
	127, 232, 257, 103, 203, 159, 242, 3962, 3959, 3958,
	177, 3956, 78, 154, 3955, 184, 237, 53, 3953, 164,
	3952, 130, 592, 65, 134, 3951, 207, 3949, 3948, 3947,
	3945, 3944, 3937, 3935, 210, 214, 3931, 3928, 3927, 58,
	181, 3925, 244, 157, 190, 97, 57, 3924, 105, 3888,
	3920, 176, 96, 70, 247, 297, 249, 3919, 3987, 72,
	3918, 0, 12461, 6174, 9172, 11583, 3917, 3960, 3915, 3911,
	3909, 199, 122, 3907, 3902, 3899, 102, 3898, 73, 3894,
	3893, 67, 3886, 27, 20, 18, 31, 28, 201, 174,
	3882, 3880, 29, 125, 131, 3876, 260, 208, 3874, 3873,
	3872, 3869, 88, 3868, 42, 3866, 38, 3863, 3862, 40,
	14, 34, 3859, 3858, 236, 3857, 200, 234, 3850, 143,
	3849, 3472, 124, 3848, 3846, 239, 112, 3845, 267, 3844,
	3422, 3841, 3839, 25, 3838, 3836, 225, 168, 196, 3834,
	3833, 150, 3832, 3831, 3830, 264, 3828, 3827, 3824, 37,
	3822, 10, 3821, 3820, 194, 3234, 3819, 3818, 35, 3815,
	178,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 16, 16,
	36, 36, 17, 17, 38, 38, 18, 18, 39, 39,
	575, 575, 21, 41, 22, 42, 15, 576, 576, 576,
	576, 34, 23, 43, 27, 27, 27, 27, 27, 191,
	191, 191, 191, 20, 20, 37, 37, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 574, 574, 227, 227, 226, 221, 221,
	577, 577, 228, 228, 228, 230, 230, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 473, 473, 473,
	506, 506, 505, 505, 505, 504, 504, 590, 590, 591,
	591, 591, 591, 591, 125, 125, 371, 371, 371, 51,
	51, 51, 51, 51, 569, 569, 193, 193, 193, 195,
	195, 194, 194, 194, 194, 73, 73, 582, 582, 583,
	583, 581, 584, 584, 584, 192, 192, 192, 121, 121,
	121, 121, 121, 121, 122, 122, 123, 123, 196, 196,
	196, 198, 198, 197, 197, 197, 197, 197, 197, 197,
	197, 202, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 508, 508, 509, 509, 187, 187, 188,
	188, 188, 188, 189, 189, 190, 190, 190, 65, 199,
	199, 201, 201, 200, 200, 200, 200, 200, 53, 53,
	53, 53, 53, 53, 53, 54, 54, 54, 54, 54,
	55, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 63, 63, 63, 63, 178, 178, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 70,
	70, 70, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 593, 593, 594, 594, 595, 595, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 79, 79, 333, 333, 298, 298,
	80, 80, 80, 81, 81, 82, 82, 67, 67, 567,
	567, 348, 348, 464, 464, 84, 84, 370, 370, 85,
	85, 85, 85, 85, 85, 86, 86, 86, 86, 86,
	86, 86, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 94, 94, 94, 94,
	94, 95, 95, 95, 92, 92, 92, 89, 89, 89,
	88, 88, 88, 93, 93, 93, 566, 287, 287, 91,
	91, 91, 90, 90, 90, 349, 349, 96, 96, 96,
	96, 299, 97, 97, 97, 97, 97, 97, 97, 97,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 466, 466, 98, 98, 98, 431, 431,
	102, 102, 102, 386, 386, 103, 103, 103, 103, 103,
	104, 104, 104, 104, 104, 104, 124, 124, 124, 124,
	124, 124, 571, 571, 341, 341, 252, 252, 252, 252,
	114, 114, 114, 114, 115, 115, 115, 116, 116, 183,
	183, 131, 131, 131, 131, 131, 130, 130, 130, 130,
	130, 130, 57, 57, 57, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 62, 62, 62, 133, 133,
	587, 587, 135, 132, 132, 132, 134, 134, 134, 134,
	136, 137, 137, 137, 137, 137, 137, 137, 137, 138,
	138, 498, 498, 357, 357, 496, 496, 518, 518, 497,
	497, 303, 303, 303, 303, 303, 304, 304, 304, 507,
	507, 507, 507, 507, 507, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 184, 184, 185, 186, 186, 186, 186, 186,
	162, 162, 162, 177, 177, 177, 177, 177, 177, 177,
	165, 165, 165, 149, 149, 140, 140, 140, 140, 140,
	140, 140, 144, 144, 144, 144, 144, 144, 144, 144,
	141, 141, 151, 151, 151, 151, 151, 145, 145, 146,
	146, 146, 146, 172, 172, 148, 148, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 142, 142, 142, 142,
	153, 153, 153, 153, 393, 393, 393, 176, 176, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	175, 175, 175, 175, 175, 175, 585, 585, 586, 586,
	169, 169, 169, 169, 169, 169, 445, 445, 163, 163,
	163, 163, 168, 168, 168, 168, 171, 171, 171, 171,
	376, 376, 160, 160, 160, 161, 161, 161, 166, 166,
	167, 164, 164, 170, 170, 170, 170, 143, 143, 143,
	143, 597, 597, 597, 173, 173, 159, 159, 174, 174,
	174, 174, 174, 174, 174, 174, 598, 598, 155, 155,
	155, 154, 154, 154, 154, 157, 157, 158, 158, 158,
	158, 158, 158, 156, 147, 568, 568, 564, 564, 564,
	564, 564, 564, 564, 564, 565, 565, 565, 565, 570,
	570, 107, 107, 107, 107, 107, 117, 117, 117, 117,
	117, 108, 108, 108, 108, 108, 110, 110, 109, 109,
	109, 109, 74, 74, 74, 74, 74, 14, 14, 14,
	75, 75, 243, 243, 205, 205, 205, 322, 322, 206,
	206, 311, 311, 311, 311, 203, 203, 204, 204, 76,
	76, 599, 599, 599, 578, 578, 578, 579, 579, 579,
	579, 579, 579, 305, 305, 306, 306, 411, 411, 411,
	411, 411, 309, 309, 309, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 312, 312, 229, 229, 229, 320,
	321, 321, 313, 313, 319, 318, 318, 317, 317, 316,
	316, 314, 315, 315, 315, 324, 324, 323, 326, 326,
	325, 410, 527, 527, 529, 529, 529, 529, 529, 529,
	529, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 394, 394, 600, 600, 525, 525, 525,
	526, 521, 521, 522, 522, 522, 522, 522, 307, 307,
	308, 308, 308, 308, 523, 524, 339, 339, 449, 528,
	528, 530, 530, 532, 601, 601, 601, 601, 601, 601,
	602, 602, 602, 409, 409, 408, 408, 331, 331, 533,
	533, 533, 533, 534, 534, 534, 534, 534, 537, 536,
	535, 535, 535, 535, 535, 78, 78, 78, 373, 373,
	372, 372, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 180, 180, 255,
	255, 72, 72, 72, 12, 12, 12, 580, 580, 580,
	77, 77, 77, 77, 77, 77, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 573, 573, 572, 572,
	256, 256, 604, 604, 83, 83, 83, 83, 83, 83,
	83, 83, 467, 467, 468, 468, 71, 71, 71, 71,
	71, 395, 395, 392, 392, 391, 391, 338, 338, 447,
	447, 447, 448, 260, 260, 261, 261, 222, 222, 222,
	29, 28, 19, 19, 24, 24, 25, 25, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 26,
	26, 45, 45, 45, 45, 46, 46, 46, 46, 49,
	49, 50, 50, 44, 44, 44, 44, 47, 47, 40,
	40, 588, 588, 589, 589, 113, 113, 118, 118, 118,
	118, 118, 119, 119, 119, 119, 120, 120, 120, 120,
	129, 129, 179, 179, 179, 179, 179, 179, 179, 52,
	52, 52, 52, 64, 64, 64, 64, 127, 606, 606,
	606, 128, 128, 128, 605, 605, 253, 253, 405, 405,
	406, 406, 607, 607, 407, 407, 407, 407, 407, 246,
	245, 247, 247, 248, 248, 69, 69, 69, 238, 238,
	237, 235, 235, 510, 510, 240, 240, 240, 241, 241,
	231, 231, 232, 232, 233, 233, 234, 234, 244, 244,
	608, 608, 105, 105, 105, 182, 182, 297, 297, 297,
	402, 402, 402, 332, 332, 267, 267, 404, 404, 404,
	404, 369, 369, 369, 181, 181, 346, 346, 359, 359,
	360, 360, 461, 461, 361, 111, 111, 112, 112, 126,
	126, 209, 209, 207, 207, 207, 207, 207, 207, 207,
	207, 214, 214, 215, 215, 216, 216, 217, 218, 218,
	218, 218, 350, 350, 219, 219, 219, 208, 208, 208,
	210, 210, 210, 210, 210, 210, 210, 213, 213, 213,
	213, 220, 220, 220, 212, 212, 544, 544, 544, 546,
	546, 548, 548, 547, 547, 543, 543, 545, 545, 603,
	603, 375, 375, 375, 329, 330, 327, 327, 328, 328,
	336, 336, 334, 335, 335, 337, 337, 446, 446, 446,
	223, 223, 223, 366, 366, 366, 366, 367, 367, 398,
	398, 396, 396, 396, 396, 397, 397, 399, 399, 399,
	400, 400, 401, 401, 363, 363, 364, 364, 365, 365,
	365, 365, 427, 427, 211, 211, 211, 343, 343, 343,
	344, 344, 417, 417, 417, 417, 417, 417, 418, 418,
	416, 416, 416, 416, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 451, 452, 452, 345, 345, 453, 403,
	403, 562, 562, 562, 563, 563, 444, 444, 454, 454,
	454, 454, 454, 454, 442, 442, 443, 443, 462, 463,
	463, 379, 379, 379, 379, 377, 377, 380, 380, 380,
	380, 380, 378, 378, 455, 455, 455, 455, 368, 368,
	456, 456, 456, 456, 457, 458, 458, 459, 459, 412,
	413, 413, 469, 469, 469, 469, 471, 342, 342, 342,
	342, 342, 520, 519, 519, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 486, 486, 486, 486,
	486, 486, 486, 472, 472, 472, 472, 472, 476, 476,
	476, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 477, 477, 482, 482, 483, 483, 483, 478,
	479, 484, 484, 484, 484, 609, 609, 488, 488, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 474, 474,
	474, 481, 481, 481, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 387, 387, 389,
	389, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 421, 421,
	421, 421, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 538, 538, 538,
	538, 538, 538, 538, 538, 423, 423, 541, 541, 542,
	542, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	549, 549, 550, 550, 552, 552, 553, 553, 554, 555,
	555, 555, 556, 557, 557, 551, 551, 558, 558, 558,
	558, 559, 559, 560, 560, 560, 560, 560, 561, 561,
	561, 561, 561, 433, 433, 434, 434, 440, 440, 440,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 257, 257, 257, 257,
	257, 355, 355, 353, 353, 353, 356, 356, 354, 354,
	352, 352, 351, 351, 430, 430, 428, 428, 432, 432,
	381, 381, 487, 487, 487, 487, 487, 487, 487, 487,
	382, 382, 382, 390, 383, 383, 384, 384, 384, 384,
	384, 424, 425, 385, 385, 385, 426, 426, 435, 439,
	439, 438, 437, 437, 436, 436, 414, 414, 415, 415,
	362, 362, 610, 610, 358, 358, 460, 460, 460, 460,
	301, 301, 347, 347, 300, 300, 292, 292, 293, 293,
	293, 293, 340, 340, 441, 441, 489, 489, 490, 490,
	491, 491, 492, 492, 493, 494, 495, 429, 429, 277,
	276, 264, 265, 275, 274, 273, 263, 266, 270, 271,
	272, 268, 269, 283, 282, 281, 236, 239, 288, 289,
	289, 291, 291, 290, 290, 279, 280, 465, 262, 294,
	294, 295, 295, 295, 296, 296, 296, 296, 258, 258,
	259, 259, 284, 284, 285, 286, 286, 278, 278, 278,
	249, 249, 249, 250, 250, 251, 251, 503, 503, 500,
	500, 500, 501, 501, 501, 502, 502, 502, 502, 499,
	499, 499, 499, 499, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 512,
	512, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 514,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 7, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 6,
	3, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 2, 6, 4, 7, 7,
	7, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 6, 4, 4, 5, 5, 7, 3,
	3, 4, 4, 6, 3, 6, 7, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 12, 15, 3, 1, 0,
	4, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 582, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 101, 81, 154,
	128, 137, 200, 378, 420, 431, 392, 142, 412, 397,
	-134, -135, 448, -52, -64, -128, -127, 74, 129, 406,
	-4, -12, 30, 47, -54, -55, -56, 63, -72, -68,
	-79, -73, -70, -592, 103, -545, -87, -90, -120, -596,
	161, 218, -108, -109, 361, -115, -116, 414, -118, -119,
	416, 162, -59, -58, 156, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 453, -167, 513, 50, 467,
	83, 146, 424, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	413, -210, -208, 579, 528, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 548, 557, -213, -211, -212, -220, 440, 536, 487,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 168, 227, 325, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 50, 54, 56, 60, 61,
	62, 63, 64, 65, 69, 74, 75, 80, 81, 82,
	83, 84, 85, 86, 92, 89, 90, 91, 93, 95,
	97, 98, 99, 100, 101, 102, 104, 105, 106, 108,
	109, 110, 118, 119, 120, 121, 123, 128, 129, 132,
	127, 131, 133, 135, 136, 137, 140, 141, 142, 144,
	145, 147, 148, 149, 151, 152, 154, 155, 156, 159,
	157, 495, 158, 160, 161, 162, 163, 166, 174, 175,
	176, 181, 183, 187, 188, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 201, 205, 207, 208, 209, 210,
	211, 217, 218, 220, 221, 222, 223, 228, 229, 230,
	234, 231, 240, 241, 245, 246, 247, 249, 253, 254,
	255, 256, 257, 258, 260, 262, 261, 264, 267, 268,
	271, 275, 276, 280, 281, 277, 282, 283, 285, 286,
	289, 287, 290, 291, 288, 292, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 293, 308,
	306, 310, 311, 312, 323, 321, 316, 317, 313, 318,
	314, 315, 319, 320, 327, 328, 331, 215, 333, 334,
	337, 355, 341, 342, 343, 346, 347, 350, 353, 354,
	356, 357, 358, 359, 360, 361, 362, 363, 365, 366,
	368, 369, 370, 372, 373, 374, 376, 378, 379, 381,
	382, 384, 385, 386, 387, 388, 389, 390, 392, 394,
	393, 395, 397, 399, 400, 401, 406, 412, 408, 409,
	410, 411, 413, 414, 415, 416, 418, 419, 420, 422,
	423, 424, 425, 427, 429, 430, 433, 434, 450, 451,
	469, 431, 432, 435, 436, 437, 438, 439, 443, 441,
	442, 444, 445, 446, 448, 449, 452, 453, 455, 456,
	457, 458, 459, 460, 463, 465, 466, 467, 486, 468,
	470, 473, 474, 475, 476, 477, 471, 485, 479, 480,
	482, 483, 488, 489, 490, 491, 492, 493, 494, 496,
	498, 506, 507, 508, 510, 513, 514, 515, 516, 504,
	518, 519, 522, 523, 524, 527, 525, 526, 528, 530,
	533, 534, 535, 541, 540, 542, 549, 550, 552, 553,
	554, 37, 51, 52, 55, 57, 59, 70, 71, 72,
	76, 124, 125, 153, 164, 165, 177, 189, 190, 202,
	204, 212, 213, 214, 235, 236, 238, 243, 265, 330,
	332, 348, 352, 367, 371, 375, 377, 391, 426, 461,
	472, 478, 499, 500, 501, 502, 509, 511, 536, 537,
	538, 543, 551, -299, 2, -279, 339, -272, 2, -249,
	-249, 378, 29, 2, 29, 366, 442, 490, 492, 2,
	-571, -341, 2, 29, -252, -249, 103, 200, 440, -272,
	2, -571, -341, 25, 2, -249, 2, 353, 22, 28,
	67, 78, 99, 140, 163, 184, 187, -595, 355, 385,
	429, 444, 485, 496, 510, 2, 540, 286, 441, 487,
	227, 120, 515, 435, -580, 433, 434, 353, 383, 422,
	203, 529, -253, 2, 431, -249, 286, 2, 582, 95,
	276, 75, 426, 445, -137, 507, -136, 499, 435, -138,
	-498, 2, 308, -249, 582, 582, 582, 29, -262, -249,
	487, 227, 435, 120, 483, 582, 2, 487, 358, 540,
	441, 120, 388, 227, 515, 435, -580, 286, -569, 2,
	-564, 4, -515, -511, -293, -292, 487, 493, 120, -286,
	-278, 572, -285, 582, 582, 582, 2, 246, 247, 387,
	386, 445, 446, 582, 582, 582, 582, 433, 2, 163,
	22, 28, 67, 94, 99, 126, 184, 187, 344, -593,
	355, 385, 444, 485, 489, 496, 510, -579, 468, 69,
	435, -578, -580, 286, 515, 140, -391, 120, 276, 198,
	523, 492, 490, 521, 132, 234, 526, 525, 582, 582,
	-99, 2, 579, 33, 32, 142, 448, -202, 487, 239,
	2, -249, 582, 582, 2, 246, 247, 433, 434, 582,
	582, 185, -564, 2, 582, 582, 2, 246, 247, 433,
	434, 239, 2, 69, 437, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 2, -177,
	445, 468, 209, 48, 47, 75, 29, 384, 80, 359,
	121, 148, 516, 201, 227, 228, 254, 94, 95, -393,
	45, 247, 246, 434, -585, 433, -445, 488, 436, 442,
	482, 258, 431, 507, 103, 530, 423, 554, 388, 389,
	480, 401, 277, 157, 4, 120, 308, 447, 499, 276,
	430, 362, 85, -603, 2, 487, -605, 2, 507, 507,
	2, -605, 2, -605, 2, -605, 2, -606, 507, 551,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, -208, -210, -209,
	582, 582, 582, 582, 582, 582, 582, -177, 445, 2,
	75, 29, -334, -336, 520, 237, 150, 345, -207, -209,
	2, -544, -496, 2, -419, -518, -421, 570, 571, 563,
	484, 68, 324, 555, -433, 126, 521, 339, -517, -422,
	-435, 153, 426, -356, 8, 9, 5, 6, 7, -258,
	-423, -429, 512, 167, 329, -296, 583, 10, 579, -541,
	-209, -434, 38, 204, 66, -500, -295, -259, -472, 238,
	-294, -278, -538, -539, 4, -511, -512, -501, -475, -483,
	-479, -480, -486, -249, -514, 78, 112, 113, 111, 116,
	115, 279, 278, 117, 114, 447, 529, 67, 37, 212,
	213, 243, 330, 214, 76, -540, 141, -513, 235, 236,
	461, 52, 391, 177, 125, 124, 332, 57, 55, 537,
	-484, 122, 499, 500, 501, 502, 189, 190, 59, 164,
	165, 352, 375, 478, 509, 511, 202, 265, 44, 107,
	186, 233, 216, 242, 244, 248, 266, 269, 309, 322,
	326, 349, 351, 421, 454, -609, 538, 472, 70, 71,
	-546, 393, -547, -272, -546, 582, 582, 584, 582, -327,
	-329, -330, 2, 29, 138, 579, 2, -450, 2, -451,
	-455, -209, 259, -454, 579, -452, 577, -279, 340, -542,
	427, -538, -539, -258, -278, -295, 4, -511, -513, 581,
	-331, 579, 120, 487, 79, 227, -386, 579, -249, 29,
	339, 503, 584, -328, 382, -431, 579, 339, 185, 342,
	61, 290, 2, 2, 2, 2, 2, 212, -249, 487,
	119, 2, 257, 2, 2, 2, 2, 2, 2, 2,
	-349, 212, 2, -279, 540, -349, 212, 2, -349, 212,
	2, -392, 2, 88, -263, 212, 2, -249, -287, 212,
	2, -282, -284, -291, 212, 2, -289, -249, -509, 212,
	2, -508, -503, 10, -502, 5, 4, -511, -515, -512,
	-514, 78, -419, 2, -126, 2, 61, -249, 540, 2,
	2, 450, 2, 579, -137, 72, 507, 44, 445, -406,
	2, -407, -245, -246, -247, -462, -248, 245, 381, 390,
	558, 130, 324, 554, -496, -587, 185, 562, 503, -496,
	-357, 581, 2, 2, 2, 2, 2, 2, -455, 212,
	-279, 2, -276, -499, 4, -511, -515, -512, -516, 29,
	32, 33, 34, 36, 38, 39, 40, 41, 58, 66,
	67, 73, 77, 79, 88, 94, 103, 111, 112, 114,
	113, 115, 116, 117, 126, 130, 134, 138, 139, 143,
	146, 150, 167, 169, 182, 184, 185, 200, 203, 206,
	219, 232, 237, 239, 259, 263, 270, 278, 279, 324,
	329, 335, 339, 340, 344, 345, 364, 380, 396, 417,
	440, 447, 464, 481, 487, 497, 503, 505, 512, 520,
	521, 529, 531, 539, 544, 545, 546, 547, 548, -517,
	2, -455, 212, 2, -281, 212, -455, -284, 2, -263,
	2, -275, -499, 2, -300, 212, -279, -280, -284, -282,
	2, -289, 2, -508, 212, 2, 540, 239, 503, 584,
	-347, -292, -293, -495, 8, -340, -249, 581, -419, 2,
	-126, -110, 2, 182, -419, 212, 2, -126, 212, 2,
	-419, 212, 2, -126, 212, 2, -582, 2, -508, 212,
	-249, 2, 290, 2, 2, 510, 2, 99, 487, 119,
	2, 410, -594, 429, 514, 2, 2, 2, 2, 2,
	2, 2, 487, -268, 2, -249, 182, -289, 212, -290,
	2, 441, -604, 393, -508, 212, 2, 540, -282, 212,
	2, -282, 227, 241, -263, 212, 2, 492, 490, 492,
	490, 185, 2, 239, 2, 239, 2, -456, 2, -457,
	-451, -458, 577, 340, -466, 2, -465, -502, 536, -99,
	579, -99, 579, 445, 579, -508, -279, -279, -419, 2,
	-126, -110, 2, -419, 2, -126, 2, -123, -508, -122,
	579, 185, -419, 2, -126, -110, 2, -419, 2, -126,
	2, -202, 182, 2, 120, 487, -177, 2, 182, 531,
	2, 8, 2, 219, -508, 436, 389, 174, 2, 450,
	2, 451, 75, -393, 554, 75, 185, 2, 185, 2,
	-376, 2, 548, 185, 2, 2, -568, 2, 339, 185,
	2, 185, 2, 185, 2, 185, 2, 185, 2, -176,
	446, 508, 486, 386, 247, 2, -126, 545, -110, -419,
	545, 2, -586, 182, 434, -419, 2, 506, 256, 158,
	185, -376, 2, 185, 2, 185, 2, 5, 2, 387,
	469, 2, 245, 381, 469, 2, -279, -597, 29, 2,
	487, 540, 441, 2, 2, 89, 90, 185, 2, 185,
	2, 199, 185, 2, 185, 554, 2, -368, -455, -405,
	-406, -405, 503, -334, -336, -177, 450, 2, -214, -366,
	-216, 182, -396, -397, -217, 270, 169, 335, -218, -375,
	29, 138, -375, -375, 61, 580, 580, 11, 12, 77,
	42, 570, 571, 572, 573, 180, 574, 575, 568, 569,
	567, 560, 561, 565, 251, 252, 96, 564, 562, 87,
	284, 428, 170, 171, 172, 173, 407, 225, 35, 226,
	14, 15, 16, 34, 344, 269, 555, 216, 454, 563,
	17, 18, 19, 242, 244, 326, 51, 219, -257, -302,
	-419, -419, -419, -419, -419, -419, -419, 351, 579, -362,
	-414, 577, -209, 579, 579, 579, -495, -209, -419, -433,
	580, -354, 579, -209, -433, -428, 579, 426, 577, 579,
	-436, -419, 5, 5, 5, 579, 581, -549, 549, 182,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 377, -477, 579, -476, 579,
	-476, -476, 541, -474, 579, 557, 550, 579, -474, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 541, 584, -546, -331, 579, -358, -460, -419,
	572, -358, -358, 339, -351, -419, 107, -379, 248, 309,
	186, 266, 421, 233, -416, 583, -416, -444, 557, -209,
	-452, -278, -209, -454, 579, -450, -444, -100, -495, -84,
	-97, -105, -126, -139, -181, -182, 572, -279, 579, 185,
	579, 581, -499, 185, -340, -263, -279, -294, -295, -300,
	137, -351, -564, 515, 435, -340, -252, 39, -430, -469,
	-470, -520, 583, -519, -472, -482, -478, -481, 367, 371,
	-501, 55, 537, -484, 238, 4, -511, -513, 235, 236,
	461, 52, 391, 177, 125, 124, 332, 57, 499, 500,
	501, 502, 189, 190, 59, 538, 472, 70, 71, -564,
	515, 435, -340, 182, -506, 2, -505, -504, 117, 447,
	-502, 5, 2, 153, 2, 2, 2, -249, -228, 584,
	65, 415, 153, -349, 212, -228, 153, -228, 153, -301,
	212, -300, -228, 153, -228, 584, 153, -228, 584, 153,
	581, 584, 153, -506, 2, -392, -498, -351, 39, -406,
	2, 126, -504, -607, 584, 268, -304, 283, 323, 208,
	340, 552, 333, 130, -507, 5, 4, -429, -441, 126,
	276, 238, -489, -491, 8, -490, 9, -492, 570, 571,
	-497, -496, 110, 581, -499, -225, 408, 448, 354, -224,
	24, 30, 142, 229, 312, 534, 159, -317, 230, -314,
	358, 153, 465, 524, -575, -576, 432, 494, 495, 91,
	333, 448, 354, 408, 153, -372, -374, 39, 118, 312,
	353, 62, 222, 288, 289, 467, 543, 153, 448, 354,
	408, 354, 24, 142, -240, -237, -576, 100, 408, 479,
	380, -576, -227, 465, 524, -575, -576, 432, 408, -226,
	-319, -314, 358, 153, 583, 24, 142, 408, 448, 354,
	-590, -591, 30, 408, 354, -572, -543, 548, 153, -455,
	212, -583, -122, 260, 5, 10, -508, -122, -347, 584,
	584, -499, 572, 434, 433, 153, 153, 153, 153, 182,
	324, 2, 2, 2, 2, 2, 187, -578, -595, 2,
	2, -279, 212, -333, 339, -567, -348, 487, -279, 324,
	44, -281, 212, 2, -284, 540, -572, 324, -283, 212,
	-279, 39, 579, 324, 2, -392, 2, 227, -543, 324,
	-456, -297, -279, -451, -297, 448, -272, 39, -416, -279,
	580, 584, -466, -466, -508, -190, 548, 185, 103, 579,
	579, -202, -463, 584, -462, 219, -509, -123, -508, 411,
	-508, -567, -263, 2, -279, 2, 487, 249, -508, -190,
	219, -508, -508, -508, -498, 29, 451, 2, -176, 446,
	508, 90, 451, 2, -279, 487, 120, 227, 81, -249,
	-570, 182, -565, 422, 435, 515, -564, -279, 120, -279,
	120, -279, 120, -279, -279, 2, 2, 2, 2, 2,
	86, 86, 2, 47, -586, 182, 2, 506, 2, 506,
	2, -249, -249, -249, 468, 268, -279, 488, -598, 185,
	182, 487, 227, 487, 227, 120, 185, 75, 120, 29,
	487, -228, 584, -253, -214, -366, -498, -367, -366, -215,
	-214, -217, 182, 390, 525, 312, 452, 253, -397, -396,
	29, -419, -401, 176, 311, -419, -399, -421, 570, 571,
	-490, -492, -350, 333, -208, -208, -208, -337, -446, -419,
	380, 227, -471, -469, -469, -277, -499, 499, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, 269, 216, 454, 51, 219, -419, 503,
	-419, -419, -419, -419, 306, 324, 329, 512, 167, 522,
	138, 333, -610, 481, 41, -426, -209, -355, 579, -440,
	36, 464, 29, -433, 579, 2, -414, -419, -415, -352,
	-351, -351, 580, 539, 29, 138, 572, 2, 580, 584,
	39, 580, -419, -352, -432, -428, -351, -439, -438, 545,
	-387, -388, 553, 293, 123, 210, 291, -389, 439, -493,
	8, -499, 572, -550, 175, 203, 579, 580, 2, 580,
	2, 580, -419, 2, 580, -419, 2, 580, -419, 2,
	580, -419, 2, 580, 2, -419, -419, -419, -419, -419,
	-419, -419, -351, 8, -493, -493, 499, 499, -493, -493,
	-493, -485, 367, 368, 369, 370, 271, 272, 273, 274,
	371, 372, 373, 374, 298, 299, 300, 301, 294, 295,
	296, 297, 302, 303, 304, 305, 194, 195, 196, 197,
	190, 191, 192, 193, -485, -381, 2, -487, -351, 4,
	553, 293, 123, 210, 291, 439, 5, -381, 2, -382,
	2, -419, -351, -383, -420, -421, 570, 571, 563, -433,
	-384, 2, -419, -352, -419, 58, 263, 505, -385, -419,
	185, -351, -351, 2, -351, 2, -547, 39, -351, -343,
	584, 185, 39, 4, -343, -343, 579, 580, 584, -380,
	207, 287, 282, 241, -380, -450, -379, 248, -377, 349,
	-377, -377, -444, -264, 577, 585, -499, -444, -443, -442,
	39, -272, 346, -444, -444, 581, 580, -443, 578, -562,
	579, 582, 582, 582, 582, 582, -279, 579, -351, -499,
	581, 470, 580, 242, 242, 242, 242, 427, 580, 503,
	-566, -287, -291, 548, -99, 341, 580, 584, -342, 38,
	577, 581, -493, 2, 2, -488, 541, 579, 579, -388,
	579, 185, -566, -291, -341, 584, 503, -249, 2, -279,
	-349, -228, 153, -349, -349, -228, 584, 153, -263, -282,
	-287, -289, -291, -249, -508, -509, -228, -283, -587, 580,
	507, -407, -303, 390, 463, 409, 443, 483, 8, 9,
	8, 9, 584, -499, 584, -588, 94, 503, 79, 435,
	-242, 277, 400, 312, 487, 426, 503, -410, 212, 79,
	-521, -266, 94, -522, -249, 73, 521, 380, 184, 151,
	-588, 94, 380, -588, 94, 2, 229, 94, 448, 468,
	29, 61, -455, 42, 42, 29, -126, 264, 185, 554,
	487, 227, 435, 503, 503, -455, -374, -469, 118, 288,
	289, 61, -494, -489, 570, 571, -494, 61, -494, -494,
	-494, 548, -281, -455, 435, 503, 503, 503, 399, 399,
	503, 503, -608, 562, 399, 584, 42, 42, 29, -126,
	264, 185, 503, -300, -264, 535, 43, 535, 43, 535,
	503, 43, 435, 503, 584, 43, 503, 503, -573, -254,
	106, 318, 281, 319, 98, 315, 97, 314, 104, 316,
	105, 317, 542, 327, 64, 313, 292, 320, -255, -256,
	360, 533, -508, 448, 354, 408, 153, 219, -463, 219,
	-463, -292, -249, 581, -126, -419, -419, -126, -419, -126,
	47, 153, 2, -604, 257, 579, -307, 324, 185, -340,
	-464, 239, 584, -348, 153, -505, -373, -372, 324, -283,
	212, 2, 153, -331, 324, 147, 579, 388, 2, 153,
	-265, 212, -250, -249, -392, -231, 491, 153, -370, 531,
	-402, -126, 579, 126, 39, -402, -359, -360, -461, -361,
	-266, 579, -272, -416, -99, -465, 580, 580, 580, -189,
	343, -188, -249, 5, -202, 531, -306, -411, -410, -525,
	-526, -521, 269, 227, 521, 241, 168, -332, -267, -266,
	119, -196, 548, -122, -123, 580, -463, 219, 477, -190,
	-190, -463, -463, -279, 182, -508, -190, -190, -190, 2,
	2, 2, -376, -279, -263, -300, -279, 581, -340, -340,
	-291, -287, -376, -263, -376, -263, -376, -263, -126, -419,
	2, 445, 182, 182, 581, -376, 388, 120, 487, 358,
	227, -279, -300, -279, -300, -263, 120, -263, 121, -279,
	-455, -367, -215, 340, 253, 452, -399, -400, -421, 426,
	427, -400, 426, 427, 8, 9, 8, 9, -219, 456,
	328, -349, 584, -222, 40, 134, 253, -279, 554, 149,
	-419, -419, 503, -610, 481, -426, 149, -419, 306, 329,
	512, 167, 522, 138, 333, 185, 579, -420, -420, 580,
	-353, -419, -419, 578, 587, 580, -336, 584, -334, -419,
	-351, -351, 580, 581, -351, -340, 578, 578, 584, 580,
	-437, -438, 143, -419, 503, 503, 503, 503, 579, 580,
	581, -555, 350, 579, 579, -419, 580, 580, 580, 580,
	39, 584, 584, 584, 580, 584, 584, 584, 580, 580,
	580, 584, 580, 554, 554, 580, 580, 580, 580, 584,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 580, 584, 580, 185, 580, 580,
	-390, 364, 580, 11, 12, 570, 571, 572, 573, 180,
	574, 575, 568, 569, 567, 560, 561, 562, 87, 284,
	428, 14, 15, 16, 242, 219, -420, -420, -420, 580,
	-424, -425, 185, 182, 39, -385, -385, -385, 580, 185,
	-351, 580, 580, 579, -548, 286, 324, 580, -413, -412,
	546, -460, -344, 2, -450, -274, -499, -413, -413, -351,
	-419, 248, 248, -378, 531, 339, -380, -450, -443, -495,
	-418, -417, 183, 40, 134, 321, 215, -443, -272, -331,
	-443, -443, -499, -444, -444, -442, 580, -563, -495, 580,
	-345, -453, -542, -336, 581, -499, -199, -543, -178, 5,
	329, -178, -178, -178, -340, 503, 503, 25, 365, -469,
	577, 578, 8, -499, 579, -493, -493, -493, -340, 185,
	185, 185, -505, -505, 2, -228, -349, -228, -228, -300,
	-301, -228, -228, -228, -371, 548, -496, -406, 519, 84,
	390, 499, -496, -224, 408, -266, -266, -279, -288, -249,
	198, 400, 26, 400, 268, 268, -505, 324, -410, 212,
	-230, 324, -469, -273, -249, 579, -394, 550, 253, 253,
	531, -266, -273, 253, 212, -266, 212, -273, 2, -273,
	-574, 390, 334, -419, 61, -315, 275, 388, 325, -225,
	408, 448, 354, -126, -126, -126, 579, -587, 531, 137,
	-279, -300, -279, -288, -505, -283, 448, 354, 408, 322,
	-294, -494, -494, -372, 448, 354, 408, -288, -505, -281,
	-505, -236, -249, -236, 435, -263, 399, 554, 46, -608,
	-226, -126, -126, -126, 579, -264, -227, 408, 5, 212,
	-266, 5, -266, 212, 5, -249, -266, -288, -505, -591,
	24, 142, -266, -288, -505, -254, -508, 329, 527, -572,
	435, 503, 503, -455, -122, -193, 548, -122, -187, 223,
	572, -569, -249, 540, -249, -305, -308, -306, -266, -205,
	-206, 550, 548, 153, -298, -279, 577, -190, -508, -279,
	-289, -290, 153, -331, 324, -508, 39, 153, 579, 2,
	2, -282, 339, 324, -265, 212, -232, 144, -608, -263,
	-413, -344, -369, -404, 417, 339, -332, 536, -272, -369,
	-346, 584, 185, 562, 581, -332, -459, 572, -99, -99,
	-190, 584, 579, 562, 562, 579, -508, -508, 580, 584,
	-230, -279, -265, 227, 227, -271, -250, 580, 584, 581,
	579, -198, 343, -197, 145, 255, 240, 457, 458, 459,
	460, 136, -463, -196, -123, 185, 185, -60, 548, 487,
	-190, 583, -249, -376, -376, -376, 445, 445, -249, -275,
	-263, -279, -276, -300, 182, 182, -263, 525, -400, 340,
	280, -446, -223, 556, -279, 583, -419, -419, 149, 149,
	-419, -420, -420, -419, 149, 185, 579, -419, -430, 34,
	34, 580, 584, -415, -419, 580, 539, -336, -336, 580,
	572, -499, 583, 580, -428, 146, -419, 497, 293, 210,
	291, -389, 291, -389, -389, -493, 5, -499, 572, -556,
	-269, 579, -249, 546, -335, 345, 580, -471, -469, -419,
	-419, -419, -419, -419, -493, -474, -474, -489, -489, -419,
	-424, -419, -471, -469, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, 138, 324, 333, -420, -425, -424, -419,
	-419, -469, 580, 580, 580, -351, -99, 579, 286, -363,
	203, -419, -463, 584, -363, -363, 580, -450, -450, 579,
	-419, 248, 578, 584, 586, 562, -331, 581, -442, -443,
	578, 580, 584, 580, 584, -403, 39, 580, -499, -413,
	-201, -200, 135, 54, 108, 133, 329, -340, -340, 342,
	5, 8, 577, 578, 581, -493, 580, 580, 580, -340,
	-340, -340, -228, -228, 119, 312, -419, 503, 503, 61,
	503, 42, 322, -236, 380, 426, 26, 400, 400, 153,
	324, 533, -527, -522, 151, -419, 579, 227, 579, 579,
	2, -221, 142, 448, -589, 2, 531, 153, -228, 153,
	-228, 552, -315, 579, 579, 503, 435, -242, 503, 548,
	-351, -419, -191, 126, -498, -576, 583, -576, 583, 435,
	503, 503, 435, 503, 503, 548, 166, 166, 554, -236,
	548, -351, 503, -473, 49, 27, 324, -282, -228, 153,
	503, 503, 515, 448, -508, 329, -288, -505, -283, 448,
	354, 408, -463, -195, 343, -194, 145, 419, 136, 255,
	-463, -193, 185, 239, -283, 2, 580, 580, 584, -528,
	39, 337, 337, 579, -279, -80, 548, -462, -495, 44,
	-281, 39, 153, -572, -126, -283, -467, -468, 5, 39,
	-279, 153, 339, 324, -233, 262, -608, -503, -543, -336,
	-369, -358, 325, 92, 580, -413, -360, -344, -419, 2,
	580, -188, -189, -508, -508, -508, -190, -202, -202, -411,
	-309, 579, -265, -250, 579, -202, -267, 2, -509, 584,
	579, 562, 562, 562, -196, -463, -122, -126, 343, -279,
	572, -376, -321, -320, 358, 333, -321, 426, 426, 340,
	176, 258, -222, -264, -419, -419, 149, 34, 34, -419,
	-419, -430, 580, -419, -419, -351, 578, 5, -419, 580,
	580, 8, -419, 580, 581, -557, -249, -419, 580, 61,
	580, 580, 584, 584, 580, 580, 580, 580, 580, 580,
	580, -425, 185, 138, 333, 579, 580, 580, -99, -427,
	206, 61, -450, -427, -427, -378, -340, -450, -417, -264,
	577, -499, -495, -453, 579, 581, -200, 562, -508, -508,
	578, 2, 577, -499, 580, 119, -266, -266, 487, 426,
	322, -236, 380, 426, 399, 268, 26, 26, -410, 153,
	-529, 94, -531, 77, 168, 103, 324, 329, 521, 380,
	73, 126, 396, -600, 39, 559, 580, -338, -447, -542,
	579, -249, -338, -340, 324, 475, 126, 324, 126, 119,
	515, 80, -266, -273, -340, -340, -279, -288, -505, 160,
	580, 584, 562, 2, 572, 572, -288, -505, -283, -288,
	-505, -281, 356, 166, 160, 580, -264, 5, 5, 153,
	-261, 77, -266, 5, -266, -282, 119, 435, 503, 503,
	-193, 584, 579, 562, 562, -193, -509, -122, -331, -322,
	229, -266, -526, -523, -524, 380, -530, -532, 168, 380,
	-126, 2, -204, -203, -249, 5, 579, -307, 343, 578,
	-505, -373, -126, -283, -331, 580, 584, 147, -395, 531,
	-264, -279, 153, -234, 261, -608, -503, -231, -398, -396,
	139, 579, 339, -126, -336, 562, 580, 580, 119, 119,
	221, 152, -338, 579, 579, -340, 119, 580, -197, -198,
	-508, -122, -508, -196, -61, -62, 227, 94, 363, -276,
	487, 227, 579, 579, -222, -419, -419, -419, 580, -336,
	-499, 572, -551, 358, 580, -446, -419, -419, -420, 185,
	579, -430, 580, -552, 547, -419, -364, -365, -419, 425,
	109, 204, -552, -552, 580, -495, 2, -508, 577, 2,
	219, 39, 399, 268, 39, 503, 39, -410, -273, -277,
	-270, -249, 168, 212, 329, 544, -394, 253, 579, -420,
	-279, 579, 2, 31, -601, 130, 232, 580, 584, -448,
	-260, -249, -419, -448, 580, 580, 329, 329, -419, -469,
	579, -228, -228, 580, 580, -419, 503, -498, 101, -496,
	2, -576, -263, -419, 503, 5, -228, -277, -228, -228,
	-261, 515, -288, -505, -283, -194, -195, -508, -122, -193,
	39, -312, 231, 2, -528, 253, -270, 253, -599, 548,
	580, 584, 562, 562, -305, -205, -81, -82, 504, -462,
	-331, 39, 5, 579, 579, -249, 339, 579, -264, -244,
	93, -608, -503, -232, -369, 325, -340, 94, -398, -426,
	-190, 579, 579, -310, 82, 95, 127, 211, 188, 228,
	468, 473, 29, -310, 580, -338, -338, 580, 579, -190,
	580, 584, 29, 579, 29, 579, -279, -300, -351, -351,
	580, -336, 61, 584, 580, 580, -420, -430, 580, -553,
	-554, -269, 584, 579, 579, 449, 578, 2, -236, 380,
	-249, 39, -249, -236, 380, -249, -531, -270, 324, 531,
	-419, -251, 579, -419, 39, 232, 131, 217, -409, -602,
	102, 476, 220, -447, -222, 580, -408, 531, 396, -261,
	-338, 579, 579, 579, 562, 185, 579, -473, -228, -282,
	580, -581, 394, -126, -316, -317, 219, 579, -311, 339,
	119, 312, -203, -496, -496, 580, 39, -82, 9, 39,
	-126, -467, -338, -279, -338, 339, -238, -237, 270, -503,
	-233, 580, -273, -369, -509, -509, -408, 580, 580, -509,
	-62, -340, -340, 580, 580, -558, 388, 427, 205, -351,
	-337, 580, 584, 39, -365, 2, 2, 2, 399, -249,
	399, 153, 207, 580, -533, 285, -249, 580, 131, 217,
	-312, 579, -223, -448, -312, 207, -279, -577, 531, 580,
	-324, -323, -320, -326, -325, -320, -351, -496, 101, 356,
	-351, -261, -584, 186, -583, 5, 10, -205, 356, -339,
	-449, -266, 83, 119, -322, -126, -126, 580, 580, -395,
	580, -279, -235, -510, 399, 401, -608, -234, -413, 580,
	580, -409, -408, -318, -314, 580, 580, 580, 580, -559,
	-560, 51, 518, 110, -419, -559, -559, -554, -556, 168,
	548, -534, -537, -536, 339, 455, 186, 357, 580, 475,
	543, -318, -340, 548, -331, -419, -408, 580, 584, 536,
	580, 584, 536, 580, 185, 580, -228, -192, 548, 47,
	-311, -279, 580, 584, 379, 132, 142, -312, -599, -408,
	579, -409, 579, -241, -240, -608, -489, -244, 139, -190,
	-190, -312, -409, -206, 548, -190, -561, 151, -560, 376,
	181, 426, 376, 181, -561, -561, -270, 56, -536, 339,
	-537, 339, 525, 132, -601, 580, 56, -533, -312, -323,
	219, -325, 185, 356, 433, -583, 31, -243, -242, 579,
	-449, 427, 427, 2, -316, -311, -409, -338, -312, -338,
	-239, -340, -238, 325, 525, -318, -312, -413, 110, 203,
	498, 312, 34, 562, -535, 312, 415, 65, 448, -535,
	-413, 562, -534, 579, 579, 343, -340, 2, -205, -312,
	580, -318, 580, -235, 448, -206, -318, 426, 347, -560,
	-419, 23, 329, 126, -419, -601, -351, -351, -189, 579,
	580, -311, -318, -408, -206, -409, -241, -359, -413, -206,
	580, 580, -189, -229, 65, 415, -243, -206, -409, -413,
	-312, -413, -413, -313, -314, 503, 580, -413, -312, -318,
	579, -318, -206, -351, -206, -413, 580, -413, -313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 510, 511, 513, 514, 515, 517,
	518, 520, 522, 524, 525, 526, 528, 529, 531, 532,
	533, 534, 535, 537, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	601, 603, 0, 1302, 1304, 1306, 1308, 0, 744, 0,
	36, 37, 0, -2, 308, 310, 312, 0, 338, 340,
	341, 343, 345, 347, -2, 0, 445, 446, 448, 450,
	-2, 0, 931, 933, 0, 590, 592, 0, 936, 938,
	0, 0, 612, 613, 0, 1409, -2, 606, 608, 610,
	675, 677, 679, 681, 683, 685, 687, 689, 691, 692,
	694, 696, 698, 700, 702, 703, 705, 707, 709, 710,
	712, 713, 715, 717, 719, 721, 723, 725, 727, 729,
	731, 733, 735, 737, 739, -2, 741, -2, -2, 0,
	-2, -2, -2, 1320, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 396, 397, 399, 401, 403, 405, 408,
	410, 412, 1467, 452, 454, 456, 458, 460, 462, 464,
	0, -2, 1481, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 99, 100, 101, 102,
	103, 104, 105, 106, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 97,
	70, 0, 0, 1440, 1442, 1444, 1446, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 512, 516, 519, 521, 523, 527, 530, 536,
	538, 540, 497, 498, 501, 2145, 2162, 2163, 2164, 2167,
	2168, 2169, 2170, 2171, 2172, 2609, 2691, 2692, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 499, 500, 1108, 0, 564, 562, 2130,
	565, 2413, 567, 569, 439, 440, 441, 442, 443, 444,
	0, 583, 575, 1479, 584, 586, 587, 588, 589, 559,
	557, 0, 583, 2198, 581, 1300, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 375, 1157,
	1158, 1159, 1285, 1286, 2457, 1327, 0, 215, 602, -2,
	-2, -2, 2574, -2, 634, -2, 641, 2578, 2459, 646,
	0, 648, -2, 651, 1303, 1305, 1307, 742, 743, 2148,
	0, 0, 0, 0, 0, 38, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	225, -2, -2, -2, -2, 0, 0, 2503, 2250, 2098,
	2164, 2101, 2096, 309, 311, 313, 314, 0, 0, 0,
	0, 0, 0, 339, 342, 344, 346, -2, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 984, 985, 1215, 0, 0, 0, -2, 447, 449,
	502, 503, 0, 1468, 1468, -2, 0, 0, 0, 0,
	280, 271, 932, 934, 935, 0, 0, 0, 0, 591,
	593, 0, 0, 253, 937, 939, 940, 0, 0, 0,
	0, 0, 282, 0, 0, 607, 609, 611, 676, 678,
	680, 682, 684, 686, 688, 690, 693, 695, 697, 699,
	701, 704, 706, 708, 711, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, 734, 736, 738, 740, 750,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 838, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 913, 0, 753, 755, 756, 757, 0, 816,
	836, 837, 846, 0, 1148, 1469, 1329, 1310, 1324, 1329,
	1312, 1313, 1314, 1315, 1316, 1321, 1323, 1317, 1318, 1319,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 398,
	400, 402, 404, 406, 409, 411, 413, -2, 1438, 1439,
	453, 455, 457, 459, 461, 463, 465, 594, 0, 596,
	0, 754, -2, 0, 1473, 1473, 1473, 0, 0, 1439,
	1437, 0, 599, 600, 655, 656, 1741, 0, 0, 0,
	0, 0, 0, 0, 1995, 1827, 0, 657, -2, 1858,
	1860, 2549, 2574, 1994, 1862, 1863, 1864, 1865, 1866, 0,
	1868, 1869, 1870, 1871, 1872, 1873, 0, 1875, 0, 1880,
	1881, 1882, 0, 2556, 2075, 2158, -2, 0, 0, 2562,
	2154, 0, 1961, 1898, -2, -2, 2181, 2160, 1673, 1674,
	1675, 1676, 1677, -2, -2, 2592, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 0, 2537, 2557,
	2558, 2563, 2565, 2559, 2546, 1923, 2263, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1700, 1709, -2, -2, -2, -2, -2, -2, -2, 2550,
	2551, 2568, 2571, 2577, 2582, 2583, 2555, 2564, 2591, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 1701, -2, -2, -2, -2,
	1456, 2426, 1459, 1108, 1457, 1441, 1443, 0, 1445, 0,
	0, 0, 1450, 1476, 1474, 0, 1525, 1454, 1455, 1543,
	1543, 1567, 0, 1548, 0, 1567, 1468, 1594, 0, 1554,
	2449, 1899, 1900, 0, 2164, 2159, -2, -2, 2589, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 566, 568,
	0, 0, 0, 582, 1478, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 2557, 0, 0,
	0, 387, 0, 389, 390, 391, 392, 393, 394, 395,
	184, 2557, 470, 495, 0, 184, 2557, 473, 184, 2557,
	476, 0, 479, 1213, 184, 2557, 482, 2126, 184, 2557,
	485, 487, 2134, 184, 2557, 491, 2141, 2139, 492, 2557,
	494, 285, 283, 284, 2177, 2178, 2185, 2186, 2187, 2188,
	2590, 2592, 1296, 1297, 1298, 1299, 0, 1326, 1214, 604,
	605, 0, 629, 0, 633, 2545, -2, 0, 2468, -2,
	637, 1330, 1334, 1335, 1336, 1337, 1338, 0, 0, 0,
	0, 1343, 0, 0, 643, 0, 0, 630, 631, 649,
	652, 0, 745, 746, 747, 748, 749, 69, 0, 2557,
	1594, 71, 0, 2120, 2189, 2190, 2191, 2192, 2193, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	75, 0, 2557, 80, 0, 2557, 0, -2, 91, 0,
	98, 0, 2123, 107, 0, 2557, 0, 2095, -2, 0,
	196, 0, 959, -2, 2557, 1156, 0, 0, 0, 0,
	922, 2092, 2097, 923, 2116, 924, 2102, 0, 315, 316,
	317, 318, 319, 0, 320, 2557, 322, 323, 0, 325,
	326, 2557, 328, 329, 0, 331, 0, 236, 237, 2557,
	350, 351, 0, 353, 354, 0, 356, 0, 0, 0,
	360, -2, 376, 0, 373, 363, 364, 366, 367, 368,
	369, 370, 0, 417, 415, 2131, 0, -2, 2557, 0,
	956, 0, 0, 1193, -2, 2557, 1153, 0, 1200, 2557,
	1196, 0, -2, 0, 1466, 2557, 1347, 988, 989, 990,
	991, 1606, 436, 0, 1374, 0, 1376, 0, 1395, 1600,
	1543, 0, 0, 1605, 0, -2, 553, 2147, -2, 505,
	0, 506, 0, -2, 0, 297, 0, 0, 941, 942,
	943, 944, 945, 948, 949, 950, 951, 1580, 254, 256,
	0, 0, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 0, 0, 614, 0, 0, 751, 752, 0, 0,
	762, 763, 764, 0, 297, 2460, 2422, 2284, 771, 0,
	774, 777, -2, 0, 0, 0, 0, 781, 0, 786,
	787, 788, 0, 0, 792, 794, 930, 796, 0, 0,
	798, 0, 802, 0, 805, 0, 807, 0, 809, -2,
	-2, -2, 817, 818, -2, 822, -2, 0, 825, 827,
	0, 829, -2, 0, 838, 834, 835, 0, 0, 0,
	0, 854, 855, 0, 864, 0, 867, 868, 869, 0,
	871, 872, 0, 874, 875, 876, 877, 0, 0, 880,
	881, -2, -2, 885, 887, 0, 894, 0, 900, 0,
	904, 0, 0, 912, 0, 758, 759, 184, 1598, 1309,
	-2, 1311, 0, -2, 0, 595, 0, 598, 1498, 1424,
	1421, 0, 1495, 1496, 1425, 0, 0, 0, 1432, 0,
	1471, 1472, 0, 0, 0, 1411, 1412, 0, 0, 0,
	0, 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009, 2006,
	2007, 2010, 2011, 0, 0, 0, 0, 0, 2012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2014, 2015, 0, 0, 2017, 0, 2019, 0, 0,
	0, 0, 0, 0, 1806, 1808, 2083, 0, 0, 2016,
	1746, 1747, 1748, 1749, 1750, 1785, 1786, 0, 0, 1859,
	2080, 2079, 1861, 0, 2031, 0, 1874, -2, 0, 1995,
	2026, 0, 0, 1883, 1884, 1885, 0, 0, 2031, 0,
	0, 2074, 1895, 1896, 1738, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1687, 1686, 0, 1688, 0,
	1689, 1690, 1697, 1710, 0, 0, 0, 0, 1714, 0,
	0, 0, 0, 0, 0, 0, 2055, -2, 0, 0,
	0, 0, 1702, 0, 1458, 0, 0, 1529, 2084, 2088,
	2089, 1529, 1529, 0, 0, 2032, 1591, 1591, 0, 0,
	1586, 1586, 1586, 1584, 1567, 0, 1567, 1577, 0, 1567,
	1567, 0, -2, 1548, 0, 0, 1577, 0, 1561, 541,
	543, 545, 547, 548, 549, 551, 1595, 1596, 0, 0,
	0, 0, 2165, 0, 0, 0, 0, 0, 2150, 0,
	0, 0, 0, 2513, 2459, 571, 585, 1468, 0, 2034,
	1621, 1625, 0, 1627, 1628, 1629, 1630, 1631, 0, 0,
	1622, -2, 1698, 1700, 1721, 2182, 2183, 2184, 1681, 1682,
	1683, 1684, 1685, 1693, 1680, 1680, 1680, 1691, 1720, 1712,
	1720, 1716, 1666, 1667, 1668, 1703, 1704, 1705, 1706, 0,
	2513, 2459, 577, 0, 0, 1406, 200, 202, 203, 204,
	205, 206, 377, 0, 384, 385, 386, 0, 466, 0,
	182, 183, 0, 184, 2557, 471, 0, 474, 0, 184,
	2557, 2090, 480, 0, 483, 0, 0, 489, 0, 0,
	0, 0, 0, 184, 1408, 0, 0, 0, 0, -2,
	639, 644, 645, 0, 1332, 0, 1339, 666, 667, 668,
	1341, 1342, 0, 1344, 642, 669, 670, 671, 672, 673,
	674, 0, 2104, 2105, 2106, 2107, 2110, 2111, 0, 0,
	640, 659, 647, 0, 653, 108, 1282, 0, 0, 147,
	0, 1282, 1282, 0, 0, 0, 0, 171, 0, 1027,
	0, 0, 0, 0, 0, 132, 143, 120, 121, 0,
	0, 0, 0, 0, 0, 81, 1130, 0, 1133, 0,
	0, 0, 0, 0, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 95, 96, 131, 0, 0, 1371,
	0, 126, 110, 0, 0, 0, 133, 145, 0, 175,
	177, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 207, 0, 0, 0, 1154, 0, 1465, 0, 0,
	2557, 0, 1580, 2330, -2, -2, 254, 1580, 921, 0,
	0, 2165, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 355, 357, 358, 359, 0, 1192, 0, 365,
	407, 1079, 2557, 0, 0, 434, 429, 0, 431, 0,
	0, 1129, 2557, 1127, 2135, 0, 1151, 0, 1108, 2557,
	2133, 0, 0, 0, 1201, 2174, 1210, 1214, 1361, 0,
	438, 0, 1377, 1379, 0, 0, 1601, 0, 1603, 1543,
	1468, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 260, 0, 1579, 0, 0, 1580, 254, 2437,
	297, 297, 1580, 616, 1580, 618, 0, 0, 765, 766,
	0, 297, 297, 297, 772, 773, 775, 776, -2, -2,
	-2, 895, 778, 779, 861, 0, 0, 0, 860, 791,
	795, 0, 915, 2445, 2459, 2513, 928, 861, 2250, 861,
	2250, 861, 2250, 806, 808, 811, 849, 857, 821, 826,
	0, 0, 831, 839, -2, 0, 841, 0, 843, 0,
	845, 861, 862, 865, 870, 873, 878, 879, 0, 896,
	897, 0, 0, 0, 0, 0, 0, 907, 908, 0,
	0, 1147, 0, 1322, 1498, 1424, 597, 1415, 1497, 1416,
	1423, 1426, 0, 0, 1428, 0, 1430, 0, 1493, 1494,
	1501, 1502, 0, 1512, 1513, 1505, 0, -2, 0, 0,
	1508, 1509, 1434, 0, 1451, 1452, 1453, 1482, 1485, 1229,
	0, 2691, 1742, 1616, 1743, 1744, 2119, 0, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, -2, -2,
	-2, -2, -2, -2, -2, -2, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, -2, -2, -2,
	1783, 1784, -2, 2018, 2020, 0, 2083, 0, -2, 0,
	-2, -2, -2, -2, 1803, 0, 1805, 1810, 1812, 1814,
	0, 0, 0, 0, 2082, 1824, 2066, 2067, 0, 0,
	1997, 1998, 1999, 1809, 0, 1828, 2081, 2078, 0, 0,
	2030, 1481, 1887, 0, 0, 0, 0, 1894, 1879, 2028,
	0, 2027, 0, 0, 0, 2038, 0, 2073, 2069, 0,
	2117, 1737, 1724, 1725, 1726, 1727, 1728, 1729, 1739, 0,
	2114, 2151, 2157, 1971, 0, 0, 0, 1924, 1925, 1926,
	1927, 1928, 0, 1930, 1931, 0, 1933, 1934, 0, 1936,
	1937, 0, 1939, 1940, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 1638, 0, 0, 0,
	1642, 0, 0, 0, 1646, 0, 0, 0, 1650, 0,
	0, 0, 1654, 0, 0, 0, 1658, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 1943, 0, 2041, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1945, 0,
	1947, 2032, 2052, 0, 0, 1829, 0, 0, 0, 1995,
	0, 1950, 2032, 2060, 0, 0, 0, 0, 0, 2032,
	0, 2065, 0, 1957, 0, 1959, 1460, 0, 0, 1611,
	0, 0, 0, 2087, 1611, 1611, 0, 1524, 0, 0,
	1587, 1588, 1589, 1590, 0, 0, 1591, 0, 1581, 1585,
	1582, 1583, 1577, 1540, 0, 0, 2121, 1577, 1546, 1576,
	0, 1108, 1566, 1577, 1577, 0, -2, 1550, 1567, 0,
	0, 542, 544, 546, 550, 552, 0, 0, 1481, -2,
	0, -2, 1107, 0, 0, 0, 0, 561, 563, 0,
	0, 486, 0, 0, 555, 0, 558, 0, 1612, 1615,
	0, 0, 1626, 1632, 1633, 0, -2, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 496,
	184, 468, 0, 184, 184, 477, 0, 0, 184, 488,
	184, 2142, 184, 2140, 286, 493, 1407, 218, 0, 632,
	0, 1331, 1340, 0, 663, 0, 665, 0, 2108, 2112,
	2109, 2113, 0, 654, 0, 0, 0, 0, 1281, 0,
	1236, 0, 0, 0, 0, 0, 0, 151, 2557, 0,
	186, 0, 0, 1072, 2127, 0, 1064, 0, 0, 2270,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1131, 1132, 1134, 1141,
	1143, 0, 1137, 2115, 0, 0, 1138, 0, 1140, 1142,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1370, 1371, 0, 0, 0, 119, 123,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 1186,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	0, 0, -2, 0, 0, 0, 0, 0, 228, 0,
	288, 2093, 2103, 0, 946, 947, 321, 324, 327, 330,
	224, 0, 361, 0, 0, 994, 969, 0, 0, 416,
	297, 0, 0, 430, 2144, 954, 1125, 1128, 0, 1108,
	2557, 1165, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 2557, 2122, 2173, 2174, 1363, 1371, 0, 1611, 0,
	1393, 1380, 0, 0, 0, 1393, 1397, 1398, 1400, 1401,
	0, 0, 1602, 1608, 504, 554, 1468, 1468, 297, 295,
	2390, 293, 290, 292, 0, 0, 0, 995, 997, 998,
	999, 186, 0, 2174, 1064, 2319, 2174, 0, 1383, 1385,
	0, 248, 0, 257, 1580, 255, 260, 0, 0, 0,
	428, 615, 620, 760, 0, 297, 768, 769, 770, 813,
	851, 859, 780, 782, 783, 784, 0, 0, 929, 925,
	926, 927, 797, 861, 800, 861, 803, 861, 824, 828,
	833, 840, 0, 0, 0, 853, 0, 0, 0, 0,
	0, 0, 0, 901, 902, 903, 905, 910, 909, 914,
	1599, 1419, 1420, 1422, 0, 1431, 0, 0, 1507, -2,
	-2, 1506, 1510, 1511, -2, -2, -2, -2, 1427, 0,
	1436, 1433, 0, 1492, 1227, 1228, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1825, 0, -2, 1804, 1807,
	1811, 1813, 1815, 0, 0, 0, 0, 0, 0, 2021,
	0, 2023, 1826, 2076, 2079, 1993, 0, 0, 1480, 1481,
	1481, 0, 1893, 0, 2029, 0, 2036, 2037, 0, 1886,
	0, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1897, 0, 0, 0, 0, 1929, 1932, 1935, 1938,
	0, 0, 0, 0, 1918, 0, 0, 0, 1922, 1692,
	1678, 0, 1720, 1718, 1719, 1713, 1720, 1717, 1670, 0,
	1635, 1636, 1637, 1639, 1640, 1641, 1643, 1644, 1645, 1647,
	1648, 1649, 1651, 1652, 1653, 1655, 1656, 1657, 1659, 1660,
	1661, 1663, 1664, 1665, 1669, 0, 1942, 0, 1944, 1946,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 1833, 1834, 1949,
	2058, 2059, 0, 0, 0, 0, 0, 0, 1955, 0,
	2064, 1956, 1958, 1468, 0, 1461, 0, 1526, 1515, 1610,
	0, 2085, 1580, 1528, 1530, 2086, 2124, 1515, 1515, 0,
	2033, 0, 0, 1571, 0, 0, 0, 1573, 1544, 0,
	0, 1538, 0, 1534, 1535, 1536, 1537, 1545, 1108, 1575,
	1547, 1551, 2151, 0, 1577, 0, 1562, 0, 1564, 1597,
	0, 1556, 1559, 0, 0, 2166, 1611, 0, 332, 336,
	337, 333, 334, 335, 570, 0, 0, 0, 0, 2035,
	0, 1617, 0, 1623, 0, 0, 0, 0, 576, 0,
	0, 0, 201, 1405, 383, 467, 184, 472, 475, 2091,
	184, 481, 484, 490, 214, 0, 628, -2, 661, 662,
	664, 0, 660, 148, 1282, 0, 0, 1232, 1234, 2138,
	1238, 0, 0, 0, 0, 0, 1259, 0, 153, 2557,
	162, 0, 1043, 0, 2125, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 2557, 184, 2557, 184, 165, 167,
	170, 0, 174, 172, 0, 1031, 0, 0, 1034, 109,
	1282, 0, 0, 112, 116, 124, 0, 0, 0, 130,
	0, 0, 0, 1261, 1265, 1273, 0, 0, 0, 1135,
	1136, 1139, 1145, 82, 0, 0, 0, 1269, 1271, 1277,
	92, 93, 2136, 94, 0, 1231, 0, 0, 0, 0,
	176, 114, 118, 125, 0, 1279, 111, 0, 199, 0,
	0, 189, 184, 2557, 0, 191, 0, 192, 193, 208,
	0, 0, 0, 957, 958, 1187, 1149, 1150, 0, 1155,
	0, 0, 0, 0, 1580, 220, 0, 1580, 228, 0,
	2099, 0, 349, 0, 0, 0, 0, 993, 1090, 0,
	964, 0, 0, 0, 422, 418, 0, 427, 433, 432,
	-2, 0, 0, 0, 0, -2, 0, 0, 1203, 1197,
	1198, 0, 0, 0, 0, 2557, 1365, 1371, 0, 1466,
	1481, 437, 1372, 1393, 0, 0, 0, 1382, 1378, 1375,
	1611, 0, 0, 0, 0, 0, 1604, 1607, 507, 508,
	272, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	1000, 1004, 0, 2174, 2174, 0, 2129, 0, 0, 0,
	0, 258, 0, 261, 0, 0, 0, 266, 267, 268,
	269, 270, 260, 250, 1580, 0, 0, 617, 0, 0,
	767, 0, 790, 799, 801, 804, 842, 844, 861, 888,
	889, 1021, 0, 1021, 0, 0, 906, 1429, 0, 1504,
	1435, 1486, 1487, 0, 1229, 0, 1745, 1788, 0, 0,
	-2, 0, 0, 1792, 0, 0, 0, -2, 0, 0,
	0, 2022, 2024, 0, 2078, 1888, 0, 0, 0, 1892,
	1876, 1877, 0, 1996, 2039, 2068, 2072, 0, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 0, 2118, 2152, 2156, 1969,
	1970, 1974, 2132, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1715, 0, 0, 2040,
	2051, 2053, 1830, 1831, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, -2, -2, -2, 1848, 1849, 1850,
	-2, -2, -2, 0, 0, 0, 2054, 2056, 2057, 2061,
	2062, 0, 1952, 1953, 1954, 2063, 0, 1468, 1462, 1523,
	0, 1609, 1527, 0, 1523, 1523, 1475, 1569, 0, 0,
	1593, 0, 1541, 0, 1542, 0, 1574, 0, 1549, 1552,
	1553, 1563, 0, 1555, 0, 1558, 0, 1888, -2, 298,
	299, 301, 0, 304, 305, 0, 0, 573, 574, 572,
	556, 0, 0, 1619, 0, 0, 1695, 1699, 1723, 579,
	580, 578, 469, 478, 216, 0, 1578, 0, 0, 0,
	0, 2204, 1249, 1250, 0, 2574, 1254, 0, 0, 0,
	0, 185, 1041, 1071, 0, 0, 0, 1063, 0, 0,
	1077, 155, 0, 0, 0, 163, 0, 0, 160, 0,
	169, 173, 1028, 0, 0, 0, 0, 1237, 0, 0,
	0, 127, 128, 129, 0, 134, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 1356, 0, 1350,
	0, 0, 0, 187, 0, 0, 0, 1226, 210, 0,
	0, 0, 0, 0, 1190, 1191, 1262, 1266, 1274, 0,
	0, 0, 228, 226, 0, 229, 0, 232, 233, 0,
	228, 222, 0, 0, 1108, 362, 967, 1078, 0, 1080,
	0, 965, 0, 0, 1079, 414, 0, 421, 0, 0,
	1129, 0, 0, 1152, 1163, 1108, 0, 1202, 1204, 0,
	1212, 0, 0, 0, 1367, 1371, 0, 1360, 1361, 1500,
	1373, 1391, -2, 0, 0, 1481, 1399, 1396, 1402, 1403,
	0, 294, 0, 289, 291, 0, 275, 0, 0, 996,
	1001, 0, 0, 0, 0, 0, 1384, 1386, 0, 0,
	0, 0, 0, 0, 249, 260, 252, 281, 0, 761,
	785, 852, 890, 1020, 0, 0, 892, 0, 0, 1503,
	1490, 1491, 1488, 1229, 1790, 1794, 0, 0, 0, 1796,
	-2, 0, 1818, -2, -2, 2025, 2077, 1867, 1481, 1889,
	1891, 1878, 2071, 1740, 0, 1976, 1973, 0, 1960, 0,
	1913, 1914, 0, 0, 1917, 1919, 1920, 1921, 1679, 1672,
	1671, 2050, 0, 0, 0, 0, 1951, 1463, 0, 1965,
	0, 0, 1531, 1965, 1965, 1570, 0, 1572, 1539, 1532,
	0, 2152, 1565, 1557, 0, 0, 302, 0, 306, 307,
	1613, 1618, 0, 1624, 1694, 217, 149, 150, 1241, 1242,
	1244, 1245, 0, 0, 1251, 1252, 0, 1257, 152, 0,
	1042, 0, 1045, 0, 0, 0, 0, 1052, 1064, 0,
	0, 0, 0, 0, 1065, 0, 1094, 0, 1217, 1224,
	0, -2, 0, 0, 0, 157, 179, 0, 0, 1283,
	0, 0, 184, 184, 0, 0, 1233, 1235, 1260, 0,
	0, 0, 0, 137, 0, 0, 1263, 1267, 1275, 1270,
	1272, 1278, 0, 1357, 0, 0, 1280, 197, 198, 0,
	184, 0, 184, 190, 184, 1226, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 221, 287, 228, 0, 1015,
	0, 1090, 1082, 1083, 1084, 0, 1089, 1091, 0, 0,
	981, 966, 0, 977, 0, 0, 994, 969, 0, 419,
	955, 1126, 1160, 1108, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 1369, 1371, 0, 1362, 1363, 1393, 1499,
	0, 0, 0, 1381, 1500, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 262, 0,
	263, 264, 265, 251, 619, 621, 0, 0, 627, 1019,
	0, 0, 0, 0, 1489, 1798, -2, -2, 1819, 0,
	2153, 2155, 1481, 0, 1962, 1483, 0, 0, -2, 0,
	0, 0, 1464, 1447, 0, 1522, 1514, 1516, 1518, 2448,
	2246, 2556, 1448, 1449, 1592, 0, 1560, 303, 0, 1620,
	0, 0, 1246, 1247, 0, 0, 0, 154, 0, 1046,
	1047, 2128, 1049, 0, 1051, 1053, 1054, 1055, 0, 1058,
	2176, 0, 1062, 0, 1073, 1095, 0, 1104, 0, 1219,
	1229, 1223, 0, 1221, 1106, 0, 156, 158, 178, 1226,
	0, 159, 168, 0, 0, 113, 0, 0, 2240, 140,
	138, 136, 1230, 115, 0, 199, 209, 1225, 211, 194,
	184, 0, 1264, 1268, 1276, 230, 0, 231, 234, 0,
	0, 1030, 0, 968, 1081, 0, 1092, 1093, 971, 0,
	970, 0, 0, 0, 0, 0, 420, 423, 0, 426,
	0, 0, 1205, 1203, 0, 1211, 0, 0, 0, 1349,
	0, 0, 1364, 1365, 435, 1387, 0, 0, 1393, 1404,
	274, 0, 0, 1002, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1003, 1106, 0, 0, 1070, 0, 279,
	259, 0, 623, 0, 625, 0, 891, 893, 0, 0,
	1890, 1980, 0, 0, 1915, 1916, -2, 0, 1856, 1964,
	1966, 0, 0, 0, 0, 0, 1533, 1614, 1239, 0,
	1243, 0, 1253, 1255, 0, 1258, 1044, 1048, 0, 0,
	0, 1112, 0, 0, 1066, 0, 1098, 1099, 1015, 0,
	1100, 1101, 1102, 1218, 1492, 1224, 1015, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 188, 212, 1226,
	227, 244, 0, 1161, 969, 1029, 0, 0, 979, 0,
	982, 0, 978, 975, 976, 967, 0, 424, 425, 0,
	1164, 0, 0, 1212, 0, 0, 1352, 1348, 1371, 1366,
	1367, 1611, 1390, 1394, 0, 0, 1104, 1106, 1026, 0,
	622, 0, 0, 898, 899, 0, 0, 0, 0, 1975,
	1484, 1857, 0, 0, 1517, 1519, 1520, 1521, 1240, 1248,
	1256, 0, 0, 1057, 1117, 0, 0, 0, 1096, 1097,
	1026, 0, 1222, 1220, 1075, 0, 1108, 161, 0, 1106,
	0, 1035, 0, 0, 1038, 0, 0, 141, 2240, 139,
	0, 184, 247, 0, 241, 239, 240, 971, 0, 0,
	1086, 1088, 0, 983, 1015, 981, 1162, 1195, 1106, 0,
	1104, 0, 1359, 1371, 1353, 1354, 0, 1369, 0, 297,
	297, 1015, 1104, 969, 1025, 297, 624, 626, 1972, 1992,
	1981, -2, 2516, 2247, 0, 1992, 1992, 1967, 1968, 0,
	0, 1059, 1113, 1114, 0, 1109, 1110, 1111, 2175, 1060,
	1061, 1094, 0, 0, 1112, 180, 1015, 1032, 0, 0,
	1033, 0, 0, 144, 0, 146, 213, 235, 0, 0,
	963, 0, 1085, 0, 0, 0, 0, 1030, 971, 1104,
	0, 1015, 0, 1345, 1358, 0, 1368, 1349, 0, 276,
	277, 1026, 1015, 1611, 0, 278, 1977, 0, 0, 1983,
	1984, 1985, 1986, 1987, 1978, 1979, 1050, 0, 1115, 0,
	1116, 0, 0, 0, 1611, 1103, 0, 1117, 166, 1036,
	0, 1039, 0, 142, 0, 242, 243, 960, 962, 0,
	1087, 972, 0, 974, 969, 980, 1015, 0, 1026, 0,
	1351, 2137, 1352, 1388, 0, 969, 1026, 1069, 0, 1989,
	1990, 0, 0, 0, 1118, 0, 1121, 1122, 0, 1119,
	1074, 0, 1094, 0, 0, 0, 0, 973, 971, 1026,
	1106, 969, 1104, 1359, 0, 1611, 969, 1988, 1991, 1982,
	1056, 1120, 1123, 1124, 1105, 1076, 0, 0, 245, 0,
	1018, 963, 969, 1104, 1611, 1015, 1346, 1611, 1067, 1611,
	1023, 0, 0, 1014, 1016, 1017, 961, 1611, 1015, 1208,
	1026, 1389, 1068, 1037, 1022, 0, 246, 1206, 1026, 969,
	0, 969, 1611, 0, 1611, 1209, 1023, 1207, 1040,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 568, 3, 574, 569, 3,
	579, 580, 572, 570, 584, 571, 581, 573, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 587, 3,
	560, 562, 561, 565, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 577, 3, 578, 575, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 585, 567, 586, 563,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 564, 57903, 566, 57904, 576,
	57905, 582, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2177
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2181
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2219
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2270
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2353
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = nil
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2764
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2770
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2780
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2785
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2794
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = nil
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2897
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3073
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "CREATE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "create access method")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "create cast")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "create operator")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "create publication")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "create rule")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "create server")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3153
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3156
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3157
		{
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3160
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "drop server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3337
		{

			sqlVAL.union.val = nil
		}
	case 435:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DELETE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3365
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "DROP")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "INSERT")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "DELETE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "INSERT")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3766
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3799
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "GRANT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3943
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "RESET")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "RESET")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "USE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "USE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return unimplemented(sqllex, "set from current")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = tree.Low
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = tree.Normal
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = tree.High
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.str = "client_encoding"
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.str = "timezone"
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4506
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4569
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4578
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4715
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4723
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = true
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = true
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = false
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = false
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = false
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5089
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5136
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5144
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5176
		{
		}
	case 898:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5185
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5208
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5289
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5481
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5542
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "RESUME")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5713
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5729
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{

			sqlVAL.union.val = nil
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.str = ""
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = nil
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5797
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 979:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5827
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5841
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5856
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5953
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5956
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5957
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5963
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5984
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.str = ""
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = true
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = false
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6364
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6482
		{
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6487
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6643
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6652
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6660
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = true
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{

			sqlVAL.union.val = true
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = false
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6779
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6793
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6805
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6817
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6827
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = nil
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6947
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6975
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6977
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6979
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6983
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7021
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7039
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7058
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7075
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = false
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = true
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = false
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = true
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = false
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.str = ""
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.str = ""
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7229
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7235
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7537
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7543
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7555
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7561
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7575
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7581
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7599
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7632
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7662
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7715
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7753
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7786
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7789
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7833
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.str = ""
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{

		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7965
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.str = ""
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.str = ""
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.str = ""
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.str = ""
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8020
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8033
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8034
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8085
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8170
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8265
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8280
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8424
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8636
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = nil
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8649
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = true
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = false
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = false
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = true
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8680
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8725
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8751
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8780
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8873
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8941
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8978
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9030
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9079
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9125
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9155
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9188
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = nil
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = true
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = false
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.str = tree.AstFull
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.str = tree.AstRight
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.str = tree.AstInner
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9308
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.str = tree.AstHash
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.str = ""
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9422
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = false
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9484
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9492
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9493
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9511
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9521
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9541
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9603
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = types.Geography
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9652
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9660
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9694
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = nil
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = types.Int2
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = types.Int
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = types.Float4
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = types.Float
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9737
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = types.Bool
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9767
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = types.Float
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9786
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9792
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = types.String
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = types.Date
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9871
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9885
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9894
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9902
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9919
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = true
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = false
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = types.Interval
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9943
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10042
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = nil
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10072
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10132
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10450
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10671
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10721
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10751
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10762
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10763
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11049
		{
			return unimplemented(sqllex, "treat")
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.str = ""
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11224
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11321
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = tree.Any
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = tree.Some
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = tree.All
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.Div
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.LT
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = tree.GT
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = tree.LE
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = tree.GE
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = tree.NE
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = tree.Like
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11683
		{
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11836
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11852
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11861
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11881
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11901
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12134
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.str = ""
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
