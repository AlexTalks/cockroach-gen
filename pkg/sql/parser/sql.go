// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionParams() tree.FuncParams {
	return u.val.(tree.FuncParams)
}
func (u *sqlSymUnion) functionParam() tree.FuncParam {
	return u.val.(tree.FuncParam)
}
func (u *sqlSymUnion) functionParamClass() tree.FuncParamClass {
	return u.val.(tree.FuncParamClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const AT_AT = lexbase.AT_AT
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"AT_AT",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15985

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1940,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	289, 588,
	-2, 0,
	-1, 77,
	8, 1072,
	29, 1072,
	657, 1072,
	658, 1072,
	-2, 0,
	-1, 78,
	8, 1072,
	29, 1072,
	657, 1072,
	658, 1072,
	-2, 0,
	-1, 81,
	171, 1210,
	287, 1210,
	433, 1171,
	508, 1171,
	555, 1171,
	575, 1210,
	577, 1171,
	-2, 0,
	-1, 82,
	1, 1787,
	141, 1787,
	276, 1787,
	364, 1787,
	428, 1787,
	438, 1787,
	638, 1787,
	670, 1787,
	-2, 0,
	-1, 83,
	1, 1787,
	670, 1787,
	-2, 0,
	-1, 89,
	269, 297,
	572, 297,
	-2, 0,
	-1, 104,
	207, 488,
	252, 1661,
	271, 1661,
	289, 488,
	430, 488,
	442, 1402,
	486, 488,
	503, 1402,
	556, 1402,
	585, 488,
	614, 1402,
	-2, 0,
	-1, 112,
	143, 1940,
	264, 1940,
	597, 1940,
	598, 1940,
	-2, 0,
	-1, 130,
	163, 1911,
	185, 1911,
	198, 1911,
	267, 1911,
	303, 1911,
	378, 1911,
	389, 1911,
	591, 1911,
	-2, 1882,
	-1, 179,
	4, 1942,
	21, 1942,
	22, 1942,
	23, 1942,
	24, 1942,
	25, 1942,
	26, 1942,
	27, 1942,
	28, 1942,
	30, 1942,
	31, 1942,
	37, 1942,
	42, 1942,
	44, 1942,
	45, 1942,
	46, 1942,
	48, 1942,
	49, 1942,
	50, 1942,
	51, 1942,
	52, 1942,
	53, 1942,
	54, 1942,
	55, 1942,
	56, 1942,
	58, 1942,
	59, 1942,
	60, 1942,
	61, 1942,
	63, 1942,
	64, 1942,
	65, 1942,
	66, 1942,
	67, 1942,
	68, 1942,
	69, 1942,
	70, 1942,
	74, 1942,
	75, 1942,
	76, 1942,
	77, 1942,
	79, 1942,
	80, 1942,
	81, 1942,
	85, 1942,
	86, 1942,
	87, 1942,
	88, 1942,
	89, 1942,
	90, 1942,
	91, 1942,
	92, 1942,
	95, 1942,
	96, 1942,
	97, 1942,
	98, 1942,
	99, 1942,
	100, 1942,
	102, 1942,
	104, 1942,
	105, 1942,
	106, 1942,
	107, 1942,
	108, 1942,
	109, 1942,
	110, 1942,
	112, 1942,
	113, 1942,
	114, 1942,
	116, 1942,
	117, 1942,
	118, 1942,
	126, 1942,
	127, 1942,
	128, 1942,
	129, 1942,
	130, 1942,
	132, 1942,
	133, 1942,
	134, 1942,
	135, 1942,
	137, 1942,
	138, 1942,
	139, 1942,
	140, 1942,
	142, 1942,
	143, 1942,
	144, 1942,
	145, 1942,
	147, 1942,
	148, 1942,
	149, 1942,
	152, 1942,
	153, 1942,
	154, 1942,
	156, 1942,
	157, 1942,
	158, 1942,
	160, 1942,
	161, 1942,
	162, 1942,
	164, 1942,
	165, 1942,
	166, 1942,
	167, 1942,
	168, 1942,
	169, 1942,
	170, 1942,
	171, 1942,
	172, 1942,
	173, 1942,
	174, 1942,
	175, 1942,
	176, 1942,
	177, 1942,
	178, 1942,
	179, 1942,
	180, 1942,
	181, 1942,
	182, 1942,
	184, 1942,
	190, 1942,
	191, 1942,
	192, 1942,
	193, 1942,
	197, 1942,
	199, 1942,
	200, 1942,
	201, 1942,
	203, 1942,
	204, 1942,
	207, 1942,
	208, 1942,
	209, 1942,
	210, 1942,
	211, 1942,
	212, 1942,
	213, 1942,
	214, 1942,
	215, 1942,
	216, 1942,
	217, 1942,
	218, 1942,
	219, 1942,
	220, 1942,
	222, 1942,
	223, 1942,
	225, 1942,
	226, 1942,
	228, 1942,
	229, 1942,
	230, 1942,
	231, 1942,
	232, 1942,
	233, 1942,
	234, 1942,
	235, 1942,
	236, 1942,
	237, 1942,
	238, 1942,
	240, 1942,
	241, 1942,
	242, 1942,
	244, 1942,
	245, 1942,
	246, 1942,
	247, 1942,
	248, 1942,
	252, 1942,
	253, 1942,
	254, 1942,
	255, 1942,
	257, 1942,
	258, 1942,
	259, 1942,
	261, 1942,
	262, 1942,
	263, 1942,
	264, 1942,
	265, 1942,
	266, 1942,
	268, 1942,
	270, 1942,
	271, 1942,
	272, 1942,
	274, 1942,
	276, 1942,
	277, 1942,
	278, 1942,
	280, 1942,
	284, 1942,
	285, 1942,
	286, 1942,
	287, 1942,
	288, 1942,
	289, 1942,
	290, 1942,
	292, 1942,
	293, 1942,
	294, 1942,
	296, 1942,
	297, 1942,
	298, 1942,
	300, 1942,
	301, 1942,
	304, 1942,
	305, 1942,
	306, 1942,
	307, 1942,
	308, 1942,
	309, 1942,
	310, 1942,
	313, 1942,
	314, 1942,
	315, 1942,
	316, 1942,
	318, 1942,
	319, 1942,
	320, 1942,
	321, 1942,
	322, 1942,
	323, 1942,
	324, 1942,
	325, 1942,
	326, 1942,
	327, 1942,
	328, 1942,
	329, 1942,
	330, 1942,
	331, 1942,
	332, 1942,
	333, 1942,
	334, 1942,
	335, 1942,
	336, 1942,
	337, 1942,
	338, 1942,
	339, 1942,
	340, 1942,
	342, 1942,
	344, 1942,
	345, 1942,
	346, 1942,
	347, 1942,
	348, 1942,
	349, 1942,
	350, 1942,
	351, 1942,
	352, 1942,
	353, 1942,
	354, 1942,
	355, 1942,
	356, 1942,
	357, 1942,
	358, 1942,
	359, 1942,
	360, 1942,
	362, 1942,
	363, 1942,
	365, 1942,
	366, 1942,
	368, 1942,
	369, 1942,
	370, 1942,
	371, 1942,
	373, 1942,
	374, 1942,
	375, 1942,
	376, 1942,
	377, 1942,
	380, 1942,
	382, 1942,
	384, 1942,
	385, 1942,
	386, 1942,
	387, 1942,
	390, 1942,
	391, 1942,
	392, 1942,
	394, 1942,
	396, 1942,
	397, 1942,
	398, 1942,
	399, 1942,
	400, 1942,
	401, 1942,
	402, 1942,
	403, 1942,
	404, 1942,
	405, 1942,
	406, 1942,
	407, 1942,
	408, 1942,
	409, 1942,
	411, 1942,
	412, 1942,
	413, 1942,
	414, 1942,
	415, 1942,
	416, 1942,
	417, 1942,
	418, 1942,
	419, 1942,
	420, 1942,
	421, 1942,
	422, 1942,
	423, 1942,
	424, 1942,
	425, 1942,
	427, 1942,
	428, 1942,
	429, 1942,
	431, 1942,
	432, 1942,
	433, 1942,
	434, 1942,
	435, 1942,
	436, 1942,
	437, 1942,
	438, 1942,
	439, 1942,
	440, 1942,
	441, 1942,
	442, 1942,
	443, 1942,
	444, 1942,
	446, 1942,
	448, 1942,
	449, 1942,
	450, 1942,
	456, 1942,
	457, 1942,
	458, 1942,
	460, 1942,
	461, 1942,
	462, 1942,
	463, 1942,
	464, 1942,
	465, 1942,
	466, 1942,
	467, 1942,
	468, 1942,
	469, 1942,
	470, 1942,
	472, 1942,
	473, 1942,
	474, 1942,
	475, 1942,
	476, 1942,
	478, 1942,
	479, 1942,
	480, 1942,
	481, 1942,
	482, 1942,
	483, 1942,
	484, 1942,
	486, 1942,
	487, 1942,
	488, 1942,
	489, 1942,
	490, 1942,
	491, 1942,
	492, 1942,
	493, 1942,
	494, 1942,
	495, 1942,
	496, 1942,
	497, 1942,
	498, 1942,
	499, 1942,
	500, 1942,
	501, 1942,
	503, 1942,
	504, 1942,
	505, 1942,
	506, 1942,
	507, 1942,
	508, 1942,
	510, 1942,
	511, 1942,
	512, 1942,
	513, 1942,
	514, 1942,
	515, 1942,
	516, 1942,
	518, 1942,
	519, 1942,
	520, 1942,
	521, 1942,
	522, 1942,
	523, 1942,
	524, 1942,
	525, 1942,
	527, 1942,
	529, 1942,
	530, 1942,
	531, 1942,
	532, 1942,
	533, 1942,
	534, 1942,
	535, 1942,
	536, 1942,
	537, 1942,
	538, 1942,
	539, 1942,
	540, 1942,
	541, 1942,
	542, 1942,
	543, 1942,
	544, 1942,
	545, 1942,
	546, 1942,
	547, 1942,
	548, 1942,
	549, 1942,
	551, 1942,
	552, 1942,
	554, 1942,
	555, 1942,
	557, 1942,
	558, 1942,
	559, 1942,
	560, 1942,
	561, 1942,
	562, 1942,
	564, 1942,
	565, 1942,
	567, 1942,
	568, 1942,
	569, 1942,
	570, 1942,
	571, 1942,
	573, 1942,
	575, 1942,
	576, 1942,
	577, 1942,
	578, 1942,
	579, 1942,
	580, 1942,
	581, 1942,
	582, 1942,
	584, 1942,
	585, 1942,
	586, 1942,
	587, 1942,
	588, 1942,
	589, 1942,
	590, 1942,
	593, 1942,
	594, 1942,
	595, 1942,
	596, 1942,
	597, 1942,
	598, 1942,
	599, 1942,
	600, 1942,
	601, 1942,
	603, 1942,
	606, 1942,
	607, 1942,
	608, 1942,
	609, 1942,
	610, 1942,
	611, 1942,
	613, 1942,
	614, 1942,
	615, 1942,
	616, 1942,
	617, 1942,
	618, 1942,
	619, 1942,
	620, 1942,
	621, 1942,
	622, 1942,
	623, 1942,
	624, 1942,
	629, 1942,
	630, 1942,
	631, 1942,
	632, 1942,
	633, 1942,
	634, 1942,
	-2, 0,
	-1, 181,
	1, 1787,
	670, 1787,
	673, 1787,
	-2, 0,
	-1, 182,
	1, 1787,
	572, 1787,
	670, 1787,
	673, 1787,
	-2, 0,
	-1, 218,
	163, 1910,
	185, 1910,
	198, 1910,
	267, 1910,
	303, 1910,
	378, 1910,
	389, 1910,
	591, 1910,
	-2, 1885,
	-1, 279,
	4, 1949,
	5, 1949,
	6, 1949,
	7, 1949,
	8, 1949,
	9, 1949,
	10, 1949,
	21, 1949,
	22, 1949,
	23, 1949,
	24, 1949,
	25, 1949,
	26, 1949,
	27, 1949,
	28, 1949,
	30, 1949,
	31, 1949,
	37, 1949,
	38, 1949,
	42, 1949,
	44, 1949,
	45, 1949,
	46, 1949,
	47, 1949,
	48, 1949,
	49, 1949,
	50, 1949,
	51, 1949,
	52, 1949,
	53, 1949,
	54, 1949,
	55, 1949,
	56, 1949,
	58, 1949,
	59, 1949,
	60, 1949,
	61, 1949,
	63, 1949,
	64, 1949,
	65, 1949,
	66, 1949,
	67, 1949,
	68, 1949,
	69, 1949,
	70, 1949,
	71, 1949,
	72, 1949,
	73, 1949,
	74, 1949,
	75, 1949,
	76, 1949,
	77, 1949,
	79, 1949,
	80, 1949,
	81, 1949,
	83, 1949,
	85, 1949,
	86, 1949,
	87, 1949,
	88, 1949,
	89, 1949,
	90, 1949,
	91, 1949,
	92, 1949,
	95, 1949,
	96, 1949,
	97, 1949,
	98, 1949,
	99, 1949,
	100, 1949,
	102, 1949,
	104, 1949,
	105, 1949,
	106, 1949,
	107, 1949,
	108, 1949,
	109, 1949,
	110, 1949,
	112, 1949,
	113, 1949,
	114, 1949,
	115, 1949,
	116, 1949,
	117, 1949,
	118, 1949,
	119, 1949,
	120, 1949,
	121, 1949,
	122, 1949,
	123, 1949,
	124, 1949,
	125, 1949,
	126, 1949,
	127, 1949,
	128, 1949,
	129, 1949,
	130, 1949,
	131, 1949,
	132, 1949,
	133, 1949,
	134, 1949,
	135, 1949,
	136, 1949,
	137, 1949,
	138, 1949,
	139, 1949,
	140, 1949,
	142, 1949,
	143, 1949,
	144, 1949,
	145, 1949,
	147, 1949,
	148, 1949,
	149, 1949,
	152, 1949,
	153, 1949,
	154, 1949,
	156, 1949,
	157, 1949,
	158, 1949,
	160, 1949,
	161, 1949,
	162, 1949,
	164, 1949,
	165, 1949,
	166, 1949,
	167, 1949,
	168, 1949,
	169, 1949,
	170, 1949,
	171, 1949,
	172, 1949,
	173, 1949,
	174, 1949,
	175, 1949,
	176, 1949,
	177, 1949,
	178, 1949,
	179, 1949,
	180, 1949,
	181, 1949,
	182, 1949,
	183, 1949,
	184, 1949,
	190, 1949,
	191, 1949,
	192, 1949,
	193, 1949,
	197, 1949,
	199, 1949,
	200, 1949,
	201, 1949,
	203, 1949,
	204, 1949,
	206, 1949,
	207, 1949,
	208, 1949,
	209, 1949,
	210, 1949,
	211, 1949,
	212, 1949,
	213, 1949,
	214, 1949,
	215, 1949,
	216, 1949,
	217, 1949,
	218, 1949,
	219, 1949,
	220, 1949,
	222, 1949,
	223, 1949,
	225, 1949,
	226, 1949,
	228, 1949,
	229, 1949,
	230, 1949,
	231, 1949,
	232, 1949,
	233, 1949,
	234, 1949,
	235, 1949,
	236, 1949,
	237, 1949,
	238, 1949,
	239, 1949,
	240, 1949,
	241, 1949,
	242, 1949,
	244, 1949,
	245, 1949,
	246, 1949,
	247, 1949,
	248, 1949,
	252, 1949,
	253, 1949,
	254, 1949,
	255, 1949,
	257, 1949,
	258, 1949,
	259, 1949,
	260, 1949,
	261, 1949,
	262, 1949,
	263, 1949,
	264, 1949,
	265, 1949,
	266, 1949,
	268, 1949,
	270, 1949,
	271, 1949,
	272, 1949,
	273, 1949,
	274, 1949,
	275, 1949,
	276, 1949,
	277, 1949,
	278, 1949,
	279, 1949,
	280, 1949,
	284, 1949,
	285, 1949,
	286, 1949,
	287, 1949,
	288, 1949,
	289, 1949,
	290, 1949,
	292, 1949,
	293, 1949,
	294, 1949,
	296, 1949,
	297, 1949,
	298, 1949,
	299, 1949,
	300, 1949,
	301, 1949,
	302, 1949,
	304, 1949,
	305, 1949,
	306, 1949,
	307, 1949,
	308, 1949,
	309, 1949,
	310, 1949,
	311, 1949,
	312, 1949,
	313, 1949,
	314, 1949,
	315, 1949,
	316, 1949,
	318, 1949,
	319, 1949,
	320, 1949,
	321, 1949,
	322, 1949,
	323, 1949,
	324, 1949,
	325, 1949,
	326, 1949,
	327, 1949,
	328, 1949,
	329, 1949,
	330, 1949,
	331, 1949,
	332, 1949,
	333, 1949,
	334, 1949,
	335, 1949,
	336, 1949,
	337, 1949,
	338, 1949,
	339, 1949,
	340, 1949,
	342, 1949,
	343, 1949,
	344, 1949,
	345, 1949,
	346, 1949,
	347, 1949,
	348, 1949,
	349, 1949,
	350, 1949,
	351, 1949,
	352, 1949,
	353, 1949,
	354, 1949,
	355, 1949,
	356, 1949,
	357, 1949,
	358, 1949,
	359, 1949,
	360, 1949,
	361, 1949,
	362, 1949,
	363, 1949,
	364, 1949,
	365, 1949,
	366, 1949,
	367, 1949,
	368, 1949,
	369, 1949,
	370, 1949,
	371, 1949,
	372, 1949,
	373, 1949,
	374, 1949,
	375, 1949,
	376, 1949,
	377, 1949,
	380, 1949,
	382, 1949,
	385, 1949,
	386, 1949,
	387, 1949,
	390, 1949,
	391, 1949,
	392, 1949,
	393, 1949,
	394, 1949,
	395, 1949,
	396, 1949,
	397, 1949,
	398, 1949,
	399, 1949,
	400, 1949,
	401, 1949,
	402, 1949,
	403, 1949,
	404, 1949,
	405, 1949,
	406, 1949,
	407, 1949,
	408, 1949,
	409, 1949,
	411, 1949,
	412, 1949,
	413, 1949,
	414, 1949,
	415, 1949,
	416, 1949,
	417, 1949,
	418, 1949,
	419, 1949,
	420, 1949,
	421, 1949,
	422, 1949,
	423, 1949,
	424, 1949,
	425, 1949,
	427, 1949,
	428, 1949,
	429, 1949,
	431, 1949,
	432, 1949,
	433, 1949,
	434, 1949,
	435, 1949,
	436, 1949,
	437, 1949,
	438, 1949,
	439, 1949,
	440, 1949,
	441, 1949,
	442, 1949,
	443, 1949,
	444, 1949,
	446, 1949,
	448, 1949,
	449, 1949,
	450, 1949,
	456, 1949,
	457, 1949,
	458, 1949,
	460, 1949,
	461, 1949,
	462, 1949,
	463, 1949,
	464, 1949,
	465, 1949,
	466, 1949,
	467, 1949,
	468, 1949,
	469, 1949,
	470, 1949,
	472, 1949,
	473, 1949,
	474, 1949,
	475, 1949,
	476, 1949,
	477, 1949,
	478, 1949,
	479, 1949,
	480, 1949,
	481, 1949,
	482, 1949,
	483, 1949,
	484, 1949,
	486, 1949,
	487, 1949,
	488, 1949,
	489, 1949,
	490, 1949,
	491, 1949,
	492, 1949,
	493, 1949,
	494, 1949,
	495, 1949,
	496, 1949,
	497, 1949,
	498, 1949,
	499, 1949,
	500, 1949,
	501, 1949,
	503, 1949,
	504, 1949,
	505, 1949,
	506, 1949,
	507, 1949,
	508, 1949,
	509, 1949,
	510, 1949,
	511, 1949,
	512, 1949,
	513, 1949,
	514, 1949,
	515, 1949,
	516, 1949,
	517, 1949,
	518, 1949,
	519, 1949,
	520, 1949,
	521, 1949,
	522, 1949,
	523, 1949,
	524, 1949,
	525, 1949,
	527, 1949,
	529, 1949,
	530, 1949,
	531, 1949,
	532, 1949,
	533, 1949,
	534, 1949,
	535, 1949,
	536, 1949,
	537, 1949,
	538, 1949,
	539, 1949,
	540, 1949,
	541, 1949,
	542, 1949,
	543, 1949,
	544, 1949,
	545, 1949,
	546, 1949,
	547, 1949,
	548, 1949,
	549, 1949,
	551, 1949,
	552, 1949,
	553, 1949,
	554, 1949,
	555, 1949,
	557, 1949,
	558, 1949,
	559, 1949,
	560, 1949,
	561, 1949,
	562, 1949,
	564, 1949,
	565, 1949,
	567, 1949,
	568, 1949,
	569, 1949,
	570, 1949,
	571, 1949,
	573, 1949,
	575, 1949,
	576, 1949,
	577, 1949,
	578, 1949,
	579, 1949,
	580, 1949,
	581, 1949,
	582, 1949,
	583, 1949,
	584, 1949,
	585, 1949,
	586, 1949,
	587, 1949,
	588, 1949,
	589, 1949,
	590, 1949,
	592, 1949,
	593, 1949,
	594, 1949,
	595, 1949,
	596, 1949,
	597, 1949,
	598, 1949,
	599, 1949,
	600, 1949,
	601, 1949,
	602, 1949,
	603, 1949,
	606, 1949,
	607, 1949,
	608, 1949,
	609, 1949,
	610, 1949,
	611, 1949,
	613, 1949,
	614, 1949,
	615, 1949,
	616, 1949,
	617, 1949,
	618, 1949,
	619, 1949,
	620, 1949,
	621, 1949,
	622, 1949,
	623, 1949,
	624, 1949,
	629, 1949,
	630, 1949,
	631, 1949,
	632, 1949,
	633, 1949,
	634, 1949,
	635, 1949,
	650, 1949,
	657, 1949,
	658, 1949,
	659, 1949,
	667, 1949,
	671, 1949,
	-2, 0,
	-1, 865,
	4, 1659,
	21, 1659,
	22, 1659,
	23, 1659,
	24, 1659,
	25, 1659,
	26, 1659,
	27, 1659,
	28, 1659,
	30, 1659,
	31, 1659,
	37, 1659,
	42, 1659,
	44, 1659,
	45, 1659,
	46, 1659,
	48, 1659,
	49, 1659,
	50, 1659,
	51, 1659,
	52, 1659,
	53, 1659,
	54, 1659,
	55, 1659,
	56, 1659,
	58, 1659,
	59, 1659,
	60, 1659,
	61, 1659,
	63, 1659,
	64, 1659,
	65, 1659,
	66, 1659,
	67, 1659,
	68, 1659,
	69, 1659,
	70, 1659,
	74, 1659,
	75, 1659,
	76, 1659,
	77, 1659,
	79, 1659,
	80, 1659,
	81, 1659,
	85, 1659,
	86, 1659,
	87, 1659,
	88, 1659,
	89, 1659,
	90, 1659,
	91, 1659,
	92, 1659,
	95, 1659,
	96, 1659,
	97, 1659,
	98, 1659,
	99, 1659,
	100, 1659,
	102, 1659,
	104, 1659,
	105, 1659,
	106, 1659,
	107, 1659,
	108, 1659,
	109, 1659,
	110, 1659,
	112, 1659,
	113, 1659,
	114, 1659,
	116, 1659,
	117, 1659,
	118, 1659,
	126, 1659,
	127, 1659,
	128, 1659,
	129, 1659,
	130, 1659,
	132, 1659,
	133, 1659,
	134, 1659,
	135, 1659,
	137, 1659,
	138, 1659,
	139, 1659,
	140, 1659,
	142, 1659,
	143, 1659,
	144, 1659,
	145, 1659,
	147, 1659,
	148, 1659,
	149, 1659,
	152, 1659,
	153, 1659,
	154, 1659,
	156, 1659,
	157, 1659,
	158, 1659,
	160, 1659,
	161, 1659,
	162, 1659,
	164, 1659,
	165, 1659,
	166, 1659,
	167, 1659,
	168, 1659,
	169, 1659,
	170, 1659,
	171, 1659,
	172, 1659,
	173, 1659,
	174, 1659,
	175, 1659,
	176, 1659,
	177, 1659,
	178, 1659,
	179, 1659,
	180, 1659,
	181, 1659,
	182, 1659,
	184, 1659,
	190, 1659,
	191, 1659,
	192, 1659,
	193, 1659,
	197, 1659,
	199, 1659,
	200, 1659,
	201, 1659,
	203, 1659,
	204, 1659,
	207, 1659,
	208, 1659,
	209, 1659,
	210, 1659,
	211, 1659,
	212, 1659,
	213, 1659,
	214, 1659,
	215, 1659,
	216, 1659,
	217, 1659,
	218, 1659,
	219, 1659,
	220, 1659,
	222, 1659,
	223, 1659,
	225, 1659,
	226, 1659,
	228, 1659,
	229, 1659,
	230, 1659,
	231, 1659,
	232, 1659,
	233, 1659,
	234, 1659,
	235, 1659,
	236, 1659,
	237, 1659,
	238, 1659,
	240, 1659,
	241, 1659,
	242, 1659,
	244, 1659,
	245, 1659,
	246, 1659,
	247, 1659,
	248, 1659,
	252, 1659,
	253, 1659,
	254, 1659,
	255, 1659,
	257, 1659,
	258, 1659,
	259, 1659,
	261, 1659,
	262, 1659,
	263, 1659,
	264, 1659,
	265, 1659,
	266, 1659,
	268, 1659,
	270, 1659,
	271, 1659,
	272, 1659,
	274, 1659,
	276, 1659,
	277, 1659,
	278, 1659,
	280, 1659,
	284, 1659,
	285, 1659,
	286, 1659,
	287, 1659,
	288, 1659,
	289, 1659,
	290, 1659,
	292, 1659,
	293, 1659,
	294, 1659,
	296, 1659,
	297, 1659,
	298, 1659,
	300, 1659,
	301, 1659,
	304, 1659,
	305, 1659,
	306, 1659,
	307, 1659,
	308, 1659,
	309, 1659,
	310, 1659,
	313, 1659,
	314, 1659,
	315, 1659,
	316, 1659,
	318, 1659,
	319, 1659,
	320, 1659,
	321, 1659,
	322, 1659,
	323, 1659,
	324, 1659,
	325, 1659,
	326, 1659,
	327, 1659,
	328, 1659,
	329, 1659,
	330, 1659,
	331, 1659,
	332, 1659,
	333, 1659,
	334, 1659,
	335, 1659,
	336, 1659,
	337, 1659,
	338, 1659,
	339, 1659,
	340, 1659,
	342, 1659,
	344, 1659,
	345, 1659,
	346, 1659,
	347, 1659,
	348, 1659,
	349, 1659,
	350, 1659,
	351, 1659,
	352, 1659,
	353, 1659,
	354, 1659,
	355, 1659,
	356, 1659,
	357, 1659,
	358, 1659,
	359, 1659,
	360, 1659,
	362, 1659,
	363, 1659,
	365, 1659,
	366, 1659,
	368, 1659,
	369, 1659,
	370, 1659,
	371, 1659,
	373, 1659,
	374, 1659,
	375, 1659,
	376, 1659,
	377, 1659,
	380, 1659,
	382, 1659,
	385, 1659,
	386, 1659,
	387, 1659,
	390, 1659,
	391, 1659,
	392, 1659,
	394, 1659,
	396, 1659,
	397, 1659,
	398, 1659,
	399, 1659,
	400, 1659,
	401, 1659,
	402, 1659,
	403, 1659,
	404, 1659,
	405, 1659,
	406, 1659,
	407, 1659,
	408, 1659,
	409, 1659,
	411, 1659,
	412, 1659,
	413, 1659,
	414, 1659,
	415, 1659,
	416, 1659,
	417, 1659,
	418, 1659,
	419, 1659,
	420, 1659,
	421, 1659,
	422, 1659,
	423, 1659,
	424, 1659,
	425, 1659,
	427, 1659,
	428, 1659,
	429, 1659,
	431, 1659,
	432, 1659,
	433, 1659,
	434, 1659,
	435, 1659,
	436, 1659,
	437, 1659,
	438, 1659,
	439, 1659,
	440, 1659,
	441, 1659,
	442, 1659,
	443, 1659,
	444, 1659,
	446, 1659,
	448, 1659,
	449, 1659,
	450, 1659,
	456, 1659,
	457, 1659,
	458, 1659,
	460, 1659,
	461, 1659,
	462, 1659,
	463, 1659,
	464, 1659,
	465, 1659,
	466, 1659,
	467, 1659,
	468, 1659,
	469, 1659,
	470, 1659,
	472, 1659,
	473, 1659,
	474, 1659,
	475, 1659,
	476, 1659,
	478, 1659,
	479, 1659,
	480, 1659,
	481, 1659,
	482, 1659,
	483, 1659,
	484, 1659,
	486, 1659,
	487, 1659,
	488, 1659,
	489, 1659,
	490, 1659,
	491, 1659,
	492, 1659,
	493, 1659,
	494, 1659,
	495, 1659,
	496, 1659,
	497, 1659,
	498, 1659,
	499, 1659,
	500, 1659,
	501, 1659,
	503, 1659,
	504, 1659,
	505, 1659,
	506, 1659,
	507, 1659,
	508, 1659,
	510, 1659,
	511, 1659,
	512, 1659,
	513, 1659,
	514, 1659,
	515, 1659,
	516, 1659,
	518, 1659,
	519, 1659,
	520, 1659,
	521, 1659,
	522, 1659,
	523, 1659,
	524, 1659,
	525, 1659,
	527, 1659,
	529, 1659,
	530, 1659,
	531, 1659,
	532, 1659,
	533, 1659,
	534, 1659,
	535, 1659,
	536, 1659,
	537, 1659,
	538, 1659,
	539, 1659,
	540, 1659,
	541, 1659,
	542, 1659,
	543, 1659,
	544, 1659,
	545, 1659,
	546, 1659,
	547, 1659,
	548, 1659,
	549, 1659,
	551, 1659,
	552, 1659,
	554, 1659,
	555, 1659,
	557, 1659,
	558, 1659,
	559, 1659,
	560, 1659,
	561, 1659,
	562, 1659,
	564, 1659,
	565, 1659,
	567, 1659,
	568, 1659,
	569, 1659,
	570, 1659,
	571, 1659,
	573, 1659,
	575, 1659,
	576, 1659,
	577, 1659,
	578, 1659,
	579, 1659,
	580, 1659,
	581, 1659,
	582, 1659,
	584, 1659,
	585, 1659,
	586, 1659,
	587, 1659,
	588, 1659,
	589, 1659,
	590, 1659,
	593, 1659,
	594, 1659,
	595, 1659,
	596, 1659,
	597, 1659,
	598, 1659,
	599, 1659,
	600, 1659,
	601, 1659,
	603, 1659,
	606, 1659,
	607, 1659,
	608, 1659,
	609, 1659,
	610, 1659,
	611, 1659,
	613, 1659,
	614, 1659,
	615, 1659,
	616, 1659,
	617, 1659,
	618, 1659,
	619, 1659,
	620, 1659,
	621, 1659,
	622, 1659,
	623, 1659,
	624, 1659,
	629, 1659,
	630, 1659,
	631, 1659,
	632, 1659,
	633, 1659,
	634, 1659,
	-2, 0,
	-1, 885,
	205, 2770,
	572, 2770,
	649, 2770,
	669, 2770,
	-2, 0,
	-1, 886,
	205, 2755,
	572, 2755,
	649, 2755,
	669, 2755,
	-2, 0,
	-1, 888,
	205, 3056,
	572, 3056,
	649, 3056,
	669, 3056,
	-2, 0,
	-1, 891,
	205, 2897,
	572, 2897,
	649, 2897,
	669, 2897,
	-2, 0,
	-1, 892,
	205, 3103,
	572, 3103,
	649, 3103,
	669, 3103,
	-2, 0,
	-1, 900,
	205, 2925,
	572, 2925,
	649, 2925,
	669, 2925,
	-2, 932,
	-1, 916,
	8, 1071,
	29, 1071,
	657, 1071,
	658, 1071,
	-2, 1076,
	-1, 920,
	1, 2829,
	670, 2829,
	673, 2829,
	-2, 1076,
	-1, 921,
	1, 2884,
	670, 2884,
	673, 2884,
	-2, 1076,
	-1, 924,
	1, 2930,
	670, 2930,
	673, 2930,
	-2, 1069,
	-1, 925,
	1, 2988,
	670, 2988,
	673, 2988,
	-2, 1070,
	-1, 926,
	1, 2834,
	670, 2834,
	673, 2834,
	-2, 1073,
	-1, 927,
	1, 2741,
	670, 2741,
	673, 2741,
	-2, 1074,
	-1, 945,
	205, 1116,
	-2, 0,
	-1, 946,
	433, 1172,
	508, 1172,
	555, 1172,
	577, 1172,
	-2, 0,
	-1, 947,
	433, 1171,
	508, 1171,
	555, 1171,
	577, 1171,
	-2, 1089,
	-1, 951,
	1, 1228,
	666, 1228,
	668, 1228,
	670, 1228,
	673, 1228,
	-2, 0,
	-1, 953,
	1, 1144,
	666, 1144,
	668, 1144,
	670, 1144,
	673, 1144,
	-2, 0,
	-1, 954,
	1, 1148,
	666, 1148,
	668, 1148,
	670, 1148,
	673, 1148,
	-2, 0,
	-1, 955,
	1, 1307,
	198, 1307,
	666, 1307,
	668, 1307,
	670, 1307,
	673, 1307,
	-2, 0,
	-1, 965,
	1, 1177,
	666, 1177,
	668, 1177,
	670, 1177,
	673, 1177,
	-2, 0,
	-1, 972,
	1, 1228,
	666, 1228,
	668, 1228,
	670, 1228,
	673, 1228,
	-2, 0,
	-1, 973,
	1, 1221,
	666, 1221,
	668, 1221,
	670, 1221,
	673, 1221,
	-2, 0,
	-1, 974,
	1, 1230,
	666, 1230,
	668, 1230,
	670, 1230,
	673, 1230,
	-2, 0,
	-1, 975,
	1, 1233,
	666, 1233,
	668, 1233,
	670, 1233,
	673, 1233,
	-2, 0,
	-1, 983,
	1, 1270,
	666, 1270,
	668, 1270,
	670, 1270,
	673, 1270,
	-2, 0,
	-1, 984,
	1, 1272,
	666, 1272,
	668, 1272,
	670, 1272,
	673, 1272,
	-2, 0,
	-1, 989,
	1, 1300,
	666, 1300,
	668, 1300,
	670, 1300,
	673, 1300,
	-2, 0,
	-1, 1039,
	669, 2698,
	672, 2698,
	-2, 1318,
	-1, 1040,
	669, 2700,
	672, 2700,
	-2, 1319,
	-1, 1041,
	669, 2699,
	672, 2699,
	-2, 1320,
	-1, 1042,
	672, 2621,
	-2, 1321,
	-1, 1069,
	198, 331,
	-2, 0,
	-1, 1092,
	47, 2670,
	-2, 0,
	-1, 1093,
	614, 1637,
	-2, 1403,
	-1, 1110,
	4, 2097,
	21, 2097,
	22, 2097,
	23, 2097,
	24, 2097,
	25, 2097,
	26, 2097,
	27, 2097,
	28, 2097,
	30, 2097,
	31, 2097,
	37, 2097,
	42, 2097,
	44, 2097,
	45, 2097,
	46, 2097,
	48, 2097,
	49, 2097,
	50, 2097,
	51, 2097,
	52, 2097,
	53, 2097,
	54, 2097,
	55, 2097,
	56, 2097,
	58, 2097,
	59, 2097,
	60, 2097,
	61, 2097,
	63, 2097,
	64, 2097,
	65, 2097,
	66, 2097,
	67, 2097,
	68, 2097,
	69, 2097,
	70, 2097,
	74, 2097,
	75, 2097,
	76, 2097,
	77, 2097,
	79, 2097,
	80, 2097,
	81, 2097,
	85, 2097,
	86, 2097,
	87, 2097,
	88, 2097,
	89, 2097,
	90, 2097,
	91, 2097,
	92, 2097,
	95, 2097,
	96, 2097,
	97, 2097,
	98, 2097,
	99, 2097,
	100, 2097,
	102, 2097,
	104, 2097,
	105, 2097,
	106, 2097,
	107, 2097,
	108, 2097,
	109, 2097,
	110, 2097,
	112, 2097,
	113, 2097,
	114, 2097,
	116, 2097,
	117, 2097,
	118, 2097,
	126, 2097,
	127, 2097,
	128, 2097,
	129, 2097,
	130, 2097,
	132, 2097,
	133, 2097,
	134, 2097,
	135, 2097,
	137, 2097,
	138, 2097,
	139, 2097,
	140, 2097,
	142, 2097,
	143, 2097,
	144, 2097,
	145, 2097,
	147, 2097,
	148, 2097,
	149, 2097,
	152, 2097,
	153, 2097,
	154, 2097,
	156, 2097,
	157, 2097,
	158, 2097,
	160, 2097,
	161, 2097,
	162, 2097,
	164, 2097,
	165, 2097,
	166, 2097,
	167, 2097,
	168, 2097,
	169, 2097,
	170, 2097,
	171, 2097,
	172, 2097,
	173, 2097,
	174, 2097,
	175, 2097,
	176, 2097,
	177, 2097,
	178, 2097,
	179, 2097,
	180, 2097,
	181, 2097,
	182, 2097,
	184, 2097,
	190, 2097,
	191, 2097,
	192, 2097,
	193, 2097,
	197, 2097,
	199, 2097,
	200, 2097,
	201, 2097,
	203, 2097,
	204, 2097,
	207, 2097,
	208, 2097,
	209, 2097,
	210, 2097,
	211, 2097,
	212, 2097,
	213, 2097,
	214, 2097,
	215, 2097,
	216, 2097,
	217, 2097,
	218, 2097,
	219, 2097,
	220, 2097,
	222, 2097,
	223, 2097,
	225, 2097,
	226, 2097,
	228, 2097,
	229, 2097,
	230, 2097,
	231, 2097,
	232, 2097,
	233, 2097,
	234, 2097,
	235, 2097,
	236, 2097,
	237, 2097,
	238, 2097,
	240, 2097,
	241, 2097,
	242, 2097,
	244, 2097,
	245, 2097,
	246, 2097,
	247, 2097,
	248, 2097,
	252, 2097,
	253, 2097,
	254, 2097,
	255, 2097,
	257, 2097,
	258, 2097,
	259, 2097,
	261, 2097,
	262, 2097,
	263, 2097,
	264, 2097,
	265, 2097,
	266, 2097,
	268, 2097,
	270, 2097,
	271, 2097,
	272, 2097,
	274, 2097,
	276, 2097,
	277, 2097,
	278, 2097,
	280, 2097,
	284, 2097,
	285, 2097,
	286, 2097,
	287, 2097,
	288, 2097,
	289, 2097,
	290, 2097,
	292, 2097,
	293, 2097,
	294, 2097,
	296, 2097,
	297, 2097,
	298, 2097,
	300, 2097,
	301, 2097,
	304, 2097,
	305, 2097,
	306, 2097,
	307, 2097,
	308, 2097,
	309, 2097,
	310, 2097,
	313, 2097,
	314, 2097,
	315, 2097,
	316, 2097,
	318, 2097,
	319, 2097,
	320, 2097,
	321, 2097,
	322, 2097,
	323, 2097,
	324, 2097,
	325, 2097,
	326, 2097,
	327, 2097,
	328, 2097,
	329, 2097,
	330, 2097,
	331, 2097,
	332, 2097,
	333, 2097,
	334, 2097,
	335, 2097,
	336, 2097,
	337, 2097,
	338, 2097,
	339, 2097,
	340, 2097,
	342, 2097,
	344, 2097,
	345, 2097,
	346, 2097,
	347, 2097,
	348, 2097,
	349, 2097,
	350, 2097,
	351, 2097,
	352, 2097,
	353, 2097,
	354, 2097,
	355, 2097,
	356, 2097,
	357, 2097,
	358, 2097,
	359, 2097,
	360, 2097,
	362, 2097,
	363, 2097,
	365, 2097,
	366, 2097,
	368, 2097,
	369, 2097,
	370, 2097,
	371, 2097,
	373, 2097,
	374, 2097,
	375, 2097,
	376, 2097,
	377, 2097,
	380, 2097,
	382, 2097,
	385, 2097,
	386, 2097,
	387, 2097,
	390, 2097,
	391, 2097,
	392, 2097,
	394, 2097,
	396, 2097,
	397, 2097,
	398, 2097,
	399, 2097,
	400, 2097,
	401, 2097,
	402, 2097,
	403, 2097,
	404, 2097,
	405, 2097,
	406, 2097,
	407, 2097,
	408, 2097,
	409, 2097,
	411, 2097,
	412, 2097,
	413, 2097,
	414, 2097,
	415, 2097,
	416, 2097,
	417, 2097,
	418, 2097,
	419, 2097,
	420, 2097,
	421, 2097,
	422, 2097,
	423, 2097,
	424, 2097,
	425, 2097,
	427, 2097,
	428, 2097,
	429, 2097,
	431, 2097,
	432, 2097,
	433, 2097,
	434, 2097,
	435, 2097,
	436, 2097,
	437, 2097,
	438, 2097,
	439, 2097,
	440, 2097,
	441, 2097,
	442, 2097,
	443, 2097,
	444, 2097,
	446, 2097,
	448, 2097,
	449, 2097,
	450, 2097,
	456, 2097,
	457, 2097,
	458, 2097,
	460, 2097,
	461, 2097,
	462, 2097,
	463, 2097,
	464, 2097,
	465, 2097,
	466, 2097,
	467, 2097,
	468, 2097,
	469, 2097,
	470, 2097,
	472, 2097,
	473, 2097,
	474, 2097,
	475, 2097,
	476, 2097,
	478, 2097,
	479, 2097,
	480, 2097,
	481, 2097,
	482, 2097,
	483, 2097,
	484, 2097,
	486, 2097,
	487, 2097,
	488, 2097,
	489, 2097,
	490, 2097,
	491, 2097,
	492, 2097,
	493, 2097,
	494, 2097,
	495, 2097,
	496, 2097,
	497, 2097,
	498, 2097,
	499, 2097,
	500, 2097,
	501, 2097,
	503, 2097,
	504, 2097,
	505, 2097,
	506, 2097,
	507, 2097,
	508, 2097,
	510, 2097,
	511, 2097,
	512, 2097,
	513, 2097,
	514, 2097,
	515, 2097,
	516, 2097,
	518, 2097,
	519, 2097,
	520, 2097,
	521, 2097,
	522, 2097,
	523, 2097,
	524, 2097,
	525, 2097,
	527, 2097,
	529, 2097,
	530, 2097,
	531, 2097,
	532, 2097,
	533, 2097,
	534, 2097,
	535, 2097,
	536, 2097,
	537, 2097,
	538, 2097,
	539, 2097,
	540, 2097,
	541, 2097,
	542, 2097,
	543, 2097,
	544, 2097,
	545, 2097,
	546, 2097,
	547, 2097,
	548, 2097,
	549, 2097,
	551, 2097,
	552, 2097,
	554, 2097,
	555, 2097,
	557, 2097,
	558, 2097,
	559, 2097,
	560, 2097,
	561, 2097,
	562, 2097,
	564, 2097,
	565, 2097,
	567, 2097,
	568, 2097,
	569, 2097,
	570, 2097,
	571, 2097,
	573, 2097,
	575, 2097,
	576, 2097,
	577, 2097,
	578, 2097,
	579, 2097,
	580, 2097,
	581, 2097,
	582, 2097,
	584, 2097,
	585, 2097,
	586, 2097,
	587, 2097,
	588, 2097,
	589, 2097,
	590, 2097,
	593, 2097,
	594, 2097,
	595, 2097,
	596, 2097,
	597, 2097,
	598, 2097,
	599, 2097,
	600, 2097,
	601, 2097,
	603, 2097,
	606, 2097,
	607, 2097,
	608, 2097,
	609, 2097,
	610, 2097,
	611, 2097,
	613, 2097,
	614, 2097,
	615, 2097,
	616, 2097,
	617, 2097,
	618, 2097,
	619, 2097,
	620, 2097,
	621, 2097,
	622, 2097,
	623, 2097,
	624, 2097,
	629, 2097,
	630, 2097,
	631, 2097,
	632, 2097,
	633, 2097,
	634, 2097,
	-2, 0,
	-1, 1122,
	289, 588,
	-2, 0,
	-1, 1123,
	171, 1210,
	287, 1210,
	433, 1171,
	508, 1171,
	555, 1171,
	575, 1210,
	577, 1171,
	-2, 0,
	-1, 1234,
	185, 1953,
	198, 1953,
	303, 1953,
	378, 1953,
	-2, 1889,
	-1, 1251,
	185, 1952,
	198, 1952,
	303, 1952,
	378, 1952,
	-2, 1886,
	-1, 1280,
	669, 2697,
	-2, 940,
	-1, 1287,
	667, 2687,
	-2, 3319,
	-1, 1310,
	5, 2689,
	667, 2686,
	-2, 2677,
	-1, 1318,
	5, 2710,
	667, 2707,
	-2, 2698,
	-1, 1319,
	5, 2711,
	667, 2708,
	-2, 2699,
	-1, 1329,
	669, 2695,
	-2, 2676,
	-1, 1330,
	667, 3218,
	-2, 2696,
	-1, 1353,
	5, 2712,
	38, 2712,
	136, 2712,
	649, 2712,
	665, 2712,
	668, 2712,
	669, 2712,
	672, 2712,
	-2, 3217,
	-1, 1354,
	5, 2172,
	-2, 3187,
	-1, 1355,
	5, 2173,
	-2, 3188,
	-1, 1356,
	5, 2174,
	-2, 3203,
	-1, 1357,
	5, 2175,
	-2, 3165,
	-1, 1358,
	5, 2176,
	-2, 3200,
	-1, 1359,
	5, 2184,
	-2, 3178,
	-1, 1360,
	5, 2171,
	-2, 3174,
	-1, 1361,
	5, 2171,
	-2, 3173,
	-1, 1362,
	5, 2171,
	-2, 3193,
	-1, 1363,
	5, 2182,
	-2, 3167,
	-1, 1364,
	5, 2187,
	667, 2199,
	-2, 3166,
	-1, 1365,
	5, 2189,
	-2, 3213,
	-1, 1368,
	5, 2211,
	-2, 3206,
	-1, 1369,
	5, 2203,
	-2, 3207,
	-1, 1370,
	5, 2211,
	-2, 3208,
	-1, 1371,
	5, 2207,
	-2, 3209,
	-1, 1372,
	5, 2155,
	-2, 3179,
	-1, 1373,
	5, 2156,
	-2, 3180,
	-1, 1374,
	5, 2157,
	-2, 3168,
	-1, 1402,
	5, 2194,
	667, 2194,
	-2, 3214,
	-1, 1403,
	5, 2195,
	667, 2195,
	-2, 3204,
	-1, 1404,
	5, 2196,
	615, 2196,
	667, 2196,
	-2, 3169,
	-1, 1405,
	5, 2197,
	615, 2197,
	667, 2197,
	-2, 3170,
	-1, 1443,
	667, 2707,
	-2, 2698,
	-1, 1444,
	667, 2708,
	-2, 2699,
	-1, 1555,
	205, 3103,
	572, 3103,
	649, 3103,
	669, 3103,
	-2, 0,
	-1, 1560,
	1, 916,
	670, 916,
	673, 916,
	-2, 1795,
	-1, 1618,
	205, 1117,
	-2, 3046,
	-1, 1619,
	205, 1118,
	-2, 2827,
	-1, 1620,
	205, 1119,
	-2, 2997,
	-1, 1621,
	205, 1120,
	-2, 3126,
	-1, 1636,
	433, 1172,
	508, 1172,
	555, 1172,
	577, 1172,
	-2, 0,
	-1, 1647,
	1, 1734,
	243, 1734,
	666, 1734,
	668, 1734,
	670, 1734,
	673, 1734,
	-2, 0,
	-1, 1666,
	1, 1167,
	666, 1167,
	668, 1167,
	670, 1167,
	673, 1167,
	-2, 0,
	-1, 1667,
	1, 1211,
	666, 1211,
	668, 1211,
	670, 1211,
	673, 1211,
	-2, 0,
	-1, 1668,
	1, 1223,
	666, 1223,
	668, 1223,
	670, 1223,
	673, 1223,
	-2, 0,
	-1, 1671,
	1, 1176,
	666, 1176,
	668, 1176,
	670, 1176,
	673, 1176,
	-2, 0,
	-1, 1673,
	1, 1182,
	666, 1182,
	668, 1182,
	670, 1182,
	673, 1182,
	-2, 0,
	-1, 1677,
	1, 1178,
	666, 1178,
	668, 1178,
	670, 1178,
	673, 1178,
	-2, 0,
	-1, 1682,
	1, 1192,
	666, 1192,
	668, 1192,
	670, 1192,
	673, 1192,
	-2, 0,
	-1, 1721,
	1, 3035,
	666, 3035,
	668, 3035,
	669, 3035,
	670, 3035,
	673, 3035,
	-2, 0,
	-1, 1726,
	1, 1281,
	666, 1281,
	668, 1281,
	670, 1281,
	673, 1281,
	-2, 0,
	-1, 1743,
	1, 1790,
	670, 1790,
	673, 1790,
	-2, 1795,
	-1, 1843,
	398, 2671,
	460, 2671,
	510, 2671,
	659, 2671,
	-2, 2659,
	-1, 1851,
	205, 172,
	296, 172,
	362, 172,
	624, 172,
	-2, 3098,
	-1, 1852,
	205, 173,
	296, 173,
	362, 173,
	624, 173,
	-2, 2818,
	-1, 1853,
	205, 174,
	296, 174,
	362, 174,
	624, 174,
	-2, 3011,
	-1, 1859,
	671, 2671,
	-2, 2673,
	-1, 1862,
	25, 3035,
	243, 3035,
	-2, 0,
	-1, 1875,
	1, 1634,
	465, 1588,
	510, 1588,
	641, 1588,
	646, 1588,
	666, 1634,
	668, 1634,
	670, 1634,
	673, 1634,
	-2, 1938,
	-1, 1881,
	221, 1734,
	243, 1734,
	476, 1734,
	-2, 0,
	-1, 1950,
	47, 2669,
	-2, 1365,
	-1, 1957,
	1, 1634,
	666, 1634,
	668, 1634,
	670, 1634,
	673, 1634,
	-2, 1938,
	-1, 1960,
	442, 1402,
	614, 1402,
	-2, 487,
	-1, 1966,
	4, 1659,
	21, 1659,
	22, 1659,
	23, 1659,
	24, 1659,
	25, 1659,
	26, 1659,
	27, 1659,
	28, 1659,
	30, 1659,
	31, 1659,
	37, 1659,
	42, 1659,
	44, 1659,
	45, 1659,
	46, 1659,
	48, 1659,
	49, 1659,
	50, 1659,
	51, 1659,
	52, 1659,
	53, 1659,
	54, 1659,
	55, 1659,
	56, 1659,
	58, 1659,
	59, 1659,
	60, 1659,
	61, 1659,
	63, 1659,
	64, 1659,
	65, 1659,
	66, 1659,
	67, 1659,
	68, 1659,
	69, 1659,
	70, 1659,
	74, 1659,
	75, 1659,
	76, 1659,
	77, 1659,
	79, 1659,
	80, 1659,
	81, 1659,
	85, 1659,
	86, 1659,
	87, 1659,
	88, 1659,
	89, 1659,
	90, 1659,
	91, 1659,
	92, 1659,
	95, 1659,
	96, 1659,
	97, 1659,
	98, 1659,
	99, 1659,
	100, 1659,
	102, 1659,
	104, 1659,
	105, 1659,
	106, 1659,
	107, 1659,
	108, 1659,
	109, 1659,
	110, 1659,
	112, 1659,
	113, 1659,
	114, 1659,
	116, 1659,
	117, 1659,
	118, 1659,
	126, 1659,
	127, 1659,
	128, 1659,
	129, 1659,
	130, 1659,
	132, 1659,
	133, 1659,
	134, 1659,
	135, 1659,
	137, 1659,
	138, 1659,
	139, 1659,
	140, 1659,
	142, 1659,
	143, 1659,
	144, 1659,
	145, 1659,
	147, 1659,
	148, 1659,
	149, 1659,
	152, 1659,
	153, 1659,
	154, 1659,
	156, 1659,
	157, 1659,
	158, 1659,
	160, 1659,
	161, 1659,
	162, 1659,
	164, 1659,
	165, 1659,
	166, 1659,
	167, 1659,
	168, 1659,
	169, 1659,
	170, 1659,
	171, 1659,
	172, 1659,
	173, 1659,
	174, 1659,
	175, 1659,
	176, 1659,
	177, 1659,
	178, 1659,
	179, 1659,
	180, 1659,
	181, 1659,
	182, 1659,
	190, 1659,
	191, 1659,
	192, 1659,
	193, 1659,
	197, 1659,
	199, 1659,
	200, 1659,
	201, 1659,
	203, 1659,
	204, 1659,
	207, 1659,
	208, 1659,
	209, 1659,
	210, 1659,
	211, 1659,
	212, 1659,
	213, 1659,
	214, 1659,
	215, 1659,
	216, 1659,
	217, 1659,
	218, 1659,
	219, 1659,
	220, 1659,
	222, 1659,
	223, 1659,
	225, 1659,
	226, 1659,
	228, 1659,
	229, 1659,
	230, 1659,
	231, 1659,
	232, 1659,
	233, 1659,
	234, 1659,
	235, 1659,
	236, 1659,
	237, 1659,
	238, 1659,
	240, 1659,
	241, 1659,
	242, 1659,
	244, 1659,
	245, 1659,
	246, 1659,
	247, 1659,
	248, 1659,
	252, 1659,
	253, 1659,
	254, 1659,
	255, 1659,
	261, 1659,
	262, 1659,
	263, 1659,
	264, 1659,
	265, 1659,
	266, 1659,
	268, 1659,
	270, 1659,
	271, 1659,
	272, 1659,
	274, 1659,
	276, 1659,
	277, 1659,
	278, 1659,
	280, 1659,
	284, 1659,
	285, 1659,
	286, 1659,
	287, 1659,
	288, 1659,
	289, 1659,
	290, 1659,
	292, 1659,
	293, 1659,
	294, 1659,
	296, 1659,
	297, 1659,
	298, 1659,
	300, 1659,
	301, 1659,
	304, 1659,
	305, 1659,
	306, 1659,
	307, 1659,
	308, 1659,
	309, 1659,
	310, 1659,
	313, 1659,
	314, 1659,
	315, 1659,
	316, 1659,
	318, 1659,
	319, 1659,
	320, 1659,
	321, 1659,
	322, 1659,
	323, 1659,
	324, 1659,
	325, 1659,
	326, 1659,
	327, 1659,
	328, 1659,
	329, 1659,
	330, 1659,
	331, 1659,
	332, 1659,
	333, 1659,
	334, 1659,
	335, 1659,
	336, 1659,
	337, 1659,
	338, 1659,
	339, 1659,
	340, 1659,
	342, 1659,
	344, 1659,
	345, 1659,
	346, 1659,
	347, 1659,
	348, 1659,
	349, 1659,
	350, 1659,
	351, 1659,
	352, 1659,
	353, 1659,
	354, 1659,
	355, 1659,
	356, 1659,
	357, 1659,
	358, 1659,
	359, 1659,
	360, 1659,
	362, 1659,
	363, 1659,
	365, 1659,
	368, 1659,
	369, 1659,
	370, 1659,
	371, 1659,
	373, 1659,
	374, 1659,
	375, 1659,
	376, 1659,
	377, 1659,
	380, 1659,
	382, 1659,
	383, 1659,
	385, 1659,
	386, 1659,
	387, 1659,
	390, 1659,
	391, 1659,
	392, 1659,
	394, 1659,
	396, 1659,
	397, 1659,
	398, 1659,
	399, 1659,
	400, 1659,
	401, 1659,
	402, 1659,
	403, 1659,
	404, 1659,
	405, 1659,
	406, 1659,
	407, 1659,
	408, 1659,
	409, 1659,
	411, 1659,
	412, 1659,
	413, 1659,
	414, 1659,
	415, 1659,
	416, 1659,
	417, 1659,
	418, 1659,
	419, 1659,
	420, 1659,
	421, 1659,
	422, 1659,
	423, 1659,
	424, 1659,
	425, 1659,
	427, 1659,
	428, 1659,
	429, 1659,
	431, 1659,
	432, 1659,
	433, 1659,
	434, 1659,
	435, 1659,
	436, 1659,
	437, 1659,
	438, 1659,
	439, 1659,
	440, 1659,
	441, 1659,
	442, 1659,
	443, 1659,
	444, 1659,
	446, 1659,
	448, 1659,
	449, 1659,
	450, 1659,
	456, 1659,
	457, 1659,
	458, 1659,
	460, 1659,
	461, 1659,
	462, 1659,
	463, 1659,
	464, 1659,
	465, 1659,
	466, 1659,
	467, 1659,
	468, 1659,
	469, 1659,
	470, 1659,
	472, 1659,
	473, 1659,
	474, 1659,
	475, 1659,
	476, 1659,
	478, 1659,
	479, 1659,
	480, 1659,
	481, 1659,
	482, 1659,
	483, 1659,
	484, 1659,
	486, 1659,
	487, 1659,
	488, 1659,
	489, 1659,
	490, 1659,
	491, 1659,
	492, 1659,
	493, 1659,
	494, 1659,
	495, 1659,
	496, 1659,
	497, 1659,
	498, 1659,
	499, 1659,
	500, 1659,
	501, 1659,
	503, 1659,
	504, 1659,
	505, 1659,
	506, 1659,
	507, 1659,
	508, 1659,
	510, 1659,
	511, 1659,
	512, 1659,
	513, 1659,
	514, 1659,
	515, 1659,
	516, 1659,
	518, 1659,
	519, 1659,
	520, 1659,
	521, 1659,
	522, 1659,
	523, 1659,
	524, 1659,
	525, 1659,
	527, 1659,
	529, 1659,
	530, 1659,
	531, 1659,
	532, 1659,
	533, 1659,
	534, 1659,
	535, 1659,
	536, 1659,
	537, 1659,
	538, 1659,
	539, 1659,
	540, 1659,
	541, 1659,
	542, 1659,
	543, 1659,
	544, 1659,
	545, 1659,
	546, 1659,
	547, 1659,
	548, 1659,
	549, 1659,
	551, 1659,
	552, 1659,
	554, 1659,
	555, 1659,
	557, 1659,
	558, 1659,
	559, 1659,
	560, 1659,
	561, 1659,
	562, 1659,
	564, 1659,
	565, 1659,
	567, 1659,
	568, 1659,
	569, 1659,
	570, 1659,
	571, 1659,
	573, 1659,
	575, 1659,
	576, 1659,
	577, 1659,
	578, 1659,
	579, 1659,
	580, 1659,
	581, 1659,
	582, 1659,
	584, 1659,
	585, 1659,
	586, 1659,
	587, 1659,
	588, 1659,
	589, 1659,
	590, 1659,
	593, 1659,
	594, 1659,
	595, 1659,
	596, 1659,
	597, 1659,
	598, 1659,
	599, 1659,
	600, 1659,
	601, 1659,
	603, 1659,
	606, 1659,
	607, 1659,
	608, 1659,
	609, 1659,
	610, 1659,
	611, 1659,
	613, 1659,
	614, 1659,
	615, 1659,
	616, 1659,
	617, 1659,
	618, 1659,
	619, 1659,
	620, 1659,
	621, 1659,
	622, 1659,
	623, 1659,
	624, 1659,
	629, 1659,
	630, 1659,
	631, 1659,
	632, 1659,
	633, 1659,
	634, 1659,
	-2, 0,
	-1, 1989,
	1, 740,
	666, 740,
	668, 740,
	670, 740,
	673, 740,
	-2, 1909,
	-1, 1992,
	4, 3212,
	11, 3212,
	12, 3212,
	14, 3212,
	15, 3212,
	16, 3212,
	17, 3212,
	18, 3212,
	19, 3212,
	21, 3212,
	22, 3212,
	23, 3212,
	24, 3212,
	25, 3212,
	26, 3212,
	27, 3212,
	28, 3212,
	30, 3212,
	31, 3212,
	34, 3212,
	35, 3212,
	37, 3212,
	39, 3212,
	41, 3212,
	42, 3212,
	44, 3212,
	45, 3212,
	46, 3212,
	48, 3212,
	49, 3212,
	50, 3212,
	51, 3212,
	52, 3212,
	53, 3212,
	54, 3212,
	55, 3212,
	56, 3212,
	58, 3212,
	59, 3212,
	60, 3212,
	61, 3212,
	63, 3212,
	64, 3212,
	65, 3212,
	66, 3212,
	67, 3212,
	68, 3212,
	69, 3212,
	70, 3212,
	73, 3212,
	74, 3212,
	75, 3212,
	76, 3212,
	77, 3212,
	79, 3212,
	80, 3212,
	81, 3212,
	82, 3212,
	85, 3212,
	86, 3212,
	87, 3212,
	88, 3212,
	89, 3212,
	90, 3212,
	91, 3212,
	92, 3212,
	93, 3212,
	95, 3212,
	96, 3212,
	97, 3212,
	98, 3212,
	99, 3212,
	100, 3212,
	102, 3212,
	103, 3212,
	104, 3212,
	105, 3212,
	106, 3212,
	107, 3212,
	108, 3212,
	109, 3212,
	110, 3212,
	112, 3212,
	113, 3212,
	114, 3212,
	115, 3212,
	116, 3212,
	117, 3212,
	118, 3212,
	126, 3212,
	127, 3212,
	128, 3212,
	129, 3212,
	130, 3212,
	132, 3212,
	133, 3212,
	134, 3212,
	135, 3212,
	137, 3212,
	138, 3212,
	139, 3212,
	140, 3212,
	142, 3212,
	143, 3212,
	144, 3212,
	145, 3212,
	147, 3212,
	148, 3212,
	149, 3212,
	152, 3212,
	153, 3212,
	154, 3212,
	156, 3212,
	157, 3212,
	158, 3212,
	160, 3212,
	161, 3212,
	162, 3212,
	164, 3212,
	165, 3212,
	166, 3212,
	167, 3212,
	168, 3212,
	169, 3212,
	170, 3212,
	171, 3212,
	172, 3212,
	173, 3212,
	174, 3212,
	175, 3212,
	176, 3212,
	177, 3212,
	178, 3212,
	179, 3212,
	180, 3212,
	181, 3212,
	182, 3212,
	186, 3212,
	187, 3212,
	188, 3212,
	189, 3212,
	190, 3212,
	191, 3212,
	192, 3212,
	193, 3212,
	196, 3212,
	197, 3212,
	199, 3212,
	200, 3212,
	201, 3212,
	203, 3212,
	204, 3212,
	206, 3212,
	207, 3212,
	208, 3212,
	209, 3212,
	210, 3212,
	211, 3212,
	212, 3212,
	213, 3212,
	214, 3212,
	215, 3212,
	216, 3212,
	217, 3212,
	218, 3212,
	219, 3212,
	220, 3212,
	222, 3212,
	223, 3212,
	225, 3212,
	226, 3212,
	228, 3212,
	229, 3212,
	230, 3212,
	231, 3212,
	232, 3212,
	233, 3212,
	234, 3212,
	235, 3212,
	236, 3212,
	237, 3212,
	238, 3212,
	239, 3212,
	240, 3212,
	241, 3212,
	242, 3212,
	243, 3212,
	244, 3212,
	245, 3212,
	246, 3212,
	247, 3212,
	248, 3212,
	250, 3212,
	251, 3212,
	252, 3212,
	253, 3212,
	254, 3212,
	255, 3212,
	260, 3212,
	261, 3212,
	262, 3212,
	263, 3212,
	264, 3212,
	265, 3212,
	266, 3212,
	268, 3212,
	270, 3212,
	271, 3212,
	272, 3212,
	273, 3212,
	274, 3212,
	275, 3212,
	276, 3212,
	277, 3212,
	278, 3212,
	279, 3212,
	280, 3212,
	282, 3212,
	283, 3212,
	284, 3212,
	285, 3212,
	286, 3212,
	287, 3212,
	288, 3212,
	289, 3212,
	290, 3212,
	292, 3212,
	293, 3212,
	294, 3212,
	296, 3212,
	297, 3212,
	298, 3212,
	299, 3212,
	300, 3212,
	301, 3212,
	302, 3212,
	304, 3212,
	305, 3212,
	306, 3212,
	307, 3212,
	308, 3212,
	309, 3212,
	310, 3212,
	313, 3212,
	314, 3212,
	315, 3212,
	316, 3212,
	317, 3212,
	318, 3212,
	319, 3212,
	320, 3212,
	321, 3212,
	322, 3212,
	323, 3212,
	324, 3212,
	325, 3212,
	326, 3212,
	327, 3212,
	328, 3212,
	329, 3212,
	330, 3212,
	331, 3212,
	332, 3212,
	333, 3212,
	334, 3212,
	335, 3212,
	336, 3212,
	337, 3212,
	338, 3212,
	339, 3212,
	340, 3212,
	342, 3212,
	343, 3212,
	344, 3212,
	345, 3212,
	346, 3212,
	347, 3212,
	348, 3212,
	349, 3212,
	350, 3212,
	351, 3212,
	352, 3212,
	353, 3212,
	354, 3212,
	355, 3212,
	356, 3212,
	357, 3212,
	358, 3212,
	359, 3212,
	360, 3212,
	362, 3212,
	363, 3212,
	365, 3212,
	367, 3212,
	368, 3212,
	369, 3212,
	370, 3212,
	371, 3212,
	373, 3212,
	374, 3212,
	375, 3212,
	376, 3212,
	377, 3212,
	380, 3212,
	382, 3212,
	385, 3212,
	386, 3212,
	387, 3212,
	388, 3212,
	390, 3212,
	391, 3212,
	392, 3212,
	394, 3212,
	396, 3212,
	397, 3212,
	398, 3212,
	399, 3212,
	400, 3212,
	401, 3212,
	402, 3212,
	403, 3212,
	404, 3212,
	405, 3212,
	406, 3212,
	407, 3212,
	408, 3212,
	409, 3212,
	411, 3212,
	412, 3212,
	413, 3212,
	414, 3212,
	415, 3212,
	416, 3212,
	417, 3212,
	418, 3212,
	419, 3212,
	420, 3212,
	421, 3212,
	422, 3212,
	423, 3212,
	424, 3212,
	425, 3212,
	427, 3212,
	428, 3212,
	429, 3212,
	431, 3212,
	432, 3212,
	433, 3212,
	434, 3212,
	435, 3212,
	436, 3212,
	437, 3212,
	438, 3212,
	439, 3212,
	440, 3212,
	441, 3212,
	442, 3212,
	443, 3212,
	444, 3212,
	446, 3212,
	448, 3212,
	449, 3212,
	450, 3212,
	456, 3212,
	457, 3212,
	458, 3212,
	459, 3212,
	460, 3212,
	461, 3212,
	462, 3212,
	463, 3212,
	464, 3212,
	465, 3212,
	466, 3212,
	467, 3212,
	468, 3212,
	469, 3212,
	470, 3212,
	472, 3212,
	473, 3212,
	474, 3212,
	475, 3212,
	476, 3212,
	477, 3212,
	478, 3212,
	479, 3212,
	480, 3212,
	481, 3212,
	482, 3212,
	483, 3212,
	484, 3212,
	485, 3212,
	486, 3212,
	487, 3212,
	488, 3212,
	489, 3212,
	490, 3212,
	491, 3212,
	492, 3212,
	493, 3212,
	494, 3212,
	495, 3212,
	496, 3212,
	497, 3212,
	498, 3212,
	499, 3212,
	500, 3212,
	501, 3212,
	503, 3212,
	504, 3212,
	505, 3212,
	506, 3212,
	507, 3212,
	508, 3212,
	510, 3212,
	511, 3212,
	512, 3212,
	513, 3212,
	514, 3212,
	515, 3212,
	516, 3212,
	517, 3212,
	518, 3212,
	519, 3212,
	520, 3212,
	521, 3212,
	522, 3212,
	523, 3212,
	524, 3212,
	525, 3212,
	527, 3212,
	529, 3212,
	530, 3212,
	531, 3212,
	532, 3212,
	533, 3212,
	534, 3212,
	535, 3212,
	536, 3212,
	537, 3212,
	538, 3212,
	539, 3212,
	540, 3212,
	541, 3212,
	542, 3212,
	543, 3212,
	544, 3212,
	545, 3212,
	546, 3212,
	547, 3212,
	548, 3212,
	549, 3212,
	551, 3212,
	552, 3212,
	553, 3212,
	554, 3212,
	555, 3212,
	557, 3212,
	558, 3212,
	559, 3212,
	560, 3212,
	561, 3212,
	562, 3212,
	564, 3212,
	565, 3212,
	567, 3212,
	568, 3212,
	569, 3212,
	570, 3212,
	571, 3212,
	573, 3212,
	575, 3212,
	576, 3212,
	577, 3212,
	578, 3212,
	579, 3212,
	580, 3212,
	581, 3212,
	582, 3212,
	584, 3212,
	585, 3212,
	586, 3212,
	587, 3212,
	588, 3212,
	589, 3212,
	590, 3212,
	593, 3212,
	594, 3212,
	595, 3212,
	596, 3212,
	597, 3212,
	598, 3212,
	599, 3212,
	600, 3212,
	601, 3212,
	603, 3212,
	606, 3212,
	607, 3212,
	608, 3212,
	609, 3212,
	610, 3212,
	611, 3212,
	613, 3212,
	614, 3212,
	615, 3212,
	616, 3212,
	617, 3212,
	618, 3212,
	619, 3212,
	620, 3212,
	621, 3212,
	622, 3212,
	623, 3212,
	624, 3212,
	629, 3212,
	630, 3212,
	631, 3212,
	632, 3212,
	633, 3212,
	634, 3212,
	635, 3212,
	637, 3212,
	647, 3212,
	648, 3212,
	649, 3212,
	650, 3212,
	651, 3212,
	652, 3212,
	654, 3212,
	655, 3212,
	656, 3212,
	657, 3212,
	658, 3212,
	659, 3212,
	660, 3212,
	661, 3212,
	662, 3212,
	665, 3212,
	668, 3212,
	669, 3212,
	671, 3212,
	672, 3212,
	-2, 0,
	-1, 1997,
	205, 3056,
	572, 3056,
	649, 3056,
	669, 3056,
	-2, 0,
	-1, 2039,
	185, 1952,
	198, 1952,
	303, 1952,
	378, 1952,
	-2, 1890,
	-1, 2142,
	163, 1911,
	185, 1911,
	198, 1911,
	267, 1911,
	303, 1911,
	378, 1911,
	389, 1911,
	591, 1911,
	-2, 2377,
	-1, 2189,
	667, 2198,
	-2, 2188,
	-1, 2206,
	668, 2553,
	-2, 0,
	-1, 2243,
	163, 1911,
	185, 1911,
	198, 1911,
	267, 1911,
	303, 1911,
	378, 1911,
	389, 1911,
	591, 1911,
	-2, 2052,
	-1, 2282,
	669, 2698,
	672, 2698,
	-2, 1308,
	-1, 2283,
	669, 2700,
	672, 2700,
	-2, 1309,
	-1, 2284,
	669, 2699,
	672, 2699,
	-2, 1310,
	-1, 2285,
	672, 2621,
	-2, 1311,
	-1, 2321,
	667, 2199,
	-2, 2187,
	-1, 2338,
	205, 3053,
	669, 3053,
	672, 3053,
	-2, 0,
	-1, 2390,
	1, 918,
	670, 918,
	673, 918,
	-2, 1795,
	-1, 2454,
	1, 1169,
	666, 1169,
	668, 1169,
	670, 1169,
	673, 1169,
	-2, 0,
	-1, 2455,
	1, 1213,
	666, 1213,
	668, 1213,
	670, 1213,
	673, 1213,
	-2, 0,
	-1, 2456,
	1, 1225,
	666, 1225,
	668, 1225,
	670, 1225,
	673, 1225,
	-2, 0,
	-1, 2457,
	1, 1283,
	666, 1283,
	668, 1283,
	670, 1283,
	673, 1283,
	-2, 0,
	-1, 2501,
	1, 1194,
	666, 1194,
	668, 1194,
	670, 1194,
	673, 1194,
	-2, 0,
	-1, 2528,
	1, 1262,
	666, 1262,
	668, 1262,
	670, 1262,
	673, 1262,
	-2, 0,
	-1, 2707,
	243, 325,
	-2, 2706,
	-1, 2708,
	243, 326,
	-2, 389,
	-1, 2833,
	483, 1979,
	484, 1979,
	-2, 2232,
	-1, 2866,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2252,
	-1, 2867,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2253,
	-1, 2868,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2254,
	-1, 2869,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2255,
	-1, 2870,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2256,
	-1, 2871,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2257,
	-1, 2872,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2258,
	-1, 2873,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2259,
	-1, 2886,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2272,
	-1, 2887,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2273,
	-1, 2888,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2274,
	-1, 2892,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2281,
	-1, 2898,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2285,
	-1, 2900,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2293,
	-1, 2901,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2294,
	-1, 2902,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2295,
	-1, 2903,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2296,
	-1, 3081,
	5, 2710,
	205, 2564,
	667, 2707,
	-2, 2698,
	-1, 3082,
	205, 2565,
	-2, 3142,
	-1, 3083,
	205, 2566,
	-2, 2923,
	-1, 3084,
	205, 2567,
	-2, 2789,
	-1, 3085,
	205, 2568,
	-2, 2855,
	-1, 3086,
	205, 2569,
	-2, 2908,
	-1, 3087,
	205, 2570,
	-2, 3049,
	-1, 3088,
	205, 2571,
	-2, 2360,
	-1, 3183,
	1, 2053,
	2, 2053,
	115, 2053,
	163, 2053,
	185, 2053,
	198, 2053,
	206, 2053,
	224, 2053,
	227, 2053,
	260, 2053,
	267, 2053,
	279, 2053,
	299, 2053,
	303, 2053,
	343, 2053,
	378, 2053,
	383, 2053,
	389, 2053,
	471, 2053,
	477, 2053,
	591, 2053,
	604, 2053,
	626, 2053,
	627, 2053,
	628, 2053,
	638, 2053,
	666, 2053,
	668, 2053,
	670, 2053,
	672, 2053,
	673, 2053,
	-2, 2052,
	-1, 3199,
	667, 2678,
	-2, 2693,
	-1, 3201,
	1, 406,
	626, 406,
	673, 406,
	-2, 1938,
	-1, 3266,
	38, 2710,
	136, 2710,
	649, 2710,
	665, 2710,
	668, 2710,
	669, 2710,
	672, 2710,
	-2, 2707,
	-1, 3267,
	38, 2711,
	136, 2711,
	649, 2711,
	665, 2711,
	668, 2711,
	669, 2711,
	672, 2711,
	-2, 2708,
	-1, 3372,
	1, 1266,
	666, 1266,
	668, 1266,
	670, 1266,
	673, 1266,
	-2, 0,
	-1, 3575,
	1, 1634,
	465, 1588,
	510, 1588,
	641, 1588,
	646, 1588,
	666, 1634,
	668, 1634,
	670, 1634,
	673, 1634,
	-2, 1938,
	-1, 3689,
	384, 1982,
	-2, 3201,
	-1, 3690,
	384, 1983,
	-2, 3032,
	-1, 3694,
	483, 2632,
	484, 2632,
	-2, 2358,
	-1, 3695,
	483, 2636,
	484, 2636,
	-2, 2359,
	-1, 3696,
	483, 2633,
	484, 2633,
	-2, 2358,
	-1, 3697,
	483, 2637,
	484, 2637,
	-2, 2359,
	-1, 3711,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2283,
	-1, 3712,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2287,
	-1, 3718,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2289,
	-1, 3967,
	1, 913,
	666, 913,
	668, 913,
	670, 913,
	673, 913,
	-2, 1795,
	-1, 4226,
	47, 2669,
	-2, 1366,
	-1, 4231,
	1, 1634,
	666, 1634,
	668, 1634,
	670, 1634,
	673, 1634,
	-2, 1938,
	-1, 4316,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2291,
	-1, 4323,
	273, 0,
	275, 0,
	367, 0,
	-2, 2310,
	-1, 4392,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2339,
	-1, 4393,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2340,
	-1, 4394,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2341,
	-1, 4398,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2345,
	-1, 4399,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2346,
	-1, 4400,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2347,
	-1, 4452,
	667, 2679,
	-2, 2694,
	-1, 4717,
	669, 3321,
	-2, 1864,
	-1, 4760,
	273, 0,
	275, 0,
	367, 0,
	-2, 2311,
	-1, 4763,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2314,
	-1, 4764,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2316,
	-1, 4901,
	669, 2695,
	-2, 1669,
	-1, 5074,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2315,
	-1, 5075,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2317,
	-1, 5086,
	273, 0,
	-2, 2350,
	-1, 5289,
	273, 0,
	-2, 2351,
	-1, 5522,
	55, 0,
	239, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 3164,
}

const sqlPrivate = 57344

const sqlLast = 165993

var sqlAct = [...]int16{
	322, 5685, 1536, 3646, 5747, 5727, 5656, 5450, 5451, 3498,
	5345, 5155, 3315, 5595, 5577, 3854, 1120, 6, 5521, 1121,
	10, 5508, 5570, 5390, 5670, 4, 1260, 207, 5535, 5337,
	5406, 5489, 4213, 2347, 2704, 5441, 5465, 5462, 5536, 5604,
	5537, 5262, 5242, 1623, 2564, 4214, 3927, 4518, 4690, 5227,
	4356, 5212, 1592, 1436, 5481, 5533, 5293, 5520, 2444, 5039,
	5028, 4993, 5034, 4957, 4308, 5160, 1447, 2795, 5095, 2843,
	4032, 3615, 4709, 4029, 3113, 4151, 5373, 4608, 5067, 4701,
	4249, 4878, 4897, 2421, 4898, 3407, 3703, 3259, 3666, 1252,
	1041, 3406, 4101, 1524, 2048, 2915, 4684, 3514, 5044, 3855,
	4243, 4197, 2296, 4682, 4666, 2015, 821, 4648, 897, 2573,
	2371, 4202, 4650, 4035, 4442, 5091, 2853, 4276, 3605, 3630,
	2793, 1041, 4181, 3635, 4278, 2844, 4016, 4204, 4201, 4194,
	2249, 4175, 3317, 4018, 4174, 3910, 4017, 4455, 1426, 207,
	2770, 3903, 3860, 3869, 3835, 4799, 1528, 1125, 1749, 3877,
	3213, 3661, 3858, 2218, 2693, 3647, 3582, 2674, 1517, 1309,
	2623, 3527, 3632, 4056, 2691, 4517, 2013, 4021, 5578, 833,
	1840, 2585, 3333, 1886, 935, 2215, 3184, 4195, 3176, 2278,
	3894, 4419, 3175, 3834, 2150, 2850, 1533, 5294, 2192, 2120,
	1887, 3687, 2928, 1036, 2743, 2996, 1115, 2668, 3544, 129,
	3660, 2994, 1644, 2654, 2672, 2650, 3178, 1310, 893, 3616,
	2646, 1314, 2556, 2552, 1743, 2369, 3257, 1575, 3258, 3156,
	1531, 1952, 1500, 1319, 1590, 2985, 2219, 2912, 1503, 2791,
	3110, 2832, 2420, 1510, 316, 2757, 3219, 2417, 2815, 1990,
	1594, 3640, 2813, 1955, 1625, 1948, 870, 2235, 2742, 2238,
	1514, 940, 315, 2677, 3431, 2410, 5728, 3214, 1562, 5407,
	1506, 2184, 3392, 1043, 808, 4205, 3432, 1480, 831, 1891,
	2988, 913, 1477, 1465, 1430, 1409, 3165, 3125, 5486, 2692,
	1042, 2228, 1444, 2134, 3077, 2966, 218, 878, 2050, 1281,
	3265, 2049, 3043, 219, 1043, 889, 1981, 1093, 852, 2682,
	2814, 1915, 1988, 2816, 2465, 5596, 1263, 1850, 5657, 1682,
	1666, 1042, 133, 2469, 1295, 826, 1587, 52, 119, 51,
	1432, 49, 40, 38, 1047, 36, 1407, 2055, 3741, 1742,
	1675, 1427, 1737, 3735, 822, 1031, 835, 963, 4433, 2349,
	5762, 4434, 1050, 3856, 3155, 5750, 2349, 906, 909, 3979,
	2349, 1094, 2349, 5737, 183, 1047, 3928, 5735, 4835, 5531,
	2349, 3155, 2349, 88, 5734, 54, 53, 5694, 3155, 5115,
	5692, 5159, 5626, 1050, 5159, 5579, 2712, 5561, 5559, 5580,
	5556, 3155, 3155, 89, 5557, 5530, 5553, 82, 5518, 4258,
	5554, 5517, 2712, 5516, 5506, 2712, 5123, 3671, 5159, 5114,
	2382, 94, 2382, 2065, 2066, 5113, 2099, 2100, 2101, 2110,
	2111, 2112, 75, 5504, 5495, 5120, 5119, 5159, 5159, 56,
	1257, 181, 1256, 5118, 1424, 5493, 2103, 2096, 5460, 5159,
	3805, 3806, 5159, 2097, 5424, 5411, 2068, 1949, 3230, 2712,
	5022, 55, 5389, 1571, 104, 5387, 2712, 2116, 5385, 5159,
	5366, 5314, 5159, 5313, 4982, 3155, 5291, 3155, 5276, 5244,
	3230, 4259, 4734, 4527, 1571, 2122, 5236, 5178, 1245, 2379,
	5159, 2712, 58, 76, 2067, 5177, 1672, 2792, 2445, 2712,
	1410, 1410, 59, 3979, 5166, 2087, 5165, 65, 2712, 1442,
	5159, 3920, 83, 5158, 1235, 2084, 3944, 5159, 4423, 2379,
	57, 1234, 128, 5102, 1256, 2379, 5076, 2712, 112, 125,
	3230, 5054, 3820, 4952, 3938, 3671, 4925, 3155, 77, 4859,
	3155, 3127, 3610, 3979, 2941, 2942, 2943, 2960, 2961, 2962,
	4814, 4762, 4725, 4719, 4815, 3230, 4271, 4271, 4663, 4558,
	4526, 3750, 4664, 4559, 4527, 2963, 4448, 3751, 1251, 4446,
	4449, 2964, 4426, 4447, 60, 4340, 3155, 4336, 3251, 2712,
	4270, 3155, 3805, 3806, 4271, 3823, 3824, 3825, 3947, 3853,
	3851, 1472, 3948, 3155, 3852, 113, 3225, 1462, 2090, 2091,
	2092, 2093, 3846, 2122, 2712, 4758, 3155, 2382, 2073, 3845,
	3796, 2379, 3794, 3155, 3797, 47, 3795, 2065, 2066, 3702,
	3783, 1411, 3781, 2953, 3784, 3752, 3155, 3670, 3657, 3155,
	3656, 3671, 2780, 2949, 2780, 3811, 3805, 3806, 3291, 3229,
	2382, 2096, 3155, 3230, 3211, 3203, 3155, 5425, 3155, 2712,
	2068, 2107, 3154, 2779, 5295, 2117, 3155, 2780, 1413, 5286,
	1414, 5278, 2095, 2098, 3820, 2065, 2066, 3671, 4423, 279,
	3126, 5032, 4982, 2991, 2379, 4926, 4734, 4665, 2382, 2122,
	78, 4658, 3505, 3391, 2396, 2113, 2711, 2114, 2067, 2096,
	3302, 3610, 1676, 2025, 2082, 2083, 2578, 1463, 2068, 4147,
	2375, 2348, 3524, 3220, 2213, 2362, 1463, 1884, 4576, 4311,
	3983, 2236, 2661, 4260, 2105, 3195, 2954, 2955, 2956, 2957,
	1646, 3194, 3193, 281, 3192, 3155, 2948, 2122, 3191, 2088,
	279, 1415, 1412, 4261, 3023, 1244, 2067, 1243, 1242, 1241,
	3805, 3806, 1240, 3823, 3824, 3825, 1239, 1238, 1237, 1233,
	1232, 1231, 1230, 1229, 1228, 1227, 3821, 2350, 1226, 117,
	1225, 3362, 5546, 1224, 2350, 1223, 1222, 3811, 2350, 1221,
	2350, 1220, 1219, 1218, 2992, 1217, 280, 61, 2350, 2115,
	2350, 1216, 3805, 3806, 281, 3823, 3824, 3825, 1215, 1214,
	1213, 1212, 1211, 1198, 64, 273, 1197, 1196, 1195, 67,
	2104, 1194, 2073, 1193, 274, 4757, 1192, 3740, 1191, 79,
	1190, 2119, 2958, 2959, 1189, 1188, 1187, 66, 216, 1186,
	120, 3811, 3820, 124, 1185, 1184, 1317, 1183, 1182, 62,
	1181, 1180, 1179, 182, 220, 1178, 1177, 280, 2119, 1176,
	1175, 63, 1174, 1173, 3827, 1890, 2379, 2951, 1172, 1910,
	2073, 1171, 1170, 1169, 1168, 279, 2095, 2098, 4819, 2006,
	3610, 1167, 1166, 70, 3820, 2993, 1165, 2990, 1164, 81,
	4774, 2094, 2379, 1163, 1162, 1161, 1160, 1159, 1158, 1147,
	1146, 3021, 1145, 2379, 1140, 1139, 180, 1132, 3821, 1676,
	1131, 1538, 1319, 1130, 1114, 220, 1113, 2089, 5046, 1112,
	5281, 4481, 2379, 2379, 2095, 2098, 1111, 1068, 4438, 281,
	2379, 1067, 1066, 1065, 1064, 1063, 1054, 1053, 1052, 1319,
	1319, 1319, 1898, 2088, 3822, 3811, 1051, 3126, 1013, 2108,
	1012, 904, 903, 902, 884, 310, 309, 179, 308, 307,
	306, 305, 3821, 304, 303, 302, 4272, 80, 4258, 301,
	1464, 300, 299, 298, 222, 297, 296, 295, 294, 5545,
	293, 2382, 280, 292, 1474, 2121, 1628, 3811, 3277, 291,
	2119, 2088, 2379, 290, 2375, 3805, 3806, 289, 3823, 3824,
	3825, 273, 2348, 1463, 2808, 288, 287, 286, 1319, 285,
	274, 1319, 284, 283, 217, 282, 279, 3988, 4326, 221,
	3906, 2379, 1579, 1580, 1581, 2119, 1890, 3763, 3126, 3746,
	3737, 3591, 112, 3364, 3337, 2952, 3399, 3399, 3234, 3200,
	220, 3625, 3007, 3, 2119, 3182, 3005, 2550, 2195, 2423,
	2381, 3849, 2262, 1566, 2161, 2194, 1893, 1752, 3643, 2152,
	2995, 1738, 1319, 1583, 3827, 1628, 3821, 2106, 1319, 1319,
	281, 1446, 1538, 2119, 1875, 1676, 3822, 3820, 1463, 2079,
	2080, 2086, 2109, 2085, 2081, 2198, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 2239, 3850, 1319, 5542, 1319,
	4784, 1319, 1909, 2121, 4783, 5519, 5503, 5394, 3821, 5298,
	1628, 2089, 5283, 3816, 3814, 3815, 3807, 3808, 3809, 3810,
	3812, 3813, 5090, 280, 5052, 5031, 2062, 2195, 1439, 4797,
	3822, 4796, 1509, 1513, 2194, 1538, 4790, 1957, 1676, 1674,
	1558, 4789, 273, 5150, 4788, 4781, 4780, 1560, 2119, 4778,
	5048, 274, 4773, 1904, 4770, 3805, 3806, 1860, 1628, 2089,
	4769, 1316, 4662, 4657, 2193, 1521, 1628, 4482, 1566, 4678,
	4451, 4413, 4412, 1855, 4411, 1319, 4372, 1319, 4332, 2121,
	3811, 220, 1628, 1597, 1598, 207, 207, 4327, 3901, 3842,
	2119, 1319, 3833, 1319, 2989, 3805, 3806, 2938, 2939, 2940,
	2965, 2950, 2944, 3804, 2946, 2947, 2945, 2932, 2933, 2934,
	2935, 2936, 2937, 279, 3801, 1691, 1888, 3800, 1423, 1847,
	4564, 3397, 3798, 3793, 1552, 3792, 1586, 2121, 3239, 3805,
	3806, 1962, 1965, 1608, 3822, 3791, 3788, 3787, 3817, 3818,
	3819, 2153, 3786, 2151, 2159, 3816, 3814, 3815, 3807, 3808,
	3809, 3810, 3812, 3813, 3782, 3762, 3745, 3827, 3738, 2760,
	3736, 3658, 3183, 2978, 2154, 2717, 2062, 281, 2715, 2061,
	3805, 3806, 5756, 1589, 2493, 5678, 3822, 1599, 1600, 5677,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 1984,
	4574, 1873, 5594, 2152, 5592, 1448, 4358, 5452, 4679, 1968,
	5371, 3821, 3807, 3808, 3809, 3810, 3812, 3813, 5357, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 3627, 5353, 1047,
	280, 1885, 5352, 5351, 5331, 1637, 5330, 1845, 5328, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 1050, 5297, 273,
	3811, 1982, 2030, 1319, 5296, 5280, 5274, 2918, 274, 1319,
	5260, 5257, 5256, 1950, 2029, 1993, 1995, 1257, 1869, 279,
	5240, 5238, 5174, 1566, 2040, 5145, 5088, 5015, 1321, 279,
	5011, 5009, 5007, 1123, 1739, 4983, 4864, 4863, 220, 279,
	3811, 4795, 4735, 2119, 4669, 4562, 1903, 1745, 1116, 1837,
	1842, 2010, 4561, 3396, 3396, 1544, 3817, 3818, 3819, 3847,
	4542, 4541, 1991, 3816, 3814, 3815, 3807, 3808, 3809, 3810,
	3812, 3813, 4539, 281, 3811, 3396, 88, 3895, 1119, 1118,
	3022, 2216, 4429, 281, 279, 3805, 3806, 4416, 1897, 4322,
	2139, 4273, 4235, 281, 5047, 4127, 89, 1259, 3817, 3818,
	3819, 4067, 279, 1438, 4034, 3816, 3814, 3815, 3807, 3808,
	3809, 3810, 3812, 3813, 94, 3811, 4679, 1319, 1319, 1319,
	3980, 3767, 3766, 1319, 3761, 3727, 280, 3604, 3602, 3822,
	1444, 2141, 1444, 3424, 2201, 2200, 280, 2924, 281, 2199,
	2196, 2190, 2185, 2183, 3197, 273, 280, 1752, 3190, 3153,
	3034, 3933, 3003, 2138, 274, 273, 281, 104, 2353, 1319,
	207, 3821, 2284, 1538, 274, 273, 2005, 2261, 1543, 2217,
	2309, 2284, 2210, 1538, 274, 2209, 1538, 1628, 2208, 2063,
	2207, 2206, 2024, 2205, 220, 2204, 2203, 2202, 2191, 2180,
	2179, 280, 2178, 2177, 220, 3821, 2176, 2225, 2041, 2175,
	1122, 2174, 1257, 2119, 220, 2173, 2172, 2171, 3626, 280,
	273, 2170, 2169, 57, 2168, 128, 2167, 2166, 5282, 274,
	2165, 112, 125, 2154, 2140, 2272, 5300, 3020, 273, 2137,
	2132, 2036, 2037, 2277, 2360, 1551, 3821, 274, 1469, 1458,
	2365, 5299, 5021, 2119, 2367, 4840, 1538, 1235, 1987, 3642,
	4766, 2372, 1319, 2045, 1234, 2374, 2044, 4480, 4445, 2197,
	4432, 1673, 2378, 2039, 2271, 3749, 3232, 220, 3188, 5116,
	3811, 2222, 2223, 4842, 2246, 4479, 1319, 2119, 2153, 3931,
	2135, 4264, 2058, 2059, 1752, 1593, 2416, 2257, 113, 3805,
	3806, 3817, 3818, 3819, 1593, 4928, 1576, 1578, 3816, 3814,
	3815, 3807, 3808, 3809, 3810, 3812, 3813, 1593, 2266, 2065,
	2066, 3499, 5669, 279, 4659, 1410, 1628, 1593, 2119, 1628,
	1628, 1628, 1628, 2186, 2187, 1593, 2388, 2414, 5361, 3822,
	5354, 1257, 5051, 4968, 4967, 2287, 4966, 1442, 1591, 1442,
	1593, 4965, 2068, 4964, 2287, 4927, 3898, 4821, 4742, 2292,
	2334, 3450, 2285, 1896, 2284, 1902, 4741, 1908, 2387, 2340,
	2270, 2285, 2343, 3822, 2269, 4740, 4739, 281, 3006, 2065,
	2066, 2267, 3004, 4738, 1577, 2237, 1566, 4737, 4736, 1319,
	2067, 4528, 2247, 1987, 4436, 4435, 4275, 4274, 4156, 1293,
	3982, 3981, 5538, 5622, 5620, 1571, 1047, 5534, 2239, 4309,
	2195, 4599, 2068, 3790, 3822, 1047, 2244, 2194, 3789, 3709,
	2065, 2066, 3435, 1574, 1050, 4557, 4117, 1636, 2265, 2402,
	280, 2440, 1319, 1050, 4036, 2163, 2175, 4685, 2363, 2175,
	1741, 2004, 2384, 2009, 279, 2214, 1209, 2636, 5324, 273,
	2067, 1692, 2450, 2068, 4216, 2694, 4215, 2023, 274, 2028,
	2241, 2256, 117, 2255, 2567, 2254, 2252, 2251, 4687, 2250,
	2297, 3807, 3808, 3809, 3810, 3812, 3813, 4671, 5149, 4503,
	2390, 4504, 5323, 1645, 2445, 2443, 4070, 4685, 220, 2293,
	3856, 2067, 3542, 5243, 5567, 5029, 3667, 4182, 281, 4972,
	2695, 1210, 1571, 4656, 4605, 4596, 5324, 4567, 2386, 3814,
	3815, 3807, 3808, 3809, 3810, 3812, 3813, 1646, 4687, 4302,
	3965, 216, 2789, 120, 279, 2726, 124, 2515, 5092, 3856,
	4360, 2986, 5720, 5543, 3512, 2189, 2211, 2287, 3755, 1986,
	3856, 4232, 4683, 2475, 3815, 3807, 3808, 3809, 3810, 3812,
	3813, 280, 1571, 1422, 2285, 3433, 5558, 2761, 279, 2753,
	1961, 279, 1880, 1547, 2073, 279, 1124, 1505, 5555, 2428,
	273, 2429, 1123, 4944, 2658, 4940, 2160, 3501, 281, 274,
	5686, 2436, 2437, 3816, 3814, 3815, 3807, 3808, 3809, 3810,
	3812, 3813, 5169, 1628, 1628, 2518, 4254, 4533, 1047, 2409,
	5346, 5035, 5141, 3518, 1752, 2073, 3516, 279, 5459, 220,
	3521, 5544, 281, 4166, 4039, 281, 1050, 2430, 2431, 281,
	4552, 2645, 3639, 2635, 2434, 2435, 2018, 4893, 2634, 1628,
	5624, 280, 5623, 1107, 5172, 2642, 5168, 5147, 4912, 5661,
	179, 2655, 3969, 2645, 2823, 5601, 4909, 4303, 1262, 2064,
	273, 5201, 4914, 1612, 1690, 4618, 1003, 222, 2454, 274,
	1628, 281, 1931, 3292, 5749, 280, 4886, 2631, 280, 2640,
	5362, 5194, 280, 1578, 1986, 2651, 5205, 2403, 2476, 1207,
	2659, 1440, 5180, 1205, 273, 2507, 1203, 273, 1011, 220,
	1882, 273, 4975, 274, 2505, 4974, 274, 217, 2705, 2709,
	274, 2645, 221, 2670, 2501, 1628, 4616, 1628, 2821, 1628,
	4615, 4607, 1008, 2212, 280, 4582, 4581, 2746, 4579, 4578,
	4566, 4525, 4524, 1117, 4887, 1661, 220, 1628, 1628, 1261,
	220, 4617, 1255, 273, 1924, 4172, 3584, 4131, 4171, 2253,
	3335, 1628, 274, 3809, 3810, 3812, 3813, 4119, 3919, 3760,
	1577, 3759, 3758, 3757, 1108, 3713, 3540, 3539, 3523, 3511,
	2584, 3503, 1319, 3492, 1319, 2572, 3491, 2119, 2784, 3479,
	3468, 1319, 220, 3466, 1319, 3461, 2309, 2309, 1752, 2807,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 2628, 1319, 3932,
	1319, 1319, 1319, 1319, 1984, 4115, 2772, 2643, 2772, 1047,
	2773, 2710, 2754, 2767, 2606, 2750, 1254, 4660, 5687, 3395,
	2695, 3460, 5170, 3440, 4152, 3439, 1319, 1050, 3400, 1610,
	1319, 1319, 5142, 2578, 2825, 4036, 3393, 3212, 1319, 2787,
	3971, 2812, 1319, 2627, 1319, 1319, 2624, 2641, 2697, 2698,
	2445, 5662, 1752, 2649, 4908, 2822, 2899, 5602, 1319, 1319,
	1319, 1319, 2687, 2644, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 2684, 4910, 2797, 2684, 2701, 2294, 2683, 2656,
	2775, 2683, 2803, 3233, 1257, 2644, 1257, 4149, 2038, 1578,
	2678, 3039, 3038, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 2699, 1319, 2967, 2968, 4148, 2764, 1319, 2576,
	2722, 876, 2855, 3636, 2730, 876, 2745, 3456, 2967, 2983,
	1444, 4069, 2777, 3976, 2418, 2419, 1439, 1752, 1439, 1991,
	3813, 1991, 4882, 1595, 1596, 3454, 1444, 2820, 1256, 1105,
	4883, 1104, 4929, 2644, 1200, 3031, 1595, 1596, 2756, 4851,
	2075, 4888, 1319, 1752, 2408, 2407, 1595, 1596, 1593, 2416,
	3395, 1638, 2769, 2494, 1595, 1596, 1577, 3080, 3080, 3094,
	2802, 2967, 2849, 1883, 3114, 3116, 2391, 3393, 2578, 1595,
	1596, 2837, 3124, 1552, 2836, 1538, 2848, 2781, 2986, 2782,
	1974, 4116, 1973, 1926, 4885, 2557, 2542, 1972, 1561, 1971,
	2558, 2032, 3227, 1935, 1572, 2069, 2070, 2071, 2072, 2074,
	2075, 1491, 207, 4889, 2548, 4870, 2809, 3245, 2930, 2679,
	5217, 2438, 2910, 2462, 3170, 2817, 3198, 1257, 2982, 3218,
	2824, 2811, 1235, 1538, 2810, 1235, 1235, 1257, 1943, 2840,
	2991, 1257, 2841, 2842, 3267, 1670, 2851, 2852, 2071, 2072,
	2074, 2075, 1740, 4862, 2576, 2908, 5204, 1646, 1689, 3437,
	1736, 4154, 3162, 2539, 5623, 1312, 2823, 1110, 1109, 3409,
	3299, 3033, 2638, 1538, 1538, 3286, 3035, 3036, 2246, 3037,
	2914, 3202, 3040, 3490, 3041, 3042, 2411, 3272, 4869, 1646,
	2914, 2529, 1927, 3276, 1704, 3423, 5339, 3357, 2513, 1710,
	2499, 3685, 1634, 5664, 3700, 5226, 2685, 2926, 3288, 4153,
	1410, 5698, 4911, 5663, 1752, 1572, 3520, 3215, 3480, 2541,
	2455, 3528, 1550, 3968, 2559, 2922, 2557, 1442, 2033, 2980,
	2821, 2558, 2920, 1628, 1628, 1257, 3247, 1572, 3161, 1568,
	1253, 2992, 2563, 1442, 3187, 3517, 2463, 1708, 3515, 2043,
	4549, 2686, 3519, 3482, 5540, 4536, 2459, 3422, 2774, 3280,
	4884, 1538, 2453, 1538, 2688, 875, 3993, 1669, 3472, 875,
	2227, 3226, 3992, 3242, 1688, 3169, 3241, 3174, 3089, 3120,
	3180, 3181, 3105, 1319, 3076, 3359, 3235, 4225, 1319, 2456,
	3151, 3152, 3118, 3412, 2577, 3320, 3321, 3322, 3323, 3167,
	3168, 1670, 3163, 3264, 2197, 3484, 1566, 4894, 4895, 5665,
	2244, 1047, 2904, 1047, 1956, 3221, 3481, 3284, 2413, 3250,
	2819, 3256, 3279, 1628, 2560, 2565, 2574, 1573, 5729, 1050,
	5341, 1050, 2993, 1009, 2990, 1611, 2905, 1009, 2506, 3314,
	1202, 1438, 1009, 1438, 2906, 2655, 4150, 2504, 2911, 3222,
	1568, 3483, 3699, 2662, 3224, 2559, 2995, 933, 2669, 2412,
	3287, 2231, 3376, 1047, 3331, 2570, 1009, 3974, 3238, 3724,
	2186, 2187, 1568, 2563, 3270, 1954, 1667, 2309, 4349, 4547,
	5312, 1050, 5311, 1156, 2659, 1509, 4973, 1513, 4906, 877,
	3283, 1569, 3275, 877, 5218, 3290, 4580, 2822, 4850, 4577,
	2575, 1570, 3722, 820, 4487, 3249, 3252, 4563, 5216, 4486,
	3340, 3330, 3289, 3244, 3253, 2234, 5214, 3274, 2561, 3489,
	4485, 4474, 5673, 1669, 3281, 3216, 4473, 3346, 4472, 3348,
	815, 3350, 2571, 5667, 2229, 4346, 4178, 4170, 1573, 2577,
	3381, 2653, 3383, 4113, 3293, 1668, 2625, 3338, 88, 3339,
	5541, 2630, 1752, 3328, 2232, 2560, 2565, 4861, 3295, 3401,
	1573, 2414, 2414, 3436, 1628, 3984, 3243, 2538, 89, 5213,
	3345, 2652, 3347, 2568, 3349, 2680, 3351, 3352, 3217, 2820,
	931, 3297, 2663, 3536, 3522, 3379, 94, 1538, 2586, 3575,
	3467, 3384, 3307, 3308, 3386, 2257, 3309, 3310, 2230, 5215,
	1148, 3363, 1569, 3336, 3459, 2528, 1319, 2995, 1319, 2525,
	2647, 4640, 1570, 3398, 3306, 2590, 5382, 3411, 2578, 4087,
	3438, 1705, 3344, 2540, 1569, 3298, 4347, 1149, 2632, 104,
	4011, 1934, 2492, 2491, 1570, 2566, 1684, 5635, 3871, 1490,
	1538, 2549, 3614, 3692, 3693, 2575, 3442, 3296, 3394, 2561,
	2461, 5648, 1055, 2995, 5700, 2907, 5647, 3210, 3457, 3719,
	4078, 3513, 1687, 5609, 2681, 2909, 5539, 4523, 4179, 3985,
	2526, 1628, 1122, 4641, 5374, 2626, 2587, 2648, 4522, 1062,
	4012, 4088, 4989, 1628, 4176, 1628, 5421, 128, 2306, 5375,
	1628, 3720, 5571, 112, 125, 3725, 207, 4251, 1201, 4063,
	2527, 1571, 3367, 2656, 2568, 3448, 3449, 3451, 3452, 3453,
	3455, 3414, 3417, 3404, 3623, 3497, 4904, 3599, 4252, 1319,
	3529, 1960, 4079, 4639, 5376, 1319, 1319, 4111, 3487, 4109,
	5340, 4086, 2233, 3493, 2349, 4907, 3378, 3579, 4023, 1734,
	1319, 2989, 5510, 3541, 5511, 1956, 5436, 2896, 3576, 3577,
	3676, 3677, 5666, 4625, 5133, 2034, 3650, 4110, 4108, 3305,
	113, 4061, 1133, 4623, 3476, 3477, 2566, 3443, 3662, 3375,
	3463, 4107, 4077, 1706, 4104, 3589, 3486, 2562, 3495, 3485,
	2500, 2599, 3500, 3410, 1319, 1319, 2581, 3715, 3668, 1138,
	1319, 3427, 2231, 2690, 3509, 2591, 5378, 2913, 3502, 3580,
	5671, 2995, 5347, 1319, 1319, 3441, 4251, 2418, 2419, 1319,
	1319, 4062, 1571, 1633, 1635, 1319, 3201, 3534, 3535, 3458,
	3533, 5377, 932, 3659, 2921, 3586, 2666, 2685, 1703, 3588,
	4154, 1709, 3665, 1549, 1571, 4548, 1047, 2557, 3664, 3336,
	5379, 3537, 2558, 2600, 994, 3970, 2234, 4057, 2582, 3578,
	4051, 3669, 1702, 4627, 1050, 2689, 3674, 874, 1881, 3870,
	2042, 1319, 1319, 1319, 1647, 3164, 3654, 1319, 2458, 1249,
	2592, 2593, 2686, 3652, 2452, 1150, 1151, 1319, 3609, 3618,
	934, 1707, 1467, 3716, 930, 2232, 5608, 2227, 2664, 3377,
	3622, 4626, 2639, 2598, 1319, 4905, 5419, 2588, 2580, 2181,
	3929, 3608, 3721, 3228, 4059, 3645, 1157, 3634, 2562, 5003,
	3655, 4050, 3723, 816, 3691, 1991, 3653, 3672, 2637, 2622,
	5672, 4161, 5696, 3678, 117, 3679, 1439, 1056, 1057, 2659,
	2637, 2894, 4519, 2568, 5081, 2897, 3743, 3744, 2665, 4177,
	3682, 3747, 1439, 3681, 5420, 4829, 2589, 2639, 3739, 5633,
	3686, 5470, 4946, 4830, 841, 2131, 2837, 4112, 1513, 2836,
	2977, 4625, 5674, 3701, 3765, 3166, 2559, 4893, 4024, 995,
	3395, 4623, 3708, 5070, 3953, 4058, 3353, 3354, 2231, 5701,
	3179, 2633, 1256, 216, 2563, 120, 2636, 3415, 124, 1319,
	1319, 1319, 1319, 5587, 2893, 4362, 5680, 5018, 1319, 1319,
	1319, 4748, 4978, 1319, 5588, 817, 4886, 4839, 1257, 1440,
	4879, 1440, 4629, 4475, 3714, 2595, 4828, 1319, 1444, 1752,
	279, 1473, 1471, 4749, 4305, 3683, 1652, 5391, 1124, 4877,
	3680, 2629, 2234, 5208, 1123, 5476, 5405, 1134, 1135, 4881,
	5259, 4987, 4977, 4976, 1319, 4707, 1319, 2052, 3496, 4239,
	4097, 2229, 4095, 3942, 3470, 1444, 3209, 3863, 3864, 2741,
	818, 4627, 819, 2233, 4887, 2224, 2560, 2565, 1470, 2638,
	1461, 2232, 2052, 1752, 281, 4677, 807, 3844, 2053, 2512,
	4624, 4520, 2594, 1059, 1058, 2047, 4190, 4402, 1444, 1152,
	1153, 1752, 2839, 4793, 2579, 2404, 4164, 5706, 5167, 4626,
	3754, 4165, 179, 1538, 3911, 5109, 4585, 4096, 3471, 5268,
	5572, 5607, 4880, 4030, 5321, 2230, 4708, 4611, 3865, 222,
	3785, 2309, 5380, 4586, 5068, 1752, 4534, 280, 5381, 5069,
	4532, 1538, 2350, 1000, 999, 2401, 5392, 3748, 4240, 4230,
	4026, 3904, 1538, 3624, 3945, 3617, 273, 3606, 3267, 2309,
	2768, 5004, 2762, 2755, 2748, 274, 2725, 1060, 1061, 217,
	2561, 2721, 2635, 3532, 221, 2051, 2829, 2634, 4345, 5253,
	2596, 4499, 1928, 3444, 1482, 883, 4417, 3946, 3905, 5442,
	4306, 1319, 996, 3399, 2052, 220, 5408, 3475, 4710, 2514,
	2051, 2397, 3875, 1319, 3955, 3157, 5040, 3873, 3957, 3958,
	4649, 3603, 3593, 3961, 3595, 3962, 4750, 1492, 3963, 2895,
	2555, 3900, 4468, 5233, 5231, 2568, 5144, 4042, 4038, 4037,
	3706, 2399, 3684, 2800, 2439, 1442, 4431, 1538, 3839, 3840,
	3841, 3913, 3914, 3915, 3916, 3950, 3952, 3868, 3160, 3867,
	2053, 1438, 3874, 3857, 3888, 3943, 3909, 3886, 2790, 2233,
	2719, 1136, 1137, 3889, 3890, 1671, 3641, 1438, 3897, 3641,
	3975, 3208, 1442, 3978, 3966, 2053, 1752, 1267, 2400, 1752,
	1678, 1677, 2553, 3872, 3887, 5586, 3972, 2566, 3959, 3207,
	5071, 4098, 3159, 3893, 2306, 2306, 3473, 3158, 4624, 3918,
	2567, 1538, 4882, 4025, 3206, 1442, 3205, 2309, 3204, 3096,
	4883, 4403, 2051, 1566, 4751, 1966, 1947, 3264, 4654, 1980,
	1978, 4888, 3416, 4404, 1319, 1155, 2131, 3936, 997, 4794,
	3879, 2830, 2554, 3892, 1967, 3935, 2567, 1254, 3896, 4938,
	1538, 2427, 4075, 5705, 4584, 4672, 4673, 5156, 5334, 4994,
	3420, 2523, 4540, 1452, 2766, 1047, 4529, 3924, 4185, 998,
	5235, 1538, 2675, 4090, 4885, 2578, 5393, 5630, 5131, 1538,
	1454, 4094, 5125, 1050, 5124, 3951, 3949, 3445, 3446, 4457,
	1538, 922, 4100, 4889, 4013, 4014, 4041, 1949, 3583, 4046,
	4005, 3334, 4048, 3925, 3960, 4299, 3956, 3977, 1449, 5252,
	3941, 4500, 3940, 3939, 1319, 1319, 4040, 3967, 3923, 4044,
	4118, 3922, 1752, 3921, 2658, 4027, 3673, 1653, 1002, 923,
	3587, 3930, 2658, 3986, 1538, 4099, 4142, 4004, 3585, 2562,
	3474, 2794, 2694, 1615, 5139, 4002, 3880, 4458, 1001, 4132,
	5234, 1538, 4590, 4159, 4008, 5448, 1455, 4009, 4072, 3989,
	5335, 3990, 5152, 3991, 5151, 4856, 4855, 5456, 4054, 5439,
	4800, 4420, 5157, 3002, 5112, 4459, 1654, 4476, 4456, 1731,
	2534, 5478, 5634, 4163, 5220, 4105, 1456, 4467, 5632, 1976,
	5560, 3912, 1733, 4465, 5364, 5140, 1628, 5355, 1628, 5122,
	3878, 3885, 1752, 4157, 1730, 1728, 1698, 1041, 1628, 1628,
	1696, 5087, 882, 3267, 4010, 4847, 4074, 4162, 4134, 4128,
	4136, 4595, 4792, 4140, 4653, 4492, 3836, 4146, 4321, 4300,
	4466, 1453, 1538, 4854, 4231, 4462, 3837, 4089, 3884, 4120,
	4884, 3937, 4091, 1694, 4530, 4093, 3799, 3997, 1665, 3726,
	1444, 4060, 3001, 5449, 3607, 3510, 4245, 3504, 5336, 3434,
	4463, 4114, 3370, 4068, 4247, 2270, 1663, 1660, 1658, 4081,
	1628, 3240, 2426, 1656, 1649, 2799, 2785, 4085, 4221, 2724,
	1643, 2547, 1628, 1641, 1628, 4082, 4076, 4894, 4895, 4083,
	2673, 4084, 2306, 207, 207, 4229, 1979, 1977, 2543, 2522,
	4141, 4180, 1154, 4183, 2442, 2342, 4200, 4033, 2264, 2260,
	2017, 1735, 2703, 1319, 2503, 2467, 4007, 4158, 4006, 4123,
	1319, 1319, 3996, 2047, 1319, 1319, 1319, 4267, 1319, 4130,
	3361, 3360, 4143, 4238, 4129, 3312, 4256, 1319, 2309, 2818,
	2720, 1683, 4947, 4167, 3662, 4155, 1319, 2470, 2341, 2339,
	4168, 1319, 4160, 3662, 2164, 2031, 1406, 1752, 3881, 3882,
	3883, 3487, 4598, 5532, 4241, 4224, 1319, 4597, 4583, 5020,
	4951, 4296, 3264, 4924, 1752, 5438, 2536, 5038, 4956, 4133,
	1043, 4942, 4939, 2535, 2309, 2309, 1319, 1319, 4875, 1319,
	1319, 1319, 1975, 4476, 4874, 1732, 1007, 1042, 3442, 4706,
	4187, 4696, 4248, 4460, 1276, 4614, 4246, 1729, 1727, 1697,
	1319, 4461, 5605, 1695, 1319, 4222, 2309, 2309, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 4307, 1319,
	4324, 1047, 4334, 4335, 4226, 4227, 1693, 1319, 1319, 2309,
	4297, 1664, 1257, 4253, 1319, 2302, 4588, 1442, 4375, 1050,
	4376, 4255, 4262, 4265, 4266, 4169, 4464, 1319, 4555, 1662,
	1659, 1657, 4553, 1450, 4415, 4531, 1655, 1648, 1444, 1444,
	1010, 4234, 1319, 1642, 207, 4228, 1640, 4288, 4304, 4217,
	3637, 3629, 3621, 3613, 3600, 3597, 3581, 3278, 3273, 2718,
	2716, 2696, 4286, 2660, 2597, 2583, 2569, 2383, 2702, 4294,
	2502, 2466, 4279, 2380, 4298, 2377, 2376, 1752, 2373, 2368,
	4342, 2366, 2361, 4173, 2355, 2306, 2351, 5033, 4414, 1440,
	1538, 1538, 4244, 5600, 4453, 1451, 4144, 4331, 4329, 1419,
	5515, 2669, 2056, 2276, 1439, 1440, 4341, 3704, 1538, 1538,
	3469, 5624, 2405, 2284, 5333, 1538, 3387, 2546, 3574, 3267,
	2309, 3388, 2309, 4357, 2393, 2394, 1420, 4352, 3385, 4364,
	4348, 4350, 4351, 5497, 5399, 4469, 5053, 4963, 1204, 1206,
	4853, 1439, 1319, 3663, 3973, 2422, 1933, 4373, 1628, 4406,
	4371, 4374, 1628, 1628, 1752, 5270, 4378, 3421, 1038, 3395,
	4497, 4380, 4290, 4508, 4498, 3395, 3372, 5263, 2544, 3223,
	2765, 2532, 1515, 1918, 1439, 1476, 3393, 4718, 1516, 2578,
	4427, 4428, 3418, 2457, 4281, 1725, 1726, 2497, 2297, 4407,
	2490, 5496, 2464, 4915, 4064, 4065, 4958, 4066, 2065, 2066,
	4280, 3538, 1248, 2065, 2066, 1319, 1639, 4495, 911, 4496,
	5285, 5154, 4801, 3705, 4779, 4424, 4425, 2545, 3425, 4055,
	3426, 3447, 2060, 2057, 1545, 4145, 1588, 1475, 311, 5618,
	1585, 2068, 5568, 4437, 2851, 4365, 4628, 4610, 1319, 1319,
	3596, 4439, 4693, 2749, 4440, 1442, 1442, 1421, 4554, 4444,
	4556, 4450, 1556, 4506, 3426, 3518, 2392, 3516, 4422, 4289,
	3525, 5638, 1516, 4609, 1516, 3508, 2851, 4381, 3506, 2067,
	3430, 3428, 4124, 4125, 2067, 4126, 4470, 4471, 3264, 1142,
	3507, 3187, 4507, 804, 1701, 3429, 2287, 928, 4535, 4591,
	1319, 1319, 4488, 5447, 4483, 4484, 4494, 5426, 1319, 4410,
	5397, 4493, 5395, 2285, 914, 914, 5332, 5254, 5251, 5132,
	4704, 4695, 4568, 4676, 4233, 3644, 3612, 3598, 3121, 1628,
	1628, 2389, 4512, 2295, 5668, 5153, 5279, 1628, 4513, 4164,
	1247, 3494, 994, 1879, 4165, 1878, 1872, 1628, 4164, 1250,
	4613, 4521, 1538, 4165, 4637, 3926, 2675, 1047, 4572, 5704,
	5019, 4573, 4575, 3805, 3806, 5637, 2671, 1249, 4164, 4630,
	2065, 2066, 1890, 4165, 4969, 1050, 4632, 4515, 2433, 3301,
	1614, 2309, 4606, 2432, 3300, 1889, 1613, 1890, 4771, 1890,
	4478, 4600, 2997, 3365, 3032, 2433, 2432, 1700, 5575, 4560,
	1699, 4593, 4594, 4703, 5255, 5195, 1319, 4960, 4612, 4955,
	4954, 4565, 4831, 4827, 4826, 4767, 4516, 4477, 1248, 4292,
	4353, 4138, 4135, 3368, 2158, 2157, 1628, 3390, 2551, 1438,
	5689, 5649, 1319, 5501, 4711, 4621, 5430, 3442, 5429, 5428,
	1444, 1319, 4631, 4622, 4287, 4282, 4283, 4284, 4285, 1628,
	5363, 5305, 5301, 4720, 1628, 1628, 1628, 5229, 5184, 4667,
	5117, 5111, 5110, 4642, 4643, 5108, 1438, 995, 5107, 4712,
	5013, 4988, 4913, 4841, 4825, 4824, 4730, 4724, 4661, 4551,
	1628, 4543, 4237, 4236, 4047, 3999, 4291, 4652, 3954, 4619,
	3628, 3601, 1752, 3529, 1329, 1319, 1319, 3419, 4688, 1438,
	3371, 1319, 1319, 2309, 3358, 4645, 1319, 1319, 4727, 1319,
	4635, 4715, 3327, 3326, 1319, 3325, 4646, 4714, 4636, 4686,
	3324, 4731, 3269, 3237, 3236, 1319, 2925, 2763, 2736, 2735,
	3650, 4689, 2734, 2733, 2732, 2731, 2537, 4293, 2498, 2489,
	2488, 1319, 2487, 3662, 2486, 2485, 2358, 2357, 318, 318,
	318, 2356, 810, 811, 4675, 827, 810, 827, 839, 4692,
	2354, 881, 2275, 4743, 2274, 901, 1942, 4745, 1941, 3173,
	908, 908, 908, 908, 1940, 318, 4697, 4752, 1939, 4694,
	1938, 4713, 1937, 4765, 318, 4716, 1936, 1932, 4638, 4753,
	4647, 1930, 4722, 4651, 4721, 1929, 1866, 1865, 4728, 1724,
	1723, 1650, 1605, 4729, 1444, 4761, 1604, 1603, 1129, 1602,
	1601, 1548, 1444, 4798, 1499, 318, 1752, 1752, 1498, 1752,
	1497, 2302, 2302, 207, 2309, 1496, 1439, 1495, 1494, 1493,
	1444, 1000, 999, 1487, 1486, 1485, 1484, 1483, 1401, 2395,
	1628, 1628, 1208, 1199, 5338, 4892, 4746, 1442, 4698, 4891,
	4700, 4890, 2533, 2744, 111, 1925, 3462, 103, 2667, 4550,
	5569, 5681, 1752, 5713, 2727, 2601, 5480, 5479, 5368, 3254,
	2352, 4033, 4193, 1538, 4192, 5574, 2605, 5225, 1074, 969,
	996, 5477, 1913, 3904, 1089, 5458, 4049, 3543, 1651, 5248,
	2471, 3899, 3189, 5418, 4775, 3764, 5292, 4833, 4834, 5080,
	1752, 3000, 2162, 4791, 3848, 105, 1303, 4744, 1351, 1319,
	5002, 5001, 4876, 4809, 4811, 4537, 4203, 4998, 4997, 2299,
	1444, 2301, 1444, 1266, 1755, 3129, 3131, 5509, 2406, 5695,
	2415, 2188, 3079, 1328, 1366, 1323, 1324, 2303, 1327, 2306,
	1325, 1326, 2182, 1322, 4857, 4858, 4802, 1538, 2298, 4923,
	4803, 4804, 4805, 4702, 4807, 4223, 3648, 1752, 4817, 1538,
	4263, 4932, 1538, 4808, 4935, 1985, 2306, 2306, 810, 810,
	1983, 4818, 4820, 4899, 971, 4899, 318, 3185, 2919, 2984,
	3753, 2155, 1282, 1305, 4832, 1319, 2981, 1468, 1752, 1294,
	3876, 4250, 4868, 2297, 3122, 4441, 4865, 4866, 2828, 4836,
	4837, 4838, 1099, 4871, 4902, 3802, 4917, 2987, 1457, 3102,
	3095, 1442, 4844, 4845, 4846, 3091, 997, 4849, 3964, 1442,
	4848, 3638, 2035, 4873, 5094, 4916, 2133, 3649, 1582, 1286,
	2917, 2146, 3731, 2838, 1628, 1628, 4257, 1442, 3902, 3267,
	1319, 1319, 3231, 4970, 4867, 1246, 5488, 998, 4860, 4361,
	1444, 3366, 2740, 1418, 1439, 1439, 1417, 1466, 1416, 4852,
	5464, 4941, 5461, 2657, 4943, 5005, 4198, 4199, 4945, 2398,
	3294, 2929, 4218, 4918, 1538, 1299, 5023, 3341, 3342, 4806,
	1858, 2520, 4000, 3861, 4674, 4953, 4959, 1752, 4961, 1944,
	5161, 4962, 1628, 1311, 2118, 3570, 3569, 5327, 1567, 1565,
	5041, 4985, 1564, 4899, 1563, 5658, 1002, 3531, 3526, 2302,
	2676, 4546, 4922, 4545, 4816, 2306, 4544, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 278, 4931, 1001, 1442, 4934, 1442,
	3698, 2054, 5006, 4936, 2046, 5042, 4995, 1319, 1319, 1319,
	4986, 1438, 4971, 275, 277, 5027, 5024, 5030, 276, 4053,
	4981, 4454, 3908, 1616, 4984, 1752, 5566, 4570, 4980, 5017,
	1319, 4979, 4688, 1319, 1319, 4184, 27, 915, 4990, 916,
	917, 5008, 4996, 1319, 5000, 3304, 2309, 2425, 1584, 5016,
	4502, 1319, 1319, 4686, 5036, 26, 5014, 25, 24, 5045,
	5050, 23, 4903, 134, 28, 4933, 50, 1440, 3264, 31,
	1752, 30, 1628, 1871, 5, 22, 178, 176, 153, 4699,
	174, 4919, 4920, 5064, 173, 144, 172, 5043, 171, 170,
	5072, 169, 168, 5058, 167, 175, 166, 5062, 1538, 165,
	160, 164, 163, 5056, 1440, 162, 161, 159, 5077, 5055,
	157, 158, 152, 156, 1319, 1319, 155, 154, 151, 150,
	149, 148, 147, 146, 145, 143, 177, 1442, 142, 141,
	1752, 223, 140, 139, 138, 137, 29, 1440, 1319, 136,
	135, 894, 895, 69, 68, 131, 4747, 132, 5089, 21,
	48, 1319, 16, 73, 74, 5083, 20, 15, 43, 1609,
	1319, 994, 108, 123, 122, 2309, 121, 44, 118, 5100,
	5101, 42, 19, 18, 17, 1319, 116, 115, 1319, 5138,
	5105, 2306, 5026, 114, 41, 39, 1249, 13, 5129, 5130,
	11, 5103, 45, 5104, 2248, 14, 5135, 7, 5136, 1319,
	5175, 5176, 1319, 110, 215, 212, 211, 214, 210, 1752,
	213, 107, 2302, 209, 109, 1628, 1319, 5164, 1628, 1628,
	208, 106, 37, 5128, 12, 1538, 5065, 5210, 203, 4681,
	97, 206, 205, 204, 102, 202, 5134, 201, 1628, 1438,
	1438, 5196, 200, 5198, 197, 5199, 5137, 98, 5143, 95,
	199, 101, 2567, 100, 198, 96, 99, 35, 1444, 8,
	1444, 5183, 72, 9, 5066, 4301, 126, 127, 46, 93,
	92, 91, 90, 34, 71, 33, 5200, 272, 270, 5219,
	271, 269, 5186, 268, 5121, 5181, 995, 193, 5228, 1752,
	5185, 248, 1628, 247, 246, 245, 244, 243, 242, 5246,
	5264, 241, 5232, 240, 235, 5189, 2306, 239, 237, 236,
	238, 4899, 234, 4899, 264, 263, 1439, 262, 261, 260,
	259, 258, 257, 5206, 5207, 5197, 251, 250, 256, 255,
	254, 253, 252, 249, 267, 5265, 2297, 86, 1319, 2309,
	5237, 5222, 5239, 5250, 233, 5221, 232, 2144, 231, 229,
	5230, 2149, 2306, 2306, 225, 5190, 228, 4200, 230, 5223,
	227, 5273, 226, 5275, 1538, 1538, 1538, 5245, 4688, 1538,
	1538, 1538, 5247, 1538, 1538, 5267, 224, 1459, 266, 265,
	196, 87, 191, 192, 2306, 2306, 5261, 85, 827, 4686,
	190, 5209, 189, 188, 5266, 5045, 1319, 5272, 1319, 5271,
	1319, 187, 827, 186, 5277, 185, 184, 84, 318, 195,
	1444, 2772, 194, 5249, 32, 1489, 2, 2306, 1, 0,
	5284, 0, 0, 1319, 0, 1444, 318, 0, 318, 318,
	0, 1520, 318, 1525, 1532, 0, 0, 0, 5320, 0,
	5322, 5290, 0, 0, 0, 1546, 0, 0, 0, 4949,
	1000, 999, 0, 901, 0, 5173, 901, 0, 0, 0,
	5187, 5211, 0, 4899, 5188, 1442, 0, 1442, 5319, 0,
	0, 5318, 0, 0, 5315, 0, 2309, 0, 4899, 908,
	1439, 0, 0, 0, 5359, 0, 0, 5349, 1439, 1444,
	0, 1444, 0, 0, 5342, 0, 0, 5384, 5343, 996,
	0, 0, 0, 1606, 0, 0, 1439, 5350, 1444, 0,
	5370, 1444, 0, 0, 5396, 1628, 0, 0, 0, 0,
	0, 0, 5012, 5358, 0, 1628, 0, 2306, 2306, 5372,
	2306, 5241, 0, 0, 0, 0, 1319, 1319, 0, 0,
	0, 5025, 4899, 0, 4899, 5360, 1319, 318, 0, 5367,
	5302, 5303, 5304, 0, 0, 5306, 5307, 5308, 5409, 5309,
	5310, 4899, 5383, 5369, 4899, 5049, 0, 5269, 0, 0,
	0, 5386, 0, 5388, 0, 0, 0, 5365, 0, 1440,
	318, 0, 318, 318, 318, 1520, 5401, 318, 318, 5410,
	5402, 5412, 5414, 5404, 5017, 1532, 1439, 4688, 1439, 5431,
	5432, 5433, 5413, 0, 1319, 1319, 5423, 5415, 1319, 318,
	5422, 1892, 1628, 1538, 5427, 1538, 0, 1442, 4686, 0,
	0, 0, 0, 0, 0, 0, 0, 1911, 0, 2297,
	0, 1438, 1442, 0, 0, 997, 0, 1919, 1922, 0,
	0, 5455, 5437, 0, 5487, 5494, 5492, 0, 2441, 5463,
	5466, 0, 5445, 5446, 0, 1946, 1750, 1532, 5453, 0,
	5454, 0, 318, 318, 5491, 1520, 998, 0, 5512, 0,
	1319, 1319, 1319, 0, 5472, 0, 0, 5514, 5467, 0,
	0, 2833, 5471, 0, 0, 0, 0, 0, 5468, 901,
	0, 318, 318, 0, 0, 0, 1442, 0, 1442, 0,
	5126, 0, 0, 2011, 0, 0, 5498, 0, 5434, 5435,
	1319, 5502, 5547, 5490, 2019, 1442, 5505, 5473, 1442, 1129,
	5513, 5552, 0, 0, 0, 1002, 1439, 5529, 5526, 5527,
	0, 0, 5528, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 5581,
	0, 0, 0, 5585, 5583, 0, 5562, 2567, 0, 5564,
	0, 0, 5549, 0, 318, 5591, 0, 0, 0, 5597,
	0, 5563, 5582, 1319, 5550, 0, 0, 5576, 5565, 2306,
	0, 1538, 1538, 0, 0, 5573, 5593, 0, 0, 0,
	5584, 5606, 5590, 5228, 0, 1438, 0, 0, 5589, 5474,
	5416, 5475, 5417, 1438, 0, 5599, 0, 1440, 1440, 0,
	0, 0, 0, 5625, 0, 5598, 5612, 5613, 0, 0,
	0, 1438, 0, 1319, 0, 5603, 5621, 5619, 0, 5617,
	0, 5616, 0, 3097, 0, 0, 5627, 0, 0, 0,
	5643, 0, 5629, 1444, 5631, 1444, 0, 0, 5628, 0,
	5645, 5654, 5463, 5636, 0, 5466, 2302, 0, 0, 0,
	0, 0, 5641, 5644, 5651, 0, 0, 0, 0, 0,
	0, 5652, 5650, 0, 0, 5640, 0, 5642, 0, 0,
	5660, 5646, 0, 2302, 2302, 1538, 0, 0, 0, 0,
	5482, 0, 0, 0, 0, 0, 4899, 0, 4899, 5675,
	0, 2306, 5684, 0, 0, 0, 5676, 0, 5682, 0,
	5691, 1438, 5688, 1438, 0, 0, 0, 5699, 2608, 1319,
	1319, 0, 5490, 0, 5690, 5653, 0, 5655, 1319, 1319,
	0, 0, 5697, 0, 5717, 0, 0, 5702, 5707, 5683,
	5721, 0, 0, 5711, 0, 0, 0, 0, 6, 5718,
	5693, 10, 5732, 5724, 5716, 5722, 5730, 5715, 207, 5725,
	2618, 5731, 0, 5710, 0, 5733, 0, 5614, 5615, 0,
	5738, 0, 5548, 810, 5726, 5736, 0, 5742, 0, 0,
	5719, 1538, 0, 5744, 5743, 5739, 0, 5723, 5745, 5740,
	0, 5751, 5752, 5748, 318, 2608, 318, 0, 5746, 5753,
	318, 5755, 5708, 5709, 5741, 3650, 0, 1319, 0, 0,
	5761, 0, 5763, 1892, 1520, 1532, 318, 5764, 318, 2273,
	5758, 5748, 2306, 5760, 0, 0, 318, 0, 827, 2614,
	4288, 0, 2302, 0, 0, 318, 0, 2618, 5356, 5754,
	3650, 1438, 0, 0, 0, 4286, 0, 0, 0, 5757,
	1442, 0, 1442, 0, 0, 4279, 0, 2359, 0, 0,
	0, 0, 0, 88, 1439, 0, 1439, 0, 0, 0,
	318, 5679, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 5759, 0, 89, 0, 0, 2263, 0, 0, 0,
	0, 0, 2611, 0, 0, 0, 0, 5398, 0, 0,
	5400, 94, 0, 0, 2065, 2066, 2614, 0, 0, 0,
	0, 0, 0, 0, 901, 0, 0, 5659, 2065, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 2096, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	5483, 0, 2096, 0, 104, 4290, 0, 0, 0, 2616,
	0, 2068, 908, 0, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 908, 908, 2122, 4281, 0, 2611,
	0, 0, 0, 0, 0, 2067, 2923, 0, 0, 0,
	2122, 0, 0, 4280, 0, 0, 0, 1122, 0, 2067,
	0, 0, 2144, 0, 0, 0, 0, 0, 901, 1440,
	57, 0, 128, 0, 0, 318, 0, 0, 112, 125,
	0, 0, 0, 2468, 0, 2617, 1439, 0, 318, 0,
	318, 0, 318, 2424, 318, 0, 2616, 318, 2302, 318,
	0, 1439, 0, 0, 0, 0, 0, 2306, 0, 0,
	0, 5499, 4289, 5500, 0, 0, 0, 0, 0, 0,
	1871, 2621, 0, 0, 0, 2508, 0, 1871, 2509, 0,
	2510, 0, 2511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 2607, 318, 318, 318,
	318, 0, 0, 318, 4277, 0, 0, 0, 0, 2073,
	0, 0, 2617, 0, 0, 1439, 0, 1439, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1439, 0, 0, 1439, 0, 0,
	0, 0, 0, 0, 2609, 0, 2604, 0, 2621, 0,
	0, 0, 0, 0, 0, 2619, 0, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 2615, 2302, 0, 0, 0, 2095, 2098, 0,
	0, 3465, 0, 1440, 0, 0, 0, 0, 0, 0,
	0, 1440, 0, 0, 2306, 0, 0, 0, 0, 1438,
	0, 1438, 0, 2612, 0, 0, 0, 0, 2602, 1440,
	2610, 0, 4292, 0, 0, 0, 0, 0, 2620, 2302,
	2302, 2609, 0, 0, 0, 2608, 0, 0, 0, 0,
	2088, 0, 2619, 0, 0, 0, 0, 4287, 4282, 4283,
	4284, 4285, 0, 0, 2088, 0, 0, 0, 0, 2615,
	5484, 2302, 2302, 0, 0, 0, 0, 0, 2603, 117,
	0, 0, 0, 0, 0, 318, 0, 2618, 0, 318,
	0, 0, 0, 0, 0, 0, 3688, 0, 0, 4291,
	2612, 0, 0, 0, 2302, 0, 0, 2610, 0, 0,
	0, 0, 0, 0, 2613, 2620, 0, 0, 5485, 1440,
	0, 1440, 88, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 2119, 2306, 0, 0, 0, 0, 216, 0,
	120, 0, 89, 124, 0, 0, 2119, 0, 318, 0,
	4293, 0, 0, 0, 0, 0, 2614, 0, 0, 318,
	94, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 1438, 0, 2713, 0, 279, 0, 0, 0, 0,
	3097, 3097, 318, 1124, 318, 0, 1438, 0, 810, 1123,
	318, 2613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 104, 0, 0, 1129, 0, 0, 0,
	0, 0, 3728, 3729, 2302, 2302, 0, 2302, 2089, 2611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 2089, 0, 1617, 88, 0, 0, 1520, 318,
	0, 0, 0, 881, 0, 0, 1122, 901, 0, 1440,
	1438, 0, 1438, 0, 0, 89, 0, 179, 0, 57,
	0, 128, 0, 0, 0, 0, 0, 112, 125, 1438,
	0, 0, 1438, 94, 222, 0, 2616, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 2121, 0, 0, 1439,
	0, 1439, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 273, 0, 0, 0, 0, 0, 2306, 0, 0,
	274, 0, 0, 1863, 217, 0, 104, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	220, 0, 2617, 2931, 0, 0, 0, 2854, 0, 0,
	0, 0, 0, 2065, 2066, 0, 0, 0, 1916, 1122,
	0, 0, 0, 0, 0, 0, 3097, 3097, 3097, 3097,
	0, 0, 57, 0, 128, 0, 0, 2096, 2621, 0,
	112, 125, 0, 2097, 0, 0, 2068, 0, 0, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 3829, 3830,
	3831, 3832, 0, 0, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 1999, 2122, 0, 0, 810, 0,
	0, 3123, 0, 0, 2067, 0, 0, 0, 0, 0,
	2014, 0, 0, 0, 318, 2087, 0, 0, 0, 0,
	0, 2998, 0, 810, 2306, 2084, 3464, 113, 0, 0,
	318, 2609, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2619, 0, 318, 0, 2302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2615,
	0, 0, 0, 0, 318, 1532, 0, 0, 3465, 0,
	0, 318, 0, 318, 1892, 0, 318, 0, 117, 0,
	0, 0, 0, 0, 4756, 0, 0, 0, 0, 0,
	2612, 0, 0, 1871, 0, 0, 0, 2610, 0, 0,
	0, 0, 0, 0, 0, 2620, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	318, 1532, 3199, 318, 827, 0, 827, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 318, 216, 0, 120,
	3268, 0, 124, 0, 0, 0, 318, 318, 0, 0,
	0, 318, 0, 318, 0, 0, 0, 0, 1520, 0,
	318, 318, 3282, 0, 1532, 1532, 3285, 1440, 2302, 1440,
	0, 318, 2095, 2098, 279, 0, 0, 1871, 1871, 0,
	0, 2613, 1124, 0, 1438, 0, 1438, 0, 1123, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 908, 0, 0, 908,
	908, 0, 0, 318, 0, 0, 0, 0, 281, 0,
	3318, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 318, 1520, 318, 0,
	216, 0, 120, 0, 0, 124, 179, 0, 3343, 318,
	0, 0, 0, 1520, 0, 1520, 0, 1520, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 3303, 0, 0, 0, 279, 0, 2302,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 0,
	273, 1123, 0, 0, 0, 0, 0, 318, 88, 274,
	0, 0, 0, 217, 0, 0, 0, 0, 221, 1440,
	0, 2119, 0, 318, 318, 318, 318, 1520, 89, 0,
	1520, 0, 0, 318, 1440, 0, 0, 0, 0, 1996,
	0, 281, 3408, 0, 0, 2345, 94, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 1871, 1871, 1871, 0, 318, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 2094, 318, 0, 0, 0, 222, 0, 1273, 104,
	0, 0, 0, 0, 280, 0, 0, 0, 1440, 0,
	1440, 0, 0, 2096, 0, 3478, 0, 2089, 0, 2097,
	0, 0, 2068, 273, 901, 0, 0, 1440, 0, 901,
	1440, 0, 274, 0, 0, 0, 217, 0, 0, 0,
	0, 221, 1122, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 318, 0, 128, 0, 0,
	2067, 0, 1994, 112, 125, 0, 0, 0, 0, 3805,
	3806, 2087, 3823, 3824, 3825, 3318, 1892, 0, 0, 0,
	0, 2084, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 4325, 0, 0, 0, 0, 2446, 2447, 2448,
	2449, 0, 0, 0, 0, 0, 318, 3590, 0, 0,
	0, 0, 0, 0, 2302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 1892, 0, 0, 318,
	4320, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 3820, 0, 0, 0, 0, 0, 0, 0, 3633,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 3408,
	0, 810, 3097, 3097, 2073, 0, 0, 0, 0, 0,
	1129, 3408, 0, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 4317, 4318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 2302, 0, 0, 3811, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 3097, 3097, 3097, 3097, 3097,
	3097, 3097, 3097, 3097, 3097, 3097, 3097, 3097, 3097, 3097,
	3097, 3097, 3097, 3097, 3097, 0, 3097, 0, 0, 0,
	0, 0, 0, 0, 117, 2088, 0, 4382, 4383, 4384,
	4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394,
	4395, 4396, 4397, 4398, 4399, 4400, 4401, 0, 4405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 120, 0, 0, 124, 0,
	0, 0, 1440, 0, 1440, 0, 0, 0, 0, 0,
	2302, 0, 1892, 0, 0, 3821, 0, 2119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 1916, 1124, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2747, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 2783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 2796, 2798, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2801,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 318, 0, 0, 274, 0, 0, 0, 217,
	0, 2121, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 3822, 2302, 3805, 3806, 0, 3823, 3824,
	3825, 0, 0, 0, 0, 220, 0, 0, 0, 318,
	0, 0, 3805, 3806, 810, 3823, 3824, 3825, 0, 810,
	0, 0, 810, 0, 0, 810, 810, 0, 0, 0,
	0, 810, 0, 0, 810, 0, 0, 0, 0, 1871,
	1871, 0, 318, 0, 0, 0, 0, 0, 3862, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 3820, 0, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 827, 3820, 0, 0, 0, 0, 0,
	0, 0, 3891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	3907, 0, 318, 318, 0, 0, 0, 0, 0, 0,
	0, 2302, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
	1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
	1871, 1871, 0, 1871, 3934, 3817, 3818, 3819, 0, 0,
	0, 0, 3816, 3814, 3815, 3807, 3808, 3809, 3810, 3812,
	3813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3811, 0, 3987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3994, 0, 3995,
	0, 0, 1892, 0, 0, 318, 0, 0, 0, 0,
	0, 1520, 318, 0, 318, 0, 0, 3828, 0, 0,
	1520, 0, 0, 1520, 0, 0, 0, 3408, 3408, 318,
	0, 4019, 4022, 0, 0, 0, 0, 0, 3408, 0,
	2273, 0, 0, 0, 0, 0, 0, 3827, 0, 3408,
	2273, 0, 3408, 2273, 0, 0, 2273, 0, 0, 4019,
	0, 0, 0, 0, 3827, 0, 0, 0, 0, 0,
	0, 318, 318, 4022, 0, 318, 0, 0, 860, 0,
	0, 0, 0, 0, 0, 4001, 0, 0, 1750, 0,
	0, 3821, 0, 0, 4022, 0, 318, 0, 0, 844,
	0, 4092, 4022, 0, 845, 0, 0, 0, 3821, 0,
	0, 0, 0, 0, 0, 4103, 0, 4103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 846, 0,
	0, 3408, 0, 3408, 0, 4139, 3408, 4022, 0, 847,
	3408, 3313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 4022, 1014, 0, 901, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 866, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 1024, 0, 0, 0, 0, 849, 0,
	0, 318, 0, 0, 0, 4191, 0, 0, 4196, 3408,
	0, 0, 318, 0, 0, 0, 0, 1027, 1532, 0,
	0, 3373, 0, 850, 842, 0, 0, 0, 0, 3822,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 3633,
	0, 0, 1520, 0, 318, 0, 3822, 3408, 851, 810,
	0, 0, 0, 843, 0, 0, 3408, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	876, 3907, 1020, 0, 0, 0, 0, 0, 0, 1035,
	0, 0, 2103, 2096, 0, 0, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 1025, 0, 0, 865, 0,
	0, 0, 0, 2116, 2065, 2066, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 2096, 0,
	2067, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3530, 0, 0, 862, 2122, 876, 0, 0,
	4359, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 1304, 130, 0, 2087, 0, 0, 0,
	0, 3817, 3818, 3819, 0, 1022, 2084, 0, 3816, 3814,
	3815, 3807, 3808, 3809, 3810, 3812, 3813, 0, 3817, 3818,
	3819, 0, 0, 0, 0, 3816, 3814, 3815, 3807, 3808,
	3809, 3810, 3812, 3813, 0, 0, 4338, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 4354, 2073, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4315, 0, 4418, 0, 0,
	3097, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 318, 2102, 0, 874, 0, 854, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 2107, 3675, 2073,
	0, 2117, 5086, 0, 0, 0, 130, 810, 2095, 2098,
	4443, 810, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 0, 2114, 875, 0, 0, 0, 0, 0,
	2082, 2083, 855, 0, 0, 0, 0, 871, 872, 0,
	869, 0, 0, 2095, 2098, 0, 1016, 318, 0, 863,
	2105, 0, 856, 0, 0, 3097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 1021,
	0, 318, 0, 0, 3318, 3318, 4452, 5146, 0, 4022,
	0, 1236, 0, 3285, 0, 2065, 2066, 0, 0, 0,
	857, 0, 864, 0, 1258, 0, 0, 0, 868, 0,
	2088, 858, 0, 0, 0, 2115, 0, 0, 0, 2096,
	0, 875, 0, 0, 0, 2097, 0, 859, 2068, 0,
	0, 0, 867, 0, 0, 0, 2104, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 2119, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	861, 0, 0, 0, 0, 1428, 2067, 0, 0, 0,
	0, 0, 0, 0, 901, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 1015,
	0, 0, 0, 0, 0, 1028, 0, 2094, 0, 4587,
	0, 0, 4589, 0, 0, 4592, 0, 0, 0, 0,
	0, 0, 0, 4103, 3561, 0, 0, 0, 0, 1023,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 877, 0, 0, 0, 0,
	2102, 0, 2094, 0, 0, 3097, 0, 1017, 0, 3551,
	3549, 0, 0, 0, 0, 2108, 0, 3553, 3555, 3545,
	2090, 2091, 2092, 2093, 0, 4022, 0, 318, 2089, 0,
	2073, 827, 827, 1532, 0, 1032, 1033, 5289, 1029, 0,
	0, 0, 0, 0, 0, 4655, 0, 0, 0, 0,
	0, 2121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 3571, 4670, 0, 3097, 3633, 2273, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 4691,
	0, 0, 0, 318, 2095, 2098, 0, 318, 0, 318,
	3097, 0, 0, 0, 318, 0, 2121, 5326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3408, 318, 0, 0, 0, 0, 0,
	0, 0, 5348, 0, 0, 1129, 3408, 1871, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 2102, 2079, 2080, 2086, 2109, 2085,
	2081, 2088, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 3777, 0, 0, 0,
	3778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 4776, 0, 0, 0, 0, 0, 3547,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	3563, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3562, 3552, 3550, 3554, 3556, 3546,
	3548, 3564, 3566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3558, 3560, 3568, 0, 0, 318, 0,
	0, 0, 0, 0, 1892, 0, 318, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 2102, 0,
	3572, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 2102, 1532, 1532, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 1532, 1532, 0, 318, 1532, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 4813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3408,
	3408, 0, 4019, 0, 0, 4103, 3408, 2121, 0, 0,
	0, 0, 0, 0, 4901, 0, 4901, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3408, 0,
	2273, 4843, 0, 0, 4019, 0, 1892, 1892, 318, 4022,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4022, 0, 318, 4022, 3565, 318, 4937, 0,
	0, 0, 0, 4103, 0, 0, 4103, 0, 0, 1750,
	4103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 0, 0, 0, 2102, 0, 0, 3408,
	0, 3408, 318, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 1871, 0, 3318, 2102, 0, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 1871, 0, 0,
	0, 3573, 0, 0, 0, 0, 0, 0, 0, 3408,
	3408, 3557, 3559, 0, 4901, 3567, 3633, 0, 5010, 0,
	0, 0, 0, 0, 4019, 0, 4188, 4189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2226,
	0, 0, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 4269, 130,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	4295, 0, 0, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 0, 0, 0, 0, 2097, 0,
	0, 2068, 0, 0, 3101, 0, 0, 0, 0, 0,
	4443, 0, 2116, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 0,
	2122, 130, 0, 130, 0, 130, 0, 0, 0, 2067,
	0, 0, 0, 0, 5078, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 318, 318, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 3408,
	2273, 0, 2273, 0, 0, 4691, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 5078,
	0, 1258, 130, 130, 5162, 0, 5162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 2066, 130,
	0, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 130, 0, 130, 0, 0,
	0, 2096, 0, 0, 4103, 1892, 0, 2097, 0, 1892,
	2068, 1520, 1265, 2090, 2091, 2092, 2093, 0, 0, 2854,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4022, 2122,
	318, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 2107, 0, 4691, 2084,
	2117, 0, 4901, 0, 4901, 0, 1892, 2095, 2098, 320,
	3408, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2854, 0,
	5258, 0, 0, 0, 1236, 0, 0, 0, 0, 2082,
	2083, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2136, 4314, 2105,
	4509, 4510, 0, 0, 3072, 3073, 3074, 3075, 3068, 3069,
	3070, 3071, 0, 0, 2088, 0, 2142, 0, 0, 0,
	2148, 0, 2090, 2091, 2092, 2093, 0, 4359, 0, 0,
	0, 0, 2073, 0, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4103, 5317, 0, 2102,
	0, 0, 0, 0, 4691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 4901, 0, 2119, 3048, 3049, 3050,
	3051, 0, 0, 0, 0, 0, 0, 0, 0, 4901,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 2083,
	0, 3060, 3061, 3062, 3063, 3056, 3057, 3058, 3059, 3064,
	3065, 3066, 3067, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 2240, 0, 2243, 0, 130, 0, 0,
	0, 0, 0, 2088, 0, 827, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4620, 0, 0,
	0, 0, 1280, 4901, 0, 4901, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 4633, 0, 0, 0, 0,
	0, 0, 4901, 0, 318, 4901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2273, 3044, 3045, 3046, 3047,
	3052, 3053, 3054, 3055, 2108, 1892, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1532, 1532, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5162,
	0, 0, 318, 0, 0, 0, 0, 4726, 0, 0,
	0, 0, 2796, 4732, 4733, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	4359, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 0, 1892, 0, 2121,
	0, 130, 0, 0, 0, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 0, 0, 0, 0, 0, 2102, 0, 2102,
	2102, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 3101, 3101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 4691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4822, 4823,
	0, 0, 0, 0, 0, 0, 0, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 3408, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 4901, 0, 4901,
	0, 1541, 1892, 0, 0, 0, 0, 2096, 0, 0,
	0, 0, 0, 2097, 314, 0, 2068, 0, 2102, 0,
	0, 2102, 2065, 2066, 2102, 0, 0, 2102, 1265, 1265,
	1265, 0, 0, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	0, 0, 0, 0, 0, 2122, 2096, 0, 0, 0,
	0, 0, 2097, 0, 2067, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 3408, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 3318, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 937, 0, 1679, 0, 0,
	1685, 0, 2102, 3408, 2087, 3826, 0, 3101, 3101, 3101,
	3101, 0, 0, 2102, 2084, 2102, 0, 3318, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3717, 0, 0, 0, 0, 0,
	0, 0, 2796, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 1867, 2090, 2091,
	2092, 2093, 1434, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 3710, 0, 0, 0, 0, 1258, 0,
	1258, 0, 0, 0, 0, 0, 1894, 0, 1899, 0,
	1905, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 313, 806, 0,
	0, 0, 2095, 2098, 0, 5057, 0, 5059, 5060, 5061,
	0, 5063, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 1236, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 2095, 2098, 0, 2002, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 2026, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 2916, 0, 0, 0, 0, 0, 0, 0, 0,
	5106, 0, 0, 0, 0, 0, 0, 0, 1280, 1280,
	1280, 1258, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 2142, 0, 0, 0, 2142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 2102, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 0, 0, 0, 0,
	2119, 0, 0, 1428, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 2243,
	0, 2094, 2143, 0, 0, 0, 1835, 0, 2156, 0,
	0, 0, 2103, 2096, 0, 0, 0, 0, 0, 2097,
	0, 0, 2068, 5202, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 5224, 0, 0, 130,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2220, 2220, 2220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 2102, 0, 2102, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 130, 130, 0, 0, 0, 0,
	0, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 2102, 0, 3101, 3101, 2088, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3826, 3826, 0,
	0, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2796, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 2495, 0,
	0, 0, 0, 0, 0, 0, 3101, 3101, 3101, 3101,
	3101, 3101, 3101, 3101, 3101, 3101, 3101, 3101, 3101, 3101,
	3101, 3101, 3101, 3101, 3101, 3101, 0, 3101, 3826, 3826,
	3826, 3826, 0, 0, 0, 0, 0, 317, 317, 317,
	0, 2530, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 1835, 2094, 0, 0,
	0, 0, 0, 0, 317, 2102, 1504, 0, 1504, 1504,
	0, 0, 937, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	130, 0, 130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 130, 0, 0,
	0, 2121, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1481, 0, 0, 1859, 937, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 2102, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 1441, 2975, 0, 0, 0,
	2976, 2916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 2102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 2827, 0, 2831, 0, 1857, 0, 0, 0, 0,
	2845, 0, 0, 1265, 0, 0, 0, 0, 0, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 0, 2898, 0, 2900,
	2901, 2902, 2903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2143, 0, 0,
	0, 2979, 0, 0, 0, 0, 0, 0, 0, 2000,
	2001, 0, 0, 0, 0, 0, 0, 3009, 3012, 3015,
	3018, 0, 0, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	0, 1428, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 2102, 2102, 0, 0, 2102, 3826, 3826, 2102, 0,
	0, 0, 2102, 0, 3093, 0, 3104, 3106, 3111, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 1428, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 2102, 2102, 2102, 2102,
	0, 0, 0, 0, 0, 0, 2102, 0, 2102, 0,
	0, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826,
	3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826,
	3826, 0, 0, 0, 3826, 0, 0, 2102, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 2258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 2102, 130, 130, 2268, 130, 1857, 0, 0, 0,
	0, 0, 3355, 0, 0, 0, 0, 3356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 1835, 317, 317, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 2065,
	2066, 0, 1835, 0, 0, 2110, 2111, 2112, 0, 0,
	130, 130, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 2519,
	2521, 0, 2102, 2524, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 2102, 2102, 0, 0, 0, 2102, 2102,
	0, 2084, 2102, 2102, 0, 0, 317, 2102, 0, 0,
	0, 2102, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3101, 0, 2460, 0, 0, 0, 0, 0, 317,
	0, 317, 317, 317, 0, 0, 317, 317, 2477, 0,
	2479, 0, 2481, 1428, 0, 2483, 1258, 2484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	130, 130, 0, 1835, 0, 3592, 0, 3594, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 2516, 2517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 317, 0, 0, 0, 3101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	317, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2729,
	0, 0, 0, 0, 2065, 2066, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 2123, 2124, 0, 0, 2096, 2519,
	2105, 0, 0, 0, 2097, 0, 0, 2068, 0, 1265,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	2102, 2102, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 3711, 3712, 0, 2087, 0, 0, 3718,
	0, 130, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3732, 3733,
	0, 1428, 1428, 0, 2979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 2102, 2102, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 2102, 3826, 3101, 0, 0, 0,
	3742, 0, 2102, 0, 0, 2102, 2738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3756, 0, 0, 2090,
	2091, 2092, 2093, 0, 2759, 0, 0, 2094, 0, 2073,
	0, 0, 0, 3768, 0, 0, 0, 0, 0, 0,
	2771, 0, 2771, 0, 0, 0, 0, 0, 2778, 0,
	0, 0, 0, 2089, 0, 3826, 3101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	2102, 3101, 0, 2095, 2098, 2108, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 2805, 0, 0,
	2102, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 2082, 2083, 0, 0, 0,
	0, 2121, 0, 2242, 0, 1441, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 3111, 3111, 3111,
	0, 0, 0, 0, 0, 317, 2242, 317, 0, 0,
	2088, 0, 0, 0, 0, 1048, 2220, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3866, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 0, 0, 3826, 317,
	0, 0, 0, 2106, 0, 0, 1481, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 2119, 0, 2102, 3826, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	937, 0, 0, 0, 0, 0, 0, 3826, 0, 0,
	0, 0, 0, 1481, 0, 0, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 3271, 0, 0,
	0, 1504, 0, 1504, 0, 0, 0, 0, 0, 0,
	937, 937, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 2089, 0,
	1265, 0, 3196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 1428, 0, 0, 0, 1048, 0, 317,
	0, 317, 0, 317, 0, 0, 317, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 130, 0, 2121, 0, 0, 937,
	0, 0, 860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 317, 317, 317,
	0, 0, 317, 844, 0, 0, 0, 0, 845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 2759,
	0, 0, 0, 4052, 1859, 0, 1859, 0, 0, 0,
	2102, 0, 846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 848, 0, 0, 0,
	130, 3311, 1835, 0, 0, 0, 1445, 1428, 0, 0,
	0, 0, 1843, 0, 1445, 1428, 0, 0, 0, 866,
	1835, 0, 0, 0, 3329, 0, 3332, 0, 0, 0,
	0, 0, 0, 4121, 4122, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 850, 842, 0,
	0, 0, 0, 0, 317, 1859, 0, 0, 1048, 0,
	0, 0, 0, 0, 0, 3369, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 843, 0, 0,
	0, 3380, 1857, 3382, 1857, 0, 0, 1445, 0, 0,
	1280, 3389, 2102, 0, 876, 1445, 0, 0, 317, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 317, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 317, 0,
	0, 0, 2845, 0, 0, 0, 0, 0, 0, 4312,
	4313, 0, 0, 4316, 0, 0, 0, 4319, 0, 0,
	0, 0, 0, 0, 1504, 0, 4323, 0, 0, 0,
	130, 0, 0, 0, 0, 4330, 0, 0, 0, 0,
	3866, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 4343, 0, 873, 0, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 4366, 4367, 3611, 4368, 4369,
	4370, 0, 0, 0, 0, 0, 2759, 0, 0, 0,
	874, 0, 854, 0, 0, 0, 0, 0, 0, 4377,
	0, 1835, 0, 4379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4408, 4409, 875, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 871, 872, 0, 869, 0, 4421, 0, 0, 0,
	0, 0, 0, 863, 0, 0, 856, 0, 0, 0,
	0, 4430, 0, 0, 0, 0, 0, 0, 0, 0,
	3707, 1835, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 1445, 0, 1441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 130, 1441,
	0, 0, 0, 0, 857, 0, 864, 0, 0, 0,
	0, 0, 868, 317, 0, 858, 0, 0, 0, 2310,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 859, 0, 317, 0, 0, 867, 0, 0, 0,
	1048, 0, 1048, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 4501, 0, 0, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 317, 0, 0, 0,
	317, 0, 317, 0, 4538, 0, 1835, 0, 0, 317,
	317, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4569, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 1445, 1445,
	1445, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 2916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4601,
	4602, 0, 0, 0, 0, 317, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 1859, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 317, 317, 317, 317, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2220, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 3917, 0, 0, 0, 130, 317, 0, 0,
	0, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	4723, 317, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 130, 0,
	1857, 1857, 0, 0, 4754, 4755, 0, 0, 0, 0,
	4759, 4760, 1859, 0, 317, 4763, 4764, 0, 0, 0,
	0, 0, 0, 4768, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 1445, 4772, 0, 2519, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	4777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3998, 0, 0, 0, 0, 317, 1445,
	4003, 0, 1857, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 130,
	0, 130, 0, 0, 1445, 0, 1445, 0, 1445, 0,
	0, 2103, 2096, 0, 0, 0, 0, 0, 2097, 4071,
	4073, 2068, 317, 2759, 0, 0, 1445, 1445, 0, 0,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 317, 0, 0, 0, 0, 0, 2067,
	0, 317, 0, 0, 937, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 2310, 2310, 1445, 1265, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 4950, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 1445, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4991,
	4992, 0, 0, 0, 0, 0, 2107, 0, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	2113, 0, 2114, 0, 0, 1445, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 0, 0, 1835, 1835, 0, 1835, 2105,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 4310,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5073, 5074, 5075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 2845,
	0, 0, 5084, 5085, 0, 0, 0, 0, 0, 0,
	0, 1441, 0, 0, 2115, 0, 0, 0, 0, 0,
	5093, 5096, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 2104, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 1441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2242, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 1048, 0, 2094, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	5163, 0, 1445, 1445, 0, 0, 0, 0, 0, 5171,
	0, 1075, 2089, 0, 0, 0, 1076, 0, 0, 0,
	0, 0, 0, 0, 5179, 0, 0, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 317, 317, 0, 2108, 0, 0, 0, 5191, 0,
	0, 5193, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 1091, 0, 0, 5203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 1445, 0, 1079, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4505,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 937,
	0, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	1098, 317, 0, 317, 0, 0, 2310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 2106, 0, 1835, 1073, 1070, 0, 0, 0,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 4782,
	317, 317, 0, 0, 317, 0, 0, 1102, 0, 1835,
	0, 2242, 876, 2519, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5325, 0, 0, 0, 5329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 2759, 0, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4668,
	1445, 0, 0, 0, 0, 317, 0, 0, 1835, 0,
	4680, 0, 1445, 0, 1445, 0, 0, 0, 0, 1445,
	1048, 0, 0, 0, 0, 2759, 0, 2759, 0, 0,
	0, 317, 4705, 0, 0, 0, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2845, 1082, 0, 0,
	0, 0, 0, 317, 0, 5096, 0, 0, 0, 0,
	0, 0, 0, 1441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 0, 0, 0,
	317, 0, 0, 0, 937, 0, 0, 0, 0, 1069,
	0, 0, 1092, 2065, 2066, 0, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 0, 0, 5525,
	5525, 5525, 0, 1090, 0, 0, 0, 2116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 2122, 1086, 1105, 0, 1104,
	1072, 0, 0, 1087, 2067, 0, 0, 0, 0, 5551,
	0, 0, 0, 0, 0, 2087, 0, 2519, 0, 1088,
	0, 0, 0, 0, 1097, 2084, 0, 0, 0, 0,
	1106, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5525, 0, 0, 0, 0, 0, 0, 0,
	0, 1441, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 5639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 1445, 0,
	0, 0, 0, 0, 0, 0, 4921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 0,
	0, 2107, 2759, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 1445, 0, 1280, 2113, 0, 2114, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 1445, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 5525, 5703,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	2310, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	5037, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 3130, 0, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 2103, 2096, 0, 1445, 317, 3128, 1445, 2097,
	0, 0, 2068, 3132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 1330, 2089, 0, 0,
	0, 0, 0, 0, 0, 3133, 2310, 0, 0, 0,
	317, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 317, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 2087, 317, 0, 5127, 1857, 317, 0, 317, 0,
	0, 2084, 0, 317, 0, 0, 0, 3134, 0, 0,
	319, 319, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5148, 1441, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3135, 319, 0, 0,
	0, 0, 0, 3136, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 3137, 319, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 2759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 2107, 0, 3138,
	0, 2117, 0, 0, 4328, 1445, 0, 1445, 2095, 2098,
	0, 1445, 0, 0, 0, 2771, 0, 1445, 1445, 0,
	3139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3140, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 937, 1441, 0, 0,
	0, 0, 0, 0, 0, 1441, 3141, 0, 0, 1445,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2242, 0, 2088, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 2310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 3142, 0,
	0, 0, 0, 2242, 0, 2242, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 2310, 2310, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 2310, 2310, 0, 0, 0,
	3143, 3144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 5403, 0, 0, 0, 0, 0, 2310, 3145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3150,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 1445, 0,
	3146, 0, 0, 2242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3147, 0, 0, 0, 0,
	0, 2121, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 3148, 0, 0,
	5457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2310,
	0, 2310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 1445, 5507, 0,
	0, 1445, 1445, 1445, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 317, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 1040, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 1040, 0, 0, 0, 1445, 1445,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2242, 0, 2242, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 317, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 1445,
	319, 319, 0, 0, 319, 0, 0, 0, 1445, 0,
	0, 0, 2107, 1445, 1445, 1445, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 0,
	0, 1445, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 2310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2242, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 319, 1631, 319, 319, 319, 0, 0, 319,
	319, 1631, 0, 1445, 0, 0, 0, 1320, 0, 0,
	0, 1445, 2119, 0, 0, 1445, 1445, 0, 1445, 0,
	0, 319, 2242, 2310, 2242, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	1445, 2242, 0, 317, 2242, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 2094, 0, 319, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 2096, 0, 0, 0,
	0, 0, 2097, 0, 1631, 2068, 0, 0, 2089, 1445,
	0, 0, 1631, 319, 319, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 1445,
	0, 1445, 0, 0, 2122, 0, 0, 0, 0, 0,
	2108, 317, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 1445, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 2106, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	2107, 1445, 0, 0, 2117, 0, 0, 0, 0, 0,
	0, 2095, 2098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 1445, 1445, 1445,
	1445, 1445, 1445, 0, 2113, 0, 2114, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 2310, 2242, 0, 2242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 319, 319,
	319, 0, 0, 0, 0, 0, 0, 0, 319, 2104,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	2119, 0, 0, 1631, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 2310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 1445, 0,
	0, 0, 0, 0, 1445, 0, 0, 1445, 1445, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 1445, 2108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 1445,
	0, 0, 1631, 0, 0, 1631, 1631, 1631, 1631, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 1445, 0,
	1753, 1445, 0, 0, 0, 0, 0, 0, 1629, 0,
	319, 0, 319, 0, 319, 0, 319, 0, 0, 319,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2310, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 0, 319,
	319, 319, 319, 0, 0, 319, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 3780, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	1445, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 319, 0, 1631,
	1631, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 319, 2065,
	2066, 1445, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 1630, 319, 0, 319, 0, 0, 0,
	0, 0, 319, 2096, 0, 0, 0, 0, 0, 2097,
	0, 1631, 2068, 1631, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1631, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 1631, 0, 0,
	2067, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 2084, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 2283, 0, 0, 0, 0,
	0, 0, 0, 0, 2283, 0, 0, 1630, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 1630, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 2117, 1445, 0, 1445, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 1631, 0, 0, 0, 0, 0, 1629,
	0, 0, 1629, 1629, 1629, 1629, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 319, 0, 0, 1631,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 2283, 0, 0,
	0, 0, 0, 319, 0, 319, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 2119, 319, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 319, 319,
	0, 0, 0, 319, 0, 319, 0, 0, 0, 0,
	0, 0, 319, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 319, 0, 0, 0, 1631,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	319, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 319, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 0, 0, 1630, 0, 1629, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 319, 319, 319, 319, 0,
	0, 0, 1629, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 1754, 0, 0, 0, 0, 0, 0, 1629, 0,
	1629, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 0, 1630, 0, 0, 1630, 1630, 1630, 1630,
	0, 0, 0, 0, 1629, 0, 0, 319, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 0, 0, 0, 2097, 0, 319, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	0, 319, 0, 0, 0, 0, 0, 2067, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 1631,
	0, 1631, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	1753, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 2117, 0,
	1630, 1630, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 0, 183, 0, 0, 1630, 2082, 2083, 0,
	0, 0, 88, 0, 54, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 56, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 1630, 0, 1630, 0, 0, 0,
	55, 0, 2115, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 0, 1753, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 1630, 0,
	0, 58, 76, 0, 2119, 0, 1629, 1629, 0, 0,
	0, 59, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 5714, 0, 0, 0, 0, 0, 0, 0, 57,
	0, 128, 0, 0, 0, 1754, 0, 112, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 319, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 3779, 0, 0,
	0, 0, 0, 0, 0, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 0, 319, 67, 0,
	0, 0, 1631, 0, 319, 1631, 319, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 66, 216, 0, 120,
	0, 319, 124, 0, 5572, 0, 0, 0, 62, 0,
	0, 0, 182, 0, 1629, 0, 0, 0, 0, 0,
	63, 0, 0, 0, 0, 0, 1629, 0, 1629, 0,
	0, 0, 0, 1629, 279, 0, 0, 0, 0, 0,
	0, 0, 70, 319, 319, 0, 0, 319, 81, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 180, 2065, 2066, 319, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	1630, 1630, 0, 0, 0, 0, 0, 0, 281, 2103,
	2096, 0, 0, 0, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 179, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 2122, 0,
	0, 0, 0, 222, 0, 0, 0, 2067, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	1630, 0, 0, 217, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 1631, 0, 1631, 0, 0, 0, 1631, 220,
	0, 0, 0, 319, 1631, 1631, 0, 0, 0, 1631,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 2117, 1754,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 1630, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 2105, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 1630, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1630, 0, 1753, 0, 0, 1630, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 1631, 0, 0, 0, 1631, 1631,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 1753,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1631, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 1629,
	1754, 1629, 0, 0, 319, 1753, 0, 0, 0, 0,
	1040, 1629, 1629, 0, 0, 319, 0, 0, 1754, 319,
	0, 319, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1631, 0, 0, 0, 0,
	1631, 1631, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1631, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 1631, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 2283, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 319, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 1631, 1629, 1629, 1753, 0, 0,
	0, 0, 0, 1630, 319, 1630, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 1630, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 1631, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 1630,
	0, 1630, 0, 1631, 319, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 1629, 1629, 1754, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 1629, 1629, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 1631, 0, 0, 1631, 1631, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 1630, 0, 0, 0, 1630,
	1630, 1754, 0, 0, 0, 0, 2103, 2096, 0, 319,
	0, 0, 0, 2097, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 2116, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 1753,
	1753, 0, 1753, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 1629, 1629, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 1630, 1630, 2073, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 319, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 1753, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 319, 2114, 0, 0,
	0, 1631, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 1631, 0, 1630, 0, 0, 0, 1629, 1629, 0,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 2088,
	0, 1630, 1630, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	1753, 0, 0, 0, 0, 1629, 0, 0, 0, 1754,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 1753, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 0, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 1753, 0, 1629, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 1754, 1754, 0, 1754, 2089, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	1631, 0, 0, 0, 0, 0, 0, 1630, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 1753, 0, 2067, 0, 0, 0, 1629, 0,
	0, 1629, 1629, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 2084, 0, 0, 0, 0,
	0, 1629, 0, 0, 2107, 0, 0, 2106, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 1754, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 2113, 0,
	2114, 0, 0, 0, 3775, 0, 0, 2082, 2083, 0,
	0, 0, 1753, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 1630, 1630, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 2088, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 1630,
	0, 2107, 2115, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 0, 0, 0, 2119, 2113, 0, 2114, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	2104, 0, 2108, 0, 0, 0, 0, 0, 1629, 0,
	0, 2119, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1754, 2089, 0, 0,
	0, 0, 1630, 0, 0, 1630, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 1630, 0, 0, 0, 2108,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3774, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 1756, 337, 338, 1757, 1758,
	1759, 0, 1760, 750, 1761, 1762, 1763, 0, 339, 1764,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1765, 755,
	352, 353, 354, 355, 356, 357, 358, 1766, 1767, 1630,
	359, 756, 757, 758, 1768, 360, 361, 759, 1769, 1632,
	1770, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1771, 371, 372, 373, 370, 374, 375, 1772, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1773, 384, 385,
	386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778,
	1779, 1780, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1781, 400, 402, 396, 398, 1782, 401, 399,
	403, 404, 1783, 405, 406, 407, 1784, 1785, 408, 409,
	410, 1786, 411, 412, 413, 1787, 414, 415, 416, 1788,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1789,
	324, 1790, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 1630, 0, 436, 1791, 437, 438, 439, 1792, 440,
	441, 1793, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1794, 454, 768,
	1795, 769, 455, 1796, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1797,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1798, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1799, 776, 1800, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1801, 491, 493,
	492, 1802, 495, 778, 494, 1392, 496, 497, 1393, 1803,
	498, 499, 500, 501, 502, 503, 506, 1804, 1805, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1806, 539, 328, 1396, 553, 554, 555, 556, 1807, 779,
	557, 780, 560, 561, 1808, 0, 562, 0, 563, 1809,
	1810, 565, 566, 567, 1811, 1812, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1813, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1814, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1815, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1816, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1817, 659,
	660, 658, 661, 662, 663, 1818, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1819, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1820, 696, 697, 0,
	691, 682, 1821, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1822, 706, 793, 794, 795, 796, 1823, 718,
	1824, 707, 709, 710, 711, 712, 797, 713, 798, 1825,
	714, 715, 716, 717, 708, 719, 720, 1826, 1827, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1828, 730,
	1829, 0, 731, 732, 733, 799, 800, 801, 1830, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1831, 1832, 1833, 1834, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 3171, 0, 0, 0, 0, 0, 0, 0, 0,
	3172, 329, 330, 332, 331, 333, 334, 335, 336, 1756,
	337, 338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762,
	1763, 0, 339, 1764, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 1765, 755, 352, 353, 354, 355, 356, 357,
	358, 1766, 1767, 0, 359, 756, 757, 758, 1768, 360,
	361, 759, 1769, 1632, 1770, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 1771, 371, 372, 373, 370, 374,
	375, 1772, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 1773, 384, 385, 386, 1385, 387, 388, 389, 1774,
	1775, 1777, 1776, 1778, 1779, 1780, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 1781, 400, 402, 396,
	398, 1782, 401, 399, 403, 404, 1783, 405, 406, 407,
	1784, 1785, 408, 409, 410, 1786, 411, 412, 413, 1787,
	414, 415, 416, 1788, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 1789, 324, 1790, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 1791, 437,
	438, 439, 1792, 440, 441, 1793, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 1794, 454, 768, 1795, 769, 455, 1796, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 1797, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 1798, 326, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 1799, 776, 1800,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1801, 491, 493, 492, 1802, 495, 778, 494, 1392,
	496, 497, 1393, 1803, 498, 499, 500, 501, 502, 503,
	506, 1804, 1805, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1806, 539, 328, 1396, 553, 554,
	555, 556, 1807, 779, 557, 780, 560, 561, 1808, 0,
	562, 0, 563, 1809, 1810, 565, 566, 567, 1811, 1812,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	1813, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 1814, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 1815, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 1816, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 1817, 659, 660, 658, 661, 662, 663, 1818,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 1819, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	1820, 696, 697, 0, 691, 682, 1821, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 1822, 706, 793, 794,
	795, 796, 1823, 718, 1824, 707, 709, 710, 711, 712,
	797, 713, 798, 1825, 714, 715, 716, 717, 708, 719,
	720, 1826, 1827, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1828, 730, 1829, 0, 731, 732, 733, 799,
	800, 801, 1830, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1831, 1832, 1833, 1834, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 4337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4339, 329, 330, 332, 331, 333, 334, 335, 336,
	1756, 337, 338, 1757, 1758, 1759, 0, 1760, 750, 1761,
	1762, 1763, 0, 339, 1764, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 1765, 755, 352, 353, 354, 355, 356,
	357, 358, 1766, 1767, 0, 359, 756, 757, 758, 1768,
	360, 361, 759, 1769, 1632, 1770, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 1771, 371, 372, 373, 370,
	374, 375, 1772, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 1773, 384, 385, 386, 1385, 387, 388, 389,
	1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 1781, 400, 402,
	396, 398, 1782, 401, 399, 403, 404, 1783, 405, 406,
	407, 1784, 1785, 408, 409, 410, 1786, 411, 412, 413,
	1787, 414, 415, 416, 1788, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 1789, 324, 1790, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 1791,
	437, 438, 439, 1792, 440, 441, 1793, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 1794, 454, 768, 1795, 769, 455, 1796, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 1797, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 1798, 326, 325,
	327, 1387, 773, 475, 559, 476, 774, 775, 1799, 776,
	1800, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 1801, 491, 493, 492, 1802, 495, 778, 494,
	1392, 496, 497, 1393, 1803, 498, 499, 500, 501, 502,
	503, 506, 1804, 1805, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1806, 539, 328, 1396, 553,
	554, 555, 556, 1807, 779, 557, 780, 560, 561, 1808,
	0, 562, 0, 563, 1809, 1810, 565, 566, 567, 1811,
	1812, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 1813, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 1814, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 1815, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 1816, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 1817, 659, 660, 658, 661, 662, 663,
	1818, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 1819,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 1820, 696, 697, 0, 691, 682, 1821, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 1822, 706, 793,
	794, 795, 796, 1823, 718, 1824, 707, 709, 710, 711,
	712, 797, 713, 798, 1825, 714, 715, 716, 717, 708,
	719, 720, 1826, 1827, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1828, 730, 1829, 0, 731, 732, 733,
	799, 800, 801, 1830, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1831, 1832, 1833, 1834,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4812, 329, 330, 332,
	331, 333, 334, 335, 336, 1756, 337, 338, 1757, 1758,
	1759, 0, 1760, 750, 1761, 1762, 1763, 0, 339, 1764,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1765, 755,
	352, 353, 354, 355, 356, 357, 358, 1766, 1767, 0,
	359, 756, 757, 758, 1768, 360, 361, 759, 1769, 1632,
	1770, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1771, 371, 372, 373, 370, 374, 375, 1772, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1773, 384, 385,
	386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778,
	1779, 1780, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1781, 400, 402, 396, 398, 1782, 401, 399,
	403, 404, 1783, 405, 406, 407, 1784, 1785, 408, 409,
	410, 1786, 411, 412, 413, 1787, 414, 415, 416, 1788,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1789,
	324, 1790, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 1791, 437, 438, 439, 1792, 440,
	441, 1793, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1794, 454, 768,
	1795, 769, 455, 1796, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1797,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1798, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1799, 776, 1800, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1801, 491, 493,
	492, 1802, 495, 778, 494, 1392, 496, 497, 1393, 1803,
	498, 499, 500, 501, 502, 503, 506, 1804, 1805, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1806, 539, 328, 1396, 553, 554, 555, 556, 1807, 779,
	557, 780, 560, 561, 1808, 0, 562, 0, 563, 1809,
	1810, 565, 566, 567, 1811, 1812, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1813, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1814, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1815, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1816, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1817, 659,
	660, 658, 661, 662, 663, 1818, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1819, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1820, 696, 697, 0,
	691, 682, 1821, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1822, 706, 793, 794, 795, 796, 1823, 718,
	1824, 707, 709, 710, 711, 712, 797, 713, 798, 1825,
	714, 715, 716, 717, 708, 719, 720, 1826, 1827, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1828, 730,
	1829, 0, 731, 732, 733, 799, 800, 801, 1830, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1831, 1832, 1833, 1834, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4810, 329, 330, 332, 331, 333, 334, 335, 336,
	1756, 337, 338, 1757, 1758, 1759, 0, 1760, 750, 1761,
	1762, 1763, 0, 339, 1764, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 1765, 755, 352, 353, 354, 355, 356,
	357, 358, 1766, 1767, 0, 359, 756, 757, 758, 1768,
	360, 361, 759, 1769, 1632, 1770, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 1771, 371, 372, 373, 370,
	374, 375, 1772, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 1773, 384, 385, 386, 1385, 387, 388, 389,
	1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 1781, 400, 402,
	396, 398, 1782, 401, 399, 403, 404, 1783, 405, 406,
	407, 1784, 1785, 408, 409, 410, 1786, 411, 412, 413,
	1787, 414, 415, 416, 1788, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 1789, 324, 1790, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 1791,
	437, 438, 439, 1792, 440, 441, 1793, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 1794, 454, 768, 1795, 769, 455, 1796, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 1797, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 1798, 326, 325,
	327, 1387, 773, 475, 559, 476, 774, 775, 1799, 776,
	1800, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 1801, 491, 493, 492, 1802, 495, 778, 494,
	1392, 496, 497, 1393, 1803, 498, 499, 500, 501, 502,
	503, 506, 1804, 1805, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1806, 539, 328, 1396, 553,
	554, 555, 556, 1807, 779, 557, 780, 560, 561, 1808,
	0, 562, 0, 563, 1809, 1810, 565, 566, 567, 1811,
	1812, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 1813, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 1814, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 1815, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 1816, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 1817, 659, 660, 658, 661, 662, 663,
	1818, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 1819,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 1820, 696, 697, 0, 691, 682, 1821, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 1822, 706, 793,
	794, 795, 796, 1823, 718, 1824, 707, 709, 710, 711,
	712, 797, 713, 798, 1825, 714, 715, 716, 717, 708,
	719, 720, 1826, 1827, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1828, 730, 1829, 0, 731, 732, 733,
	799, 800, 801, 1830, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1831, 1832, 1833, 1834,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5079, 329, 330, 332, 331, 333, 334, 335, 336, 1756,
	337, 338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762,
	1763, 0, 339, 1764, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 1765, 755, 352, 353, 354, 355, 356, 357,
	358, 1766, 1767, 0, 359, 756, 757, 758, 1768, 360,
	361, 759, 1769, 1632, 1770, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 1771, 371, 372, 373, 370, 374,
	375, 1772, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 1773, 384, 385, 386, 1385, 387, 388, 389, 1774,
	1775, 1777, 1776, 1778, 1779, 1780, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 1781, 400, 402, 396,
	398, 1782, 401, 399, 403, 404, 1783, 405, 406, 407,
	1784, 1785, 408, 409, 410, 1786, 411, 412, 413, 1787,
	414, 415, 416, 1788, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 1789, 324, 1790, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 1791, 437,
	438, 439, 1792, 440, 441, 1793, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 1794, 454, 768, 1795, 769, 455, 1796, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 1797, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 1798, 326, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 1799, 776, 1800,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1801, 491, 493, 492, 1802, 495, 778, 494, 1392,
	496, 497, 1393, 1803, 498, 499, 500, 501, 502, 503,
	506, 1804, 1805, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1806, 539, 328, 1396, 553, 554,
	555, 556, 1807, 779, 557, 780, 560, 561, 1808, 0,
	562, 0, 563, 1809, 1810, 565, 566, 567, 1811, 1812,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	1813, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 1814, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 1815, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 1816, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 1817, 659, 660, 658, 661, 662, 663, 1818,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 1819, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	1820, 696, 697, 0, 691, 682, 1821, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 1822, 706, 793, 794,
	795, 796, 1823, 718, 1824, 707, 709, 710, 711, 712,
	797, 713, 798, 1825, 714, 715, 716, 717, 708, 719,
	720, 1826, 1827, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1828, 730, 1829, 0, 731, 732, 733, 799,
	800, 801, 1830, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1831, 1832, 1833, 1834, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4930,
	329, 330, 332, 331, 333, 334, 335, 336, 1756, 337,
	338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762, 1763,
	0, 339, 1764, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 1765, 755, 352, 353, 354, 355, 356, 357, 358,
	1766, 1767, 0, 359, 756, 757, 758, 1768, 360, 361,
	759, 1769, 1632, 1770, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 1771, 371, 372, 373, 370, 374, 375,
	1772, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	1773, 384, 385, 386, 1385, 387, 388, 389, 1774, 1775,
	1777, 1776, 1778, 1779, 1780, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 1781, 400, 402, 396, 398,
	1782, 401, 399, 403, 404, 1783, 405, 406, 407, 1784,
	1785, 408, 409, 410, 1786, 411, 412, 413, 1787, 414,
	415, 416, 1788, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 1789, 324, 1790, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 1791, 437, 438,
	439, 1792, 440, 441, 1793, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	1794, 454, 768, 1795, 769, 455, 1796, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 1797, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 1798, 326, 325, 327, 1387,
	773, 475, 559, 476, 774, 775, 1799, 776, 1800, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	1801, 491, 493, 492, 1802, 495, 778, 494, 1392, 496,
	497, 1393, 1803, 498, 499, 500, 501, 502, 503, 506,
	1804, 1805, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1806, 539, 328, 1396, 553, 554, 555,
	556, 1807, 779, 557, 780, 560, 561, 1808, 0, 562,
	0, 563, 1809, 1810, 565, 566, 567, 1811, 1812, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 1813,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 1814, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 1815, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	1816, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 1817, 659, 660, 658, 661, 662, 663, 1818, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 1819, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 1820,
	696, 697, 0, 691, 682, 1821, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 1822, 706, 793, 794, 795,
	796, 1823, 718, 1824, 707, 709, 710, 711, 712, 797,
	713, 798, 1825, 714, 715, 716, 717, 708, 719, 720,
	1826, 1827, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1828, 730, 1829, 0, 731, 732, 733, 799, 800,
	801, 1830, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1831, 1832, 1833, 1834, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4511, 329,
	330, 332, 331, 333, 334, 335, 336, 1756, 337, 338,
	1757, 1758, 1759, 0, 1760, 750, 1761, 1762, 1763, 0,
	339, 1764, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	1765, 755, 352, 353, 354, 355, 356, 357, 358, 1766,
	1767, 0, 359, 756, 757, 758, 1768, 360, 361, 759,
	1769, 1632, 1770, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 1771, 371, 372, 373, 370, 374, 375, 1772,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 1773,
	384, 385, 386, 1385, 387, 388, 389, 1774, 1775, 1777,
	1776, 1778, 1779, 1780, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 1781, 400, 402, 396, 398, 1782,
	401, 399, 403, 404, 1783, 405, 406, 407, 1784, 1785,
	408, 409, 410, 1786, 411, 412, 413, 1787, 414, 415,
	416, 1788, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 1789, 324, 1790, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 1791, 437, 438, 439,
	1792, 440, 441, 1793, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 1794,
	454, 768, 1795, 769, 455, 1796, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 1797, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 1798, 326, 325, 327, 1387, 773,
	475, 559, 476, 774, 775, 1799, 776, 1800, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 1801,
	491, 493, 492, 1802, 495, 778, 494, 1392, 496, 497,
	1393, 1803, 498, 499, 500, 501, 502, 503, 506, 1804,
	1805, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1806, 539, 328, 1396, 553, 554, 555, 556,
	1807, 779, 557, 780, 560, 561, 1808, 0, 562, 0,
	563, 1809, 1810, 565, 566, 567, 1811, 1812, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 1813, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 1814, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 1815, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 1816,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	1817, 659, 660, 658, 661, 662, 663, 1818, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 1819, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 1820, 696,
	697, 0, 691, 682, 1821, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 1822, 706, 793, 794, 795, 796,
	1823, 718, 1824, 707, 709, 710, 711, 712, 797, 713,
	798, 1825, 714, 715, 716, 717, 708, 719, 720, 1826,
	1827, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1828, 730, 1829, 0, 731, 732, 733, 799, 800, 801,
	1830, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1831, 1832, 1833, 1834, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4355, 329, 330,
	332, 331, 333, 334, 335, 336, 1756, 337, 338, 1757,
	1758, 1759, 0, 1760, 750, 1761, 1762, 1763, 0, 339,
	1764, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 1765,
	755, 352, 353, 354, 355, 356, 357, 358, 1766, 1767,
	0, 359, 756, 757, 758, 1768, 360, 361, 759, 1769,
	1632, 1770, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 1771, 371, 372, 373, 370, 374, 375, 1772, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 1773, 384,
	385, 386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776,
	1778, 1779, 1780, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 1781, 400, 402, 396, 398, 1782, 401,
	399, 403, 404, 1783, 405, 406, 407, 1784, 1785, 408,
	409, 410, 1786, 411, 412, 413, 1787, 414, 415, 416,
	1788, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	1789, 324, 1790, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 1791, 437, 438, 439, 1792,
	440, 441, 1793, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 1794, 454,
	768, 1795, 769, 455, 1796, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 1388, 463, 464, 465,
	1797, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 1798, 326, 325, 327, 1387, 773, 475,
	559, 476, 774, 775, 1799, 776, 1800, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 1801, 491,
	493, 492, 1802, 495, 778, 494, 1392, 496, 497, 1393,
	1803, 498, 499, 500, 501, 502, 503, 506, 1804, 1805,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1806, 539, 328, 1396, 553, 554, 555, 556, 1807,
	779, 557, 780, 560, 561, 1808, 0, 562, 0, 563,
	1809, 1810, 565, 566, 567, 1811, 1812, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 1813, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 1814, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 1815, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 1816, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 1817,
	659, 660, 658, 661, 662, 663, 1818, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 1819, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 1820, 696, 697,
	0, 691, 682, 1821, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 1822, 706, 793, 794, 795, 796, 1823,
	718, 1824, 707, 709, 710, 711, 712, 797, 713, 798,
	1825, 714, 715, 716, 717, 708, 719, 720, 1826, 1827,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1828,
	730, 1829, 0, 731, 732, 733, 799, 800, 801, 1830,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1831, 1832, 1833, 1834, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4186, 329, 330, 332,
	331, 333, 334, 335, 336, 1756, 337, 338, 1757, 1758,
	1759, 0, 1760, 750, 1761, 1762, 1763, 0, 339, 1764,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1765, 755,
	352, 353, 354, 355, 356, 357, 358, 1766, 1767, 0,
	359, 756, 757, 758, 1768, 360, 361, 759, 1769, 1632,
	1770, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1771, 371, 372, 373, 370, 374, 375, 1772, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1773, 384, 385,
	386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778,
	1779, 1780, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1781, 400, 402, 396, 398, 1782, 401, 399,
	403, 404, 1783, 405, 406, 407, 1784, 1785, 408, 409,
	410, 1786, 411, 412, 413, 1787, 414, 415, 416, 1788,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1789,
	324, 1790, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 1791, 437, 438, 439, 1792, 440,
	441, 1793, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1794, 454, 768,
	1795, 769, 455, 1796, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1797,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1798, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1799, 776, 1800, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1801, 491, 493,
	492, 1802, 495, 778, 494, 1392, 496, 497, 1393, 1803,
	498, 499, 500, 501, 502, 503, 506, 1804, 1805, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1806, 539, 328, 1396, 553, 554, 555, 556, 1807, 779,
	557, 780, 560, 561, 1808, 0, 562, 0, 563, 1809,
	1810, 565, 566, 567, 1811, 1812, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1813, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1814, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1815, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1816, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1817, 659,
	660, 658, 661, 662, 663, 1818, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1819, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1820, 696, 697, 0,
	691, 682, 1821, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1822, 706, 793, 794, 795, 796, 1823, 718,
	1824, 707, 709, 710, 711, 712, 797, 713, 798, 1825,
	714, 715, 716, 717, 708, 719, 720, 1826, 1827, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1828, 730,
	1829, 0, 731, 732, 733, 799, 800, 801, 1830, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1831, 1832, 1833, 1834, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2999, 329, 330, 332, 331,
	333, 334, 335, 336, 1756, 337, 338, 1757, 1758, 1759,
	0, 1760, 750, 1761, 1762, 1763, 0, 339, 1764, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1765, 755, 352,
	353, 354, 355, 356, 357, 358, 1766, 1767, 0, 359,
	756, 757, 758, 1768, 360, 361, 759, 1769, 1632, 1770,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1771,
	371, 372, 373, 370, 374, 375, 1772, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1773, 384, 385, 386,
	1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779,
	1780, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1781, 400, 402, 396, 398, 1782, 401, 399, 403,
	404, 1783, 405, 406, 407, 1784, 1785, 408, 409, 410,
	1786, 411, 412, 413, 1787, 414, 415, 416, 1788, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1789, 324,
	1790, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 1791, 437, 438, 439, 1792, 440, 441,
	1793, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1794, 454, 768, 1795,
	769, 455, 1796, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1797, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1798, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1799, 776, 1800, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1801, 491, 493, 492,
	1802, 495, 778, 494, 1392, 496, 497, 1393, 1803, 498,
	499, 500, 501, 502, 503, 506, 1804, 1805, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1806,
	539, 328, 1396, 553, 554, 555, 556, 1807, 779, 557,
	780, 560, 561, 1808, 0, 562, 0, 563, 1809, 1810,
	565, 566, 567, 1811, 1812, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1813, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1814, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1815, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1816, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1817, 659, 660,
	658, 661, 662, 663, 1818, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1819, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1820, 696, 697, 0, 691,
	682, 1821, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1822, 706, 793, 794, 795, 796, 1823, 718, 1824,
	707, 709, 710, 711, 712, 797, 713, 798, 1825, 714,
	715, 716, 717, 708, 719, 720, 1826, 1827, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1828, 730, 1829,
	0, 731, 732, 733, 799, 800, 801, 1830, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1831, 1832, 1833, 1834, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 1748, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2714, 329, 330, 332, 331, 333,
	334, 335, 336, 1756, 337, 338, 1757, 1758, 1759, 0,
	1760, 750, 1761, 1762, 1763, 0, 339, 1764, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 1765, 755, 352, 353,
	354, 355, 356, 357, 358, 1766, 1767, 0, 359, 756,
	757, 758, 1768, 360, 361, 759, 1769, 1632, 1770, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1771, 371,
	372, 373, 370, 374, 375, 1772, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 1773, 384, 385, 386, 1385,
	387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779, 1780,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	1781, 400, 402, 396, 398, 1782, 401, 399, 403, 404,
	1783, 405, 406, 407, 1784, 1785, 408, 409, 410, 1786,
	411, 412, 413, 1787, 414, 415, 416, 1788, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 1789, 324, 1790,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 1791, 437, 438, 439, 1792, 440, 441, 1793,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 1794, 454, 768, 1795, 769,
	455, 1796, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 1797, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	1798, 326, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 1799, 776, 1800, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1801, 491, 493, 492, 1802,
	495, 778, 494, 1392, 496, 497, 1393, 1803, 498, 499,
	500, 501, 502, 503, 506, 1804, 1805, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1806, 539,
	328, 1396, 553, 554, 555, 556, 1807, 779, 557, 780,
	560, 561, 1808, 0, 562, 0, 563, 1809, 1810, 565,
	566, 567, 1811, 1812, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 1813, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	1814, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 1815,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 1816, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 1817, 659, 660, 658,
	661, 662, 663, 1818, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 1819, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 1820, 696, 697, 0, 691, 682,
	1821, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	1822, 706, 793, 794, 795, 796, 1823, 718, 1824, 707,
	709, 710, 711, 712, 797, 713, 798, 1825, 714, 715,
	716, 717, 708, 719, 720, 1826, 1827, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1828, 730, 1829, 0,
	731, 732, 733, 799, 800, 801, 1830, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1831,
	1832, 1833, 1834, 745, 746, 803, 747, 748, 749, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 1756, 337, 338, 1757, 1758, 1759,
	0, 1760, 750, 1761, 1762, 1763, 0, 339, 1764, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1765, 755, 352,
	353, 354, 355, 356, 357, 358, 1766, 1767, 0, 359,
	756, 757, 758, 1768, 360, 361, 759, 1769, 1632, 1770,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1771,
	371, 372, 373, 370, 374, 375, 1772, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1773, 384, 385, 386,
	1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779,
	1780, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1781, 400, 402, 396, 398, 1782, 401, 399, 403,
	404, 1783, 405, 406, 407, 1784, 1785, 408, 409, 410,
	1786, 411, 412, 413, 1787, 414, 415, 416, 1788, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1789, 324,
	1790, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 1791, 437, 438, 439, 1792, 440, 441,
	1793, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1794, 454, 768, 1795,
	769, 455, 1796, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1797, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1798, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1799, 776, 1800, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1801, 491, 493, 492,
	1802, 495, 778, 494, 1392, 496, 497, 1393, 1803, 498,
	499, 500, 501, 502, 503, 506, 1804, 1805, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1806,
	539, 328, 1396, 553, 554, 555, 556, 1807, 779, 557,
	780, 560, 561, 1808, 0, 562, 0, 563, 1809, 1810,
	565, 566, 567, 1811, 1812, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1813, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1814, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1815, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1816, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1817, 659, 660,
	658, 661, 662, 663, 1818, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1819, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1820, 696, 697, 0, 691,
	682, 1821, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1822, 706, 793, 794, 795, 796, 1823, 718, 1824,
	707, 709, 710, 711, 712, 797, 713, 798, 1825, 714,
	715, 716, 717, 708, 719, 720, 1826, 1827, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1828, 730, 1829,
	0, 731, 732, 733, 799, 800, 801, 1830, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1831, 1832, 1833, 1834, 745, 746, 803, 747, 748, 749,
	2974, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 2971, 337, 338,
	0, 0, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 2972, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	2970, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 2973, 0, 0,
	0, 0, 0, 0, 0, 1302, 2969, 0, 1259, 1300,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 279, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 281, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 1992, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 273, 745, 746, 803, 747, 748,
	749, 1275, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 2147, 2145, 0, 0, 1300, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 279, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 281, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	1992, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 273,
	745, 746, 803, 747, 748, 749, 1275, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 2147, 3730,
	0, 0, 1300, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 279, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 281, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 1992, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 273, 745, 746, 803, 747, 748,
	749, 1275, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 2147, 2145, 0, 0, 1300, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 3107, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 3112, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 3108, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 3109, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 3019, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 3017, 0, 3016,
	1300, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 3014, 0, 3013, 1300, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 3011, 0, 3010, 1300, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 3008, 0, 1681, 1300, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1680, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 1264, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 1279, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 5469, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	1279, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 2847, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 2846, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 5182, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 1279, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 1279, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 4717, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 2221, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 1302, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 2221, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 1302, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 4333, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 3112, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 2145, 0, 3117, 1300, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 3115, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 3103, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 3092, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 3090,
	0, 3081, 3088, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 3084,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	3085, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 3086, 516, 3083, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 3087, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	3082, 749, 1275, 0, 0, 0, 0, 3078, 0, 3081,
	3088, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 3084, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 3085, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 3086,
	516, 3083, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 3087, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 3082, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 0, 0, 0, 0, 0, 0, 2153, 0,
	1302, 0, 0, 0, 1300, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	2826, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 2531, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 2496,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 2027, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 2022, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 2008, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 2003, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 1907,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1906, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 1901, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1900, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 1895, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 1868, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 1848, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 1852, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 1853, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 1851, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 1686,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 1542, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 5524,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	5523, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 5522, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 5524, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 5523, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 5098, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 5099, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 5097, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 1318,
	1290, 1291, 1292, 3696, 3697, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 3694, 3695, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 2834, 2835,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 0, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 3100,
	0, 0, 0, 0, 0, 0, 3098, 3099, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	0, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	3689, 3690, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 2418, 2419, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	0, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 5524, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 0, 1347,
	0, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 0, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 5523, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 3119, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 0, 1343, 0, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	1870, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	1302, 0, 0, 0, 1300, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 0,
	1343, 0, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1259, 0, 1443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 1302, 0, 0, 1344, 1300,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 1343, 0, 359, 756, 757, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 1429, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 328, 1396, 553,
	554, 555, 556, 0, 1348, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 1435, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 1437, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 279, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 281, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	1992, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 273,
	745, 746, 803, 747, 748, 749, 1443, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 1433, 0, 2245, 1344,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1429, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 1435, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 1437, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 279, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 281, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 1992, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	273, 745, 746, 803, 747, 748, 749, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3859, 0, 1443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1433, 0, 2245,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 1343, 0, 359, 756, 757, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	1429, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 328, 1396, 553, 554, 555,
	556, 0, 1348, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 1435, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 1437, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 1425, 0, 1443, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 1433, 339, 1431, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 1343, 0, 359, 756, 757,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 1429, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 328,
	1396, 553, 554, 555, 556, 0, 1348, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 1435, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 1437, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 1443, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 1433, 339,
	1431, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 1343,
	0, 359, 756, 757, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 1429, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 328, 1396, 553, 554, 555, 556, 0,
	1348, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 1435, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 1437, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 1443, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 1433, 339, 1431, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 1343, 0, 359, 756, 757, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 328, 1396, 553,
	554, 555, 556, 0, 1348, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 1443,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 339, 4900, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 1343, 0, 359,
	756, 757, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 328, 1396, 553, 554, 555, 556, 0, 1348, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 1437,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 321, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 2941, 2942, 2943, 2960, 2961, 2962, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 2963, 0, 750, 0, 0, 0,
	2964, 339, 2137, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 2122, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 2953, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 2949, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 2954, 2955, 2956, 2957, 433,
	434, 435, 765, 0, 0, 2948, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 2958, 2959, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 2951, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 2952, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 2121, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1259, 0, 1627, 2938, 2939, 2940, 2965,
	2950, 2944, 0, 2946, 2947, 2945, 2932, 2933, 2934, 2935,
	2936, 2937, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 1632, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 279, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 281, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	1992, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 273,
	745, 746, 803, 747, 748, 749, 0, 1989, 274, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 220, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 1992, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	1627, 1626, 274, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 220, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 2016, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1627, 2707, 0, 0, 0, 0, 2708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 4268, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 1632, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 1387, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	2706, 493, 492, 0, 495, 778, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 0, 1396, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 2016, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 1632, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 1259, 0, 321, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 1998, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 279, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 281,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 1992, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 273, 745, 746, 803, 747, 748, 749, 321, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	220, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 321, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 2259, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 321, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 1986, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 321, 3319, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 4220, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	1443, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 339, 5712,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 1343, 0,
	359, 756, 757, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 328, 1396, 553, 554, 555, 556, 0, 1348,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 3266, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 0, 2314, 0, 350, 2321, 351, 2320, 0,
	2329, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 2332, 2333, 0, 0, 360, 361, 0, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 1367, 395,
	397, 2318, 2317, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	2316, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 2327, 2328, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 0, 0, 0, 558, 1388, 463, 464, 465,
	3260, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 3262, 475,
	559, 476, 2311, 2312, 0, 2307, 0, 477, 478, 480,
	1389, 0, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	0, 557, 2319, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 3261,
	1397, 570, 1398, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	2304, 585, 586, 587, 2305, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 2315, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 0, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 2313, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 2331, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 2323, 2324, 2325, 2326, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 2322, 2330, 3263,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 0, 747,
	748, 749, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 3255, 750, 0, 2300, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 3266, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 3651, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 0, 2314,
	0, 350, 2321, 351, 2320, 0, 2329, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 2332, 2333,
	0, 0, 360, 361, 0, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 1367, 395, 397, 2318, 2317, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 0,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 0, 0, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 2316, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 2327, 2328, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 0, 0, 0, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 0, 0,
	0, 558, 1388, 463, 464, 465, 3260, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 3262, 475, 559, 476, 2311, 2312,
	0, 2307, 0, 477, 478, 480, 1389, 0, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	0, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 0, 557, 2319, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 3261, 1397, 570, 1398, 0,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 2304, 585, 586, 587,
	2305, 588, 589, 590, 0, 591, 0, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 2315, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 0, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 0, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 2313, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 2331, 685, 686, 687, 688, 0, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 2323, 2324, 2325, 2326, 0, 718, 0, 707, 709,
	710, 711, 712, 0, 713, 0, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 0, 2322, 2330, 3263, 735, 736, 734, 737,
	738, 741, 739, 740, 0, 742, 743, 744, 0, 0,
	0, 321, 745, 746, 0, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 2300, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 321, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 4358, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 1144, 0, 1039,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 2786, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 1046, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	1141, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 1143, 0, 691,
	682, 1044, 698, 699, 700, 701, 702, 1045, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2282, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 4491, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 2289, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 2290, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 2291, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	4490, 643, 652, 653, 654, 655, 657, 656, 0, 2286,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 2288, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 4489, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 2308, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 0, 1049, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 0, 2314, 0, 350, 2321, 351, 2320, 0,
	2329, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 2332, 2333, 0, 0, 360, 361, 0, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 1367, 395,
	397, 2318, 2317, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	2316, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 2327, 2328, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 0, 0, 0, 558, 1388, 463, 464, 465,
	3260, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 3262, 475,
	559, 476, 2311, 2312, 0, 2307, 0, 477, 478, 480,
	1389, 0, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	0, 557, 2319, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 3261,
	1397, 570, 1398, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	2304, 585, 586, 587, 2305, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 2315, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 0, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 2313, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 2331, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 2323, 2324, 2325, 2326, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 2322, 2330, 3263,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 0, 0, 0, 2282, 745, 746, 0, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	2337, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 2300, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	2289, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 2290,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 2291, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 2336, 643, 652, 653, 654,
	655, 657, 656, 0, 2338, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 2288, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 2335, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 2282, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 2281, 337, 338, 0, 0, 0, 0, 0, 750,
	1049, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 2289, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	2290, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 2291,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 2280, 643, 652, 653,
	654, 655, 657, 656, 0, 2286, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 2288, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 2279, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1037, 0, 1039,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 1049, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 1046, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 1044, 698, 699, 700, 701, 702, 1045, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1039, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 1046, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 1044, 698, 699, 700, 701, 702, 1045, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 3246, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 1049, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 2282, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 2289,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 2290, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 2291, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 2472, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 2473, 643, 652, 653, 654, 655,
	657, 656, 0, 2286, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 2288, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 2474, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 1049,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	1049, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 3266, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 0, 2314,
	0, 350, 2321, 351, 2320, 0, 2329, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 2332, 2333,
	0, 0, 360, 361, 0, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 1367, 395, 397, 2318, 2317, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 0,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 0, 0, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 2316, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 2327, 2328, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 0, 0, 0, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 0, 0,
	0, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 0, 475, 559, 476, 2311, 2312,
	0, 2307, 0, 477, 478, 480, 1389, 0, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	0, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 0, 557, 2319, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 0, 1397, 570, 1398, 0,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 2304, 585, 586, 587,
	2305, 588, 589, 590, 0, 591, 0, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 2315, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 0, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 0, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 2313, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 2331, 685, 686, 687, 688, 0, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 2323, 2324, 2325, 2326, 0, 718, 0, 707, 709,
	710, 711, 712, 0, 713, 0, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 0, 2322, 2330, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 0, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 0, 747, 748, 749, 2308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 2300, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 0,
	2314, 0, 350, 2321, 351, 2320, 0, 2329, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 2332,
	2333, 0, 0, 360, 361, 0, 0, 1632, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 1367, 395, 397, 2318, 2317,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 0, 0, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 2316, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 2327, 2328, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 0, 0, 0,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 0,
	0, 0, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 1387, 0, 475, 559, 476, 2311,
	2312, 0, 2307, 0, 477, 478, 480, 1389, 0, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 0, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 0, 539,
	0, 1396, 553, 554, 555, 556, 0, 0, 557, 2319,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 0, 1397, 570, 1398,
	0, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 2304, 585, 586,
	587, 2305, 588, 589, 590, 0, 591, 0, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 2315, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 0, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 0, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 2313,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 2331, 685, 686, 687, 688, 0,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 2323, 2324, 2325, 2326, 0, 718, 0, 707,
	709, 710, 711, 712, 0, 713, 0, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 0, 2322, 2330, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 0, 742, 743, 744, 0,
	0, 0, 321, 745, 746, 0, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 2300, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4514, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 4634,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 3374, 0, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 1632, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 0, 1396, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 2723, 0, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1917, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 2346, 0,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1914, 0, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 1632, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1917, 771, 772, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1864, 0, 1627, 1626, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 1632, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 0, 1396,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 1862, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1622, 0, 1627,
	1626, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 1619, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 1620, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 1618, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 1621, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1627, 1626, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1627, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 1632, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 1387, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 0, 1396, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 3409, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	4212, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 3413, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 4211, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 3412, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 4207, 4208, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	4210, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 4206, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 3411, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 4209, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1720, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 1719, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 1715, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	1722, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 1718,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 1716, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 1721, 642, 644, 651, 643, 652, 653,
	654, 655, 1717, 656, 0, 1714, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 1712, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 1713, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1839, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1841, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 1435,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1836, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1838, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 1435, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1744, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1746, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 1435, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 1435, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 4080, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 3620, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 3619, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 3409, 360, 361, 759, 0,
	0, 3403, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 3405, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 3413, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 3412,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 3402, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 3411, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 3410,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 2806, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 2752, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 2751, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 2737, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 2739, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 2728, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 2700, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 1435, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1964, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1963, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1861, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1854, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1856, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1844, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1523, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1522, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1512, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1511, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1508, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1507, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1502, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1501,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1479,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1478, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 805, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 312, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	2758, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 2482, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 2480, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 2478, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 2370, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 2364, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 838, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 836,
	335, 336, 825, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 828, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 834, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 830, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 837, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 824, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 825, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 828, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 829, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 830, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 823, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 825, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 828, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 829, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 830,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 825, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 828,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 4644,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	830, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 825, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	829, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 3248, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 828, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 829, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 830, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1128, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 1127, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 1126,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 929, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 918, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 927, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 920, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 926,
	441, 922, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 923,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 921, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 924, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 925, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 919, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 912, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 918, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 927, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 920, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 926, 441, 922, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 923, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 921,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 924, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 925, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 919, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 4211, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 4999, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1553, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1556, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	1554, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 900, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 899, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 898, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	1557, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 896, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1553, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1556, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 1554, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 900, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 899, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	898, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 1557, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 896, 794, 795, 796, 0, 718,
	0, 707, 1555, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 907, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 905, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 814, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 813, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 812, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 3319, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	5316, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	4020, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 4872, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 4571, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 3186, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 3177, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 2639, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 899, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 898, 643, 652, 653, 654, 655,
	3488, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 896, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 3319, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 3316, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 2804, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 2451, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2020, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 2012, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 890, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 886, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 891, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 900, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 899, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 898, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 1997, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 896, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1970,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1969, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1953, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1951, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1945, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1923, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1921, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1920, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1912, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1874, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1846, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1607, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1559, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 899, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 898, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 896, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1530,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1529, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1527, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1526, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1519, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1518, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 1460, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 910,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 890, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	886, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 885, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 891,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 900, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 899, 634,
	635, 636, 637, 887, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 898, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 888, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 896, 794,
	795, 796, 0, 718, 0, 707, 892, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 879, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 880, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 840, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 832, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 809, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 4242,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 899, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 898,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 896, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 4137, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 4106, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 4102, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4045, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 4043, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 4031, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 4028, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 3631, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 880, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 2776, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 0, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1488, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 1408,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 0, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 0, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 0, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 0, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1959, 0, 1537, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 0, 0, 0, 350,
	0, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 0, 0, 0, 0,
	360, 361, 0, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 1539, 390, 391, 392,
	393, 394, 0, 395, 397, 0, 0, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 0, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1958, 0, 0, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 475, 559, 476, 0, 0, 0, 0,
	0, 477, 478, 480, 0, 0, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 0, 557, 0, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 0, 0, 570, 0, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	0, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1540, 664, 0, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 0, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 0, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 0,
	0, 0, 0, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 0, 0, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 1877, 0, 1537, 0,
	745, 746, 0, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 0,
	0, 0, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 0,
	0, 0, 0, 360, 361, 0, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 1539,
	390, 391, 392, 393, 394, 0, 395, 397, 0, 0,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 0, 0, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 0, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 0, 0, 0,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1876,
	0, 0, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 475, 559, 476, 0,
	0, 0, 0, 0, 477, 478, 480, 0, 0, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 0, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 0, 557, 0,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 0, 0, 570, 0,
	0, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 0, 591, 0, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 0, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 0, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1540, 664, 0, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 0,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 0, 685, 686, 687, 688, 0,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 0, 0, 0, 0, 0, 718, 0, 707,
	709, 710, 711, 712, 0, 713, 0, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 0, 0, 0, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 0, 742, 743, 744, 1535,
	0, 1537, 0, 745, 746, 0, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 0, 0, 0, 350, 0, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 0, 0, 0, 0, 360, 361, 0, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 1539, 390, 391, 392, 393, 394, 0, 395,
	397, 0, 0, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	0, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1534, 0, 0, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 475,
	559, 476, 0, 0, 0, 0, 0, 477, 478, 480,
	0, 0, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	0, 557, 0, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 0,
	0, 570, 0, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 0, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1540, 664, 0, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 0, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 0, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 0, 0, 0, 0, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 0, 0, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 2385, 0, 1537, 0, 745, 746, 0, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 0, 0, 0, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 0, 0, 0, 0, 360,
	361, 0, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 1539, 390, 391, 392, 393,
	394, 0, 395, 397, 0, 0, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 0,
	0, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 0, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 0, 0, 0, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 0, 0, 0, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 475, 559, 476, 0, 0, 0, 0, 0,
	477, 478, 480, 0, 0, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 0, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 0, 557, 0, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 0, 0, 570, 0, 0, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 0, 591, 0, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 0,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 0, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1540,
	664, 0, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 0, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	0, 685, 686, 687, 688, 0, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 0, 0,
	0, 0, 0, 718, 0, 707, 709, 710, 711, 712,
	0, 713, 0, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 0,
	0, 0, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 0, 742, 743, 744, 2344, 0, 1537, 0, 745,
	746, 0, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 0, 0,
	0, 350, 0, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 0, 0,
	0, 0, 360, 361, 0, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 1539, 390,
	391, 392, 393, 394, 0, 395, 397, 0, 0, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 0,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 0, 0, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 0, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 0, 0, 0, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 0, 0,
	0, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 475, 559, 476, 0, 0,
	0, 0, 0, 477, 478, 480, 0, 0, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	0, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 0, 557, 0, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 0, 0, 570, 0, 0,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 0, 591, 0, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 0, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 0, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1540, 664, 0, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 0, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 0, 685, 686, 687, 688, 0, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 0, 0, 0, 0, 0, 718, 0, 707, 709,
	710, 711, 712, 0, 713, 0, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 0, 0, 0, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 1537, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 0, 747, 748, 749, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 0, 0, 0, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 0, 0, 0, 0, 360,
	361, 0, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 1539, 390, 391, 392, 393,
	394, 0, 395, 397, 0, 0, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 0,
	0, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 0, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 0, 0, 0, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 0, 0, 0, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 475, 559, 476, 0, 0, 0, 0, 0,
	477, 478, 480, 0, 0, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 0, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 0, 557, 0, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 0, 0, 570, 0, 0, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 0, 591, 0, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 0,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 0, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1540,
	664, 0, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 0, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	0, 685, 686, 687, 688, 0, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 0, 0,
	0, 0, 0, 718, 0, 707, 709, 710, 711, 712,
	0, 713, 0, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 0,
	0, 0, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 0, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 0, 747, 748, 749, 2065, 2066, 0, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 2096,
	0, 0, 0, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 2103, 2096, 0, 2067, 0, 0, 0,
	2097, 0, 0, 2068, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 2116, 2065, 2066, 2084, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 0, 2103, 2096,
	0, 2067, 0, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 2084, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 2107, 0, 2073, 0, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 2114,
	2090, 2091, 2092, 2093, 0, 0, 2082, 2083, 2107, 0,
	2073, 0, 2117, 0, 0, 0, 0, 0, 0, 2095,
	2098, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 2113, 0, 2114, 0, 0, 0, 0, 0,
	0, 2082, 2083, 2107, 0, 2065, 2066, 2117, 2099, 2100,
	2101, 2110, 2111, 2112, 2095, 2098, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 2103, 2096,
	0, 0, 0, 0, 0, 2097, 2088, 2113, 2068, 2114,
	0, 2115, 0, 0, 0, 0, 2082, 2083, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 2105, 2122, 0, 0,
	0, 0, 0, 2119, 0, 0, 2067, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 2115, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2115, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2094, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 2121, 0, 0,
	0, 0, 0, 2107, 0, 0, 2108, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 2114,
	0, 0, 2121, 0, 0, 0, 2082, 2083, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 2088, 0, 0, 0, 0, 0, 2121, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 0, 5444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 0, 0, 0, 0,
	0, 2115, 0, 0, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 2104, 0, 0, 0, 0, 5440, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 0, 5344, 2065, 2066, 0, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 2108, 0, 2065, 2066, 2087, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 2121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 2107, 5288, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 2113, 0, 2114, 2073, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 2107, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 0, 0, 0, 0, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 2114, 0, 0,
	0, 2103, 2096, 0, 2082, 2083, 0, 0, 2097, 2115,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 2105, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	2122, 2119, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 2108,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 2089, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	2113, 0, 2114, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 2121, 0, 2106, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	5287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	5082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 2108, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 2084, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	2121, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 2084, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 2107, 0, 0, 4896, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 2090,
	2091, 2092, 2093, 0, 0, 2082, 2083, 0, 0, 2073,
	0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 2096, 0, 0, 0, 0,
	2088, 2097, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 2116, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 2113, 0, 2114, 0,
	2115, 0, 0, 2087, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 2094, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2108, 0, 0, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	0, 0, 2094, 2113, 0, 2114, 2121, 0, 0, 2103,
	2096, 0, 2082, 2083, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	2116, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 0, 0, 2121, 2115, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 2104, 0,
	0, 4787, 0, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 4786, 0, 0, 2107, 2089, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 2113, 0,
	2114, 0, 2103, 2096, 0, 0, 0, 2082, 2083, 2097,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 2121, 0, 0, 0, 0, 0, 0,
	0, 2122, 2088, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 4785, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 2107, 0, 0,
	2089, 2117, 0, 0, 0, 0, 0, 2116, 2095, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 2113, 2108, 2114, 2067, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 2104, 0, 2073, 0,
	2106, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 4363, 0, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 2114, 0, 2103,
	2096, 0, 0, 0, 2082, 2083, 2097, 0, 0, 2068,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 2088,
	0, 0, 0, 0, 0, 2108, 0, 2067, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 2103, 2096, 0, 0, 0, 0, 0, 2097,
	0, 2121, 2068, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 2094, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 3772, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 2089, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 2113, 2108,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 2107, 0, 0,
	0, 2117, 2088, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 2088, 0, 2106, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	3771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0,
	0, 0, 0, 0, 2094, 0, 2104, 0, 0, 0,
	0, 0, 0, 2103, 2096, 0, 0, 2119, 0, 0,
	2097, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 2116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 2121, 0, 0, 0, 2073, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 3770, 0, 0, 0, 0, 2107, 0,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 2095,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2113, 2106, 2114, 0, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2105, 0, 0, 0, 0, 3769, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 2088, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2679, 2094, 0,
	0, 0, 2103, 2096, 0, 0, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 2089, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 2087, 0, 0, 0, 2578, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 2121, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2576, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	2088, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 0, 0, 0, 3734, 0, 2107, 0, 0,
	2115, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 2119, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 2088, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 2089, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 2680, 2067, 0, 2104, 0, 0, 0,
	2108, 0, 0, 0, 0, 2087, 0, 2119, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 5611,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 2121, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 2575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 2114, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	0, 2119, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 5610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 2087, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 2084, 0, 0, 2103,
	2096, 0, 0, 0, 0, 3704, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 2121, 0, 0, 0, 2073,
	0, 3837, 0, 0, 0, 0, 0, 0, 3836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 2113, 2106, 2114, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 2117, 0,
	2088, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 2096, 0, 0, 0, 0, 0, 2097, 0,
	0, 2068, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 2104, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 0, 2119, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 2066,
	2108, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2103, 2096, 0, 0, 0, 0, 0, 2097, 0,
	0, 2068, 0, 0, 0, 0, 2121, 0, 0, 0,
	2089, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 2067,
	0, 0, 2108, 2073, 0, 5192, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 2106, 0,
	2117, 0, 0, 0, 0, 0, 0, 2095, 2098, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	2113, 0, 2114, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 2105,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2113, 0, 2114, 0, 0, 2104, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	2103, 2096, 0, 0, 0, 0, 0, 2097, 0, 0,
	2068, 0, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 2116, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 1256, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 2119, 0, 2067, 0,
	0, 0, 0, 0, 2108, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 2108, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	2121, 0, 0, 0, 0, 2107, 0, 0, 0, 2117,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2113,
	0, 2114, 0, 0, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 2106, 2088, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	2116, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 2096, 0, 0, 0, 0, 0, 2097, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 2122,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 2067, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 2107, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 2121,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4948, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 2105, 0, 0,
	0, 0, 2073, 0, 4603, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 2117,
	0, 2106, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 2115, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2113,
	0, 2114, 0, 2104, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 2119, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 2088, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 2087, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 4604, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 2107, 0, 0, 0, 2117, 0,
	2106, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2113, 2121,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 2096, 0, 0, 0, 0, 0, 2097, 0, 0,
	2068, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 2115, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2122,
	0, 0, 0, 2104, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 2119, 0, 0, 2065, 2066, 2087,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 2096, 0, 0, 0, 3838, 0, 2097, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 0, 0, 2094, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 2103, 2096, 0, 2067, 0,
	0, 0, 2097, 0, 0, 2068, 0, 0, 0, 2087,
	2089, 0, 0, 0, 0, 0, 2116, 0, 0, 2084,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 2122, 0, 0, 0, 0, 0,
	0, 3843, 2108, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 2121, 2117,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 4344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 2113,
	0, 2114, 2073, 0, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 2088, 0, 2107, 0, 2073, 0, 2117,
	2106, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 2113,
	0, 2114, 0, 0, 0, 0, 0, 0, 2082, 2083,
	2107, 0, 0, 2115, 2117, 0, 0, 0, 0, 0,
	0, 2095, 2098, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 2113, 2119, 2114, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3803, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 2106, 0, 0, 0, 0, 0, 0, 2108, 0,
	0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	0, 0, 3773, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 2103, 2096, 0, 2067, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2116, 2065, 2066, 2084, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 2103, 2096, 0,
	2067, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 2084, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 2107, 0, 2073, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 2090,
	2091, 2092, 2093, 0, 0, 2082, 2083, 2107, 0, 2073,
	0, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 2113, 0, 2114, 0,
	2115, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 939,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 964, 2121, 945, 944, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 966, 0, 0, 0, 0, 0, 946, 0, 0,
	0, 0, 949, 0, 0, 960, 0, 1006, 0, 977,
	0, 2121, 0, 0, 0, 0, 0, 0, 961, 962,
	2108, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 995, 951, 2106, 0,
	0, 0, 0, 952, 0, 0, 2121, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 2788, 992, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 993, 0, 973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 955,
	939, 0, 994, 0, 0, 0, 0, 0, 943, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 947, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 945, 944,
	0, 0, 0, 0, 967, 965, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 978, 0, 0,
	1000, 999, 966, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 949, 0, 0, 1003, 991, 1006, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 996,
	0, 0, 0, 0, 0, 0, 0, 995, 951, 0,
	0, 0, 0, 0, 952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 993, 0, 973, 0, 948, 0,
	0, 0, 0, 986, 987, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 989, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 997, 984, 0, 0, 0,
	0, 0, 0, 0, 1004, 979, 0, 0, 970, 968,
	0, 0, 0, 974, 0, 967, 965, 0, 0, 0,
	0, 975, 0, 959, 941, 0, 998, 0, 978, 0,
	0, 1000, 999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1003, 991, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 990, 0, 0, 988, 0, 976, 956,
	0, 0, 0, 0, 972, 0, 0, 0, 0, 938,
	996, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 980, 0, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 1001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 1005, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 948,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 997, 984, 0, 0,
	0, 0, 0, 0, 0, 1004, 979, 0, 0, 970,
	968, 0, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 941, 0, 998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 990, 0, 0, 988, 0, 976,
	956, 0, 0, 0, 0, 972, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 1001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 985,
}

var sqlPact = [...]int32{
	333, -1000, -1000, -1000, -1000, -1000, -1000, 305, -1000, -1000,
	303, 302, 299, 297, 296, 295, 287, 283, 279, 273,
	270, -1000, -1000, 268, 267, 266, 265, -1000, -1000, 263,
	262, 261, -1000, 259, -1000, -1000, 255, -1000, 254, 253,
	251, -1000, -1000, 250, -1000, 249, -1000, -1000, -1000, -1000,
	248, 246, 245, 109313, 108690, 109934, 2803, 143532, 122372, 2611,
	114906, 142909, 114283, 142286, 2667, 12400, 141663, 3283, 244, -1000,
	141040, 243, 242, 241, -1000, 121749, 140417, 119259, 118636, 2438,
	85562, 165137, 2000, 1976, -1000, 240, 238, -1000, 7853, 82455,
	236, 228, 227, 226, 2760, 225, -1000, 224, 223, -1000,
	222, 221, 217, -1000, 13928, 1780, -1000, 216, 209, 206,
	204, -1000, 1346, 118013, 203, 200, 197, 2870, 195, 194,
	79345, 192, 190, 189, 2708, 3423, -1000, -1000, 2519, -1000,
	-1000, 188, 187, 186, 185, 184, 183, 178, 176, 172,
	171, 164, 163, 162, 161, -1000, 158, 153, 152, 150,
	149, 146, -1000, 145, 142, 141, -1000, 140, -1000, 138,
	137, 135, 134, 129, 126, 125, 124, 120, 118, 116,
	113, 111, 108, 107, 106, -1000, -1000, 103, -1000, 2252,
	1974, 1971, 1967, 1160, 102, 101, 100, 99, 98, 91,
	85, 83, 82, 81, 79, 76, 75, 73, 70, 68,
	65, 64, 63, 62, 61, 60, 59, 208, 58, 57,
	56, 52, 49, 48, 47, 45, 4158, 4140, -1000, 1859,
	1395, 1431, 36129, 3548, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 152847, 144153, 42, -32, 41, -1000, 3927,
	1176, 65553, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 362, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 588, 3369, 872, -1000,
	-1000, -1000, 139794, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2797, 5, 115527, -1000, 2563, -1000, -1000, -1000, -1000,
	-1000, 871, -1000, 2795, 2746, 366, 2745, 115527, -1000, -1000,
	-1000, 3992, 3906, 108067, 2961, 4455, 4454, 4453, 4452, 4451,
	152226, 2193, 3028, 4447, 4446, 4445, 4443, 4438, 4436, 4432,
	-1000, 107444, 1243, 106821, 106198, 4000, 139173, 105575, 138550, 137927,
	155337, 55365, 1353, 3989, -1000, -1000, -1000, -1000, -1000, -1000,
	144153, -1000, 1239, -1000, -1000, 4429, 2430, 868, 121126, -1000,
	-1000, 137304, 2306, -1000, -1000, -1000, 1079, 1391, 38681, 38681,
	38681, 354, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4002,
	-1000, -1000, -1000, -1000, 144153, 3276, 3276, 1609, 1632, 1632,
	3276, 3276, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4428, 4427, 4425, 4424, 4420, -1000, -1000, -1000, 136681, -1000,
	-1000, 4907, 1941, 4198, 3290, 91875, 2410, 1637, 3956, 3671,
	3668, 1771, 2545, 3662, 4419, 3134, 3344, 3661, 3656, 3655,
	1445, 3654, 3636, 2078, 3087, 474, 3103, 35491, 3533, 2254,
	54727, 2197, 1739, 3631, 3598, 3594, 4215, 4070, 2528, 2402,
	2455, 2407, 94992, 4418, 4417, 3920, 3593, 3592, 3349, 3580,
	2399, -1000, 3496, 1814, 352, -1000, -1000, -1000, -1000, -1000,
	-1000, 352, 1728, -1000, -1000, -1000, -1000, 2173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 96861, 28284, 96238, 95615, 104952,
	136058, 54089, 104329, 103706, 91242, 4415, 4414, 53451, 63018, 4137,
	135435, 154714, 4136, 4134, 1238, 2539, 1711, -1000, -1000, -1000,
	-1000, -1000, -1000, 15, 84941, 4201, 144153, -1000, 347, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52813, 900, 52175, 1111,
	51537, 827, 134812, -1000, -1000, -1000, -1000, -1000, -1000, 90609,
	3904, -1000, 134189, 133566, 1817, 2959, 4413, 4409, 1371, 4405,
	3870, 2185, 4404, 4400, 4398, 4396, 4392, 4386, 4384, 1792,
	132943, 3218, 132320, 2082, 154091, 2369, 1236, 103083, 109934, 3163,
	131697, 1748, 1741, -1000, -1000, -1000, -1000, 3577, 3418, 3417,
	1299, -1000, -1000, -1000, -1000, -1000, -1000, 69325, 6315, 6202,
	-1000, -1000, 7756, 165358, 131074, 71849, 109934, 109934, -1000, -1000,
	-1000, -1000, -1000, -1000, 50899, 837, 50261, 1349, 130451, -1000,
	-1000, 69956, 3495, 1313, -1000, -1000, -1000, -1000, -1000, 129828,
	49623, 671, 48985, 1312, 144153, -1000, 3547, 2309, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 97482,
	-1000, -1000, 2173, -1000, -1000, -1000, 1626, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1859, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2950, -1000, 2457, -1000,
	-1000, -1000, 2997, 3903, 3903, 3903, 3987, 561, 558, -1000,
	208, 1025, 1351, -1000, -1000, 164723, -1000, -1000, 56003, 56003,
	56003, 56003, 56003, 56003, 56003, 56003, 2670, -1000, 863, -1000,
	-1000, 915, -1000, 862, 786, 723, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 857, -1000, -1000, -1000, -1000, -1000, -1000,
	4199, -1000, 31526, -1000, -1000, -1000, 536, 856, 56003, -1000,
	-1000, 4240, 4239, 1199, -1000, 345, 1096, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3546, 853, 850, -1000, 849, 847, 845, 844, 840,
	-1000, 839, -1000, 838, 834, 832, 829, 826, 825, 823,
	822, -1000, 2586, -1000, -1000, -1000, -1000, -1000, -1000, 776,
	775, 775, 775, -1000, 1210, 774, 821, -1000, 457, 773,
	378, 772, 768, 767, -1000, 820, 819, 818, 816, 814,
	813, 811, 808, 805, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1211, -1000, -1000, -1000, -1000, 1441, 12, 144153, -1000,
	714, 12, -1000, -1000, 802, -1000, 39975, 39975, 39975, -1000,
	-1000, 2792, 56003, -1000, 2882, -1000, 20, 20, 1061, 67425,
	-1000, 64282, 1061, 817, 928, 73104, -1000, 3494, -1000, -1000,
	800, 343, -1000, -1000, -1000, -1000, 28915, 3493, 144153, 144153,
	144153, 109934, 109934, 109934, 144153, 4382, 4380, 3784, 56003, -1000,
	-1000, 81832, 157200, 117390, 1615, 14, -1000, -1000, 4114, 86814,
	81211, 3541, 157200, 3540, 3490, 156583, 89976, 290, 3750, -1000,
	-1000, 791, 4378, -1000, -1000, -1000, -1000, -1000, 3748, 4369,
	4365, 4364, 144153, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2774, 3746, -1000, 13, -1000, 113660, 2774, 3745, -1000, 13,
	2774, 3743, -1000, 13, 113039, -1000, -1000, 2774, 3742, -1000,
	-1000, 282, 3740, -1000, -1000, -1000, 3739, -1000, 280, 3737,
	-1000, -1000, 341, -85, 3731, -1000, -1000, -1000, -1000, -1000,
	-1000, 164723, -1000, -1000, -1000, 155960, -1000, 3914, -1000, 144153,
	-1000, 56003, -1000, -1000, 4112, 2284, 3950, 4035, -1000, -1000,
	-8, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3000, 3015,
	1335, 2829, -1000, 3801, 2260, 38681, 3857, -1000, -1000, -1000,
	-1000, -1000, 340, 28915, 3399, -1000, -1000, 144153, -1000, 144153,
	3276, 3276, -1000, -1000, -1000, 4208, 4207, 3276, 3276, 144153,
	144153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1775, 3054, -1000, -1000, -1000, 69956, 3489, 1532, 92506, 92506,
	92506, 92506, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 129205, -1000, -1000, 2470, 1922, 3917, 2464,
	109934, -1000, 2204, -1000, -1000, -1000, 3936, 3703, 144153, -1000,
	-1000, 3539, -1000, 84320, 3539, 112418, -1000, 111797, -1000, 111176,
	-1000, -1000, 109934, -1000, 109934, -1000, 4363, 4362, 4360, -1000,
	-1000, 4358, -1000, 4357, 3929, -1000, 2251, 1232, 48347, 164723,
	3926, -1000, 4356, 2360, 3533, 164723, -1000, 3702, 1982, 1973,
	144153, -1000, -1000, 144153, -1000, 144153, -1000, 144153, -1000, -1000,
	-1000, 2811, 1873, -1000, -1000, 2998, -1000, -1000, -1000, 1189,
	-1000, -1000, 109934, 109934, 109934, 109934, 3484, 3198, 109934, 2223,
	-1000, 47709, 3902, -1000, -1000, 3568, 4354, 2121, -1000, 2177,
	-1000, 3483, 3918, -1000, 3466, 1768, 2262, 338, 4244, 338,
	-1000, -1000, -1000, -8, -1000, 2922, 3730, 2046, -1000, 2828,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2498, 3729, -1000,
	2659, 3728, 2493, -1000, -1000, 5678, -1000, 2631, -1000, 161388,
	1629, -1000, -1000, -1000, -1000, 2191, 3727, 21, -1000, -1000,
	2538, -1000, 4184, 3437, -1000, -1000, -1000, 161263, -1000, 1951,
	-1000, -1000, 2472, 2505, -1000, 1502, 3725, -1000, 3289, 3289,
	102460, 3700, 71218, 69956, 84941, -6, -1000, -1000, -1000, -1000,
	-1000, -88, -1000, 27645, 164723, -1000, -1000, -1000, -1000, 164723,
	1062, -1000, -1000, 3724, -1000, 164723, 1059, -1000, -1000, 3723,
	-1000, 3082, -1000, 3532, -1000, -1000, -1000, 2907, 89343, 3464,
	-1000, 2902, 1187, -1000, 101839, 2537, 4353, -1000, 4352, -1000,
	-1000, 4351, -1000, 4350, 4347, 4346, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 101216, 2786, -1000, -1000, 1670, 1146, 92506,
	-1000, 2900, 4026, -1000, 100593, 1235, -1000, 1162, 2899, -1000,
	1690, 110555, 1180, 2898, -1000, 4345, 3998, 3202, 1162, 2896,
	-1000, -1000, -1000, -1000, -1000, 1164, -1000, 73728, -1000, 73728,
	-1000, 1958, -1000, 151605, 20, 109934, 4199, -1000, -35, -1000,
	-1000, -1000, 1176, -1000, 68691, -1000, 68691, 120503, 92506, 1146,
	3461, 78721, 164678, -1000, 1184, -1000, -1000, 164723, -1000, -1000,
	-1000, 3080, -1000, -195, 3288, -1000, 92506, 69956, 3460, 3055,
	-1000, 164723, -1000, -1000, -1000, -1000, 164723, -1000, -1000, -1000,
	92506, 1670, -1000, 128584, 99970, 292, -1000, -1000, 150984, -1000,
	2997, -1000, 144153, -1000, 2972, 3515, 3531, 2092, 2810, 3109,
	-1000, 47071, 3084, 59831, 2826, 208, -1000, -1000, 208, 208,
	37405, -1000, -1000, 38681, 1025, 86814, 86814, 28915, 1654, 56003,
	56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003,
	56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003,
	56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003, 56003,
	56003, 56003, 56003, 56003, 56003, 56003, 2802, 56003, 1594, 56003,
	56003, 56003, 56003, 2182, -1000, -1000, 2357, 640, 2406, 786,
	-1000, -1000, -1000, 4179, 4179, 4179, 1658, 1658, 1658, 16848,
	16848, 770, 4344, 915, -1000, 56003, -1000, 147, 68049, 56003,
	29548, -1000, 558, 10318, 3031, -1000, 555, 30216, -1000, -1000,
	-1000, 31526, 723, 46403, 56003, 1196, 164723, -1000, -1000, 2218,
	4204, 27006, 3451, 3339, 785, 1004, 1000, 34823, 34155, 33487,
	32819, 859, 712, 56003, 56003, 56003, 56003, 56003, 56003, 56003,
	56003, -1000, -1000, 4206, -1000, 4204, -1000, -1000, 783, -1000,
	4204, 4204, -1000, 4204, 1634, 1633, 4204, -1000, 4204, 4204,
	9173, 9173, 45765, 45127, 44489, 60469, 43851, 56003, 32181, 43213,
	42575, -1000, 62383, 144153, 12, 4109, 144153, 56003, 316, -1000,
	14838, -1000, 316, 316, 782, -36, 164723, 3077, 3077, 66177,
	2696, 2682, 2682, 2682, -1000, 1061, 21216, 1061, 126719, 2700,
	1061, 1061, 336, 418, 554, 63651, 2882, 126098, 902, 781,
	38, 34, 32, -1000, -1000, 31, 25, -1000, -1000, 109934,
	777, 29548, 28915, 330, 2389, -43, 3135, 3133, 3131, 3116,
	-1000, 3098, 2783, -1000, -1000, -1000, 2283, -44, 1575, 109934,
	144153, 2131, -1000, -1000, -1000, -1000, 84941, 11, 84941, 144153,
	3900, 109934, -52, -1000, 157200, 2628, -49, -1000, 1528, 329,
	4204, -1000, -1000, -1000, 4342, 4341, -1000, 521, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 776, 775, 775, 775,
	-1000, 1210, 774, 457, 773, 378, 772, 768, 767, -1000,
	-1000, -1000, -1000, -1000, 3456, 109934, 144153, 2119, 83699, 116769,
	-85, 117390, 157200, -14, -1000, -1000, -1000, -1000, 109934, -1000,
	-1000, 109934, -1000, 76217, -1000, 144153, -1000, -1000, -1000, 4340,
	-1000, 109934, 109934, 2774, 3722, -1000, 109934, -1000, 109934, 276,
	3721, -1000, -1000, 144153, -1000, 109934, 109934, 144153, -1000, 144153,
	144153, 144153, 157200, 157200, 269, -1000, 109934, 1025, -50, 1377,
	-8, -1000, -1000, -1000, -1000, 2173, -1000, 2230, -1000, -1000,
	-1000, -1000, -1000, -1000, 1828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1199, -1000, -1000, -1000, -1000, 4195, 4190,
	-2, -1000, -1000, 28915, -1000, 2376, -1000, -1000, -1000, -1000,
	144153, 144153, -1000, -1000, 144153, 144153, -1000, -1000, 109934, 3527,
	-1000, -1000, 92506, 69956, -1000, 127961, 1146, 1146, 1146, 1146,
	-1000, -1000, -1000, -1000, 4338, 4333, 4331, 4330, -1000, -1000,
	1179, 109934, 144153, 109934, -1000, 3248, 2001, -1000, 325, -1000,
	157200, -1000, 157200, 144153, 109934, -1000, -1000, 1179, 144153, 1179,
	144153, 1179, 144153, 1179, 1179, -1000, -1000, -1000, -1000, -1000,
	147, 147, 56003, -1000, -1000, 164723, -1000, 56003, -1000, -1000,
	1872, 4322, 1988, -1000, 3523, -1000, 3522, -1000, 72, 324,
	-1000, -1000, 4205, 2341, -1000, 4238, -1000, -1000, -1000, -1000,
	-1000, -1000, 109934, 3447, -1000, -1000, -1000, -1000, 4318, 3896,
	164723, -1000, 88710, 2443, -1000, -1000, -1000, -1000, 109934, 109934,
	109934, 109934, 144153, 3829, -1000, 144153, 3816, 3822, 109934, -1000,
	4243, -1000, -9, 2186, 687, 1566, -1000, 99347, 2996, 3911,
	4315, 3196, 3886, 1957, -1000, 1870, 766, -1000, 4019, 97482,
	4057, 4071, 1549, -1000, 3444, -1000, -1000, -1000, 1078, 2117,
	2236, 1563, 1561, 97482, 2659, -1000, 86814, -1000, 3156, 3986,
	1632, 1586, 1632, 1632, 1617, 1599, -1000, 97482, 2220, 1559,
	1493, 6088, 1491, 2206, 1488, 3795, -1000, -1000, 2781, 2846,
	-1000, -1000, -1000, -1000, 1977, 3258, -1000, 2999, 1577, 1577,
	144153, -1000, 1487, -1000, -1000, 1980, 2015, -1000, -1000, 127340,
	2083, -1000, 1484, 1481, 145395, 4132, 2950, 2689, 962, 2444,
	-1000, 1571, 1479, 3442, -1000, -1000, -10, 4054, 4066, 1549,
	-1000, -1000, 3440, 1477, -1000, 1202, -1000, -1000, -1000, 3985,
	109934, 28915, 1850, 1847, 1854, 2200, 1476, 10, -1000, 4044,
	1921, -1000, 4151, 92506, -1000, 2927, 2175, -1000, 1670, 1670,
	122993, 144153, -1000, -1000, -1000, 3952, 3951, -1000, -1000, 1475,
	1474, -1000, 1272, 8365, 3819, -1000, 157200, 1272, 1272, 2449,
	3720, 3245, 1997, -1000, 3285, 1057, 3277, -1000, -1000, 1057,
	-6, 84941, 144153, 322, -1000, 56003, 147, 56003, 147, -1000,
	4020, 3719, 4108, -1000, 2364, 3718, 4309, 761, -1000, -1000,
	3022, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 760, 2893,
	3439, 144153, 168, -1000, 109934, -1000, 4107, -1000, 3717, 157200,
	2659, 2891, -1000, 98726, -1000, 3716, 2413, 588, 2889, -1000,
	841, 4308, 3715, -1000, 150363, -1000, 3914, 1663, 3714, 1308,
	882, 4106, -1000, 882, 76849, -1000, 144153, -1000, 20, 5783,
	93748, -58, -60, 553, -1000, 144153, 144153, 3845, 2508, 2502,
	-1000, 1158, 69956, -1000, 69956, -61, -1000, -195, 3273, 69956,
	-1000, 1146, -150, 1057, -1000, 1057, -1000, -1000, 97482, -1000,
	2972, 3515, -1000, -1000, -1000, -1000, -1000, -1000, 1650, 2751,
	-1000, 3048, -1000, 1896, -1000, -1000, -1000, 164723, 61107, -1000,
	-1000, 164723, 2270, -1000, 59193, 58555, -1000, -1000, 2043, 109934,
	3170, -1000, 3170, -73, -1000, 162125, 3046, 109934, -2, 38681,
	-1000, -1000, -1000, -1000, -1000, 1075, 1699, 1699, 1598, 1598,
	1598, 1598, 4017, 5843, 5857, 634, 11578, 11578, 8294, 8294,
	8294, 8294, 8294, 11578, 586, 1658, 1658, 586, 586, 586,
	586, 586, 1658, 1658, 586, 1658, 11578, 11578, 11578, 1658,
	16848, 15533, 9921, 56003, 56003, 1473, 2347, 640, 9882, 56003,
	11843, 11843, 11843, 11843, -1000, 2429, -1000, -1000, -1000, -1000,
	3434, 758, 60469, 60469, -1000, -1000, -1000, -1000, 30871, 56003,
	-1000, -1000, -1000, -1000, 41907, -1000, -1000, 160959, -343, 552,
	-1000, 321, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 550, -46, 115, -1000,
	56003, 56003, 56003, 548, -1000, 320, 56003, 144153, -1000, 20402,
	899, -125, -1000, -63, 1673, -1000, 56003, -1000, -1000, 1471,
	-1000, 1470, 1469, 1467, -1000, 757, 547, -1000, 318, -1000,
	2680, 755, 754, 56003, -1000, -1000, -1000, -1000, -1000, 160598,
	-1000, -1000, 160525, -1000, -1000, 160282, -1000, -1000, 160088, -1000,
	-1000, -1000, -1000, -1000, 164633, 20275, 19882, 18345, 7958, 17565,
	15971, -66, 546, -68, 4204, 534, 529, 528, 1074, 1069,
	527, 517, 515, -76, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -78, 514, -1000, 3431,
	-46, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 509,
	-1000, 506, -1000, 163981, -46, 495, 7454, -1000, 60469, 60469,
	60469, 60469, 484, -1000, 162053, -1000, 163936, 41269, 41269, 41269,
	481, 163856, 56003, -46, -79, -1000, -86, -1000, -1000, -1000,
	-1000, 692, -98, -1000, -99, 1193, 39975, 64929, 28915, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1193, 1193, 56003, -1000, 56003, 3070, -1000, -1000, -1000,
	-1000, 3068, 2365, 3077, 66177, -1000, -1000, -1000, -1000, 126719,
	-1000, 4199, 3390, -1000, 126719, -1000, -1000, 144153, 714, -1000,
	126719, 126719, 28915, 1061, -1000, -1000, 144153, 710, 1061, 126719,
	978, -1000, -1000, -1000, -1000, -1000, 480, 75596, 115, 311,
	28915, 1162, -1000, -1000, 3209, 3209, 3209, 3209, 3209, 109934,
	-1000, -1000, 157200, 1466, 8, -81, 3270, 3268, 3265, -6,
	84941, -6, -88, 144153, 9, 4149, -272, -1000, 2599, -1000,
	86814, -1000, 914, 1443, 28915, -1000, -1000, -1000, -1000, 4204,
	157200, 3426, 309, 3260, 3259, 3257, -1000, 2780, 115527, 291,
	-85, 157200, -1000, 290, -100, -1000, -1000, 86183, 80587, -1000,
	2692, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4306, -1000,
	2774, -1000, -1000, 109934, 2774, 2774, -1000, 109934, 109934, 2774,
	-1000, 282, -1000, -1000, 280, -1000, -1000, -85, -1000, 1182,
	38681, -1000, 2173, -1000, -1000, 1843, -1000, 2517, -1000, 1582,
	-1000, -1000, 38681, -1000, 3848, -1000, 2084, -1000, -1000, -1000,
	-1000, 1146, 1677, 3254, 1146, -189, 753, -1000, 1042, 1041,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19, -1000, 2181, 2300, 157200, 144153, -85, -85,
	-18, -1000, -1000, 308, 8, -1000, 1179, -1000, 1179, -1000,
	1179, -1000, -1000, -1000, -1000, 164723, 164723, -1000, -1000, -1000,
	1975, 1969, 144153, -1000, 144153, 3514, -1000, 144153, -1000, -1000,
	109934, -1000, 4303, -1000, -1000, 28915, 144153, 109934, 28915, 109934,
	3510, 3508, -1000, -1000, -1000, 144153, -1000, -1000, 144153, -1000,
	-1000, 2280, 144153, 144153, 109934, -1000, 124235, 144153, -1000, 2629,
	157200, -1000, 2886, 149742, 2859, 149121, 86814, -1000, -1000, 737,
	1094, 3045, 3044, 1300, 144153, 144153, 3043, 148500, 147879, -1000,
	4302, 144153, 2583, 56003, 124235, 3984, 2649, 2411, 147, 147,
	-1000, 147, -1000, -1000, 734, 1627, 109934, 109934, 144153, 157200,
	109934, 2372, -1000, -1000, -1000, -1000, -1000, 98103, -1000, -1000,
	1632, -1000, -1000, -1000, 1632, -1000, 1632, 2659, 2331, 144153,
	157200, 109934, -1000, -1000, -1000, -1000, 144153, 144153, 157200, 2779,
	2845, 2777, 3253, -1000, -1000, -1000, -1000, -1000, -1000, 157200,
	147258, 2436, 146637, 2433, 2420, -1000, -1000, -1000, 2391, 2419,
	2618, 2159, 144153, -1000, -1000, -1000, -1000, -1000, 1667, -1000,
	962, 1465, 3424, 56003, 56003, 2636, 147, 147, -1000, 147,
	728, 28915, -1000, 1567, -1000, 3534, 144153, 4237, 146016, 4236,
	144153, 144153, 144153, 157200, 3901, 144153, 7, -1000, 1928, -1000,
	4151, -1000, 1039, -1000, -150, -1, -189, -88, 2430, 144153,
	157200, -1000, 145395, 8365, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2626, 3201, 1303, 144153, 1502, -1000, -1000, 2153, 1456,
	1453, 97482, 2573, 2152, 2299, 69956, 1159, 69956, 3211, -1000,
	-1000, 26367, 164723, -1000, 164723, -1000, 83076, 92506, 92506, 2820,
	144153, -1000, 77473, 144153, 94369, 1116, 3713, 74350, -88, 1146,
	1670, 3571, 1995, 144153, -1000, -1000, 2659, 3709, 588, 2885,
	-1000, 157200, 1217, 4105, 3705, 725, 4301, 4300, -1000, 109934,
	2776, 2884, -1000, -1000, 144774, 3766, 962, 144153, 1193, 66177,
	2445, -1000, 72473, 1277, 144153, 2336, 256, -1000, -1000, -1000,
	44, 144153, -1000, 922, -1000, -1000, 5783, 5783, 1146, 70587,
	-108, -1000, 257, 724, 1038, 1037, -1000, 5647, -1000, -195,
	-1000, 92506, 1158, 69956, -195, 3252, 3414, -1000, -1000, 1181,
	-1000, -1000, -1000, -1000, 1340, -1000, 2270, 2750, -1000, 723,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2977,
	-1000, -1000, 37405, 1063, -1000, -1000, 109934, 18, -2, 56003,
	56003, 9216, 8003, 56003, 60469, 60469, -1000, 56003, 6898, -1000,
	-1000, -1000, -1000, -1000, 3413, 722, 56003, 86814, 6978, 944,
	-1000, 479, 14412, 586, -1000, 56003, -1000, 510, -1000, 470,
	40631, -1000, 162557, 33, -111, -1000, 21870, -46, -113, -1000,
	-1000, 913, -1000, 3751, -1000, 56003, 163545, 2952, 2412, 2264,
	2067, 4204, 4235, 25728, -1000, 78097, 1194, 2716, 159845, -1000,
	-1000, -1000, -1000, 86814, 86814, 56003, 56003, -1000, 56003, 56003,
	56003, -1000, -1000, -1000, 4204, 468, -1000, -1000, 1070, -1000,
	-1000, -1000, 1070, -1000, -1000, 1632, -1000, 1632, -1000, 56003,
	-1000, -1000, 3411, 56003, -1000, 86814, 86814, 60469, 60469, 60469,
	60469, 60469, 60469, 60469, 60469, 60469, 60469, 60469, 60469, 60469,
	60469, 60469, 60469, 60469, 60469, 60469, 60469, 3047, 60469, 4172,
	4172, 4172, 1104, -1000, 3428, 3411, 56003, 56003, 86814, 466,
	464, 463, -1000, 56003, -46, -1000, -1000, 6808, 720, -1000,
	2967, -1000, 144153, -1000, 3337, -1000, 56003, -1000, -174, -1000,
	2882, -1000, -1000, 3337, 3337, -116, 164723, 66177, 66177, -1000,
	715, 56003, 3057, -1000, -1000, 894, -334, -1000, 1036, -1000,
	-1000, -1000, -1000, -1000, -1000, 1035, -1000, 714, -1000, -1000,
	-1000, 219, 126719, 710, -1000, 144153, 126719, 892, -1000, -119,
	-1000, -1000, -122, -1000, 126098, 462, 28915, -1000, 1193, 3421,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3049, -272, 157200,
	157200, 2144, 2142, 2137, -6, -88, 2737, -1000, 3346, 4232,
	-1000, 4202, 910, 891, 212, 459, -85, 157200, 157200, 2136,
	2125, 2120, 79966, 3410, 157200, -1000, -1000, -1000, 77473, 86814,
	-1000, 86814, -1000, -1000, -1000, -1000, 2774, -1000, -1000, -1000,
	276, -1000, -1000, -1000, -1000, 3153, -1000, -8, -1000, -1000,
	-1000, 56003, -1000, 1141, -1000, -1000, 109934, 69956, -1000, 122993,
	122993, 92506, 92506, 25089, 144153, 3248, -85, -1000, 87438, -1000,
	-1000, -1000, -1000, -1000, 1179, -1000, 4231, -88, -1000, -1000,
	-1000, -1000, -1000, 2639, 2815, 2639, 2305, 2294, -1000, -1000,
	-1000, 3905, 708, 1440, 1439, -1000, -128, -1000, 1032, -1000,
	-1000, -1000, -1000, -1000, 3391, -1000, 3699, -1000, 2876, -1000,
	1281, 2872, 2301, -1000, 56003, 705, 3200, 694, 693, 4299,
	2435, 4297, 1306, 3696, 2774, 3692, 2774, -1000, -1000, -1000,
	1083, -1000, 164723, -129, -1000, 2649, -1000, 685, 678, -1000,
	-9, 2045, 686, 1438, 1169, -1000, -1000, 56003, 56003, 125477,
	-1000, 579, 3912, 17, -1000, -1000, -1000, 2115, 1437, 1436,
	-1000, -1000, -1000, -1000, -1000, 2659, 2112, 1434, 1433, -1000,
	-1000, -1000, -1000, -1000, -1000, 3581, 3182, 2844, -1000, -1000,
	-1000, -1000, 2869, -1000, 144153, -1000, 3680, 144153, 3307, 962,
	144153, 3912, 3368, 1167, -1000, 3575, 3570, 1067, 144153, 56003,
	56003, 163266, 163155, -1000, 1166, -1000, -1000, 56003, -1000, -10,
	-1000, 1429, 4040, 2863, 109934, -1000, 2774, 3629, 1428, -1000,
	1424, -1000, -1000, -1000, 4041, 4039, 1435, 1921, 92506, 69956,
	2715, -1000, 4016, 2736, 4183, 4151, 69956, -1000, -1000, -1000,
	-1000, 4183, -1000, -1000, -1000, -1000, 88077, -1000, -1000, 1272,
	144153, 157200, 109934, 2323, -1000, -1000, 115527, 116148, 144153, 3245,
	1057, -1000, 2923, 1057, 1159, 3409, -1000, 3149, -1000, -1000,
	144153, 1165, 455, -11, -1000, 1478, 4296, 454, -130, -15,
	86814, -1000, -1000, -1000, -1000, 2859, 109934, 677, 144153, 1515,
	3188, 144153, 144153, 4104, -1000, 2805, 749, 109934, 1204, -1000,
	4199, -1000, -1000, -1000, 144153, 39975, -1000, 4025, 109934, 4102,
	3625, 1162, 109934, 147, 109934, 4218, -1000, -1000, 4101, 109934,
	3623, 2772, 2862, 3004, 962, 93127, 1162, 2703, -24, -1000,
	2336, 39319, 3909, -135, -1000, -1000, -1000, 1193, 76849, 66177,
	56003, 4295, -136, -1000, -1000, -1000, -1000, -1000, 92506, 1146,
	144153, 144153, 4294, 92506, 92506, 92506, -16, 675, -1000, 1029,
	1028, 1024, -1000, -1000, -1000, -1000, -1000, -1000, 1017, 1016,
	1007, 999, -1000, -1000, 1158, -1000, -1000, -195, 1158, 69956,
	147, -1000, 2724, -1000, 2749, -1000, -1000, -1000, -1000, 3124,
	3897, 28915, 4022, 11843, 56003, 56003, 6452, 751, 551, 11843,
	56003, 56003, 86814, 9077, -137, 56003, 56003, -1000, 56003, 884,
	164723, -1000, 4230, 56003, 452, 446, -1000, -1000, -1000, 4200,
	-1000, -1000, -1000, 164723, 56003, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 444, -1000, 181, -1000, -1000, -1000, 153468, -1000,
	56003, 441, 3979, -1000, 438, 437, 13467, 392, 159600, 159413,
	159323, 436, -1000, -1000, -1000, 433, 428, 164723, 3428, 164723,
	-1000, -1000, 1374, 1374, 1578, 1578, 1578, 1578, 4172, 1178,
	605, 1144, 419, 419, 419, 1219, 1104, 1104, 419, 419,
	419, 1104, 3407, 3053, 674, 7471, -1000, -1000, 164723, 164723,
	423, -1000, -1000, -1000, -46, 421, 6808, -1000, -1000, 3333,
	3977, 164723, -1000, 66177, 3333, 3333, -1000, -1000, 2365, 144153,
	164723, 66177, -1000, 3390, -1000, 23166, 22521, -1000, 28915, -1000,
	-1000, -138, -1000, 86814, -1000, -1000, -1000, 4199, -1000, 75596,
	-1000, -1000, 169, -1000, 3421, -1000, 998, -1000, -1000, 92506,
	92506, 4293, 4292, -1000, 4229, 4228, 2691, 4227, 3209, -1000,
	-272, -270, 144153, 144153, 144153, -1000, 2731, -1000, 879, 4291,
	908, 28915, -1000, -85, -85, 144153, 144153, 144153, 3400, 109934,
	144153, 2051, 157200, -85, -1000, -1000, -1000, -1000, -1000, -1000,
	3842, 164723, 3425, 3324, 3323, 1146, 1146, -1000, -149, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28915,
	2111, -1000, 670, 669, 144153, 144153, -1000, 124235, 38681, 1842,
	124856, 144153, 3618, -1000, 3612, -1000, 1300, 3038, 158897, 66801,
	-1000, 66801, 144153, -1000, -1000, -1000, -1000, 2462, 1800, 4290,
	1356, -1000, 3938, 144153, -1000, 144153, -1000, -1000, -1000, 124235,
	-1000, 144153, 144153, 109934, 144153, -1000, 157200, 3589, -152, 164723,
	-17, -1000, 996, -1000, 1593, -1000, 24450, 144153, 157200, 109934,
	144153, 157200, 109934, 144153, -1000, 3177, 3606, 1256, 144153, -1000,
	3605, 144153, 1254, -1000, -1000, 144153, 2661, -1000, -1000, 3550,
	-1000, 164723, 162876, 147, 56003, 3586, -155, 28915, -1000, 4225,
	4224, 3602, 3944, -1000, 144153, 4222, 144153, 109934, 3839, -1000,
	-1000, -1000, -1000, 994, 992, 987, 985, 984, 4163, 122993,
	-1000, 1161, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2102,
	1413, 1410, 2770, 2769, 2726, -18, 2573, 1159, -20, 668,
	-1000, 1159, -1000, 92506, 69956, 2768, 4289, 2319, 77473, 56003,
	56003, -1000, 3195, -1000, 119880, 94369, 2835, -1000, -1000, 66801,
	665, 144153, 664, 144153, 663, -1000, 147, -1000, 4288, 124235,
	660, -1000, 1154, 2720, -1000, 4171, -1000, 3578, -1000, 876,
	-1000, -1000, 235, 157200, 2659, 147, 109934, -1000, 588, 1157,
	588, 417, -21, -1000, 3757, 1287, 28915, 109934, 3601, 3013,
	962, 93127, -1000, 1663, 3109, -1000, -22, -1000, 727, 147,
	2703, -1000, -24, 164723, -1000, 983, 416, -1000, 3838, -1000,
	-1000, -157, -1000, -1000, 3744, 3744, 92506, 69956, 92506, 92506,
	92506, 69956, 92506, -1000, 1158, -1000, -195, -1000, 2982, -1000,
	-1000, -1000, -1000, 3897, 11843, 11843, 56003, 56003, 56003, 11843,
	9077, -162, -1000, 11843, 11843, -46, -1000, -1000, 162557, -1000,
	-1000, -1000, 164723, -1000, 23811, 2641, -1000, 158652, -1000, 37405,
	-1000, -1000, 56003, 56003, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 60469, 3396, 659, 86814, -1000, -1000, 414, 1191,
	56003, 57917, 2882, 1191, 1191, -1000, -165, -1000, -1000, -1000,
	4199, -1000, 4199, 169, -1000, 144153, -1000, -1000, -1000, 28915,
	-1000, 92506, -1000, -1000, -1000, -1000, -1000, 4286, 4283, 2843,
	4280, 4279, -1000, -1000, -1000, 3562, -167, -173, -203, -1000,
	904, -1000, 4278, -1000, 218, 211, 210, 157200, 3384, 191,
	3231, 3229, -85, -1000, 147, -1000, -1000, -1000, -1000, -1000,
	-1000, 109934, 109934, 56003, 56003, -1000, -1000, -1000, -1000, 3225,
	4100, -1000, 2416, -1000, 144153, 144153, -1000, 144153, -1000, 28915,
	144153, 3350, 1520, -1000, 1094, 3042, 658, 60469, 1330, 109934,
	1101, 3320, 3318, -1000, 4124, 3976, 3306, -175, -1000, 144153,
	56003, 144153, -182, -184, 2836, -1000, -1000, 1329, 1510, 56003,
	1327, -1000, -1000, -1000, 86814, 655, 2774, 2774, -1000, -193,
	-201, -1000, -1000, -1000, 56003, 1400, 144153, 38043, -1000, 4276,
	3912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 144153,
	144153, -1000, -1000, -1000, 144153, 3912, 144153, -1000, 56003, -1000,
	162447, 56003, 1389, -1000, -1000, -1000, 4220, 2774, 28915, 2774,
	-1000, 2774, 3944, 1355, 92506, 56003, 1783, 69956, 69956, -1000,
	-1000, -1000, 2761, 144153, 157200, 109934, 2122, 2122, 3376, -1000,
	-1000, -1000, 2715, 2715, -1000, -25, 1159, 92506, -1000, 1904,
	-1000, 164723, 164723, 2640, 4275, -1000, -1000, -1000, -1000, 3040,
	-1000, -1000, -1000, 144153, 3039, 3295, -202, 66801, 654, 66801,
	653, 144153, 1155, -1000, -209, 94369, 1116, -1000, 1154, -1000,
	-1000, -1000, 73728, -1000, -1000, -1000, 588, 4099, -1000, 3151,
	4098, -1000, 4219, 645, 644, 144153, 2767, 643, 28915, 3898,
	962, 93127, -1000, 3766, 2336, -1000, 2854, 144153, 3884, -1000,
	3109, 640, 1146, 639, 1146, -1000, -210, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1158, -31, -1000, 4127, 638,
	851, -1000, -1000, 11843, 11843, 11843, -1000, 404, -1000, -1000,
	2703, 3975, -1000, -33, 158572, 158144, 709, 60469, 86814, -212,
	-1000, -1000, 144153, 164723, -38, -1000, 164723, 637, 631, 557,
	-1000, -1000, -1000, 875, 860, -1000, -1000, -1000, -1000, 4270,
	-1000, -1000, -1000, 157200, 157200, 157200, 4269, -1000, 157200, 157200,
	157200, -85, 157200, 157200, 2098, 2096, -1000, -1000, -1000, -215,
	-217, 123614, 144153, -1000, -1000, 2301, 1878, -1000, -1000, 144153,
	2860, -1000, -1000, -1000, 1168, 56003, 7471, 60469, 621, 56003,
	-1000, 619, 617, 4097, 3808, -1000, 3192, 3408, 2296, 66801,
	-1000, 3897, -1000, 157914, -1000, 1286, 2467, -1000, -1000, -1000,
	-1000, 164723, 60469, 3944, 66801, -1000, -1000, 616, 615, 164723,
	611, 981, 3382, -1000, -1000, -1000, -1000, -88, -88, -1000,
	-1000, 164723, 147, 164723, 601, 4040, -1000, -1000, -1000, -1000,
	2774, 109934, -1000, 164723, -1000, -1000, -1000, -1000, 979, -1000,
	-1000, -1000, 1388, -1000, -1000, -1000, -1000, -1000, 4268, 3379,
	115527, -1000, -218, 2497, -1000, 86814, -1000, 1116, -1000, -1000,
	2835, 593, -1000, 1110, 2697, 2697, 1286, -220, 66801, -223,
	66801, -226, 2754, 3118, -1000, 399, 4093, 1154, 1193, -1000,
	4091, 147, 3836, -1000, 147, -1000, 4218, 66801, -1000, 109934,
	66801, 2763, 2576, 2993, 93127, -1000, 3004, -1000, -1000, -233,
	144153, 2336, -1000, -1000, 92506, -1000, -1000, -1000, 2982, -1000,
	144153, -1000, 144153, -1000, 2570, 56003, 37405, -1000, -1000, 709,
	-234, -1000, -45, -1000, 4088, 57917, 4257, 4256, 4254, -1000,
	-1000, -1000, -272, -272, -272, -1000, -85, -85, -85, -85,
	-85, 144153, 144153, -1000, -1000, -1000, 2408, -1000, 2859, -1000,
	-1000, 3599, -1000, 3331, 591, 157869, 7471, 2971, 144153, 157824,
	2659, 2659, -1000, 4084, 3403, -1000, -1000, 2636, 590, -1000,
	-1000, -1000, -1000, 1063, 144153, 1110, 3329, 109934, 7471, 1294,
	-240, 2639, 2639, 56003, 36767, 2660, -1000, 56003, -1000, -1000,
	3944, 69956, 157200, -1000, 157200, 2762, -1000, 3365, 5601, -1000,
	2754, 144153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2296, 1286, -243, 2636, -254, -1000,
	-1000, 3933, -1000, 3835, 3195, 147, -1000, 147, -1000, 4251,
	1157, 398, -255, 1287, -274, 109934, 2404, -1000, 962, -1000,
	3013, 1193, 3779, -1000, -275, -1000, -277, -280, 397, 57279,
	57279, 57279, -46, -73, -1000, 144153, 589, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 180, 154, -1000, -1000, 3569, 1060,
	-1000, 1048, 2258, 390, 1280, 271, 74, -1000, -1000, -1000,
	3306, -1000, 144153, -1000, -1000, -1000, 1060, 588, -1000, 56003,
	1286, -282, -1000, 1249, -288, -1000, 1237, -290, -1000, 3375,
	-1000, -291, 2774, -1000, -272, 269, 2122, 1156, 4012, 2748,
	5601, -1000, 4213, 93127, -1000, -1000, -1000, 2983, -293, -1000,
	-1000, 2636, 2296, 1286, 1110, 2636, 2960, -1000, 2640, 1155,
	-1000, -1000, -1000, -1000, 1286, 587, 2296, 585, 1834, 962,
	-1000, -1000, 1632, 3898, 3772, 1570, 1146, -1000, -1000, -1000,
	3638, -1000, 61745, 2799, 2290, 161692, 3638, 3638, -1000, -1000,
	157200, 157200, 144153, 1110, 3999, -1000, 1050, 1049, 1777, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1193, -296, -1000,
	2971, 164723, 1110, -1000, 2639, 3224, -1000, 2639, 3373, -1000,
	2658, -1000, -1000, -1000, -1000, 3367, -1000, 2256, 4154, -1000,
	-1000, 4046, 56003, -1000, -1000, -1000, -1000, -1000, -1000, 1110,
	144153, 1110, 2636, 2296, 1193, 1110, 2282, 2277, 4249, 1116,
	2754, 2296, 66801, 2636, 66801, 2619, -1000, 144153, -1000, 2576,
	1564, -1000, 1913, -1000, -1000, 2295, 4120, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -85, -85, -1000, -1000, 963, -1000,
	3798, -1000, 1325, 2562, 2562, -1000, -1000, 1048, -1000, -1000,
	572, -1000, 568, -1000, 157200, 2719, -1000, -1000, -1000, 164723,
	-1000, -1000, 1193, 1110, 2636, 1506, 1193, -1000, 4248, -1000,
	2754, -1000, 2636, -298, 1110, -301, 2634, -1000, -1000, -88,
	2404, -1000, 1911, 76849, 2281, -1000, -1000, 2698, 56641, 56003,
	-1000, 4155, -1000, -1000, 3071, -1000, 3306, 56003, 56003, 269,
	74972, 17822, 1506, 1193, 1110, -1000, 1200, -1000, 1506, -1000,
	2983, 1110, 1286, 1193, 2296, 2038, 962, 1834, 76849, -283,
	-1000, -1000, -1000, 164723, -1000, -1000, -1000, -1000, -304, -311,
	-1000, -189, 122993, -320, -1000, -1000, -1000, -1000, 1506, 1193,
	-1000, -1000, -1000, 1193, 2296, 1506, 2636, -1000, -1000, 2391,
	157200, 2619, -283, -1000, 2636, 1382, -323, -1000, -1000, 1506,
	1506, 2636, -1000, 1110, -1000, 2038, -1000, -1000, -1000, 565,
	-1000, -1000, -1000, 1110, 1193, -1000, 56003, 1193, 1506, -328,
	1506, -1000, 2636, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5168, 5166, 25, 5164, 5162, 5159, 5157, 5156, 5155,
	5153, 5151, 5143, 5142, 5140, 5137, 160, 5133, 5132, 5131,
	5130, 5129, 5128, 5126, 5112, 5110, 5108, 5106, 5104, 5099,
	5098, 5096, 5094, 5087, 5084, 5083, 5082, 5081, 5080, 5079,
	5078, 5077, 5076, 5072, 5071, 5070, 5069, 5068, 5067, 5065,
	5064, 5062, 5060, 5059, 5058, 5057, 5054, 5053, 5051, 5048,
	5047, 5046, 5045, 5044, 5043, 5041, 5037, 5033, 5031, 5030,
	5028, 5027, 5025, 5024, 5023, 5022, 5021, 5020, 5019, 5018,
	5017, 5016, 5015, 5014, 78, 5013, 5012, 5009, 5007, 5006,
	5005, 5004, 5003, 5001, 5000, 4999, 4997, 4994, 4992, 4987,
	4985, 4984, 4983, 4982, 4981, 4980, 4979, 103, 96, 4978,
	325, 4974, 4972, 4971, 4970, 4964, 4963, 4961, 4960, 4958,
	4957, 4956, 4955, 4954, 4953, 4947, 323, 4945, 16, 196,
	4944, 4942, 19, 4940, 4937, 322, 4935, 4934, 4933, 4927,
	4926, 330, 4924, 4923, 4922, 4921, 4918, 318, 4917, 4916,
	4914, 4913, 4912, 4908, 105, 166, 4907, 4906, 595, 4904,
	4903, 4902, 4900, 4899, 4897, 4895, 312, 299, 4894, 4893,
	4892, 295, 208, 4891, 321, 4890, 4889, 4886, 4885, 4884,
	4883, 4882, 4881, 4879, 4878, 4876, 4875, 4874, 4873, 4872,
	4871, 4870, 4869, 4868, 4867, 4866, 4863, 4862, 4861, 4860,
	4857, 4856, 4855, 4852, 4851, 4850, 4849, 4846, 4845, 4844,
	4842, 4841, 4839, 4838, 4836, 4835, 4834, 4830, 4828, 4827,
	4826, 310, 251, 135, 4825, 4824, 4821, 4819, 4816, 4814,
	319, 317, 4813, 4811, 4808, 4807, 4805, 4038, 4800, 4798,
	4797, 4795, 4790, 4789, 4787, 4786, 4785, 132, 12, 58,
	4777, 4776, 122, 112, 107, 88, 124, 117, 4773, 4772,
	137, 4771, 147, 133, 4769, 136, 126, 32, 45, 199,
	293, 8093, 286, 4768, 4764, 4763, 303, 238, 4754, 288,
	4751, 4750, 4744, 4736, 4733, 4731, 86, 64, 253, 4730,
	161, 4728, 4727, 157, 204, 212, 213, 203, 210, 33,
	73, 123, 100, 72, 59, 21, 92, 259, 30, 256,
	5, 6, 308, 4725, 305, 13, 168, 14, 41, 4724,
	4722, 4719, 4718, 4314, 162, 4717, 315, 287, 198, 4716,
	4715, 4714, 1689, 4713, 4710, 63, 271, 158, 97, 119,
	91, 151, 4709, 187, 279, 48, 4704, 206, 70, 4703,
	4702, 148, 116, 10703, 10072, 4701, 4700, 170, 93, 235,
	9924, 252, 234, 257, 167, 172, 220, 221, 4698, 146,
	4697, 173, 190, 211, 207, 4695, 140, 4692, 4058, 110,
	215, 189, 6918, 4691, 4690, 4689, 101, 4687, 118, 4686,
	4685, 76, 23, 4, 8, 163, 49, 44, 7, 4683,
	47, 165, 61, 37, 4682, 36, 4680, 4678, 4677, 4676,
	60, 4673, 66, 200, 4672, 4671, 328, 4669, 89, 69,
	82, 4666, 269, 273, 4662, 277, 152, 4658, 4656, 236,
	228, 233, 222, 260, 4653, 74, 285, 4652, 4651, 4650,
	4649, 4648, 332, 153, 3, 155, 4647, 4646, 181, 4644,
	68, 300, 242, 4642, 80, 4641, 4638, 209, 71, 171,
	327, 202, 276, 143, 281, 219, 284, 4635, 4630, 4629,
	230, 4628, 4627, 270, 201, 4625, 4622, 250, 337, 113,
	62, 1, 205, 94, 291, 98, 231, 191, 4618, 241,
	180, 4615, 175, 4614, 114, 4611, 329, 214, 258, 55,
	10, 29, 111, 128, 99, 15, 283, 192, 247, 149,
	4610, 9039, 3409, 3377, 289, 4609, 183, 144, 95, 145,
	184, 314, 102, 4607, 4606, 3794, 4603, 4602, 4601, 4600,
	225, 4599, 4598, 255, 178, 182, 4597, 176, 249, 4594,
	125, 84, 65, 31, 142, 138, 320, 141, 274, 331,
	296, 4590, 4585, 4580, 226, 4576, 120, 229, 245, 4575,
	239, 302, 79, 4573, 290, 4568, 185, 2375, 77, 188,
	4563, 261, 4562, 4561, 4560, 4558, 4557, 4556, 4555, 4554,
	292, 4553, 4552, 4551, 52, 240, 4550, 237, 195, 224,
	130, 83, 232, 108, 4389, 159, 1328, 244, 43, 2,
	4549, 186, 4548, 5398, 67, 4547, 0, 15927, 11499, 14896,
	4546, 4545, 15523, 4544, 9329, 4543, 4541, 4539, 265, 85,
	4538, 4537, 4536, 127, 4535, 104, 4532, 4531, 81, 4530,
	35, 28, 24, 40, 38, 1121, 806, 4528, 4526, 53,
	154, 26, 4525, 326, 275, 4524, 4522, 4521, 4519, 115,
	4516, 56, 4515, 50, 4514, 4513, 57, 18, 39, 4512,
	4511, 248, 194, 3988, 193, 179, 4510, 150, 4509, 4508,
	313, 106, 164, 4507, 4506, 307, 254, 266, 109, 4505,
	297, 4504, 246, 4502, 75, 34, 4501, 4499, 309, 134,
	131, 46, 304, 156, 51, 4499, 4498, 4497, 4496, 218,
	4495, 4494, 4492, 4490, 4489, 129, 177, 4488, 87, 4487,
	4486, 4485, 54, 278, 216, 4484, 22, 4483, 4481, 4480,
	267, 272, 301, 217, 262, 4479, 4478, 197, 4477, 4476,
	4475, 298, 4474, 4473, 4056, 316, 4472, 42, 4471, 4469,
	4465, 11, 4464, 4463, 243, 3786, 4462, 4459, 9, 4458,
	227,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 14, 14, 10, 10, 10, 10, 11,
	11, 11, 11, 11, 63, 63, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 20, 20, 20, 20, 20, 20, 20, 42,
	44, 43, 37, 37, 38, 38, 39, 40, 40, 45,
	47, 46, 48, 49, 49, 50, 50, 50, 13, 13,
	13, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	23, 23, 51, 51, 24, 24, 53, 53, 25, 25,
	54, 54, 675, 675, 675, 676, 676, 677, 677, 677,
	28, 56, 58, 58, 482, 482, 21, 22, 22, 22,
	22, 678, 678, 678, 678, 41, 29, 57, 34, 34,
	34, 34, 34, 250, 250, 250, 250, 27, 27, 52,
	52, 296, 296, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 674, 674, 298, 298, 297, 283, 283,
	284, 284, 285, 285, 679, 679, 299, 299, 299, 300,
	300, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 568, 568, 568, 599, 599, 599, 599, 601, 601,
	726, 726, 727, 727, 727, 727, 727, 157, 157, 456,
	456, 456, 72, 72, 72, 72, 72, 664, 664, 252,
	252, 252, 254, 254, 253, 253, 253, 253, 253, 253,
	253, 253, 96, 96, 97, 97, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 685, 685, 684, 722, 722,
	683, 683, 686, 686, 686, 251, 251, 251, 93, 93,
	115, 115, 153, 153, 153, 153, 153, 153, 153, 154,
	154, 155, 155, 695, 695, 695, 255, 255, 255, 257,
	257, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 262, 19, 19, 136,
	136, 136, 136, 136, 136, 136, 131, 131, 603, 603,
	604, 604, 246, 246, 247, 247, 247, 247, 248, 248,
	249, 249, 249, 87, 87, 259, 259, 261, 261, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 77, 77, 77, 77, 77, 77, 78,
	78, 85, 85, 85, 85, 85, 85, 85, 85, 223,
	223, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 101, 101, 101,
	92, 92, 92, 92, 92, 104, 104, 696, 696, 697,
	697, 715, 701, 701, 702, 702, 705, 705, 705, 706,
	706, 706, 706, 706, 714, 714, 714, 714, 714, 708,
	707, 709, 709, 710, 710, 712, 712, 712, 712, 712,
	713, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 713, 713, 713, 713, 700, 716, 717,
	717, 718, 718, 719, 719, 719, 123, 123, 123, 721,
	721, 720, 720, 703, 703, 704, 704, 67, 711, 711,
	729, 729, 68, 69, 70, 71, 698, 698, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 730, 730, 731, 731, 732,
	732, 732, 732, 732, 732, 732, 732, 732, 732, 732,
	732, 732, 732, 732, 732, 732, 732, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 105, 105, 414, 414,
	377, 377, 106, 106, 106, 107, 107, 108, 108, 108,
	108, 89, 89, 89, 661, 661, 662, 668, 733, 733,
	559, 559, 558, 558, 110, 110, 455, 455, 111, 111,
	111, 111, 111, 111, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 121, 121, 121, 121, 121, 122, 122, 122, 119,
	119, 119, 116, 116, 116, 114, 114, 114, 120, 120,
	120, 124, 124, 124, 667, 363, 363, 118, 118, 118,
	117, 117, 117, 430, 430, 431, 433, 432, 125, 125,
	125, 125, 378, 126, 126, 126, 126, 126, 126, 126,
	126, 129, 129, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 561, 561, 5, 5,
	289, 289, 288, 288, 288, 288, 6, 6, 6, 294,
	294, 293, 292, 210, 210, 127, 127, 127, 523, 523,
	132, 132, 132, 471, 471, 133, 133, 133, 133, 133,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 671, 671,
	423, 423, 326, 326, 326, 326, 145, 145, 145, 145,
	146, 146, 146, 146, 147, 147, 232, 232, 163, 163,
	163, 163, 162, 162, 162, 162, 162, 162, 162, 162,
	79, 79, 79, 80, 80, 81, 81, 82, 82, 83,
	83, 84, 84, 84, 84, 84, 166, 166, 33, 33,
	33, 33, 167, 167, 723, 723, 169, 165, 165, 165,
	165, 165, 165, 165, 164, 164, 168, 168, 168, 168,
	170, 172, 172, 172, 172, 172, 171, 171, 171, 171,
	171, 173, 173, 593, 593, 441, 441, 591, 591, 615,
	615, 592, 592, 384, 384, 384, 384, 384, 385, 385,
	385, 602, 602, 602, 602, 602, 602, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 233,
	233, 233, 234, 234, 239, 239, 240, 240, 240, 241,
	241, 241, 238, 238, 238, 235, 235, 236, 236, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 244,
	244, 242, 242, 243, 243, 735, 735, 734, 734, 245,
	245, 245, 245, 245, 203, 203, 203, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	442, 442, 206, 206, 206, 190, 190, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 258, 258, 258, 258,
	258, 182, 182, 182, 182, 182, 182, 182, 182, 183,
	183, 183, 176, 176, 192, 192, 192, 192, 192, 184,
	184, 185, 185, 185, 186, 186, 186, 186, 215, 215,
	189, 189, 189, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 177, 178, 178, 178, 178, 194, 194, 194,
	194, 478, 478, 478, 221, 221, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 218, 218, 218, 218, 218, 218, 687, 687,
	688, 688, 688, 211, 211, 211, 211, 211, 211, 539,
	539, 204, 204, 204, 204, 209, 209, 209, 209, 188,
	188, 188, 188, 213, 213, 213, 213, 461, 461, 201,
	201, 201, 202, 202, 202, 207, 207, 220, 208, 415,
	415, 205, 205, 212, 212, 212, 212, 214, 214, 214,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 180, 181, 181, 181, 181,
	216, 216, 200, 200, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 736, 736, 196, 196, 196,
	195, 195, 195, 195, 198, 198, 199, 199, 199, 199,
	199, 199, 199, 197, 187, 219, 669, 669, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 666, 666, 666,
	666, 666, 670, 670, 137, 137, 137, 137, 137, 137,
	137, 148, 148, 148, 148, 148, 148, 148, 151, 151,
	138, 138, 138, 138, 138, 138, 138, 141, 141, 139,
	139, 139, 139, 140, 140, 98, 98, 98, 98, 98,
	18, 18, 18, 99, 99, 317, 317, 267, 267, 267,
	402, 402, 268, 268, 392, 392, 392, 392, 263, 263,
	264, 264, 265, 266, 266, 100, 100, 737, 737, 737,
	680, 680, 680, 681, 681, 681, 681, 681, 681, 386,
	386, 387, 387, 503, 503, 503, 503, 503, 390, 390,
	390, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	400, 401, 401, 393, 393, 399, 398, 398, 397, 397,
	396, 396, 394, 395, 395, 395, 404, 404, 403, 406,
	406, 405, 502, 624, 624, 626, 626, 626, 626, 626,
	626, 626, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 479,
	479, 738, 738, 739, 740, 622, 622, 622, 622, 622,
	623, 618, 618, 619, 619, 619, 619, 619, 388, 388,
	389, 389, 389, 389, 620, 621, 421, 421, 543, 625,
	625, 627, 627, 629, 741, 741, 741, 741, 741, 741,
	742, 742, 742, 501, 501, 500, 500, 499, 499, 412,
	412, 630, 630, 630, 630, 631, 631, 631, 631, 631,
	634, 633, 632, 632, 632, 632, 632, 103, 103, 103,
	458, 458, 457, 457, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 228, 228, 329, 329, 329, 95, 95, 95,
	15, 15, 15, 15, 15, 15, 15, 344, 344, 16,
	16, 16, 16, 682, 682, 682, 102, 102, 102, 102,
	102, 102, 410, 410, 410, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 673, 673, 672, 672, 330, 330, 744, 744, 109,
	109, 109, 109, 109, 109, 109, 109, 562, 562, 563,
	563, 94, 94, 94, 94, 94, 480, 480, 477, 477,
	476, 476, 420, 420, 541, 541, 541, 542, 334, 334,
	335, 335, 286, 286, 286, 481, 481, 481, 36, 35,
	26, 26, 30, 30, 31, 31, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 32, 32, 60, 60, 60,
	60, 61, 61, 61, 61, 64, 64, 65, 65, 59,
	59, 59, 59, 62, 62, 55, 55, 66, 66, 66,
	66, 66, 689, 691, 691, 690, 690, 694, 694, 694,
	694, 694, 694, 692, 692, 365, 365, 693, 693, 724,
	724, 725, 725, 144, 144, 149, 149, 149, 149, 149,
	150, 150, 150, 150, 152, 152, 152, 152, 161, 161,
	224, 224, 224, 224, 224, 224, 224, 73, 73, 86,
	86, 159, 746, 746, 746, 160, 160, 160, 225, 225,
	225, 225, 226, 226, 227, 227, 745, 745, 327, 327,
	496, 496, 497, 497, 747, 747, 498, 498, 498, 498,
	498, 320, 319, 321, 321, 322, 322, 91, 91, 91,
	308, 308, 307, 310, 310, 309, 311, 311, 312, 312,
	305, 305, 605, 605, 314, 314, 314, 315, 315, 301,
	301, 302, 302, 303, 303, 304, 304, 318, 318, 600,
	600, 748, 748, 135, 135, 135, 231, 231, 376, 376,
	376, 489, 489, 489, 413, 413, 341, 341, 495, 495,
	495, 495, 495, 454, 454, 454, 230, 230, 428, 428,
	444, 444, 445, 445, 555, 555, 446, 142, 142, 143,
	143, 158, 158, 271, 271, 269, 269, 269, 269, 269,
	269, 269, 269, 276, 276, 277, 277, 278, 278, 279,
	280, 280, 280, 280, 434, 434, 281, 281, 281, 270,
	270, 270, 272, 272, 272, 272, 272, 272, 272, 275,
	275, 275, 275, 282, 282, 282, 274, 274, 641, 641,
	641, 643, 643, 645, 645, 644, 644, 640, 640, 642,
	642, 743, 743, 460, 460, 460, 409, 411, 407, 407,
	408, 408, 418, 418, 416, 417, 417, 419, 419, 540,
	540, 540, 287, 287, 287, 451, 451, 451, 451, 452,
	452, 485, 485, 483, 483, 483, 483, 484, 484, 486,
	486, 486, 487, 487, 488, 488, 448, 448, 449, 449,
	450, 450, 450, 450, 519, 519, 273, 273, 273, 425,
	425, 425, 426, 426, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 510, 510, 508, 508, 508,
	508, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	545, 546, 546, 427, 427, 547, 492, 492, 493, 493,
	490, 490, 491, 491, 494, 494, 659, 659, 659, 660,
	660, 538, 538, 548, 548, 548, 548, 548, 548, 534,
	534, 535, 535, 536, 536, 537, 537, 556, 557, 557,
	464, 464, 464, 464, 462, 462, 465, 465, 465, 465,
	465, 463, 463, 549, 549, 549, 549, 453, 453, 229,
	229, 550, 550, 550, 550, 551, 552, 552, 553, 553,
	504, 505, 505, 564, 564, 564, 564, 566, 424, 424,
	424, 424, 424, 617, 616, 616, 565, 565, 565, 565,
	565, 565, 565, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 581, 581, 581, 581, 581,
	581, 581, 567, 567, 567, 567, 567, 567, 567, 571,
	571, 571, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 572, 572, 577, 577, 578, 578, 578,
	573, 574, 579, 579, 579, 579, 749, 749, 583, 583,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 569,
	569, 569, 576, 576, 576, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 472, 472,
	474, 474, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 513, 513, 513, 513, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 635, 635, 635, 635, 635, 635, 635,
	635, 515, 515, 638, 638, 639, 639, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 646, 646,
	647, 647, 649, 649, 650, 650, 651, 652, 652, 652,
	653, 654, 654, 648, 648, 655, 655, 655, 655, 656,
	656, 657, 657, 657, 657, 657, 658, 658, 658, 658,
	658, 525, 525, 526, 526, 532, 532, 532, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 383, 383, 382, 331, 331, 331,
	331, 331, 331, 439, 439, 437, 437, 437, 440, 440,
	438, 438, 436, 436, 435, 435, 522, 522, 520, 520,
	524, 524, 466, 466, 582, 582, 582, 582, 582, 582,
	582, 582, 467, 467, 467, 475, 468, 468, 469, 469,
	469, 469, 469, 516, 517, 470, 470, 470, 518, 518,
	527, 531, 531, 530, 529, 529, 528, 528, 506, 506,
	507, 507, 447, 447, 750, 750, 443, 443, 554, 554,
	554, 554, 611, 611, 380, 380, 429, 429, 379, 379,
	371, 371, 372, 372, 372, 372, 422, 422, 533, 533,
	584, 584, 585, 585, 586, 586, 587, 587, 588, 589,
	590, 521, 521, 352, 351, 338, 339, 350, 349, 348,
	337, 340, 345, 346, 347, 342, 343, 359, 358, 357,
	306, 313, 364, 366, 366, 369, 369, 370, 368, 367,
	367, 354, 355, 356, 560, 336, 373, 373, 374, 374,
	374, 375, 375, 375, 375, 332, 332, 332, 333, 333,
	360, 360, 361, 362, 362, 353, 353, 353, 323, 323,
	323, 324, 324, 325, 325, 598, 598, 595, 595, 595,
	596, 596, 596, 699, 597, 597, 597, 597, 594, 594,
	594, 594, 594, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 607, 607, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 609, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 614, 614,
	614, 614,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 6,
	4, 4, 6, 9, 6, 8, 4, 4, 5, 9,
	7, 9, 5, 6, 8, 7, 7, 9, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 1, 1, 0, 1,
	6, 6, 4, 6, 2, 1, 4, 8, 7, 10,
	9, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	8, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 4, 4, 2, 1, 1, 3, 1, 3, 2,
	4, 3, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 1, 3,
	1, 3, 6, 4, 6, 7, 9, 6, 2, 2,
	3, 0, 8, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 3,
	3, 3, 12, 3, 5, 4, 1, 3, 3, 3,
	3, 2, 4, 4, 4, 1, 1, 2, 1, 4,
	1, 0, 3, 3, 0, 4, 6, 0, 6, 4,
	4, 4, 5, 7, 6, 8, 7, 9, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 3, 9, 3,
	6, 3, 8, 5, 3, 12, 4, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 6, 3, 1,
	3, 2, 1, 3, 2, 1, 3, 5, 1, 2,
	1, 0, 6, 6, 6, 8, 1, 0, 4, 3,
	3, 4, 3, 4, 4, 4, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 1, 3, 0, 1, 2, 2, 1, 2,
	1, 6, 10, 5, 1, 3, 3, 1, 1, 0,
	2, 0, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 3, 5, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 4, 3,
	1, 2, 3, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 3, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 5, 8, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 1, 2,
	2, 2, 9, 2, 1, 0, 1, 1, 0, 1,
	2, 0, 2, 2, 0, 2, 2, 2, 2, 1,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 3, 6, 8, 3, 3, 3, 4, 8, 6,
	4, 5, 5, 5, 5, 3, 0, 1, 1, 1,
	1, 4, 4, 3, 4, 4, 3, 4, 4, 1,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 5, 7, 4, 2, 6, 4, 3, 2, 3,
	4, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 6,
	4, 2, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 5, 6, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 5, 6, 5, 5,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 6, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 2, 3, 2, 2, 3, 2, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 10, 11, 12, 9, 10,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 2, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 1, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 2,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 15, 17, 3,
	1, 0, 4, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 3, 0, 1, 3,
	0, 3, 1, 3, 1, 2, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 2,
	2, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 670, -3, -225, -128, -125, -87, -85,
	-132, -133, -111, -134, -127, -156, -161, -142, -143, -144,
	-157, -163, -224, -233, -234, -235, -236, -245, -229, -177,
	-226, -227, -4, -72, -74, -88, -110, -112, -126, -136,
	-135, -137, -145, -153, -148, -131, -79, -158, -162, -174,
	-228, -230, -231, 33, 32, 108, 86, 167, 139, 149,
	221, 424, 476, 488, 441, 154, 464, 446, -168, -169,
	510, -73, -86, -160, -159, 79, 140, 185, 327, 456,
	594, 516, 54, 159, -7, -15, -33, -19, 30, 50,
	-75, -76, -77, -78, 68, -95, -90, -105, -96, -89,
	-92, -93, -101, -728, 111, -642, -113, -117, -152, -115,
	-124, -732, 175, 242, -138, -139, -140, 406, -146, -147,
	467, -149, -150, -151, 470, 176, -81, -80, 169, -269,
	-271, -165, -164, -166, -232, -175, -176, -178, -179, -180,
	-181, -183, -184, -186, -215, -187, -188, -189, -190, -191,
	-192, -193, -197, -218, -194, -195, -196, -199, -198, -200,
	-205, -201, -202, -203, -204, -206, -207, -209, -210, -211,
	-212, -213, -214, -216, -217, -208, -219, -185, -220, 584,
	533, 88, 480, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -66, -5, -6, -20, -97, -91, -94,
	-98, -99, -100, -109, -102, -103, -104, -641, -114, -116,
	-119, -121, -122, -118, -120, -123, 465, 641, -272, -270,
	667, 646, 601, -182, -23, -28, -24, -25, -27, -29,
	-26, -30, -31, -32, -51, -56, -53, -54, -52, -55,
	-57, -58, -59, -60, -61, -62, -63, -64, -65, -35,
	-41, -42, -36, -37, -38, -39, -40, -43, -44, -45,
	-46, -47, -48, -49, -50, -21, -22, -34, -67, -68,
	-70, -69, -71, 628, 637, -275, -273, -274, -282, 502,
	609, 556, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, -378, 2, -354, -360, -361, -362, -353, -323, -609,
	-614, 4, -606, -612, 184, 258, 257, 259, 366, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 42,
	44, 45, 46, 48, 49, 50, 51, 52, 53, 54,
	58, 60, 64, 65, 66, 67, 68, 69, 70, 74,
	79, 80, 85, 86, 87, 88, 89, 90, 91, 92,
	98, 95, 96, 97, 99, 100, 102, 104, 105, 106,
	107, 108, 109, 110, 112, 113, 114, 116, 117, 118,
	126, 127, 128, 129, 130, 132, 139, 133, 140, 143,
	137, 142, 138, 144, 145, 147, 148, 149, 152, 153,
	154, 156, 157, 158, 160, 161, 162, 164, 165, 167,
	168, 169, 172, 170, 173, 171, 174, 175, 176, 177,
	178, 181, 182, 190, 191, 192, 197, 199, 200, 201,
	203, 204, 207, 208, 209, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 222, 226, 228, 229, 230, 231,
	232, 233, 234, 240, 241, 242, 244, 245, 246, 247,
	248, 252, 253, 254, 255, 262, 264, 270, 271, 276,
	272, 277, 278, 280, 284, 285, 286, 287, 288, 289,
	290, 292, 294, 293, 298, 296, 300, 301, 304, 305,
	306, 307, 308, 309, 313, 314, 310, 315, 316, 318,
	319, 322, 320, 323, 324, 321, 325, 328, 329, 330,
	331, 332, 333, 334, 335, 336, 337, 338, 339, 326,
	327, 342, 340, 344, 345, 346, 347, 348, 363, 365,
	358, 359, 360, 352, 353, 349, 354, 350, 351, 355,
	356, 362, 357, 368, 369, 370, 371, 374, 238, 263,
	376, 377, 380, 382, 399, 385, 386, 387, 390, 391,
	394, 397, 398, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 411, 412, 414, 415, 416, 418, 419,
	420, 422, 424, 425, 427, 428, 429, 431, 432, 433,
	434, 435, 436, 437, 438, 440, 441, 443, 442, 444,
	446, 448, 449, 450, 456, 457, 464, 458, 460, 461,
	462, 463, 465, 466, 467, 468, 469, 470, 474, 472,
	473, 475, 476, 478, 479, 480, 481, 482, 484, 486,
	487, 491, 492, 495, 493, 513, 514, 536, 488, 489,
	490, 494, 496, 497, 498, 499, 501, 500, 505, 503,
	504, 506, 507, 508, 510, 512, 515, 516, 518, 519,
	520, 521, 522, 523, 524, 527, 529, 530, 531, 532,
	533, 534, 555, 535, 537, 541, 542, 543, 544, 538,
	539, 554, 546, 547, 548, 549, 551, 552, 557, 558,
	559, 560, 561, 562, 564, 565, 567, 575, 588, 576,
	577, 578, 579, 581, 584, 585, 586, 587, 573, 589,
	590, 593, 594, 595, 599, 596, 600, 597, 598, 601,
	603, 606, 607, 608, 615, 613, 614, 616, 617, 619,
	620, 618, 622, 623, 624, 629, 630, 632, 633, 634,
	37, 55, 56, 59, 61, 63, 75, 76, 77, 81,
	134, 135, 166, 179, 180, 193, 210, 211, 223, 225,
	235, 236, 237, 261, 265, 266, 268, 274, 297, 373,
	375, 392, 396, 413, 417, 421, 423, 439, 483, 511,
	525, 540, 545, 568, 569, 570, 571, 580, 582, 609,
	610, 611, 621, 631, -378, 2, -354, 383, -347, 2,
	-323, -323, 424, 29, 2, 29, 412, 504, 559, 561,
	2, -671, -423, 552, 2, 29, -326, -323, 111, 221,
	502, -347, 2, -671, 221, -423, 26, 552, 2, -323,
	2, 397, 178, 207, 23, 28, 72, 83, 106, 152,
	177, 202, -731, 399, 432, 486, 506, 554, 565, 581,
	2, 614, 319, 503, 556, 252, 129, 586, 562, 494,
	-682, 491, 492, 397, 430, 478, 224, 602, -327, 2,
	488, -323, 319, 2, 670, 102, 80, 483, 507, -171,
	2, 309, 576, -172, -173, -170, 568, -593, 494, 478,
	342, -323, 670, 670, 670, 29, -336, 2, -323, -336,
	2, -237, 2, -336, -734, -244, -243, -242, 22, 457,
	192, 290, 205, 243, 347, 427, 203, 52, -237, 2,
	556, 252, 494, 129, 552, -358, 659, -360, 562, 2,
	-222, 507, 535, 231, 51, 50, 80, 29, 431, 85,
	404, 130, 136, 161, 587, 222, 552, 252, 253, 285,
	88, 101, 102, -478, 48, 278, 74, 277, 492, -687,
	491, -539, 557, 208, 496, 504, 551, 92, 290, 488,
	576, 578, 111, 603, 479, 634, 436, 437, 549, 450,
	546, 310, 170, 206, 4, 129, 342, 478, 509, 294,
	293, 588, 568, 309, 487, 407, 90, -745, 2, 576,
	-745, 2, 670, 670, 2, 556, 403, 614, 503, 207,
	129, 436, 252, 586, 50, 152, 28, 74, 562, 645,
	494, -682, 642, 643, 319, 136, -664, 2, -663, 4,
	-612, -606, -372, -371, 556, 562, 129, -362, -353, 659,
	-361, 670, 670, 670, 670, 2, 277, 278, 434, 433,
	507, 508, 29, 670, 670, 670, 670, 670, 670, 491,
	178, 2, 562, 177, -696, 23, 28, 72, 101, 106,
	136, 202, 399, 432, 506, 554, 558, 565, 581, -681,
	535, 74, 494, -680, -682, 388, 319, 586, 152, -476,
	129, 309, 219, 595, 561, 559, 592, 143, 264, 598,
	597, 670, 670, 670, 670, -129, 2, 667, 33, 32,
	-128, -132, 154, 516, 510, -262, 556, 269, 2, -323,
	670, 670, 670, 2, 277, 278, 491, 492, 29, 670,
	670, 205, -663, 552, 2, 670, 670, 670, 2, 29,
	277, 278, 491, 492, 269, 2, 74, 497, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, -743,
	2, 556, 576, 2, -745, 2, -745, 2, -746, 576,
	631, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, -270, -272, -271, 670, 670, 670,
	670, 670, 670, 670, 670, -222, 507, 2, 80, 29,
	29, -416, -418, 591, 267, 163, 389, -269, -271, 2,
	-641, 588, 507, -591, 2, -511, -615, -513, 657, 658,
	650, 553, 73, -382, 364, 635, -525, 136, 592, 383,
	-614, -514, -527, 166, 399, 483, -440, 257, 8, 9,
	5, 6, 7, -332, -515, -521, 583, 183, 372, -375,
	671, 10, 667, -638, -271, -526, 38, 225, 71, -595,
	-374, -333, -567, 268, -373, -353, -635, -636, 4, -606,
	-607, -596, -570, -578, -577, -574, -573, -575, -581, -323,
	-609, 83, 120, 121, 119, 124, 123, 312, 311, 125,
	122, 509, 602, 72, 37, 235, 236, 274, 373, 237,
	81, -637, 153, -608, 265, 266, 525, 56, 439, 193,
	135, 134, 375, 61, 59, 610, -579, 131, 568, 569,
	570, 571, 210, 211, 63, 179, 180, 396, 421, 545,
	580, 582, 223, 297, 47, 115, 206, 260, 239, 273,
	275, 279, 299, 302, 343, 361, 367, 393, 395, 477,
	517, -749, 611, 540, 75, 76, 198, -643, 442, -644,
	-347, -643, 670, 670, 672, 670, -407, -409, -411, 2,
	29, 150, 667, 2, -544, 2, -545, -549, -271, 291,
	-548, 667, -546, 665, -354, 384, -639, 484, -635, -636,
	-332, -353, -374, 4, -606, -608, 669, -412, 667, 129,
	494, 556, 84, 252, 101, 177, 207, -471, 667, -323,
	29, 383, 572, 672, -671, -423, -408, 429, -523, 667,
	383, 386, 205, 386, -671, 65, 99, -721, 235, 2,
	-720, -360, 323, 2, 2, 2, 2, 2, 235, -323,
	556, 128, 289, 2, 2, 2, 2, 2, 2, 2,
	-432, 235, 2, -430, -360, 614, -433, 235, 2, -430,
	-431, 235, 2, -430, -477, 2, 94, -337, 235, 2,
	-323, -363, 235, 2, -358, -323, 235, 2, -369, 235,
	2, -366, -323, -601, 235, 2, -599, 4, -606, 125,
	509, -511, 2, -158, 2, 65, -323, 614, 2, 513,
	2, 667, -171, 2, 77, 576, 47, 507, -172, 2,
	-497, 2, -498, -319, -320, -321, -556, -322, 276, 428,
	438, 638, 141, 364, 634, -723, 205, 649, 572, -591,
	-591, -591, -441, 669, -239, 58, -336, -735, -734, -735,
	-589, 29, -584, 8, -585, 657, 658, -589, -589, -735,
	-735, 2, 2, 2, 2, 2, -323, 2, -222, 2,
	198, 604, 2, 8, 2, 243, -258, -603, 496, 190,
	437, 607, 2, -598, 10, -597, 5, 4, -606, -612,
	-607, -609, 83, 513, 2, 514, 80, -478, 634, 80,
	205, 2, 205, 2, -461, 2, 628, 429, 205, 2,
	2, -669, 2, 383, 222, 205, 2, 205, 2, 205,
	2, 570, 205, 2, 205, 2, -221, 508, 577, 555,
	433, 278, 2, -158, 625, -141, 198, 278, 277, -511,
	625, 2, -688, 198, 492, -511, 2, 575, 287, 171,
	205, -461, 2, 205, 2, 205, 2, 205, 2, 5,
	2, 44, 434, 536, 2, 276, 428, 536, 2, 534,
	2, -354, 556, 614, 503, 129, 253, 500, 207, 29,
	2, 491, 178, 2, 2, 95, 96, 205, 2, 205,
	2, 220, 205, 2, 450, 205, 556, -442, 669, -442,
	634, 2, -496, -497, 2, -549, 235, -354, 2, -351,
	-594, 4, -606, -612, -607, -613, 29, 32, 33, 34,
	36, 38, 39, 40, 43, 62, 71, 72, 78, 82,
	84, 94, 101, 111, 119, 120, 122, 121, 123, 124,
	125, 136, 141, 146, 150, 151, 155, 159, 163, 183,
	185, 198, 202, 205, 221, 224, 227, 243, 256, 267,
	269, 291, 295, 303, 311, 312, 364, 372, 378, 383,
	384, 388, 389, 410, 426, 445, 471, 502, 509, 528,
	550, 556, 566, 572, 574, 583, 591, 592, 602, 604,
	612, 625, 626, 627, 628, -614, 2, -549, 235, 2,
	-357, 235, -549, -360, 2, -720, 2, -337, 2, -511,
	-675, 564, 173, 458, 2, -379, 235, -354, -356, -360,
	-358, 2, 491, -603, 2, 2, 2, -511, 2, -514,
	2, -525, 29, -366, 2, -599, 235, 2, 29, 29,
	614, 429, 269, 572, 672, -429, -371, -372, -590, 4,
	8, -422, -323, 669, -511, 2, -158, -141, 2, -511,
	235, 2, -158, 235, 2, -511, 235, 2, -158, 235,
	2, -323, 2, -683, 2, -722, -603, 235, 99, -323,
	2, 235, -323, 2, 207, -730, 486, 585, 323, 2,
	2, 581, 2, 106, 556, 128, 2, 2, 2, 2,
	2, 2, 2, 556, -342, 2, -323, 198, -558, 269,
	-366, 235, -367, 2, 503, -744, 442, -599, 235, 2,
	462, 614, -358, 235, 2, -358, 252, 271, -337, 235,
	2, 561, 559, 561, 559, 205, 2, 269, 2, 269,
	2, -550, 2, -551, -545, -552, 665, 384, -561, 2,
	-560, -597, 609, -129, 667, -129, 667, 507, 667, -603,
	-354, -354, -511, 2, -158, -141, 2, -511, 2, -158,
	2, -323, 2, -155, -603, -154, 667, 205, 603, -323,
	2, -511, 2, -158, -141, 2, -511, 2, -158, 2,
	-262, 198, 2, 129, 556, -453, -549, -496, 572, -416,
	-418, -222, 513, 2, -276, -451, -278, 198, -483, -484,
	-279, 303, 185, 378, -280, -460, 29, 150, -460, -460,
	65, 668, 668, -723, 588, 11, 12, 82, 44, 657,
	658, 659, 660, 196, 661, 662, 655, 656, 654, 647,
	648, 652, 282, 283, 103, 651, 649, 93, 317, 485,
	186, 187, 188, 189, 459, 250, 35, 41, 251, 14,
	15, 16, -382, 34, 388, 302, 635, 239, 517, 650,
	17, 18, 19, 273, 275, 367, 55, 243, -331, 399,
	-381, 553, 73, -511, -511, -511, -511, -511, -511, -511,
	-511, 395, 667, -447, -506, 665, -271, 667, 667, 667,
	667, -590, -271, -511, -525, 668, -438, 667, -271, -525,
	-520, 667, 483, 665, 667, -528, -511, 5, 5, 5,
	667, 669, -646, 629, 198, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 423, -572, 667, -571, 667, -571, -571, -583, 615,
	667, 667, -569, 667, 637, 630, 667, -569, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 615, 562, 672, -643, -492, 667, 667, -443, -554,
	-511, 659, -443, -443, 383, -435, -511, 115, -464, 279,
	343, 206, 299, 477, 260, -508, 671, -508, -538, 637,
	-271, -546, -353, -271, -548, 667, -544, -538, -130, -590,
	-110, -126, -135, -158, -174, -230, -231, 659, -354, 667,
	205, 667, 669, -594, 205, -422, -337, -366, -354, -373,
	-374, -379, -348, -323, 2, 2, 149, -435, -665, 586,
	494, 29, 4, -612, -606, -372, 503, -371, 556, 129,
	178, 207, -601, -326, 572, 39, -522, -564, -565, -617,
	671, -616, -567, -576, 413, 417, -596, 268, 4, -606,
	-608, 265, 266, 525, 56, 439, 193, 135, 134, 375,
	61, 59, 610, 568, 569, 570, 571, 210, 211, 63,
	611, 540, 75, 76, -665, 586, 494, 29, 503, 198,
	-601, 198, 205, -601, 2, -603, 2, -299, 672, 70,
	468, 166, -703, 667, 2, 166, 2, 2, 2, -323,
	-299, 166, 672, -432, 235, -299, 166, -299, 166, -380,
	235, -379, -299, 166, -299, 672, 166, 166, -299, 672,
	166, 669, 672, 166, -601, 2, -477, -593, -435, 39,
	-497, 2, 136, 4, 5, -747, 672, 301, -385, 316,
	363, 230, 384, 632, 376, 141, -602, 5, 4, -521,
	-533, 136, 309, 268, -584, -586, 9, -587, 657, 658,
	-592, -591, 118, 669, -594, -240, 263, 42, -336, -336,
	-735, -735, 8, 8, -735, -735, -336, -336, 556, 280,
	-154, -603, 205, 243, -249, 628, -603, -603, -603, -603,
	-593, 29, 514, 2, -221, 508, 577, 96, 514, 2,
	-354, 556, 129, 252, 86, -692, 198, 2, -323, -670,
	198, -666, 478, 494, 586, -665, -670, -354, 129, -354,
	129, -354, 129, -354, -354, 2, 2, 2, 2, 2,
	91, 492, 491, 2, -158, -511, 2, 91, 2, 50,
	530, -688, 198, 2, 575, 2, 575, 2, -323, -323,
	-323, -323, 378, 535, 301, 628, -354, -354, -357, -360,
	-355, -360, 205, 253, -360, 496, 557, 587, 492, 178,
	-511, 2, 99, -736, 2, 205, 198, 2, 556, 252,
	556, 252, 129, 205, 80, 129, 29, 205, 556, 489,
	669, 4, -296, 460, 510, 398, -295, 25, 30, 154,
	254, 348, 607, 172, -397, 255, 465, -394, 403, 166,
	529, 596, -675, -678, 490, 564, 173, 458, 97, 376,
	510, 398, 460, 166, -457, -459, 39, 127, 348, 397,
	66, 246, 321, 322, 533, 466, 621, 166, 510, 398,
	460, -711, 460, 510, 398, -698, -713, 348, 67, 473,
	539, 241, 532, 623, 178, 501, 298, 364, 109, 484,
	547, 400, 398, -16, -312, 25, 154, -314, -307, 510,
	30, -678, 107, 460, 646, 641, 465, 409, 548, 426,
	-678, -675, 296, -677, 624, 362, -298, 529, 596, -675,
	-482, -678, 490, 460, -297, 364, 622, -399, -394, 403,
	166, 671, 25, 154, 460, 510, 398, -726, -727, 30,
	-590, 2, -294, 243, -293, 25, -289, -288, 25, 154,
	510, 599, -167, -147, -166, 465, 510, -167, 2, 460,
	398, -672, -344, -640, 243, 628, 166, -344, -344, -549,
	235, -692, 198, 2, -685, -154, 292, 5, 10, -154,
	-429, 672, 672, -594, 659, 166, 166, 166, 166, 278,
	198, 364, -722, 2, 205, 364, 628, -715, 2, -360,
	-731, 2, 2, 2, 2, 2, 2, 2, -354, 235,
	-414, 383, -661, -662, -733, 556, -249, -603, 364, 47,
	-357, 235, 2, 614, -672, 364, -680, -359, 235, -354,
	39, 667, 364, 2, -477, 2, 252, -640, 364, -550,
	-376, -354, -545, -376, 510, -347, 39, -508, -354, 668,
	672, -561, -561, -603, -249, 205, 667, -262, 628, 628,
	278, -557, 672, -556, 243, -604, -603, -155, -603, 205,
	278, -603, -661, -337, 2, -354, 2, -299, 672, -327,
	-276, -451, -593, -452, -451, -277, -276, -279, 198, 438,
	597, 348, 515, 284, -484, -483, 29, -511, -488, 192,
	347, -511, -486, -513, 657, 658, -585, -587, -434, 376,
	-270, -270, -270, -419, -540, -511, 426, 259, -592, -723,
	-566, -564, -564, -352, -594, 568, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, 302, 239, 517, 55, 243, -511, 572,
	-511, -511, -511, -511, 340, 364, 372, 583, 183, 593,
	150, 376, -750, 550, 43, -518, -271, -439, 667, -532,
	36, 528, 29, -525, 667, 2, -506, -511, -507, -383,
	-381, -323, 657, 658, 659, 660, 661, 662, 647, 648,
	649, 14, 15, 16, 652, 656, 654, 655, 196, 103,
	651, 317, 485, 93, 186, 187, 188, 189, 282, 283,
	17, 18, 19, 35, 41, 650, -436, -435, -435, 668,
	612, 29, 150, 659, 2, 668, 672, 39, 668, -511,
	-436, -524, -520, -435, -531, -530, 625, -472, -473, 633,
	326, 132, 233, 324, -474, 499, -588, 8, -594, 659,
	-647, 191, 224, 667, 668, 2, 668, 2, 668, -511,
	2, 668, -511, 2, 668, -511, 2, 668, -511, 2,
	668, 2, 668, 2, -511, -511, -511, -511, -511, -511,
	-511, -435, 8, -588, 667, -588, -588, -588, 568, 568,
	-588, -588, -588, -580, 413, 414, 415, 416, 304, 305,
	306, 307, 417, 418, 419, 420, 332, 333, 334, 335,
	328, 329, 330, 331, 336, 337, 338, 339, 215, 216,
	217, 218, 211, 212, 213, 214, -580, -466, 2, -582,
	-435, 4, 633, 326, 132, 233, 324, 499, 5, -466,
	2, -467, 2, -511, -435, -468, -512, -513, 657, 658,
	650, -382, -469, 2, -511, -436, -511, 62, 295, 574,
	-470, -511, 205, -435, -435, 2, -435, 2, -514, 2,
	-644, 39, -493, -323, -435, -425, 672, 205, 39, -611,
	4, -610, 45, 67, 109, 138, 145, 178, 241, 262,
	272, 298, 400, 472, 473, 501, 532, 547, 579, 623,
	511, -425, -425, 667, 668, 672, -465, 228, 320, 315,
	271, -465, -544, -464, 279, -462, 393, -462, -462, -538,
	-338, 665, 674, -594, -538, -535, -534, 39, -347, 390,
	-538, -538, 669, 668, -537, -536, 39, -347, 666, -659,
	667, 670, 670, 670, 670, 670, -354, 667, -435, -594,
	669, 537, 2, 668, 273, 273, 273, 273, 273, 383,
	484, 668, 572, -667, -363, -369, 504, 557, 208, -429,
	672, -429, -422, 99, -721, 628, -601, -128, 385, 668,
	672, -424, 38, 665, 669, -588, 2, 2, -473, 667,
	205, -667, -369, 557, 504, 208, 2, -671, 552, -423,
	-601, 572, -720, -721, -704, 668, -706, -714, -699, -708,
	243, 392, 261, 612, -595, -564, 4, -606, -323, 2,
	-432, -360, -299, 166, -433, -431, -299, 672, 166, -337,
	-358, -363, -323, -366, -369, -323, -599, -601, -299, -359,
	-723, 668, 576, -498, -384, 438, 527, 461, 505, 552,
	9, 9, 672, -594, -241, 493, 348, -336, -336, -336,
	-336, -354, 198, -603, -154, -248, 387, -247, -323, 5,
	-249, -249, -249, -249, 2, 2, 2, 2, -461, -354,
	-337, -379, -354, -365, 243, 29, -682, 669, -601, -601,
	-369, -370, -368, -323, -363, -461, -337, -461, -337, -461,
	-337, -461, -461, -158, -158, -511, -511, 535, 2, 507,
	198, 198, 669, -461, 669, 8, -415, 471, 5, -354,
	205, 2, 100, -603, 2, 436, 129, 556, 403, 252,
	-354, -379, -354, -379, -337, 129, -337, 130, 129, -354,
	4, 672, -724, 101, 572, 84, 667, 494, -316, 310,
	572, -502, 235, 84, -618, 101, -340, -619, -323, 78,
	592, 426, 202, 164, -724, 101, 426, -724, 101, 2,
	254, 101, 510, 535, 667, 29, 65, -549, 44, 44,
	29, -676, -677, 296, 205, 634, 556, 252, 494, 572,
	572, -549, -459, -564, 127, 321, 322, 65, -589, -589,
	65, -589, -589, -589, 628, -589, 628, -357, -549, 494,
	572, 572, -729, -713, 468, 510, 572, 494, 572, 145,
	383, 372, 501, 138, 272, 298, -533, -533, -323, 572,
	448, 546, 448, 546, 500, -307, -309, -172, 500, 546,
	310, 572, 572, -172, 29, -222, 469, 136, -748, 649,
	448, 296, -677, 572, 205, 672, 44, 44, 29, -676,
	205, 572, 622, -379, -338, 608, 46, 608, 46, 608,
	572, 46, 494, 572, 672, 46, -291, -290, 510, -293,
	-603, -292, 346, -288, -661, -661, -248, -422, 80, 572,
	572, -16, 510, -673, -328, 114, 354, 314, 355, 105,
	351, 104, 350, 112, 352, 113, 353, 616, 368, 617,
	369, 69, 349, 325, 356, 531, 357, 620, 370, -329,
	-330, 157, 405, 606, 129, -599, -16, -16, 510, 398,
	460, 166, -693, 243, 29, 243, -557, 243, -557, -371,
	-323, 669, -511, -158, -511, -158, 50, 166, 39, 463,
	166, 2, 667, 289, 667, -388, 364, 205, -422, -558,
	672, -354, 39, 166, -599, -458, -457, 364, -359, 235,
	2, 166, -744, -412, 364, 160, 667, 436, 2, 166,
	-339, 235, -324, -323, -477, -301, 560, 166, -455, 604,
	-489, -158, 667, 136, 39, -489, -444, -445, -555, -446,
	-340, 667, -347, -508, -129, -560, 668, 668, 668, -262,
	-413, -341, -340, 128, 440, 440, -255, 628, -154, -155,
	668, 672, -557, 243, -155, -603, -249, -249, -557, -557,
	-549, -452, -277, 384, 284, 515, -486, -487, -513, 483,
	484, -487, 483, 484, 8, 9, 8, 9, -281, 519,
	371, -431, 672, -286, 40, 146, 284, -354, -592, 634,
	162, -511, -511, 572, -750, 550, -518, 162, -511, 340,
	372, 583, 183, 593, 150, 376, 205, 667, -512, -512,
	668, -437, -511, -511, 666, 676, 668, 669, 668, -418,
	672, -416, -511, -435, -435, 668, 669, -435, -422, 666,
	666, 672, 668, -529, -530, 155, -511, 572, 572, 572,
	572, 667, 668, 669, -652, 394, 667, 667, -511, 668,
	668, 668, 668, 39, 672, 672, 672, 668, 672, 672,
	672, 668, 668, 668, 672, -588, 668, 668, 668, 634,
	634, 668, 668, 668, 668, 672, 668, 672, 668, 205,
	668, 668, -475, 410, 668, 11, 12, 657, 658, 659,
	660, 196, 661, 662, 655, 656, 654, 647, 648, 649,
	93, 317, 485, 14, 15, 16, -382, 273, 243, -512,
	-512, -512, -512, 668, -516, -517, 205, 198, 39, -470,
	-470, -470, 668, 205, -435, 668, 668, 667, -645, 319,
	364, 668, 672, 668, -505, -504, 626, -554, -426, 2,
	-544, -349, -594, -505, -505, -435, -511, 279, 279, -463,
	604, 383, -465, -544, -535, -590, -510, -509, 200, 40,
	146, 358, 359, 360, 238, 201, -535, -347, -492, -535,
	-535, -594, -538, -347, -490, 667, -538, -534, 668, -660,
	-590, 668, -427, -547, -639, -418, 669, -594, -259, -640,
	-223, 5, 372, -223, -223, -223, -223, -354, -601, 572,
	572, 243, 243, 243, -429, -422, 26, -691, 628, 411,
	-564, 665, 666, 8, -594, -588, -601, 205, 205, 243,
	243, 243, 383, -671, 205, -599, -299, 668, 672, -699,
	-708, -714, -708, 392, 2, -299, -432, -299, -299, -379,
	-380, -299, -299, -299, -456, 628, -591, -497, 590, 89,
	438, 568, -591, 126, 493, -249, 556, 243, -249, 672,
	667, 649, 649, 671, 494, 479, -601, -323, 669, -461,
	-461, -461, 507, 507, -323, -323, 198, -422, -354, 2,
	-350, -594, -337, -354, -351, -379, 198, 198, -337, -337,
	-295, 460, 510, -340, -340, -354, -266, -265, -263, -323,
	5, -364, -323, 219, 449, -599, 364, -502, 235, -300,
	364, 235, -348, -564, 667, -479, 630, 284, 284, 604,
	-340, -348, 284, 235, -340, 235, -348, 2, -348, -674,
	438, 377, -511, -264, -263, 65, -395, 308, 436, 365,
	-296, 460, 510, 398, -158, -158, -158, 667, -723, 604,
	149, -354, -379, -354, -364, -599, -359, 510, 398, 460,
	361, -373, -589, -589, -589, -457, 510, 398, 460, -364,
	-599, -357, -323, -364, -599, 383, 372, 383, 138, 272,
	-599, -306, 235, -323, 448, -306, 235, 448, 448, 448,
	448, 219, 449, 494, -337, 448, 634, 49, -748, 572,
	205, -511, -511, -297, -158, -158, -158, 667, -338, -298,
	-482, 460, 5, 235, -340, 5, -340, 235, 5, -323,
	-340, -364, -599, -727, 25, 154, -340, 672, 288, 269,
	628, -684, 206, 491, 443, -294, 649, -249, -364, -599,
	-328, 405, -685, 372, 5, 10, 600, -337, -672, -344,
	494, 572, 572, -549, -689, -690, 221, 476, 494, 479,
	-154, -252, 628, -154, -246, 247, 659, -664, -603, -603,
	376, -323, -701, -702, -705, -706, -323, -386, -389, -387,
	-340, -503, -502, -622, -623, -618, 302, 257, 258, 592,
	271, 184, 101, -267, -268, 630, 628, 166, -377, -354,
	665, -249, -662, -559, 184, 502, -366, -367, 166, -412,
	364, -599, 614, 39, 166, 667, 2, 2, -358, 383,
	364, -339, 235, -302, 156, -748, -337, -505, -426, -454,
	-495, 471, 383, -413, 609, -347, -454, -428, 672, 205,
	649, 669, -413, -553, 659, -129, -129, -249, 667, -603,
	668, 672, 669, 667, 649, 649, -257, 387, -256, 158,
	286, 270, 521, 522, 523, 524, 148, 520, 133, 345,
	248, 562, 495, 613, -557, -603, -255, -155, -557, 243,
	205, -82, 628, 597, -487, 384, 313, -540, -287, 636,
	-354, 671, -511, -511, 162, 162, -511, -512, -512, -511,
	162, 205, 667, -511, -522, 34, 34, 668, 672, -507,
	-511, -381, 668, 612, -418, -418, 668, 659, -594, 671,
	668, -520, 159, -511, 566, 326, 233, 324, -474, 324,
	-474, -474, -588, 5, -594, 659, -653, -343, 667, -323,
	626, -417, 389, 668, -566, -564, -511, -511, -511, -511,
	-511, -588, 668, -569, -569, -584, -584, -511, -516, -511,
	-566, -564, -512, -512, -512, -512, -512, -512, -512, -512,
	-512, -512, -512, -512, -512, -512, -512, -512, -512, -512,
	-512, -512, 150, 364, 376, -512, -517, -516, -511, -511,
	-564, 668, 668, 668, -435, -128, 667, 319, -323, -448,
	224, -511, -557, 672, -448, -448, 668, -544, -544, 667,
	-511, 279, 666, 672, 675, 649, 649, -492, 669, -534,
	-490, -491, -494, -323, -535, 666, 668, 672, 668, 672,
	-537, 668, -594, -505, -261, -260, 147, 58, 116, 144,
	372, 380, 204, 229, 435, 162, 199, 156, 273, -691,
	-601, -601, 494, 494, 494, 386, 221, 5, 8, 665,
	666, 669, 668, -601, -601, 494, 494, 494, -665, 586,
	494, 29, 205, -601, -706, -708, -708, -299, -299, 128,
	348, -511, -238, 628, 630, -354, -154, -247, -248, -603,
	-603, 659, -364, -365, 659, -461, 5, -401, -400, 403,
	376, -401, 483, 483, 572, 572, 668, 672, 649, 65,
	243, 166, 364, 606, 364, -619, 164, -624, -511, 667,
	252, 667, 667, 2, -283, -284, -285, 154, 510, 25,
	-725, 2, 604, 166, -299, 166, -299, 632, 668, 672,
	-395, 667, 667, 572, 494, -316, 572, 628, -435, -511,
	-250, 136, -593, -678, 671, -678, 671, 494, 572, 572,
	494, 572, 572, 177, 262, 372, 364, -323, 166, -323,
	235, -748, -323, -678, -678, 243, 628, 182, 182, 634,
	-306, -511, -511, 198, 572, 628, -435, 572, -568, 53,
	27, 364, -358, -299, 166, 572, 572, 586, 510, -290,
	-603, -154, -253, 158, 475, 148, 286, 248, 50, 386,
	-685, -154, -685, -603, 372, -16, -364, -599, -359, 510,
	398, 460, -671, -671, 221, -369, -693, -557, -254, 387,
	-253, -557, -252, 205, 269, -323, 628, 668, 672, 136,
	649, 2, 668, 668, 672, 672, -625, -300, -354, 667,
	-323, 252, 257, 258, -346, -324, 39, 380, 380, 667,
	-354, -106, -107, 628, -108, 573, -556, 604, -504, -590,
	-345, -323, -443, 47, -357, 39, 166, -672, -359, -158,
	-359, -562, -563, 5, 39, -354, 166, 383, 364, -303,
	294, -748, -598, -640, -418, -454, -443, 366, 98, 668,
	-505, -445, -426, -511, 2, 668, -603, -249, -262, -341,
	2, -604, -603, -603, 672, 667, 649, 649, 649, 649,
	649, 649, 649, -255, -557, -255, -155, -158, 387, 384,
	192, 290, -286, -338, -511, -511, 162, 34, 34, -511,
	-511, -522, 668, -511, -511, -435, 666, 5, -511, 668,
	668, 8, -511, 668, 669, -654, -323, -511, 668, 65,
	668, 668, 672, 672, 668, 668, 668, 668, 668, 668,
	668, -517, 205, 150, 376, 667, 668, 668, -128, -519,
	227, 65, -544, -519, -519, -463, -422, -544, -509, -338,
	665, -338, 665, -594, 668, 672, -564, -590, -547, 669,
	-260, 649, -603, -603, 2, 2, 5, 5, 435, 364,
	372, 5, -223, -691, -691, 628, -369, -369, -369, 386,
	666, 2, 665, -594, -369, -369, -369, 205, -667, -369,
	557, 208, -601, 128, 198, 232, 232, -249, -249, 668,
	-351, 556, 252, 667, 667, -340, -340, -265, -591, 556,
	483, -306, 426, -502, 166, 166, -626, 101, -628, 82,
	184, 111, 364, 372, 592, 426, 78, 136, 383, 445,
	-738, -739, -740, 39, 639, 640, 668, -420, -541, -639,
	667, -323, -420, -422, 364, 543, 136, 383, 364, 136,
	383, 622, 128, 2, 586, 85, -340, -348, -263, -422,
	-422, -354, -364, -599, 174, 668, 672, 649, 2, 659,
	659, -364, -599, -359, -364, -599, -357, -323, 262, 166,
	609, -306, 166, -306, 609, -306, 401, 182, 572, -158,
	-511, 174, 668, -338, 5, 5, 166, -335, 82, -340,
	5, -340, -358, 128, 649, 649, 649, 649, 649, 31,
	-685, -247, 628, 494, 572, 572, 383, 383, 386, -689,
	-690, -252, 672, 667, -252, -604, -154, 383, 2, 473,
	-705, -511, -511, -402, 254, -340, -623, -620, -621, 426,
	-503, -627, -629, 184, 426, -390, -420, 667, -339, 667,
	-323, 667, -158, 2, -266, 667, -388, -108, 387, 9,
	181, 666, 205, -599, -458, -158, -359, -412, -410, 628,
	-412, 668, 672, 160, -480, 604, -338, -354, 166, -304,
	293, -748, -598, -301, -485, -483, 151, 667, 383, -158,
	-418, 649, 668, 128, 668, -256, -257, -603, -154, -603,
	-603, -603, -154, -603, -255, -557, -83, -84, 252, 257,
	101, 408, -286, -511, -511, -511, 668, -418, -594, 659,
	-648, 403, 668, -540, -511, -511, -512, 205, 667, -522,
	668, -649, 627, -511, -449, -450, -511, 481, 117, 225,
	-649, -649, 668, -590, -590, -494, -603, 2, 2, 372,
	2, 2, 2, 572, 572, 572, 665, 2, 205, 205,
	205, -601, 205, 205, 243, 243, -158, -354, -379, -435,
	-435, 243, 39, 448, -502, -348, -348, -352, -345, 184,
	235, 372, 622, -479, 284, 667, -512, 597, -354, 667,
	2, 234, 234, 31, 65, -741, 141, 256, 668, 672,
	-542, -334, -323, -511, -542, 668, 668, 372, 597, 372,
	622, -511, 597, -564, 667, -299, -299, 668, 668, -511,
	572, -593, 108, -591, 2, -678, -306, -422, -422, -678,
	-337, -511, 198, -511, 572, 5, -299, -352, -299, -299,
	-335, 586, -603, -511, 583, 183, -154, -154, 382, -364,
	-599, -359, -694, 557, 504, 587, 496, 208, 482, -694,
	198, -253, -254, -252, -603, -697, 511, -396, -397, 2,
	-625, 284, -345, 284, 245, 165, 668, -420, 667, -420,
	667, -422, -737, 628, 668, -386, -267, -107, -668, -376,
	-412, 39, 348, 128, 39, 5, 667, 667, -323, 383,
	667, -338, -318, 99, -748, -598, -302, -454, 365, -422,
	101, -485, -518, -249, 667, -249, 668, -255, 672, 29,
	667, 29, 667, 668, -418, 65, 672, 668, 668, -512,
	-522, 668, -650, -651, -343, 672, 667, 667, 512, 666,
	666, 2, -601, -601, -601, 2, -601, -601, -601, -601,
	-601, 494, 494, 668, 668, -306, 426, -323, -619, -628,
	-345, 364, -268, 604, 628, -511, -512, -325, 667, -511,
	667, 667, 39, 136, 256, 142, 240, -501, -742, 110,
	544, 244, -541, -286, 668, -500, 604, 445, -512, -335,
	-420, 667, 667, 667, 649, 205, -158, 667, -568, -299,
	-358, 649, 572, 2, 205, -671, 668, -684, -707, -708,
	-267, 667, -268, -391, 87, 102, 137, 234, 209, 253,
	535, 541, 29, -391, -500, 668, -420, 668, -420, 668,
	-392, 383, 128, 348, 668, 39, -505, 39, -158, 128,
	-158, -562, -420, -354, -420, 383, -308, -307, 303, -598,
	-303, 668, -348, -454, -604, -84, -422, -422, -655, 436,
	484, 226, -435, -419, 668, 672, 39, -450, 2, 2,
	2, -691, -691, -691, -369, -369, 448, -300, 166, 228,
	668, -630, 318, -323, 668, -458, -458, 39, 142, 240,
	-398, -394, 667, -287, -542, -268, 228, -354, -679, 604,
	668, -404, -403, -400, -406, -405, -400, -435, -591, 108,
	401, -435, -335, -154, -601, -601, 383, -686, 206, -709,
	-710, -712, 39, 289, 579, 627, -713, -392, -421, -543,
	-340, -501, -500, 668, -398, 668, 88, 128, -402, -158,
	-158, 2, -410, 668, 668, -480, 668, -354, -305, -605,
	448, 450, -748, -304, -505, 151, 668, 668, 668, 668,
	-656, -657, 55, 589, 118, -511, -656, -656, -651, -653,
	205, 205, 184, -499, 637, -631, -634, -633, 644, 518,
	206, 402, 668, 543, 621, 668, 668, -741, -422, -499,
	-412, -511, -500, 668, 672, 609, 668, 672, 609, 668,
	205, 668, -299, -691, -299, -694, -251, 628, 50, -719,
	-716, 54, 472, -712, -700, 5, -598, -317, -316, 668,
	672, -398, -501, -500, -268, -398, 425, 143, 154, -396,
	-737, -500, 667, -501, 667, -315, -314, -748, -584, -318,
	151, 365, 597, -249, -658, 164, -657, 422, 197, 483,
	422, 197, -658, -658, -601, -601, -345, -268, 60, -633,
	644, -634, 644, 597, 143, -505, 668, -630, -268, -403,
	243, -405, 205, 401, 205, 491, -685, 31, 45, -511,
	-268, -543, -268, -398, -501, -505, -268, 484, 484, 2,
	-267, -392, -501, -420, -398, -420, -311, -312, -313, -422,
	-308, 365, 597, 510, 118, 224, 567, 348, 34, 649,
	-632, 348, 468, 70, 510, -632, -631, 667, 667, -601,
	387, -718, -505, -268, -398, -481, 364, 622, -505, 2,
	-392, -398, 668, -268, 668, -600, 398, -305, 510, -444,
	483, 391, -657, -511, 24, 372, 136, -741, -435, -435,
	-299, -248, 667, -717, 159, -3, -716, -481, -505, -268,
	622, -481, -317, -268, -500, -505, -501, -310, -309, 500,
	-748, -315, -444, -505, 668, 668, -248, 673, -481, -505,
	-505, -501, -481, -398, -599, -311, -505, -393, -394, 572,
	668, -481, -481, -398, -268, -310, 667, -268, -505, -435,
	-505, -481, 668, -481, -393,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 45,
	1778, 1780, 743, 744, 746, 747, 748, 750, 751, 753,
	755, 757, 758, 759, 761, 762, 764, 765, 766, 767,
	768, 770, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 868, 870,
	0, 1760, 1762, 1764, 1766, 0, 0, -2, -2, 0,
	0, -2, -2, -2, 47, 48, 50, 52, 0, -2,
	423, 425, 427, 429, 0, 461, 463, 464, 466, 468,
	469, 471, 473, 475, -2, 0, 664, 665, 667, 669,
	671, 673, -2, 0, 1334, 1336, 1338, 0, 856, 858,
	0, 1341, 1343, 1345, 0, 0, 880, 881, 0, 1881,
	-2, 872, 874, 876, 878, 957, 959, 961, 963, 965,
	967, 969, 971, 973, 975, 977, 978, 980, 982, 984,
	986, 988, 990, 991, 993, 995, 997, 998, 1000, 1001,
	1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021,
	1023, 1025, 1027, 1029, 1031, 1034, 1035, 1036, 1038, -2,
	0, -2, -2, 1774, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 74, 76, 78, 80, 607, 609,
	611, 613, 615, 618, 620, 622, 624, 1939, 675, 677,
	679, 681, 683, 685, 687, 689, 0, 0, -2, 1953,
	0, 0, 0, 1129, 82, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 151, 152, 153, 154, 155, 156,
	157, 158, 95, 96, 97, 99, 100, 101, 102, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 148, 149, 93, 122, 123,
	124, 125, 126, 0, 0, 1912, 1914, 1916, 1918, -2,
	0, 0, 8, 12, 14, 16, 18, 20, 22, 24,
	26, 28, 30, 32, 36, 38, 40, 42, 46, 1779,
	1781, 745, 749, 752, 754, 756, 760, 763, 769, 771,
	773, 728, 729, 732, 2671, 2690, 2691, 2692, 2695, 2696,
	2697, 2698, 2699, 2700, 3237, 3318, 3319, 3320, 3321, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
	2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143,
	3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172,
	3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182,
	3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192,
	3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202,
	3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212,
	3213, 3214, 3215, 3216, 730, 731, 1530, 0, 814, 812,
	2654, 815, 2986, 817, 819, 658, 659, 660, 661, 662,
	663, 0, 849, 3091, 830, 1951, 850, 852, 853, 854,
	855, 809, 807, 0, 854, 849, 2728, 3091, 847, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 1593, 1594, 1595, 1743, 1744,
	3042, 1789, 0, 288, 869, -2, -2, 3201, -2, 911,
	912, -2, -2, 926, 930, 921, 3206, 0, 3045, 3027,
	-2, 933, 1761, 1763, 1765, 1039, 1040, 1041, 2675, 1045,
	1043, 1055, 1056, 1059, 0, 1076, -2, 0, 2724, 3009,
	-2, -2, 1077, 1078, -2, -2, -2, -2, 1057, 1058,
	0, 0, 0, 0, 0, 2089, 2090, 2658, 0, 1033,
	1084, 0, 0, 0, 0, -2, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1200, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1303, 0, 0, 1087, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 0, 1173, 1198, 1199, 1209, 1791, 1783, 1786,
	1784, 1785, 49, 51, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 298, -2,
	-2, -2, -2, 0, 0, 3097, 2787, 2622, 2692, 2625,
	2620, 424, 426, 428, 430, 431, 0, 0, 0, 0,
	0, 0, 0, 462, 465, 467, 470, 472, 474, -2,
	0, 476, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 1400, 1401, 1660, 0, 0, 0,
	-2, 666, 668, 670, 672, 733, 734, 0, 1940, 1940,
	741, 742, -2, -2, 0, 0, 0, 0, 385, 376,
	1335, 1337, 1339, 1340, 0, 0, 0, 0, 0, 857,
	859, 0, 0, 3091, 348, 1342, 1344, 1346, 1347, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 873, 875,
	877, 879, 958, 960, 962, 964, 966, 968, 970, 972,
	974, 976, 979, 981, 983, 985, 987, 989, 992, 994,
	996, 999, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016,
	1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1037, 0,
	1573, 1941, 1791, 1768, 1769, 1770, 1775, 1777, 1771, 1772,
	1773, 55, 57, 59, 61, 63, 65, 67, 69, 71,
	73, 75, 77, 79, 81, 608, 610, 612, 614, 616,
	619, 621, 623, 625, -2, 1910, 1911, 676, 678, 680,
	682, 684, 686, 688, 690, 860, 0, 863, 0, 1089,
	862, -2, 0, 1945, 1945, 1945, 0, 0, 1911, 1909,
	0, 0, 0, 866, 867, 937, 938, 2232, 0, 0,
	0, 0, 0, 0, 0, 0, 2493, 2321, 0, 939,
	-2, 2354, 2356, 3175, 2958, 3201, 2492, -2, 2358, 2359,
	2360, 2361, 2362, 0, 2364, 2365, 2366, 2367, 2368, 2369,
	0, 2371, 0, 2376, 2377, 2378, 0, 3182, 2597, 2685,
	-2, 0, 0, 3189, 2681, 0, 2459, 2394, -2, -2,
	2709, 2688, 2162, 2163, 2164, 2165, 2166, 2167, 2168, -2,
	-2, 3220, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 0, 3163, 3183, 3184, 3190, 3192, 3185,
	3172, 2419, 2803, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2191, 2200, -2, -2,
	-2, -2, -2, -2, -2, 3176, 3177, 3195, 3198, 3205,
	3210, 3211, 3181, 3191, 3219, 3221, 3222, 3223, 3224, 3225,
	3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235,
	3236, 2192, -2, -2, -2, -2, 0, 1928, 3002, 1931,
	2037, 1929, 1913, 1915, 0, 1917, 0, 0, 0, 1922,
	1948, 1946, 0, 1997, 1926, 1927, 2020, 2020, 2052, 0,
	2025, 0, 2052, 1940, 2083, 0, 2031, 3032, 2395, 2396,
	0, 2692, 2686, -2, -2, 3217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 816,
	818, 0, 0, 0, 0, 849, 848, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 3183, 548,
	549, 552, 0, 590, 591, 592, 593, 594, 3183, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	258, 3183, 695, 727, 723, 0, 258, 3183, 698, 726,
	258, 3183, 701, 725, 0, 704, 1658, 258, 3183, 707,
	2650, 258, 3183, 710, 715, 711, 3183, 713, 258, 3183,
	719, 2665, 2663, 720, 0, 722, 278, 274, 275, 276,
	277, 1754, 1755, 1756, 1757, 0, 1788, 1659, 871, 0,
	897, 0, 909, 910, 3171, -2, 0, 3056, 914, 915,
	-2, 917, 1792, 1796, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 904, 905, 924,
	925, 931, 934, 0, 1048, 1044, 1060, 0, 1075, 0,
	1076, 1076, 2639, 2630, 2631, 0, 0, 1076, 1076, 0,
	0, 1079, 1080, 1081, 1082, 1083, 803, 804, 1085, 1086,
	0, 0, 1104, 1105, 1106, 0, 0, 402, -2, -2,
	-2, -2, 1115, 388, 389, 2705, 2706, 2714, 2715, 2716,
	2717, 3218, 3220, 0, 1123, 1126, -2, 0, 0, 0,
	0, 1133, 0, 1138, 1139, 1140, 0, -2, 0, 1147,
	1149, 1333, 1152, 0, 1333, 0, 1154, 0, 1158, 0,
	1161, 1162, 0, 1164, 0, 1166, -2, -2, -2, 1174,
	1175, -2, 1180, -2, 0, 1184, 0, -2, 0, 1187,
	0, 1190, -2, 0, 1200, 1196, 1197, 0, 0, 0,
	0, 1217, 1218, 0, 1222, 0, 1231, 0, 1234, 1235,
	1236, 0, 0, 1241, 1242, 0, 1244, 1245, 1246, 1248,
	1249, 1250, 0, 3130, 3053, 2787, 2866, 3051, 2836, 0,
	1261, -2, 2824, 1271, 1273, 0, -2, 0, 1289, 0,
	1293, 0, 0, 1302, 0, 0, 0, 1088, 0, 1097,
	1098, 1099, 1782, -2, 92, 0, 3183, 2083, 94, 0,
	2644, 2718, 2719, 2720, 2721, 2722, 3238, 3239, 3240, 3241,
	3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251,
	3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261,
	3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271,
	3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281,
	3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291,
	3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301,
	3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311,
	3312, 3313, 3314, 3315, 3316, 3317, 98, 0, 3183, 103,
	0, 3183, 0, -2, 127, 567, 128, 0, 150, 0,
	178, -2, -2, -2, 159, 0, 3183, 0, 2619, -2,
	0, 270, -2, 0, 798, 377, 378, 0, 789, 0,
	900, 2493, 0, 0, 1372, -2, 0, 1586, 1588, 1588,
	0, -2, 0, 0, 0, 1323, 2616, 2621, 1324, 1325,
	2640, 1326, 2626, 0, 432, 433, 434, 435, 436, 437,
	3183, 439, 440, 0, 442, 443, 3183, 445, 446, 0,
	448, 0, 450, 0, 313, 330, 328, 3183, 0, 477,
	479, 3183, 481, 484, 0, 588, 0, 585, 0, 569,
	570, 0, 572, 0, 0, 0, 577, 578, 580, 581,
	582, 583, 584, 0, 629, 627, 2655, 649, 402, 0,
	-2, 3183, 0, 1369, 0, 0, 1638, -2, 0, 1579,
	-2, 0, 1645, 3183, 1641, 0, -2, 0, 1938, 3183,
	1809, 1404, 1405, 1406, 1407, 2097, 655, 0, 1845, 0,
	1847, 0, 1867, 2091, 2020, 0, 0, 2096, 0, -2,
	786, 2674, -2, 736, 0, 737, 0, -2, 0, 402,
	0, 0, 1350, 1352, 1353, 1355, 1356, 1359, 1360, 1361,
	1362, 0, 1364, 2069, 349, 351, 0, 0, 0, 0,
	1349, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	0, 649, 882, 0, 0, 258, 2087, 1767, 0, -2,
	0, 861, 0, 865, 1970, 1896, 1893, 0, 1967, 1968,
	1897, 0, 0, 0, 1904, 0, 1943, 1944, 0, 0,
	0, 1883, 1884, 0, 0, 0, 0, 0, 0, 2498,
	2499, 2500, 2501, 2514, 2502, 2503, 2513, 2511, 2512, 2504,
	2505, 2510, 2524, 2525, 2515, 2516, 2506, 2519, 2517, 2518,
	2520, 2521, 2522, 2523, 0, 0, 2529, 2530, 0, 2507,
	2508, 2509, 2538, 0, 0, 2539, 0, 2541, 0, 2531,
	2526, 2527, 2528, 0, 2300, 2302, 2605, 0, 0, 0,
	2537, 2532, 2533, 2237, 2238, 2239, 2240, 2241, 2275, 2279,
	2280, 0, 0, 2355, 2602, 2601, 2357, 0, 0, 2553,
	0, 2370, -2, 0, 2493, 2548, 0, 0, 2379, 2380,
	2381, 0, 0, 2553, 0, 0, 2596, 2391, 2392, 2229,
	0, 0, 2461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 2177, 0, 2179, 0, 2180, 2181, 0, -2,
	0, 0, 2201, 0, 0, 0, 0, 2205, 0, 0,
	0, 0, 0, 0, 0, 2577, -2, 0, 0, 0,
	0, 2193, 0, 0, 1930, 0, 0, 0, 2001, 2606,
	2610, 2611, 2001, 2001, 0, 0, 2554, 2080, 2080, 0,
	0, 2075, 2075, 2075, 2073, 2052, 0, 2052, 2062, 0,
	2052, 2052, 0, -2, 2025, 0, 0, 2066, 0, 2046,
	774, 776, 778, 780, 781, 782, 784, 2084, 2085, 0,
	0, 0, 0, 2693, 0, 0, 0, 0, 0, 0,
	2677, 0, 0, 2649, 457, 458, 0, 0, 0, 3110,
	3045, 0, -2, -2, -2, -2, 3053, 0, 0, 2787,
	2824, 2836, 821, 851, 0, 1940, 0, 2556, 2112, 2116,
	0, 2118, 2119, 2120, 0, 0, 2113, 2212, 2710, 2711,
	2712, 2172, 2173, 2174, 2175, 2176, 2184, 2171, 2171, 2171,
	2182, -2, 2189, 2211, 2203, 2211, 2207, 2155, 2156, 2157,
	2194, 2195, 2196, 2197, 0, 3110, 3045, 0, -2, 0,
	833, 0, 0, 0, 1878, 340, 341, 546, 0, 256,
	257, 0, 551, 0, 589, 0, 596, 597, 598, 0,
	691, 0, 0, 258, 3183, 696, 0, 699, 0, 258,
	3183, 2614, 705, 0, 708, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 258, 1880, 0, 0, 0, 0,
	-2, 919, 927, 928, 929, 0, 1794, 0, 1801, 948,
	949, 950, 1803, 1804, 0, 1806, 922, 951, 952, 953,
	954, 955, 956, 0, 2628, 2629, 2634, 2635, 0, 0,
	920, 941, 923, 0, 935, 1051, 1046, 1047, 1061, 1062,
	0, 0, 2632, 2633, 0, 0, 1067, 1068, 0, 0,
	1107, 349, 0, 0, 1110, 0, 402, 402, 402, 402,
	1121, 1122, 1124, 1125, -2, -2, -2, -2, 1127, 1128,
	1228, 0, 0, 0, 1227, 1736, 0, 1143, 1146, 1150,
	0, 1306, 3027, 3045, 3110, 1331, 1151, 1228, 2787, 1228,
	2787, 1228, 2787, 1228, 1228, 1168, 1212, 1224, 1179, 1186,
	0, 0, 0, 1181, 1185, 1188, 1191, 0, 1193, 1201,
	0, -2, 0, 1204, 0, 1206, 0, 1208, 1228, 1220,
	1229, 1232, 0, 1240, 1243, 0, 1251, 1252, 1253, 2659,
	1254, 2672, 0, 0, 1257, 1258, 1259, 1260, -2, 0,
	1264, 1265, 0, 0, 1280, 1285, 1286, 1282, 0, 0,
	0, 0, 0, 0, 1296, 1297, 0, 0, 0, 1305,
	0, 1100, 160, 1740, 0, 0, 211, 0, 1740, 1740,
	0, 0, 0, 0, 239, 0, 0, 1438, 0, 0,
	0, 0, 178, 196, 207, 172, 173, 174, 0, 0,
	0, 0, 0, 0, 104, 1552, 0, 1555, 0, 0,
	0, 0, 0, 0, 0, 1568, 1571, 0, 0, 0,
	0, 561, 0, 535, 0, 0, 558, 566, 0, 0,
	522, 523, 524, 525, 0, 0, 530, 0, 0, 0,
	0, 536, 0, 130, 131, 0, 0, 136, 137, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 1842, 0,
	186, 178, 0, 0, 177, 179, 162, 0, 0, 178,
	182, 197, 209, 0, 245, 0, 185, 247, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 280, 0,
	0, 315, 796, 0, 799, 0, 788, 790, 649, 649,
	0, 0, 898, 902, 903, 0, 0, 899, 901, 0,
	0, 1580, 0, 0, 0, 1937, 0, 0, 0, 0,
	3183, 1738, 0, 1721, 0, 2069, 2885, -2, -2, 2069,
	1322, 0, 0, 2693, 2624, 0, 0, 0, 0, 449,
	0, 0, 0, 339, 0, 0, 0, 0, 486, 491,
	0, 579, 568, 571, 573, 574, 575, 617, 1499, 3183,
	0, 0, 653, 644, 0, 648, 0, 652, 0, 0,
	1551, 3183, 1549, 0, 1577, 0, 1637, 1530, 3183, 2657,
	0, 0, 0, 1646, 2702, 1655, 1659, 1830, 0, 657,
	0, 1848, 1850, 0, 0, 2092, 0, 2094, 2020, 1940,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	1363, 358, 0, 2068, 0, 0, 390, 2069, 349, 0,
	1348, 402, 402, 2069, 884, 2069, 886, 1572, 0, 1776,
	1970, 1896, 864, 1887, 1969, 1888, 1895, 1898, 0, 0,
	1900, 0, 1902, 0, 1965, 1966, 1973, 1974, 0, 1984,
	1985, 1977, 0, -2, 0, 0, 1980, 1981, 1906, 0,
	1923, 1924, 1925, 1954, 1957, 1674, 0, 3320, 907, 0,
	2233, 2107, 2234, 2235, 2643, 0, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, -2, -2, -2, -2,
	-2, -2, -2, -2, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, -2, -2, -2, 2276,
	2277, 2278, -2, 2540, 2542, 0, 2605, 0, -2, 0,
	-2, -2, -2, -2, 2297, 0, 2299, 2304, 2306, 2308,
	0, 0, 0, 0, 2604, 2318, 2588, 2589, 0, 0,
	2495, 2496, 2497, 2303, 0, 2322, 2603, 2600, 0, 0,
	2534, 0, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 0, 2552, 1953, 2383,
	0, 0, 0, 0, 2390, 2375, 2550, 0, 2549, 0,
	0, 0, 2560, 0, 2595, 2591, 0, 2641, 2228, 2215,
	2216, 2217, 2218, 2219, 2220, 2230, 0, 2638, 2678, 2684,
	2469, 0, 0, 0, 2420, 2421, 2422, 2423, 2424, 0,
	2426, 2427, 0, 2429, 2430, 0, 2432, 2433, 0, 2435,
	2436, 2437, 2438, 2439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 0, 0, 2441, 0,
	2563, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2443, 0, 2445, 2554, 2574, 0, 0, 2323, 0, 0,
	0, 0, 0, 2448, 2554, 2582, 0, 0, 0, 0,
	0, 2554, 0, 2587, 0, 2455, 0, 2457, 1130, 1131,
	1932, 0, 0, 2038, 0, 2102, 0, 0, 0, 2609,
	2612, 2613, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151,
	3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161,
	3162, 2102, 2102, 0, 1996, 0, 0, 2076, 2077, 2078,
	2079, 0, 0, 2080, 0, 2070, 2074, 2071, 2072, 2062,
	2017, 0, 0, 2645, 2062, 2023, 2061, 0, 2037, 2051,
	2062, 2062, 0, -2, 2027, 2065, 0, 2040, 2052, 0,
	0, 775, 777, 779, 783, 785, 0, 0, 1953, -2,
	0, -2, 404, 1529, 0, 0, 0, 0, 0, 0,
	811, 813, 0, 0, 714, 0, 0, 0, 0, 1312,
	0, 1314, 1315, 0, 1317, 0, 1724, 805, 0, 808,
	0, 2103, 2106, 0, 0, 2117, 2121, 2122, 2213, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 3091, 0,
	844, 0, 550, 258, 0, 554, 555, 0, 0, 503,
	504, 505, 506, 508, 2713, 509, -2, -2, 0, 599,
	258, 724, 693, 0, 258, 258, 702, 0, 0, 258,
	716, 258, 712, 2666, 258, 2664, 279, 721, 1879, 291,
	0, 906, 0, 1793, 1802, 0, 945, 0, 947, 0,
	2636, 2637, 0, 936, 0, 1049, 0, 1063, 1064, 1065,
	1066, 402, 0, 0, 402, 400, 2961, 398, 395, 397,
	1111, 1112, 1113, 1114, 1170, 1214, 1226, 1284, 1132, 1134,
	1135, 1136, 0, 1141, 0, 0, 0, 0, 1332, 1327,
	1328, 1329, 2667, 2663, 1330, 1153, 1228, 1156, 1228, 1159,
	1228, 1163, 1165, 1183, 1357, 1358, 1189, 1202, 1195, 1203,
	0, 0, 0, 1216, 0, 0, 1238, 0, 1247, 1255,
	0, 1263, -2, 1268, 1269, 0, 0, 0, 0, 0,
	0, 0, 1290, 1291, 1292, 1294, 1299, 1298, 0, 1304,
	1101, 0, 0, 0, 0, 1739, 0, 0, 1684, 0,
	0, 215, 3183, 0, 260, 0, 0, 1492, 2651, 0,
	1480, 0, 0, 2811, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 1554, 1556, 1563, 1565, 0, 1559, 1560,
	0, 1562, 1564, 1566, 0, 1569, 0, 0, 0, 0,
	0, 0, 557, 559, 560, 535, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 138, 142, 1589, 3051, 0,
	0, 0, 0, 1590, 1591, 1592, 1818, 1819, 0, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 184, 0, 2618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 316, 0, 800,
	0, 801, 0, 791, 402, 793, 794, 795, 0, 0,
	0, 1582, 0, 1633, 1631, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 0, 0, 0, 0, -2, 1584, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 393, 2617,
	2627, 0, 438, 441, 444, 447, 297, 0, 0, 0,
	0, 483, 493, 0, 1410, 1382, 0, 0, 628, 402,
	649, 651, 0, 2670, 1367, 1547, 1550, 0, 1530, 3183,
	1601, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 3183, 2646, 2701, 2702, 1832, 1842, 0, 2102, 0,
	1865, 1851, 0, 0, 0, 1865, 1869, 1870, 1872, 1873,
	0, 0, 2093, 2099, 735, 787, 1940, 1940, 402, 0,
	0, 1854, 1856, 0, 0, 0, 342, 0, 352, 2069,
	350, 0, 358, 0, 2069, 349, 0, 643, 883, 888,
	2088, 1891, 1892, 1894, 0, 1903, 0, 0, 1979, -2,
	-2, 1978, 1982, 1983, -2, -2, -2, -2, 1899, 0,
	1908, 1905, 0, 1964, 1672, 1673, 0, 0, 908, 0,
	0, -2, -2, 0, 0, 0, 2319, 0, -2, 2298,
	2301, 2305, 2307, 2309, 0, 0, 0, 0, 0, 0,
	2543, 0, 2545, 2320, 2598, 2601, 2536, 0, 2491, 0,
	0, 1952, 1953, 1953, 0, 2389, 0, 2551, 0, 2558,
	2559, 0, 2382, 0, 2592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2393, 0, 0, 0, 0, 2425,
	2428, 2431, 2434, 0, 0, 0, 0, 2414, 0, 0,
	0, 2418, 2183, 2169, 0, 0, 2186, 2190, 2211, 2209,
	2210, 2204, 2211, 2208, 2159, 0, 2158, 0, 2440, 0,
	2442, 2444, 0, 0, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2326,
	2327, 2328, 2348, 2447, 2580, 2581, 0, 0, 0, 0,
	0, 0, 2453, 0, 2586, 2454, 2456, 1940, 0, 1933,
	0, 2036, 0, 1998, 1987, 2101, 0, 2607, 2069, 2000,
	2002, 2608, 2648, 1987, 1987, 0, 2555, 0, 0, 2056,
	0, 0, 0, 2058, 2021, 0, 0, 2015, 0, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2022, 2037, 2060, 2024,
	2028, 2678, 0, 2040, 2064, 0, 2062, 0, 2047, 0,
	2049, 2086, 0, 2033, 2066, 0, 0, 2694, 2102, 0,
	451, 459, 460, 452, 453, 454, 455, 0, 1724, 0,
	0, 0, 0, 0, 1313, 1316, 0, 829, 0, 0,
	2557, 0, 2108, 0, 2114, 0, 831, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 547, 553, 0, 0,
	502, 0, 501, 507, 595, 692, 258, 697, 700, 2615,
	258, 706, 709, 718, 287, 0, 896, -2, 943, 944,
	946, 0, 942, 1054, 1050, 1102, 0, 0, 1109, 0,
	0, 0, 0, 0, 0, 1736, 1733, 1145, 0, 1155,
	1157, 1160, 1205, 1207, 1228, 1219, 0, 1239, 1256, 1267,
	1274, 2647, 1275, 1432, 0, 1432, 0, 0, 1295, 1301,
	212, 1740, 0, 0, 0, 1680, 0, 1393, 0, 1388,
	1389, 1682, 2662, 1686, 1692, 1695, 0, 217, 3183, 229,
	0, 3183, 0, 1454, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 3183, 258, 3183, 258, 233, 235, 238,
	0, 244, 240, 0, 1390, 0, 1442, 0, 0, 1445,
	161, 1740, 0, 0, 164, 168, 180, 0, 0, 0,
	194, 0, 0, 0, 1697, 1701, 1709, 0, 0, 0,
	1557, 1558, 1561, 1567, 1570, 105, 0, 0, 0, 1705,
	1707, 1713, 562, 563, 564, 0, 0, 0, 526, 527,
	129, 132, 3183, 2660, 0, 134, 3183, 0, 143, 1842,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 166, 170, 181, 0, 1715, 163,
	183, 0, 273, 0, 0, 263, 258, 3183, 0, 265,
	0, 266, 267, 281, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 797, 0, 792, 1370, 1371,
	1632, 0, 1575, 1576, 325, 326, 0, 1587, 1581, 0,
	0, 0, 0, 0, 1717, 1718, 0, 0, 0, 1738,
	2069, 293, 0, 2069, 301, 0, 2623, 0, 329, 338,
	0, 480, 0, 492, 494, 496, 0, 0, 0, 1409,
	1510, 1411, 1413, 1414, 1415, 260, 0, 0, 0, 1480,
	2872, 2702, 0, 0, 1377, 0, 0, 0, 634, 630,
	0, 641, 645, 646, 0, 0, -2, 0, 0, 0,
	0, -2, 0, 0, 0, 1648, 1642, 1643, 0, 0,
	0, 0, 3183, 1834, 1842, 0, 1938, 1953, 656, 1843,
	1865, 0, 0, 0, 1853, 1849, 1846, 2102, 0, 0,
	0, 0, 0, 2095, 2098, 738, 739, 379, 0, 402,
	0, 0, 0, 0, 0, 0, 356, 0, 359, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 0,
	0, 0, 374, 375, 358, 391, 344, 2069, 358, 0,
	0, 885, 0, 1901, 0, 1976, 1907, 1958, 1959, 0,
	1674, 0, 2236, 2282, 0, 0, -2, 0, 0, 2286,
	0, 0, 0, -2, 0, 0, 0, 2544, 2546, 0,
	2600, 2535, 2384, 0, 0, 0, 2388, 2372, 2373, 0,
	2494, 2561, 2590, 2594, 0, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 0, 2642, 2679, 2683, 2467, 2468, 2472, 2656,
	0, 0, 0, 2397, 0, 0, 0, 0, 0, 0,
	0, 0, 2185, 2202, 2206, 0, 0, 2562, 2573, 2575,
	2324, 2325, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, -2, -2, -2, 2342, 2343, 2344, -2, -2,
	-2, 2349, 0, 0, 0, 2576, 2578, 2579, 2583, 2584,
	0, 2450, 2451, 2452, 2585, 0, 1940, 1934, 2039, 1995,
	0, 2100, 1999, 0, 1995, 1995, 1947, 2054, 0, 0,
	2082, 0, 2018, 0, 2019, 0, 0, 2059, 0, 2026,
	2063, 0, 2042, 2044, 2029, 2030, 2048, 0, 2032, 0,
	2035, 2384, -2, 403, 405, 407, 0, 410, 411, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 820,
	1724, 1724, 0, 0, 0, 822, 0, 806, 0, 0,
	2110, 0, 2214, 835, 837, 0, 0, 0, 0, 3110,
	3045, 0, 0, 834, 556, 499, 500, 694, 703, 289,
	0, 2067, 0, 0, 0, 402, 402, 399, 0, 394,
	396, 1137, 1735, 1142, 2668, 1215, 1237, 1276, 1431, 0,
	0, 1278, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 259, 0, 1491, 0, 1452, 0, 0,
	1479, 0, 0, 1497, 219, 220, 221, 0, 0, 0,
	0, 231, 0, 0, 227, 0, 237, 243, 242, 0,
	1439, 0, 0, 0, 0, 1685, 0, 0, 0, 191,
	192, 193, 0, 198, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 140,
	0, 0, 0, 145, 146, 0, 0, 1824, 1825, 0,
	1812, 188, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 1671, 283, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 305, 307, 0, 0, 0, 0,
	327, 0, 1574, 1635, 1636, 1583, 1698, 1702, 1710, 0,
	0, 0, 0, 0, 854, 1737, 0, 301, 299, 0,
	302, 301, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 1380, 1498, 0, 0, 1500, 1416, 1420, 0,
	0, 2702, 0, 0, 0, 2653, 0, 1378, 0, 0,
	1499, 626, 632, 0, 635, 0, 638, 0, 640, 0,
	650, 2652, 0, 0, 1551, 0, 0, 1578, 1530, 1604,
	1530, 0, 1647, 1649, 0, 1657, 0, 0, 0, 1836,
	1842, 0, 1829, 1830, 1972, 1844, 1863, -2, 0, 0,
	1953, 1871, 1868, 1874, 1875, 0, 0, 382, 0, 1855,
	1857, 0, 1351, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 358, 346, 2069, 386, 0, 1975,
	1962, 1963, 1960, 1674, 2284, 2288, 0, 0, 0, 2290,
	-2, 0, 2312, -2, -2, 2547, 2599, 2363, 1953, 2385,
	2387, 2374, 2593, 2231, 0, 2474, 2471, 0, 2458, 0,
	2409, 2410, 0, 0, 2413, 2415, 2416, 2417, 2170, 2161,
	2160, 2572, 0, 0, 0, 0, 2449, 1935, 0, 2463,
	0, 0, 2003, 2463, 2463, 2055, 0, 2057, 2016, 2004,
	0, 2013, 0, 2679, 2041, 0, 2045, 2050, 2034, 0,
	408, 0, 412, 413, 414, 415, 417, 0, 0, 0,
	0, 0, 456, 823, 824, 0, 0, 0, 0, 1723,
	2104, 2109, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 290, 0, 1052, 1053, 1103, 1108, 401,
	1430, 0, 0, 0, 0, 213, 214, 1394, 1392, 1689,
	1693, 1690, 0, 216, 0, 0, 1453, 0, 1456, 0,
	0, 0, 0, 1463, 1480, 0, 0, 0, 0, 0,
	0, 1482, 0, 1481, 0, 0, 1514, 0, 1662, 1669,
	0, -2, 0, 0, 0, 223, 249, 0, 0, 0,
	0, 252, 1741, 225, 0, 0, 258, 258, 1391, 0,
	0, 1681, 1683, 1696, 0, 0, 0, 0, 201, 0,
	0, 1699, 1703, 1711, 1706, 1708, 1714, 565, 521, 0,
	0, 135, 144, 1815, 0, 0, 0, 1826, 0, 187,
	0, 0, 0, 1716, 271, 272, 0, 258, 0, 258,
	264, 258, 1671, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 1719,
	1720, 292, 0, 0, 294, 392, 301, 0, 482, 490,
	495, 497, 498, 1441, 0, 1510, 1502, 1503, 1504, 0,
	1412, 1509, 1511, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 1397, 1379, 0, 1410, 1382, 636, 0, 637,
	639, 631, 0, 1368, 1548, 1596, 1530, 0, 1599, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1838,
	1842, 0, 1831, 1832, 1865, 1971, 0, 0, 0, 1852,
	1972, 0, 402, 0, 402, 360, 0, 361, 362, 363,
	370, 371, 372, 373, 345, 358, 887, 889, 0, 0,
	0, 895, 1961, 2292, -2, -2, 2313, 0, 2680, 2682,
	1953, 0, 2460, 1955, 0, 0, -2, 0, 0, 0,
	1936, 1919, 0, 1994, 1986, 1988, 1990, 3030, 2782, 3182,
	1920, 1921, 2081, 0, 0, 2043, 409, 418, 419, 0,
	421, 422, 825, 0, 0, 0, 0, 2111, 0, 0,
	0, 832, 0, 0, 0, 0, 1042, 1277, 1279, 0,
	0, 0, 0, 1691, 218, 0, 0, 1457, 1458, 1460,
	0, 1462, 1464, 1465, 1382, 0, 1469, 0, 2704, 0,
	1474, 1477, 1478, 0, 0, 1493, 1515, 0, 1524, 0,
	1664, 1674, 1668, 0, 1666, 1526, 0, 222, 251, 224,
	253, 248, 0, 1671, 0, 226, 236, 0, 0, 165,
	0, 0, 2775, 204, 202, 200, 133, 139, 141, 147,
	1678, 190, 0, 167, 0, 273, 282, 1670, 284, 268,
	258, 0, 304, 306, 308, 309, 310, 311, 0, 1700,
	1704, 1712, 0, 1727, 1728, 1729, 1730, 1731, 0, 0,
	0, 303, 0, 0, 478, 0, 489, 1382, 1440, 1381,
	1501, 0, 1512, 1382, 0, 0, 1526, 0, 0, 0,
	0, 0, 1384, 0, 1383, 0, 0, 633, 2102, 647,
	0, 0, 0, 1603, 0, 1650, 1648, 0, 1656, 0,
	0, 0, 1811, 0, 0, 1833, 1834, 654, 1858, 0,
	0, 1865, 1876, 381, 0, 384, 357, 347, 0, 891,
	0, 893, 0, 2386, 2478, 0, 0, 2411, 2412, -2,
	0, 2352, 2462, 2464, 0, 0, 0, 0, 0, 2005,
	2014, 420, 1724, 1724, 1724, 2105, 839, 840, 842, 836,
	838, 0, 0, 1287, 1288, 1687, 0, 1694, 260, 1455,
	1459, 0, 1466, 0, 0, 0, 1470, 1534, 0, 0,
	1551, 1551, 1483, 0, 0, 1518, 1519, 1437, 0, 1520,
	1521, 1522, 1663, 1964, 1669, 1382, 0, 0, 250, 255,
	0, 0, 0, 0, 0, 0, 189, 0, 262, 285,
	1671, 0, 0, 1732, 0, 0, 300, 334, 512, 510,
	1384, 0, 1513, 1418, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1419, 1524, 1526, 0, 1437, 0, 1490,
	1395, 0, 1398, 0, 1380, 0, 642, 0, 1597, 0,
	1604, 0, 0, 1657, 0, 0, 1821, 1810, 1842, 1835,
	1836, 2102, 0, 1866, 0, 890, 0, 0, 0, 0,
	0, 0, 2473, 1956, 2353, 0, 0, 1989, 1991, 1992,
	1993, 826, 827, 828, 0, 0, 1688, 230, 0, 1528,
	1468, 1539, 0, 0, 0, 0, 0, 1484, 1516, 1517,
	1514, 1436, 0, 1667, 1665, 1495, 1528, 1530, 228, 0,
	1526, 0, 1446, 0, 0, 1449, 0, 0, 205, 2775,
	203, 0, 258, 802, 1724, 258, 0, 337, 0, 545,
	511, 513, 0, 0, 517, 518, 519, 1376, 0, 1506,
	1508, 1437, 1524, 1526, 1382, 1437, 0, 1399, 1441, 1397,
	1598, 1602, 1600, 1640, 1526, 0, 1524, 0, 1828, 1842,
	1822, 1823, 0, 1838, 0, 0, 402, 892, 894, 2470,
	2490, 2479, -2, 3113, 2783, 0, 2490, 2490, 2465, 2466,
	0, 0, 0, 1382, 0, 1471, 1535, 1536, 0, 1531,
	1532, 1533, 2703, 1472, 1473, 1475, 1476, 2102, 0, 1525,
	1534, 254, 1382, 1443, 0, 0, 1444, 0, 0, 208,
	0, 210, 286, 1722, 1725, 0, 312, 0, 0, 485,
	543, 0, 0, 514, 515, 537, 516, 1373, 1375, 1382,
	0, 1382, 1437, 1524, 2102, 1382, 0, 0, 0, 1382,
	1384, 1524, 0, 1437, 0, 1817, 1827, 0, 1837, 1811,
	0, 1861, 0, 383, 2475, 0, 0, 2481, 2482, 2483,
	2484, 2485, 2476, 2477, 841, 843, 1461, 1467, 0, 1537,
	0, 1538, 0, 0, 0, 1494, 1523, 1539, 234, 1447,
	0, 1450, 0, 206, 0, 0, 332, 333, 542, 538,
	1505, 1507, 2102, 1382, 1437, 1677, 2102, 1385, 0, 1387,
	1384, 1396, 1437, 0, 1382, 0, 1840, 1816, 1820, 2661,
	1821, 1859, 0, 0, 0, 2487, 2488, 0, 0, 0,
	1540, 0, 1543, 1544, 0, 1541, 1514, 0, 0, 258,
	0, 1940, 1677, 2102, 1382, 1488, 0, 1676, 1677, 1386,
	1376, 1382, 1526, 2102, 1524, 1814, 1842, 1828, 0, 2102,
	2486, 2489, 2480, 1527, 1542, 1545, 1546, 1496, 0, 0,
	1726, 335, 0, 0, 544, 539, 540, 1485, 1677, 2102,
	1675, 1489, 1374, 2102, 1524, 1677, 1437, 1807, 1813, 0,
	0, 1817, 2102, 1862, 1434, 0, 0, 541, 1486, 1677,
	1677, 1437, 1653, 1382, 1839, 1814, 1860, 1448, 1433, 0,
	336, 1487, 1651, 1382, 2102, 1808, 0, 2102, 1677, 0,
	1677, 1654, 1434, 1652, 1451,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 655, 3, 661, 656, 3,
	667, 668, 659, 657, 672, 658, 669, 660, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 676, 673,
	647, 649, 648, 652, 671, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 665, 3, 666, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 674, 654, 675, 650,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 646, 57989, 651,
	57990, 653, 57991, 663, 57992, 664, 57993, 670, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1730
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1731
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2170
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2203
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2232
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2268
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2279
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = true
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = false
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2394
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2411
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2438
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2449
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2459
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2469
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2478
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2495
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2617
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2661
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = true
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = false
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = nil
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3743
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = nil
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3867
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.CreateTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				Name:                        tree.Name(sqlDollar[3].str),
				ReplicationSourceTenantName: tree.Name(sqlDollar[7].str),
				ReplicationSourceAddress:    sqlDollar[9].union.expr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4207
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Params:      sqlDollar[6].union.functionParams(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = true
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = false
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = true
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = false
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.functionParams()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionParamClass(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionParamIn
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			return unimplemented(sqllex, "create window function")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Params:   sqlDollar[2].union.functionParams(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = sqlDollar[2].union.functionParams()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4546
		{
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = true
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = false
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplemented(sqllex, "create access method")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplemented(sqllex, "create cast")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "create publication")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "create rule")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "create server")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4620
		{
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return unimplemented(sqllex, "drop server")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.str = ""
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = nil
		}
	case 654:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "DROP")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[3].str),
				IfExists: false,
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[5].str),
				IfExists: true,
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "DELETE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "INSERT")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "DELETE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "INSERT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5445
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5478
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5570
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "GRANT")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "RESET")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "RESET")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			return helpWith(sqllex, "USE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{
			return helpWith(sqllex, "USE")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5994
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6002
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6040
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6046
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			return unimplemented(sqllex, "set from current")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.Low
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.Normal
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.High
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = true
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = false
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = true
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = false
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = false
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = int64(1)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = int64(1)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = int64(1)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6561
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6579
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.str = "client_encoding"
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6623
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.str = "timezone"
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6664
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6685
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6765
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6824
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6838
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6954
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7050
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = true
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = true
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7105
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7148
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7156
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7207
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7211
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7226
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7300
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7305
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = true
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7352
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7362
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7373
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7445
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7450
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7465
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7503
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7520
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7536
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7565
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7573
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7594
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7599
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7617
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7640
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7728
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7741
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8253
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8268
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8296
		{

			sqlVAL.union.val = nil
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = nil
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8375
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8388
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8402
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.str = ""
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8641
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8748
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{

			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8810
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8935
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8973
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9056
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9228
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9237
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.str = ""
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{

			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9442
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9456
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9468
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9480
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9491
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9502
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = true
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = nil
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9677
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9679
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9685
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9720
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9738
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9757
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9774
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9795
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = false
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = true
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = false
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = true
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = false
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9861
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.str = ""
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.str = ""
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = true
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = false
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = false
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9936
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9942
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10173
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10185
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10191
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10205
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10211
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = true
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = false
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.str = ""
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10370
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10374
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10485
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10530
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10554
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10573
		{
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10601
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10616
		{
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.str = ""
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{

		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10784
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.str = ""
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.str = ""
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.str = ""
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.str = ""
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10839
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10865
		{
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10916
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11110
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11304
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11411
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11427
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = true
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = false
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11481
		{
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = nil
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11495
		{
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = true
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = false
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = false
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = true
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11525
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11529
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11587
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11646
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11772
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11774
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11789
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11811
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11889
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11931
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11987
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12017
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = nil
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = true
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = false
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.str = tree.AstFull
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.str = tree.AstRight
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.str = tree.AstInner
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12232
		{
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.str = tree.AstHash
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.str = ""
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12336
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12348
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12358
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = true
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = false
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = true
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = false
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12420
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12428
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12429
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12447
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12457
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12477
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12526
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12536
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12537
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = types.Geography
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12586
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12594
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12622
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12630
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = nil
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = types.Int2
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = types.Int
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.Float4
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = types.Float
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12673
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12681
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12689
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = types.Bool
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.Float
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12722
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12728
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12750
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = types.String
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = true
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = false
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = types.Date
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12799
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12807
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12821
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12838
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = true
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = false
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = false
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = types.Interval
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12879
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = nil
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13008
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13068
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.TSMatches), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13221
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13229
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13351
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13428
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13450
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13558
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13566
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13584
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13588
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13654
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13658
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13662
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13667
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13685
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13689
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13693
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13702
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13713
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13717
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13727
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13736
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13740
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13744
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13751
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13762
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13763
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13778
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13787
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13840
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13853
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13932
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13952
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13956
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13964
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14024
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14039
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14044
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14053
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14054
		{
			return unimplemented(sqllex, "treat")
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14075
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14080
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14086
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14090
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14096
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14100
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14107
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14111
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14127
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14135
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14139
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14143
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14150
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14170
		{
			sqlVAL.str = ""
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14176
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14194
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14202
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14216
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14229
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14257
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14276
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14297
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14302
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14326
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14338
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14346
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14362
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14363
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14364
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14366
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14367
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14368
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14370
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14376
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14377
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14380
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14383
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14384
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14387
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14392
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14394
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.TSMatches)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14396
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14397
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14398
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14403
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14419
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14426
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14427
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14429
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14456
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14470
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14481
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14485
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14491
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14495
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14502
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14508
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14518
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14528
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14532
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14538
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14548
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14575
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14579
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14583
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14589
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14596
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14600
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14617
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14621
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14625
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14629
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14633
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14639
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14645
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14651
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14655
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14659
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14665
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14677
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14684
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14694
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14704
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14711
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14717
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14728
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14734
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14743
		{
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14744
		{
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14748
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14758
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14767
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14771
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14775
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14787
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14797
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14820
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14828
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14851
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14860
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14864
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14868
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14872
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14878
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14897
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14901
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14913
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14917
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14926
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14937
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14946
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14954
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14971
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15056
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15064
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15068
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15074
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15084
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15090
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15097
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15124
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15131
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15135
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15139
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15153
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15157
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15161
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15179
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15187
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15205
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15225
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15250
		{
			sqlVAL.str = ""
		}
	case 2703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15256
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15260
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
