// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:877
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13653

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1590,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 412,
	-2, 0,
	-1, 74,
	242, 244,
	517, 244,
	-2, 0,
	-1, 88,
	231, 1326,
	244, 1326,
	260, 408,
	391, 408,
	402, 1085,
	441, 408,
	454, 1085,
	501, 1085,
	528, 408,
	554, 1085,
	-2, 0,
	-1, 94,
	133, 1590,
	237, 1590,
	539, 1590,
	540, 1590,
	-2, 0,
	-1, 112,
	151, 1561,
	170, 1561,
	183, 1561,
	240, 1561,
	273, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 1532,
	-1, 153,
	159, 925,
	259, 925,
	394, 886,
	459, 886,
	500, 886,
	520, 925,
	522, 886,
	-2, 0,
	-1, 157,
	4, 1592,
	21, 1592,
	22, 1592,
	23, 1592,
	24, 1592,
	25, 1592,
	26, 1592,
	27, 1592,
	29, 1592,
	30, 1592,
	36, 1592,
	41, 1592,
	42, 1592,
	44, 1592,
	45, 1592,
	46, 1592,
	47, 1592,
	48, 1592,
	49, 1592,
	50, 1592,
	51, 1592,
	53, 1592,
	54, 1592,
	55, 1592,
	56, 1592,
	58, 1592,
	59, 1592,
	60, 1592,
	61, 1592,
	62, 1592,
	63, 1592,
	64, 1592,
	68, 1592,
	69, 1592,
	70, 1592,
	71, 1592,
	73, 1592,
	74, 1592,
	75, 1592,
	79, 1592,
	80, 1592,
	81, 1592,
	82, 1592,
	83, 1592,
	84, 1592,
	85, 1592,
	88, 1592,
	89, 1592,
	90, 1592,
	91, 1592,
	92, 1592,
	94, 1592,
	96, 1592,
	97, 1592,
	98, 1592,
	99, 1592,
	100, 1592,
	101, 1592,
	103, 1592,
	104, 1592,
	105, 1592,
	107, 1592,
	108, 1592,
	109, 1592,
	117, 1592,
	118, 1592,
	119, 1592,
	120, 1592,
	121, 1592,
	123, 1592,
	124, 1592,
	125, 1592,
	126, 1592,
	128, 1592,
	129, 1592,
	130, 1592,
	132, 1592,
	133, 1592,
	134, 1592,
	136, 1592,
	137, 1592,
	138, 1592,
	141, 1592,
	142, 1592,
	143, 1592,
	145, 1592,
	146, 1592,
	148, 1592,
	149, 1592,
	150, 1592,
	152, 1592,
	153, 1592,
	154, 1592,
	155, 1592,
	156, 1592,
	157, 1592,
	158, 1592,
	159, 1592,
	160, 1592,
	161, 1592,
	162, 1592,
	163, 1592,
	164, 1592,
	165, 1592,
	166, 1592,
	167, 1592,
	169, 1592,
	175, 1592,
	176, 1592,
	177, 1592,
	178, 1592,
	182, 1592,
	184, 1592,
	185, 1592,
	186, 1592,
	190, 1592,
	191, 1592,
	192, 1592,
	193, 1592,
	194, 1592,
	195, 1592,
	196, 1592,
	197, 1592,
	198, 1592,
	199, 1592,
	200, 1592,
	201, 1592,
	202, 1592,
	203, 1592,
	205, 1592,
	206, 1592,
	208, 1592,
	209, 1592,
	211, 1592,
	212, 1592,
	213, 1592,
	214, 1592,
	215, 1592,
	216, 1592,
	217, 1592,
	218, 1592,
	219, 1592,
	221, 1592,
	222, 1592,
	224, 1592,
	225, 1592,
	226, 1592,
	227, 1592,
	231, 1592,
	232, 1592,
	233, 1592,
	234, 1592,
	237, 1592,
	238, 1592,
	239, 1592,
	241, 1592,
	243, 1592,
	244, 1592,
	246, 1592,
	248, 1592,
	249, 1592,
	250, 1592,
	252, 1592,
	256, 1592,
	257, 1592,
	258, 1592,
	259, 1592,
	260, 1592,
	261, 1592,
	263, 1592,
	264, 1592,
	265, 1592,
	267, 1592,
	268, 1592,
	270, 1592,
	271, 1592,
	274, 1592,
	275, 1592,
	276, 1592,
	277, 1592,
	278, 1592,
	279, 1592,
	280, 1592,
	283, 1592,
	284, 1592,
	285, 1592,
	286, 1592,
	288, 1592,
	289, 1592,
	290, 1592,
	291, 1592,
	292, 1592,
	293, 1592,
	294, 1592,
	295, 1592,
	296, 1592,
	297, 1592,
	298, 1592,
	299, 1592,
	300, 1592,
	301, 1592,
	302, 1592,
	303, 1592,
	304, 1592,
	305, 1592,
	306, 1592,
	307, 1592,
	308, 1592,
	309, 1592,
	311, 1592,
	313, 1592,
	314, 1592,
	315, 1592,
	316, 1592,
	317, 1592,
	318, 1592,
	319, 1592,
	320, 1592,
	321, 1592,
	322, 1592,
	323, 1592,
	324, 1592,
	325, 1592,
	326, 1592,
	327, 1592,
	329, 1592,
	330, 1592,
	332, 1592,
	334, 1592,
	335, 1592,
	337, 1592,
	338, 1592,
	339, 1592,
	340, 1592,
	341, 1592,
	344, 1592,
	347, 1592,
	348, 1592,
	349, 1592,
	350, 1592,
	353, 1592,
	354, 1592,
	355, 1592,
	357, 1592,
	359, 1592,
	360, 1592,
	361, 1592,
	362, 1592,
	363, 1592,
	364, 1592,
	365, 1592,
	366, 1592,
	367, 1592,
	368, 1592,
	369, 1592,
	370, 1592,
	371, 1592,
	373, 1592,
	374, 1592,
	375, 1592,
	376, 1592,
	377, 1592,
	378, 1592,
	379, 1592,
	380, 1592,
	381, 1592,
	382, 1592,
	383, 1592,
	384, 1592,
	385, 1592,
	386, 1592,
	387, 1592,
	389, 1592,
	390, 1592,
	392, 1592,
	393, 1592,
	394, 1592,
	395, 1592,
	396, 1592,
	397, 1592,
	398, 1592,
	399, 1592,
	400, 1592,
	401, 1592,
	402, 1592,
	403, 1592,
	404, 1592,
	406, 1592,
	408, 1592,
	409, 1592,
	410, 1592,
	416, 1592,
	418, 1592,
	419, 1592,
	420, 1592,
	421, 1592,
	422, 1592,
	423, 1592,
	424, 1592,
	425, 1592,
	426, 1592,
	427, 1592,
	429, 1592,
	430, 1592,
	431, 1592,
	433, 1592,
	434, 1592,
	435, 1592,
	436, 1592,
	437, 1592,
	438, 1592,
	439, 1592,
	441, 1592,
	442, 1592,
	443, 1592,
	444, 1592,
	445, 1592,
	446, 1592,
	447, 1592,
	448, 1592,
	449, 1592,
	450, 1592,
	451, 1592,
	452, 1592,
	454, 1592,
	455, 1592,
	456, 1592,
	457, 1592,
	458, 1592,
	459, 1592,
	461, 1592,
	462, 1592,
	463, 1592,
	464, 1592,
	465, 1592,
	466, 1592,
	468, 1592,
	469, 1592,
	470, 1592,
	471, 1592,
	472, 1592,
	473, 1592,
	474, 1592,
	475, 1592,
	477, 1592,
	479, 1592,
	480, 1592,
	481, 1592,
	482, 1592,
	483, 1592,
	484, 1592,
	485, 1592,
	486, 1592,
	487, 1592,
	488, 1592,
	489, 1592,
	490, 1592,
	491, 1592,
	492, 1592,
	493, 1592,
	494, 1592,
	496, 1592,
	497, 1592,
	499, 1592,
	500, 1592,
	502, 1592,
	503, 1592,
	504, 1592,
	505, 1592,
	506, 1592,
	507, 1592,
	508, 1592,
	509, 1592,
	510, 1592,
	512, 1592,
	513, 1592,
	514, 1592,
	515, 1592,
	516, 1592,
	518, 1592,
	520, 1592,
	521, 1592,
	522, 1592,
	523, 1592,
	524, 1592,
	525, 1592,
	527, 1592,
	528, 1592,
	529, 1592,
	530, 1592,
	532, 1592,
	533, 1592,
	536, 1592,
	537, 1592,
	538, 1592,
	539, 1592,
	540, 1592,
	541, 1592,
	542, 1592,
	544, 1592,
	547, 1592,
	548, 1592,
	549, 1592,
	550, 1592,
	551, 1592,
	552, 1592,
	554, 1592,
	555, 1592,
	556, 1592,
	557, 1592,
	558, 1592,
	559, 1592,
	564, 1592,
	565, 1592,
	566, 1592,
	567, 1592,
	568, 1592,
	569, 1592,
	-2, 0,
	-1, 158,
	1, 1443,
	131, 1443,
	248, 1443,
	331, 1443,
	389, 1443,
	398, 1443,
	573, 1443,
	602, 1443,
	-2, 0,
	-1, 160,
	1, 1443,
	602, 1443,
	-2, 0,
	-1, 161,
	1, 1443,
	602, 1443,
	-2, 0,
	-1, 162,
	1, 1443,
	517, 1443,
	602, 1443,
	-2, 0,
	-1, 191,
	151, 1560,
	170, 1560,
	183, 1560,
	240, 1560,
	273, 1560,
	342, 1560,
	352, 1560,
	534, 1560,
	-2, 1535,
	-1, 239,
	4, 1599,
	5, 1599,
	6, 1599,
	7, 1599,
	8, 1599,
	9, 1599,
	10, 1599,
	21, 1599,
	22, 1599,
	23, 1599,
	24, 1599,
	25, 1599,
	26, 1599,
	27, 1599,
	29, 1599,
	30, 1599,
	36, 1599,
	37, 1599,
	41, 1599,
	42, 1599,
	43, 1599,
	44, 1599,
	45, 1599,
	46, 1599,
	47, 1599,
	48, 1599,
	49, 1599,
	50, 1599,
	51, 1599,
	53, 1599,
	54, 1599,
	55, 1599,
	56, 1599,
	58, 1599,
	59, 1599,
	60, 1599,
	61, 1599,
	62, 1599,
	63, 1599,
	64, 1599,
	65, 1599,
	66, 1599,
	67, 1599,
	68, 1599,
	69, 1599,
	70, 1599,
	71, 1599,
	73, 1599,
	74, 1599,
	75, 1599,
	77, 1599,
	79, 1599,
	80, 1599,
	81, 1599,
	82, 1599,
	83, 1599,
	84, 1599,
	85, 1599,
	88, 1599,
	89, 1599,
	90, 1599,
	91, 1599,
	92, 1599,
	94, 1599,
	96, 1599,
	97, 1599,
	98, 1599,
	99, 1599,
	100, 1599,
	101, 1599,
	103, 1599,
	104, 1599,
	105, 1599,
	106, 1599,
	107, 1599,
	108, 1599,
	109, 1599,
	110, 1599,
	111, 1599,
	112, 1599,
	113, 1599,
	114, 1599,
	115, 1599,
	116, 1599,
	117, 1599,
	118, 1599,
	119, 1599,
	120, 1599,
	121, 1599,
	122, 1599,
	123, 1599,
	124, 1599,
	125, 1599,
	126, 1599,
	127, 1599,
	128, 1599,
	129, 1599,
	130, 1599,
	132, 1599,
	133, 1599,
	134, 1599,
	136, 1599,
	137, 1599,
	138, 1599,
	141, 1599,
	142, 1599,
	143, 1599,
	145, 1599,
	146, 1599,
	148, 1599,
	149, 1599,
	150, 1599,
	152, 1599,
	153, 1599,
	154, 1599,
	155, 1599,
	156, 1599,
	157, 1599,
	158, 1599,
	159, 1599,
	160, 1599,
	161, 1599,
	162, 1599,
	163, 1599,
	164, 1599,
	165, 1599,
	166, 1599,
	167, 1599,
	168, 1599,
	169, 1599,
	175, 1599,
	176, 1599,
	177, 1599,
	178, 1599,
	182, 1599,
	184, 1599,
	185, 1599,
	186, 1599,
	189, 1599,
	190, 1599,
	191, 1599,
	192, 1599,
	193, 1599,
	194, 1599,
	195, 1599,
	196, 1599,
	197, 1599,
	198, 1599,
	199, 1599,
	200, 1599,
	201, 1599,
	202, 1599,
	203, 1599,
	205, 1599,
	206, 1599,
	208, 1599,
	209, 1599,
	211, 1599,
	212, 1599,
	213, 1599,
	214, 1599,
	215, 1599,
	216, 1599,
	217, 1599,
	218, 1599,
	219, 1599,
	220, 1599,
	221, 1599,
	222, 1599,
	224, 1599,
	225, 1599,
	226, 1599,
	227, 1599,
	231, 1599,
	232, 1599,
	233, 1599,
	234, 1599,
	236, 1599,
	237, 1599,
	238, 1599,
	239, 1599,
	241, 1599,
	243, 1599,
	244, 1599,
	245, 1599,
	246, 1599,
	247, 1599,
	248, 1599,
	249, 1599,
	250, 1599,
	251, 1599,
	252, 1599,
	256, 1599,
	257, 1599,
	258, 1599,
	259, 1599,
	260, 1599,
	261, 1599,
	263, 1599,
	264, 1599,
	265, 1599,
	267, 1599,
	268, 1599,
	269, 1599,
	270, 1599,
	271, 1599,
	272, 1599,
	274, 1599,
	275, 1599,
	276, 1599,
	277, 1599,
	278, 1599,
	279, 1599,
	280, 1599,
	281, 1599,
	282, 1599,
	283, 1599,
	284, 1599,
	285, 1599,
	286, 1599,
	288, 1599,
	289, 1599,
	290, 1599,
	291, 1599,
	292, 1599,
	293, 1599,
	294, 1599,
	295, 1599,
	296, 1599,
	297, 1599,
	298, 1599,
	299, 1599,
	300, 1599,
	301, 1599,
	302, 1599,
	303, 1599,
	304, 1599,
	305, 1599,
	306, 1599,
	307, 1599,
	308, 1599,
	309, 1599,
	311, 1599,
	312, 1599,
	313, 1599,
	314, 1599,
	315, 1599,
	316, 1599,
	317, 1599,
	318, 1599,
	319, 1599,
	320, 1599,
	321, 1599,
	322, 1599,
	323, 1599,
	324, 1599,
	325, 1599,
	326, 1599,
	327, 1599,
	328, 1599,
	329, 1599,
	330, 1599,
	331, 1599,
	332, 1599,
	333, 1599,
	334, 1599,
	335, 1599,
	336, 1599,
	337, 1599,
	338, 1599,
	339, 1599,
	340, 1599,
	341, 1599,
	344, 1599,
	348, 1599,
	349, 1599,
	350, 1599,
	353, 1599,
	354, 1599,
	355, 1599,
	356, 1599,
	357, 1599,
	358, 1599,
	359, 1599,
	360, 1599,
	361, 1599,
	362, 1599,
	363, 1599,
	364, 1599,
	365, 1599,
	366, 1599,
	367, 1599,
	368, 1599,
	369, 1599,
	370, 1599,
	371, 1599,
	373, 1599,
	374, 1599,
	375, 1599,
	376, 1599,
	377, 1599,
	378, 1599,
	379, 1599,
	380, 1599,
	381, 1599,
	382, 1599,
	383, 1599,
	384, 1599,
	385, 1599,
	386, 1599,
	387, 1599,
	389, 1599,
	390, 1599,
	392, 1599,
	393, 1599,
	394, 1599,
	395, 1599,
	396, 1599,
	397, 1599,
	398, 1599,
	399, 1599,
	400, 1599,
	401, 1599,
	402, 1599,
	403, 1599,
	404, 1599,
	406, 1599,
	408, 1599,
	409, 1599,
	410, 1599,
	416, 1599,
	418, 1599,
	419, 1599,
	420, 1599,
	421, 1599,
	422, 1599,
	423, 1599,
	424, 1599,
	425, 1599,
	426, 1599,
	427, 1599,
	429, 1599,
	430, 1599,
	431, 1599,
	432, 1599,
	433, 1599,
	434, 1599,
	435, 1599,
	436, 1599,
	437, 1599,
	438, 1599,
	439, 1599,
	441, 1599,
	442, 1599,
	443, 1599,
	444, 1599,
	445, 1599,
	446, 1599,
	447, 1599,
	448, 1599,
	449, 1599,
	450, 1599,
	451, 1599,
	452, 1599,
	454, 1599,
	455, 1599,
	456, 1599,
	457, 1599,
	458, 1599,
	459, 1599,
	460, 1599,
	461, 1599,
	462, 1599,
	463, 1599,
	464, 1599,
	465, 1599,
	466, 1599,
	467, 1599,
	468, 1599,
	469, 1599,
	470, 1599,
	471, 1599,
	472, 1599,
	473, 1599,
	474, 1599,
	475, 1599,
	477, 1599,
	479, 1599,
	480, 1599,
	481, 1599,
	482, 1599,
	483, 1599,
	484, 1599,
	485, 1599,
	486, 1599,
	487, 1599,
	488, 1599,
	489, 1599,
	490, 1599,
	491, 1599,
	492, 1599,
	493, 1599,
	494, 1599,
	496, 1599,
	497, 1599,
	498, 1599,
	499, 1599,
	500, 1599,
	502, 1599,
	503, 1599,
	504, 1599,
	505, 1599,
	506, 1599,
	507, 1599,
	508, 1599,
	509, 1599,
	510, 1599,
	512, 1599,
	513, 1599,
	514, 1599,
	515, 1599,
	516, 1599,
	518, 1599,
	520, 1599,
	521, 1599,
	522, 1599,
	523, 1599,
	524, 1599,
	525, 1599,
	526, 1599,
	527, 1599,
	528, 1599,
	529, 1599,
	530, 1599,
	532, 1599,
	533, 1599,
	535, 1599,
	536, 1599,
	537, 1599,
	538, 1599,
	539, 1599,
	540, 1599,
	541, 1599,
	542, 1599,
	543, 1599,
	544, 1599,
	547, 1599,
	548, 1599,
	549, 1599,
	550, 1599,
	551, 1599,
	552, 1599,
	554, 1599,
	555, 1599,
	556, 1599,
	557, 1599,
	558, 1599,
	559, 1599,
	564, 1599,
	565, 1599,
	566, 1599,
	567, 1599,
	568, 1599,
	569, 1599,
	570, 1599,
	583, 1599,
	590, 1599,
	591, 1599,
	592, 1599,
	599, 1599,
	603, 1599,
	-2, 0,
	-1, 750,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	169, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	186, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	203, 1324,
	205, 1324,
	206, 1324,
	208, 1324,
	209, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	219, 1324,
	221, 1324,
	222, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	231, 1324,
	232, 1324,
	233, 1324,
	234, 1324,
	237, 1324,
	238, 1324,
	239, 1324,
	241, 1324,
	243, 1324,
	244, 1324,
	246, 1324,
	248, 1324,
	249, 1324,
	250, 1324,
	252, 1324,
	256, 1324,
	257, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	263, 1324,
	264, 1324,
	265, 1324,
	267, 1324,
	268, 1324,
	270, 1324,
	271, 1324,
	274, 1324,
	275, 1324,
	276, 1324,
	277, 1324,
	278, 1324,
	279, 1324,
	280, 1324,
	283, 1324,
	284, 1324,
	285, 1324,
	286, 1324,
	288, 1324,
	289, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	311, 1324,
	313, 1324,
	314, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	327, 1324,
	329, 1324,
	330, 1324,
	332, 1324,
	334, 1324,
	335, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	341, 1324,
	344, 1324,
	348, 1324,
	349, 1324,
	350, 1324,
	353, 1324,
	354, 1324,
	355, 1324,
	357, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	371, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	387, 1324,
	389, 1324,
	390, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	404, 1324,
	406, 1324,
	408, 1324,
	409, 1324,
	410, 1324,
	416, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	427, 1324,
	429, 1324,
	430, 1324,
	431, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	439, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	452, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	459, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	466, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	475, 1324,
	477, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	494, 1324,
	496, 1324,
	497, 1324,
	499, 1324,
	500, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	510, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	516, 1324,
	518, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	525, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	530, 1324,
	532, 1324,
	533, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	542, 1324,
	544, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	552, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	557, 1324,
	558, 1324,
	559, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	569, 1324,
	-2, 0,
	-1, 769,
	188, 2391,
	517, 2391,
	582, 2391,
	601, 2391,
	-2, 0,
	-1, 770,
	188, 2378,
	517, 2378,
	582, 2378,
	601, 2378,
	-2, 0,
	-1, 772,
	188, 2640,
	517, 2640,
	582, 2640,
	601, 2640,
	-2, 0,
	-1, 775,
	188, 2501,
	517, 2501,
	582, 2501,
	601, 2501,
	-2, 0,
	-1, 776,
	188, 2681,
	517, 2681,
	582, 2681,
	601, 2681,
	-2, 0,
	-1, 784,
	188, 2528,
	517, 2528,
	582, 2528,
	601, 2528,
	-2, 707,
	-1, 819,
	601, 2327,
	604, 2327,
	-2, 1006,
	-1, 820,
	601, 2329,
	604, 2329,
	-2, 1007,
	-1, 821,
	601, 2328,
	604, 2328,
	-2, 1008,
	-1, 822,
	604, 2253,
	-2, 1009,
	-1, 847,
	183, 262,
	-2, 0,
	-1, 871,
	43, 2300,
	-2, 0,
	-1, 872,
	554, 1302,
	-2, 1086,
	-1, 888,
	4, 1733,
	21, 1733,
	22, 1733,
	23, 1733,
	24, 1733,
	25, 1733,
	26, 1733,
	27, 1733,
	29, 1733,
	30, 1733,
	36, 1733,
	41, 1733,
	42, 1733,
	44, 1733,
	45, 1733,
	46, 1733,
	47, 1733,
	48, 1733,
	49, 1733,
	50, 1733,
	51, 1733,
	53, 1733,
	54, 1733,
	55, 1733,
	56, 1733,
	58, 1733,
	59, 1733,
	60, 1733,
	61, 1733,
	62, 1733,
	63, 1733,
	64, 1733,
	68, 1733,
	69, 1733,
	70, 1733,
	71, 1733,
	73, 1733,
	74, 1733,
	75, 1733,
	79, 1733,
	80, 1733,
	81, 1733,
	82, 1733,
	83, 1733,
	84, 1733,
	85, 1733,
	88, 1733,
	89, 1733,
	90, 1733,
	91, 1733,
	92, 1733,
	94, 1733,
	96, 1733,
	97, 1733,
	98, 1733,
	99, 1733,
	100, 1733,
	101, 1733,
	103, 1733,
	104, 1733,
	105, 1733,
	107, 1733,
	108, 1733,
	109, 1733,
	117, 1733,
	118, 1733,
	119, 1733,
	120, 1733,
	121, 1733,
	123, 1733,
	124, 1733,
	125, 1733,
	126, 1733,
	128, 1733,
	129, 1733,
	130, 1733,
	132, 1733,
	133, 1733,
	134, 1733,
	136, 1733,
	137, 1733,
	138, 1733,
	141, 1733,
	142, 1733,
	143, 1733,
	145, 1733,
	146, 1733,
	148, 1733,
	149, 1733,
	150, 1733,
	152, 1733,
	153, 1733,
	154, 1733,
	155, 1733,
	156, 1733,
	157, 1733,
	158, 1733,
	159, 1733,
	160, 1733,
	161, 1733,
	162, 1733,
	163, 1733,
	164, 1733,
	165, 1733,
	166, 1733,
	167, 1733,
	169, 1733,
	175, 1733,
	176, 1733,
	177, 1733,
	178, 1733,
	182, 1733,
	184, 1733,
	185, 1733,
	186, 1733,
	190, 1733,
	191, 1733,
	192, 1733,
	193, 1733,
	194, 1733,
	195, 1733,
	196, 1733,
	197, 1733,
	198, 1733,
	199, 1733,
	200, 1733,
	201, 1733,
	202, 1733,
	203, 1733,
	205, 1733,
	206, 1733,
	208, 1733,
	209, 1733,
	211, 1733,
	212, 1733,
	213, 1733,
	214, 1733,
	215, 1733,
	216, 1733,
	217, 1733,
	218, 1733,
	219, 1733,
	221, 1733,
	222, 1733,
	224, 1733,
	225, 1733,
	226, 1733,
	227, 1733,
	231, 1733,
	232, 1733,
	233, 1733,
	234, 1733,
	237, 1733,
	238, 1733,
	239, 1733,
	241, 1733,
	243, 1733,
	244, 1733,
	246, 1733,
	248, 1733,
	249, 1733,
	250, 1733,
	252, 1733,
	256, 1733,
	257, 1733,
	258, 1733,
	259, 1733,
	260, 1733,
	261, 1733,
	263, 1733,
	264, 1733,
	265, 1733,
	267, 1733,
	268, 1733,
	270, 1733,
	271, 1733,
	274, 1733,
	275, 1733,
	276, 1733,
	277, 1733,
	278, 1733,
	279, 1733,
	280, 1733,
	283, 1733,
	284, 1733,
	285, 1733,
	286, 1733,
	288, 1733,
	289, 1733,
	290, 1733,
	291, 1733,
	292, 1733,
	293, 1733,
	294, 1733,
	295, 1733,
	296, 1733,
	297, 1733,
	298, 1733,
	299, 1733,
	300, 1733,
	301, 1733,
	302, 1733,
	303, 1733,
	304, 1733,
	305, 1733,
	306, 1733,
	307, 1733,
	308, 1733,
	309, 1733,
	311, 1733,
	313, 1733,
	314, 1733,
	315, 1733,
	316, 1733,
	317, 1733,
	318, 1733,
	319, 1733,
	320, 1733,
	321, 1733,
	322, 1733,
	323, 1733,
	324, 1733,
	325, 1733,
	326, 1733,
	327, 1733,
	329, 1733,
	330, 1733,
	332, 1733,
	334, 1733,
	335, 1733,
	337, 1733,
	338, 1733,
	339, 1733,
	340, 1733,
	341, 1733,
	344, 1733,
	348, 1733,
	349, 1733,
	350, 1733,
	353, 1733,
	354, 1733,
	355, 1733,
	357, 1733,
	359, 1733,
	360, 1733,
	361, 1733,
	362, 1733,
	363, 1733,
	364, 1733,
	365, 1733,
	366, 1733,
	367, 1733,
	368, 1733,
	369, 1733,
	370, 1733,
	371, 1733,
	373, 1733,
	374, 1733,
	375, 1733,
	376, 1733,
	377, 1733,
	378, 1733,
	379, 1733,
	380, 1733,
	381, 1733,
	382, 1733,
	383, 1733,
	384, 1733,
	385, 1733,
	386, 1733,
	387, 1733,
	389, 1733,
	390, 1733,
	392, 1733,
	393, 1733,
	394, 1733,
	395, 1733,
	396, 1733,
	397, 1733,
	398, 1733,
	399, 1733,
	400, 1733,
	401, 1733,
	402, 1733,
	403, 1733,
	404, 1733,
	406, 1733,
	408, 1733,
	409, 1733,
	410, 1733,
	416, 1733,
	418, 1733,
	419, 1733,
	420, 1733,
	421, 1733,
	422, 1733,
	423, 1733,
	424, 1733,
	425, 1733,
	426, 1733,
	427, 1733,
	429, 1733,
	430, 1733,
	431, 1733,
	433, 1733,
	434, 1733,
	435, 1733,
	436, 1733,
	437, 1733,
	438, 1733,
	439, 1733,
	441, 1733,
	442, 1733,
	443, 1733,
	444, 1733,
	445, 1733,
	446, 1733,
	447, 1733,
	448, 1733,
	449, 1733,
	450, 1733,
	451, 1733,
	452, 1733,
	454, 1733,
	455, 1733,
	456, 1733,
	457, 1733,
	458, 1733,
	459, 1733,
	461, 1733,
	462, 1733,
	463, 1733,
	464, 1733,
	465, 1733,
	466, 1733,
	468, 1733,
	469, 1733,
	470, 1733,
	471, 1733,
	472, 1733,
	473, 1733,
	474, 1733,
	475, 1733,
	477, 1733,
	479, 1733,
	480, 1733,
	481, 1733,
	482, 1733,
	483, 1733,
	484, 1733,
	485, 1733,
	486, 1733,
	487, 1733,
	488, 1733,
	489, 1733,
	490, 1733,
	491, 1733,
	492, 1733,
	493, 1733,
	494, 1733,
	496, 1733,
	497, 1733,
	499, 1733,
	500, 1733,
	502, 1733,
	503, 1733,
	504, 1733,
	505, 1733,
	506, 1733,
	507, 1733,
	508, 1733,
	509, 1733,
	510, 1733,
	512, 1733,
	513, 1733,
	514, 1733,
	515, 1733,
	516, 1733,
	518, 1733,
	520, 1733,
	521, 1733,
	522, 1733,
	523, 1733,
	524, 1733,
	525, 1733,
	527, 1733,
	528, 1733,
	529, 1733,
	530, 1733,
	532, 1733,
	533, 1733,
	536, 1733,
	537, 1733,
	538, 1733,
	539, 1733,
	540, 1733,
	541, 1733,
	542, 1733,
	544, 1733,
	547, 1733,
	548, 1733,
	549, 1733,
	550, 1733,
	551, 1733,
	552, 1733,
	554, 1733,
	555, 1733,
	556, 1733,
	557, 1733,
	558, 1733,
	559, 1733,
	564, 1733,
	565, 1733,
	566, 1733,
	567, 1733,
	568, 1733,
	569, 1733,
	-2, 0,
	-1, 898,
	260, 412,
	-2, 0,
	-1, 975,
	394, 887,
	459, 887,
	500, 887,
	522, 887,
	-2, 0,
	-1, 976,
	394, 886,
	459, 886,
	500, 886,
	522, 886,
	-2, 818,
	-1, 980,
	1, 939,
	598, 939,
	600, 939,
	602, 939,
	-2, 0,
	-1, 982,
	1, 861,
	598, 861,
	600, 861,
	602, 861,
	-2, 0,
	-1, 983,
	1, 865,
	598, 865,
	600, 865,
	602, 865,
	-2, 0,
	-1, 984,
	1, 1005,
	183, 1005,
	598, 1005,
	600, 1005,
	602, 1005,
	-2, 0,
	-1, 992,
	1, 892,
	598, 892,
	600, 892,
	602, 892,
	-2, 0,
	-1, 999,
	1, 939,
	598, 939,
	600, 939,
	602, 939,
	-2, 0,
	-1, 1000,
	1, 941,
	598, 941,
	600, 941,
	602, 941,
	-2, 0,
	-1, 1001,
	1, 944,
	598, 944,
	600, 944,
	602, 944,
	-2, 0,
	-1, 1007,
	1, 969,
	598, 969,
	600, 969,
	602, 969,
	-2, 0,
	-1, 1008,
	1, 971,
	598, 971,
	600, 971,
	602, 971,
	-2, 0,
	-1, 1013,
	1, 999,
	598, 999,
	600, 999,
	602, 999,
	-2, 0,
	-1, 1065,
	170, 1603,
	183, 1603,
	273, 1603,
	342, 1603,
	-2, 1539,
	-1, 1080,
	170, 1602,
	183, 1602,
	273, 1602,
	342, 1602,
	-2, 1536,
	-1, 1107,
	601, 2326,
	-2, 715,
	-1, 1136,
	5, 2318,
	599, 2316,
	-2, 2307,
	-1, 1144,
	5, 2339,
	599, 2336,
	-2, 2327,
	-1, 1145,
	5, 2340,
	599, 2337,
	-2, 2328,
	-1, 1153,
	601, 2324,
	-2, 2306,
	-1, 1154,
	599, 2765,
	-2, 2325,
	-1, 1177,
	599, 2764,
	-2, 2341,
	-1, 1178,
	5, 1808,
	-2, 2735,
	-1, 1179,
	5, 1809,
	-2, 2736,
	-1, 1180,
	5, 1810,
	-2, 2750,
	-1, 1181,
	5, 1811,
	-2, 2714,
	-1, 1182,
	5, 1812,
	-2, 2748,
	-1, 1183,
	5, 1820,
	-2, 2727,
	-1, 1184,
	5, 1807,
	-2, 2723,
	-1, 1185,
	5, 1807,
	-2, 2722,
	-1, 1186,
	5, 1807,
	-2, 2741,
	-1, 1187,
	5, 1818,
	-2, 2716,
	-1, 1188,
	5, 1823,
	-2, 2715,
	-1, 1189,
	5, 1825,
	-2, 2760,
	-1, 1192,
	5, 1847,
	-2, 2753,
	-1, 1193,
	5, 1839,
	-2, 2754,
	-1, 1194,
	5, 1847,
	-2, 2755,
	-1, 1195,
	5, 1843,
	-2, 2756,
	-1, 1196,
	5, 1793,
	-2, 2728,
	-1, 1197,
	5, 1794,
	-2, 2729,
	-1, 1198,
	5, 1795,
	-2, 2717,
	-1, 1226,
	5, 1830,
	-2, 2761,
	-1, 1227,
	5, 1831,
	-2, 2751,
	-1, 1228,
	5, 1832,
	555, 1832,
	-2, 2718,
	-1, 1229,
	5, 1833,
	555, 1833,
	-2, 2719,
	-1, 1266,
	599, 2336,
	-2, 2327,
	-1, 1267,
	599, 2337,
	-2, 2328,
	-1, 1363,
	188, 2681,
	517, 2681,
	582, 2681,
	601, 2681,
	-2, 0,
	-1, 1368,
	1, 691,
	602, 691,
	-2, 1451,
	-1, 1498,
	361, 2301,
	418, 2301,
	461, 2301,
	592, 2301,
	-2, 2291,
	-1, 1509,
	603, 2301,
	-2, 2303,
	-1, 1517,
	1, 1299,
	423, 1263,
	461, 1263,
	576, 1263,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 1523,
	204, 1396,
	223, 1396,
	431, 1396,
	-2, 0,
	-1, 1579,
	402, 1085,
	554, 1085,
	-2, 407,
	-1, 1596,
	43, 2299,
	-2, 1051,
	-1, 1603,
	1, 1299,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 1611,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	186, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	203, 1324,
	205, 1324,
	206, 1324,
	208, 1324,
	209, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	219, 1324,
	221, 1324,
	222, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	232, 1324,
	233, 1324,
	234, 1324,
	237, 1324,
	238, 1324,
	239, 1324,
	241, 1324,
	243, 1324,
	244, 1324,
	246, 1324,
	248, 1324,
	249, 1324,
	250, 1324,
	252, 1324,
	256, 1324,
	257, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	263, 1324,
	264, 1324,
	265, 1324,
	267, 1324,
	268, 1324,
	270, 1324,
	271, 1324,
	274, 1324,
	275, 1324,
	276, 1324,
	277, 1324,
	278, 1324,
	279, 1324,
	280, 1324,
	283, 1324,
	284, 1324,
	285, 1324,
	286, 1324,
	288, 1324,
	289, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	311, 1324,
	313, 1324,
	314, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	327, 1324,
	329, 1324,
	330, 1324,
	334, 1324,
	335, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	341, 1324,
	344, 1324,
	346, 1324,
	348, 1324,
	349, 1324,
	350, 1324,
	353, 1324,
	354, 1324,
	355, 1324,
	357, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	371, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	387, 1324,
	389, 1324,
	390, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	404, 1324,
	406, 1324,
	408, 1324,
	409, 1324,
	410, 1324,
	416, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	427, 1324,
	429, 1324,
	430, 1324,
	431, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	439, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	452, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	459, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	466, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	475, 1324,
	477, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	494, 1324,
	496, 1324,
	497, 1324,
	499, 1324,
	500, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	510, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	516, 1324,
	518, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	525, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	530, 1324,
	532, 1324,
	533, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	542, 1324,
	544, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	552, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	557, 1324,
	558, 1324,
	559, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	569, 1324,
	-2, 0,
	-1, 1634,
	1, 552,
	598, 552,
	600, 552,
	602, 552,
	-2, 1559,
	-1, 1637,
	4, 2759,
	11, 2759,
	12, 2759,
	14, 2759,
	15, 2759,
	16, 2759,
	17, 2759,
	18, 2759,
	19, 2759,
	21, 2759,
	22, 2759,
	23, 2759,
	24, 2759,
	25, 2759,
	26, 2759,
	27, 2759,
	29, 2759,
	30, 2759,
	33, 2759,
	34, 2759,
	36, 2759,
	38, 2759,
	41, 2759,
	42, 2759,
	44, 2759,
	45, 2759,
	46, 2759,
	47, 2759,
	48, 2759,
	49, 2759,
	50, 2759,
	51, 2759,
	53, 2759,
	54, 2759,
	55, 2759,
	56, 2759,
	58, 2759,
	59, 2759,
	60, 2759,
	61, 2759,
	62, 2759,
	63, 2759,
	64, 2759,
	67, 2759,
	68, 2759,
	69, 2759,
	70, 2759,
	71, 2759,
	73, 2759,
	74, 2759,
	75, 2759,
	76, 2759,
	79, 2759,
	80, 2759,
	81, 2759,
	82, 2759,
	83, 2759,
	84, 2759,
	85, 2759,
	86, 2759,
	88, 2759,
	89, 2759,
	90, 2759,
	91, 2759,
	92, 2759,
	94, 2759,
	95, 2759,
	96, 2759,
	97, 2759,
	98, 2759,
	99, 2759,
	100, 2759,
	101, 2759,
	103, 2759,
	104, 2759,
	105, 2759,
	106, 2759,
	107, 2759,
	108, 2759,
	109, 2759,
	117, 2759,
	118, 2759,
	119, 2759,
	120, 2759,
	121, 2759,
	123, 2759,
	124, 2759,
	125, 2759,
	126, 2759,
	128, 2759,
	129, 2759,
	130, 2759,
	132, 2759,
	133, 2759,
	134, 2759,
	136, 2759,
	137, 2759,
	138, 2759,
	141, 2759,
	142, 2759,
	143, 2759,
	145, 2759,
	146, 2759,
	148, 2759,
	149, 2759,
	150, 2759,
	152, 2759,
	153, 2759,
	154, 2759,
	155, 2759,
	156, 2759,
	157, 2759,
	158, 2759,
	159, 2759,
	160, 2759,
	161, 2759,
	162, 2759,
	163, 2759,
	164, 2759,
	165, 2759,
	166, 2759,
	167, 2759,
	171, 2759,
	172, 2759,
	173, 2759,
	174, 2759,
	175, 2759,
	176, 2759,
	177, 2759,
	178, 2759,
	181, 2759,
	182, 2759,
	184, 2759,
	185, 2759,
	186, 2759,
	189, 2759,
	190, 2759,
	191, 2759,
	192, 2759,
	193, 2759,
	194, 2759,
	195, 2759,
	196, 2759,
	197, 2759,
	198, 2759,
	199, 2759,
	200, 2759,
	201, 2759,
	202, 2759,
	203, 2759,
	205, 2759,
	206, 2759,
	208, 2759,
	209, 2759,
	211, 2759,
	212, 2759,
	213, 2759,
	214, 2759,
	215, 2759,
	216, 2759,
	217, 2759,
	218, 2759,
	219, 2759,
	220, 2759,
	221, 2759,
	222, 2759,
	223, 2759,
	224, 2759,
	225, 2759,
	226, 2759,
	227, 2759,
	229, 2759,
	230, 2759,
	232, 2759,
	233, 2759,
	234, 2759,
	236, 2759,
	237, 2759,
	238, 2759,
	239, 2759,
	241, 2759,
	243, 2759,
	244, 2759,
	245, 2759,
	246, 2759,
	247, 2759,
	248, 2759,
	249, 2759,
	250, 2759,
	251, 2759,
	252, 2759,
	254, 2759,
	255, 2759,
	256, 2759,
	257, 2759,
	258, 2759,
	259, 2759,
	260, 2759,
	261, 2759,
	263, 2759,
	264, 2759,
	265, 2759,
	267, 2759,
	268, 2759,
	269, 2759,
	270, 2759,
	271, 2759,
	272, 2759,
	274, 2759,
	275, 2759,
	276, 2759,
	277, 2759,
	278, 2759,
	279, 2759,
	280, 2759,
	283, 2759,
	284, 2759,
	285, 2759,
	286, 2759,
	287, 2759,
	288, 2759,
	289, 2759,
	290, 2759,
	291, 2759,
	292, 2759,
	293, 2759,
	294, 2759,
	295, 2759,
	296, 2759,
	297, 2759,
	298, 2759,
	299, 2759,
	300, 2759,
	301, 2759,
	302, 2759,
	303, 2759,
	304, 2759,
	305, 2759,
	306, 2759,
	307, 2759,
	308, 2759,
	309, 2759,
	311, 2759,
	312, 2759,
	313, 2759,
	314, 2759,
	315, 2759,
	316, 2759,
	317, 2759,
	318, 2759,
	319, 2759,
	320, 2759,
	321, 2759,
	322, 2759,
	323, 2759,
	324, 2759,
	325, 2759,
	326, 2759,
	327, 2759,
	329, 2759,
	330, 2759,
	333, 2759,
	334, 2759,
	335, 2759,
	337, 2759,
	338, 2759,
	339, 2759,
	340, 2759,
	341, 2759,
	344, 2759,
	348, 2759,
	349, 2759,
	350, 2759,
	351, 2759,
	353, 2759,
	354, 2759,
	355, 2759,
	357, 2759,
	359, 2759,
	360, 2759,
	361, 2759,
	362, 2759,
	363, 2759,
	364, 2759,
	365, 2759,
	366, 2759,
	367, 2759,
	368, 2759,
	369, 2759,
	370, 2759,
	371, 2759,
	373, 2759,
	374, 2759,
	375, 2759,
	376, 2759,
	377, 2759,
	378, 2759,
	379, 2759,
	380, 2759,
	381, 2759,
	382, 2759,
	383, 2759,
	384, 2759,
	385, 2759,
	386, 2759,
	387, 2759,
	389, 2759,
	390, 2759,
	392, 2759,
	393, 2759,
	394, 2759,
	395, 2759,
	396, 2759,
	397, 2759,
	398, 2759,
	399, 2759,
	400, 2759,
	401, 2759,
	402, 2759,
	403, 2759,
	404, 2759,
	406, 2759,
	408, 2759,
	409, 2759,
	410, 2759,
	416, 2759,
	417, 2759,
	418, 2759,
	419, 2759,
	420, 2759,
	421, 2759,
	422, 2759,
	423, 2759,
	424, 2759,
	425, 2759,
	426, 2759,
	427, 2759,
	429, 2759,
	430, 2759,
	431, 2759,
	432, 2759,
	433, 2759,
	434, 2759,
	435, 2759,
	436, 2759,
	437, 2759,
	438, 2759,
	439, 2759,
	440, 2759,
	441, 2759,
	442, 2759,
	443, 2759,
	444, 2759,
	445, 2759,
	446, 2759,
	447, 2759,
	448, 2759,
	449, 2759,
	450, 2759,
	451, 2759,
	452, 2759,
	454, 2759,
	455, 2759,
	456, 2759,
	457, 2759,
	458, 2759,
	459, 2759,
	461, 2759,
	462, 2759,
	463, 2759,
	464, 2759,
	465, 2759,
	466, 2759,
	467, 2759,
	468, 2759,
	469, 2759,
	470, 2759,
	471, 2759,
	472, 2759,
	473, 2759,
	474, 2759,
	475, 2759,
	477, 2759,
	479, 2759,
	480, 2759,
	481, 2759,
	482, 2759,
	483, 2759,
	484, 2759,
	485, 2759,
	486, 2759,
	487, 2759,
	488, 2759,
	489, 2759,
	490, 2759,
	491, 2759,
	492, 2759,
	493, 2759,
	494, 2759,
	496, 2759,
	497, 2759,
	498, 2759,
	499, 2759,
	500, 2759,
	502, 2759,
	503, 2759,
	504, 2759,
	505, 2759,
	506, 2759,
	507, 2759,
	508, 2759,
	509, 2759,
	510, 2759,
	512, 2759,
	513, 2759,
	514, 2759,
	515, 2759,
	516, 2759,
	518, 2759,
	520, 2759,
	521, 2759,
	522, 2759,
	523, 2759,
	524, 2759,
	525, 2759,
	527, 2759,
	528, 2759,
	529, 2759,
	530, 2759,
	532, 2759,
	533, 2759,
	536, 2759,
	537, 2759,
	538, 2759,
	539, 2759,
	540, 2759,
	541, 2759,
	542, 2759,
	544, 2759,
	547, 2759,
	548, 2759,
	549, 2759,
	550, 2759,
	551, 2759,
	552, 2759,
	554, 2759,
	555, 2759,
	556, 2759,
	557, 2759,
	558, 2759,
	559, 2759,
	564, 2759,
	565, 2759,
	566, 2759,
	567, 2759,
	568, 2759,
	569, 2759,
	570, 2759,
	572, 2759,
	580, 2759,
	581, 2759,
	582, 2759,
	583, 2759,
	584, 2759,
	585, 2759,
	587, 2759,
	588, 2759,
	589, 2759,
	590, 2759,
	591, 2759,
	592, 2759,
	593, 2759,
	594, 2759,
	595, 2759,
	597, 2759,
	600, 2759,
	601, 2759,
	603, 2759,
	604, 2759,
	-2, 0,
	-1, 1642,
	188, 2640,
	517, 2640,
	582, 2640,
	601, 2640,
	-2, 0,
	-1, 1695,
	394, 887,
	459, 887,
	500, 887,
	522, 887,
	-2, 0,
	-1, 1706,
	1, 1396,
	598, 1396,
	600, 1396,
	602, 1396,
	-2, 0,
	-1, 1723,
	1, 882,
	598, 882,
	600, 882,
	602, 882,
	-2, 0,
	-1, 1724,
	1, 926,
	598, 926,
	600, 926,
	602, 926,
	-2, 0,
	-1, 1725,
	1, 934,
	598, 934,
	600, 934,
	602, 934,
	-2, 0,
	-1, 1728,
	1, 891,
	598, 891,
	600, 891,
	602, 891,
	-2, 0,
	-1, 1730,
	1, 897,
	598, 897,
	600, 897,
	602, 897,
	-2, 0,
	-1, 1733,
	1, 893,
	598, 893,
	600, 893,
	602, 893,
	-2, 0,
	-1, 1738,
	1, 907,
	598, 907,
	600, 907,
	602, 907,
	-2, 0,
	-1, 1769,
	1, 2623,
	598, 2623,
	600, 2623,
	601, 2623,
	602, 2623,
	-2, 0,
	-1, 1773,
	1, 980,
	598, 980,
	600, 980,
	602, 980,
	-2, 0,
	-1, 1790,
	1, 1446,
	602, 1446,
	-2, 1451,
	-1, 1793,
	170, 1602,
	183, 1602,
	273, 1602,
	342, 1602,
	-2, 1540,
	-1, 1893,
	151, 1561,
	170, 1561,
	183, 1561,
	240, 1561,
	273, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 2012,
	-1, 1954,
	600, 2187,
	-2, 0,
	-1, 1989,
	151, 1561,
	170, 1561,
	183, 1561,
	240, 1561,
	273, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 1694,
	-1, 2028,
	517, 2637,
	601, 2637,
	604, 2637,
	-2, 0,
	-1, 2045,
	599, 1835,
	-2, 1823,
	-1, 2077,
	188, 2637,
	601, 2637,
	604, 2637,
	-2, 0,
	-1, 2119,
	1, 693,
	602, 693,
	-2, 1451,
	-1, 2258,
	223, 257,
	-2, 2335,
	-1, 2259,
	223, 258,
	-2, 309,
	-1, 2368,
	1, 884,
	598, 884,
	600, 884,
	602, 884,
	-2, 0,
	-1, 2369,
	1, 928,
	598, 928,
	600, 928,
	602, 928,
	-2, 0,
	-1, 2370,
	1, 936,
	598, 936,
	600, 936,
	602, 936,
	-2, 0,
	-1, 2371,
	1, 982,
	598, 982,
	600, 982,
	602, 982,
	-2, 0,
	-1, 2412,
	1, 909,
	598, 909,
	600, 909,
	602, 909,
	-2, 0,
	-1, 2431,
	1, 965,
	598, 965,
	600, 965,
	602, 965,
	-2, 0,
	-1, 2478,
	438, 1629,
	439, 1629,
	-2, 1868,
	-1, 2509,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1888,
	-1, 2510,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1889,
	-1, 2511,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1890,
	-1, 2512,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1891,
	-1, 2513,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1892,
	-1, 2514,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1893,
	-1, 2515,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1894,
	-1, 2516,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1895,
	-1, 2528,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1907,
	-1, 2529,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1908,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1909,
	-1, 2534,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1916,
	-1, 2540,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1920,
	-1, 2542,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1928,
	-1, 2543,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1929,
	-1, 2544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1930,
	-1, 2545,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1931,
	-1, 2719,
	5, 2339,
	188, 2198,
	599, 2336,
	-2, 2327,
	-1, 2720,
	188, 2199,
	-2, 2710,
	-1, 2721,
	188, 2200,
	-2, 2527,
	-1, 2722,
	188, 2201,
	-2, 2409,
	-1, 2723,
	188, 2202,
	-2, 2466,
	-1, 2724,
	188, 2203,
	-2, 2512,
	-1, 2725,
	188, 2204,
	-2, 2635,
	-1, 2726,
	188, 2205,
	-2, 1995,
	-1, 2797,
	1, 1695,
	2, 1695,
	106, 1695,
	151, 1695,
	170, 1695,
	183, 1695,
	189, 1695,
	207, 1695,
	210, 1695,
	236, 1695,
	240, 1695,
	251, 1695,
	269, 1695,
	273, 1695,
	312, 1695,
	342, 1695,
	346, 1695,
	352, 1695,
	428, 1695,
	432, 1695,
	534, 1695,
	545, 1695,
	561, 1695,
	562, 1695,
	563, 1695,
	573, 1695,
	598, 1695,
	600, 1695,
	602, 1695,
	604, 1695,
	-2, 1694,
	-1, 2810,
	599, 2308,
	-2, 2322,
	-1, 2812,
	1, 326,
	561, 326,
	-2, 1588,
	-1, 2842,
	599, 1834,
	-2, 1824,
	-1, 3027,
	1, 1299,
	423, 1263,
	461, 1263,
	576, 1263,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 3202,
	347, 1632,
	-2, 2749,
	-1, 3203,
	347, 1633,
	-2, 2620,
	-1, 3207,
	438, 2264,
	439, 2264,
	-2, 1993,
	-1, 3208,
	438, 2268,
	439, 2268,
	-2, 1994,
	-1, 3209,
	438, 2265,
	439, 2265,
	-2, 1993,
	-1, 3210,
	438, 2269,
	439, 2269,
	-2, 1994,
	-1, 3223,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1918,
	-1, 3224,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1922,
	-1, 3230,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1924,
	-1, 3456,
	1, 688,
	598, 688,
	600, 688,
	602, 688,
	-2, 1451,
	-1, 3630,
	43, 2299,
	-2, 1052,
	-1, 3635,
	1, 1299,
	598, 1299,
	600, 1299,
	602, 1299,
	-2, 1588,
	-1, 3738,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1926,
	-1, 3745,
	245, 0,
	247, 0,
	333, 0,
	-2, 1945,
	-1, 3813,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1974,
	-1, 3814,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1975,
	-1, 3815,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1976,
	-1, 3819,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1980,
	-1, 3820,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1981,
	-1, 3821,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1982,
	-1, 3869,
	599, 2309,
	-2, 2323,
	-1, 4051,
	601, 2866,
	-2, 1514,
	-1, 4105,
	245, 0,
	247, 0,
	333, 0,
	-2, 1946,
	-1, 4108,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1949,
	-1, 4109,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1951,
	-1, 4210,
	601, 2324,
	-2, 1334,
	-1, 4363,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1950,
	-1, 4364,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1952,
	-1, 4375,
	245, 0,
	-2, 1985,
	-1, 4552,
	245, 0,
	-2, 1986,
	-1, 4757,
	50, 0,
	220, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 2713,
}

const sqlPrivate = 57344

const sqlLast = 133208

var sqlAct = [...]int{
	275, 3619, 4697, 4940, 3112, 3361, 4586, 4818, 4696, 3099,
	4871, 4594, 4756, 4425, 4802, 4635, 2904, 4767, 4884, 3618,
	4744, 1532, 4656, 4710, 4728, 1341, 4687, 4768, 4825, 2255,
	4707, 4522, 4769, 2168, 4498, 4470, 4407, 2948, 4485, 3778,
	2332, 4556, 4755, 4320, 3730, 4325, 4280, 4352, 4430, 4088,
	4384, 3069, 4043, 4035, 4255, 2344, 3652, 4307, 2488, 4507,
	4309, 4620, 4300, 1270, 710, 3536, 2973, 1559, 3216, 4207,
	3964, 4187, 1802, 4330, 2986, 821, 2557, 3646, 3993, 3604,
	2088, 4206, 4009, 2019, 3991, 3479, 2305, 2496, 2342, 3593,
	2752, 1334, 2489, 2176, 1090, 1995, 1402, 2033, 1660, 781,
	267, 3683, 1081, 821, 3124, 2032, 3685, 3088, 3083, 3058,
	2340, 4380, 3609, 3872, 3407, 3608, 3586, 2101, 3611, 721,
	3585, 3085, 1327, 3367, 3384, 1336, 3344, 3376, 1495, 4087,
	3100, 900, 3114, 1089, 182, 3119, 4144, 3414, 2244, 896,
	4, 1964, 2242, 3365, 1259, 3474, 2203, 3498, 2789, 3034,
	2187, 2790, 4803, 2906, 1940, 4557, 3839, 2635, 2493, 3343,
	1871, 2570, 1901, 3200, 1502, 3118, 1598, 111, 816, 891,
	3062, 2238, 2637, 1339, 2243, 2219, 777, 1703, 2013, 1140,
	269, 268, 3003, 2792, 3070, 2226, 2160, 1383, 2156, 1790,
	2099, 1313, 2626, 2770, 2554, 1145, 1965, 1984, 2146, 2477,
	2460, 2825, 2458, 1635, 754, 3093, 1601, 822, 1250, 1324,
	2292, 818, 2929, 4657, 2892, 823, 1370, 3612, 1561, 2947,
	1658, 969, 3985, 1974, 2629, 2749, 2824, 1232, 182, 1253,
	2715, 2779, 1935, 697, 2760, 2607, 1981, 719, 1885, 1804,
	2459, 2681, 1267, 1803, 2461, 191, 1738, 1723, 1633, 1249,
	192, 762, 773, 2252, 2318, 827, 830, 1136, 2291, 1626,
	1527, 2175, 4819, 4872, 2482, 1121, 714, 44, 1255, 1230,
	43, 41, 32, 30, 28, 711, 3253, 722, 811, 1809,
	1538, 1789, 990, 827, 830, 872, 3247, 3853, 737, 3854,
	2090, 2090, 4951, 873, 2090, 2090, 2769, 4943, 4932, 3363,
	2090, 3671, 2769, 4931, 4905, 1531, 2090, 2769, 4429, 4796,
	4400, 4903, 4844, 1147, 917, 4429, 2264, 4804, 4793, 4791,
	4788, 4805, 2769, 2769, 4789, 4785, 4397, 4753, 4752, 4786,
	163, 2264, 2264, 4751, 1236, 4742, 1237, 3129, 73, 4429,
	46, 45, 3661, 4740, 4737, 4732, 1085, 4429, 4510, 4429,
	2111, 3662, 4731, 4705, 1143, 74, 4429, 4429, 158, 4676,
	4669, 1086, 4668, 2833, 2769, 1247, 2769, 4168, 4661, 4634,
	3441, 79, 2264, 2264, 1669, 4631, 4614, 4554, 3439, 4429,
	4271, 2833, 67, 4536, 4500, 3671, 3424, 4072, 4501, 48,
	1142, 160, 4448, 4447, 4436, 4435, 2264, 2264, 2264, 4429,
	4428, 4391, 4365, 4341, 4429, 2264, 2833, 3129, 2111, 47,
	4338, 88, 1075, 2108, 3671, 4250, 4233, 1233, 1233, 2769,
	2769, 4107, 1379, 4059, 1379, 2833, 4053, 3678, 1066, 1085,
	3678, 4006, 3864, 1065, 2853, 4007, 3865, 3862, 50, 68,
	3846, 3863, 3762, 2632, 2769, 3758, 2264, 51, 2762, 2769,
	3677, 1284, 57, 2341, 3678, 3843, 161, 3360, 3355, 94,
	73, 2769, 2769, 3354, 49, 2264, 110, 2769, 3215, 1080,
	3305, 94, 107, 2108, 3306, 3303, 3295, 74, 3293, 3304,
	3296, 3264, 2769, 3262, 3128, 2769, 3110, 3109, 3129, 3263,
	2328, 2328, 2876, 79, 2832, 2829, 2769, 2822, 2833, 1265,
	2769, 2769, 2111, 4677, 1234, 2583, 2584, 2585, 2602, 2603,
	2604, 2814, 2768, 52, 2327, 2264, 2769, 1291, 2328, 4558,
	4549, 2111, 4537, 4510, 239, 2605, 3129, 3843, 2761, 4318,
	4271, 95, 2108, 88, 2633, 1285, 2111, 4234, 1285, 4072,
	4008, 2976, 2180, 2891, 2125, 2089, 2105, 3064, 2263, 2996,
	2889, 1960, 1526, 3947, 3733, 1540, 3707, 1982, 1873, 2231,
	3663, 1705, 2806, 1552, 2805, 2804, 2803, 3314, 3315, 2802,
	1729, 1238, 241, 1235, 898, 1074, 239, 2595, 1073, 3664,
	1531, 1072, 1071, 1070, 1069, 1068, 2591, 1064, 110, 1063,
	1062, 1061, 1060, 94, 107, 1059, 1262, 1058, 2769, 3173,
	1910, 1057, 1056, 1055, 3314, 3315, 1054, 3332, 3333, 3334,
	1053, 1052, 1051, 1050, 2634, 1049, 2631, 1048, 3314, 3315,
	1047, 240, 1029, 967, 241, 966, 4103, 965, 964, 1119,
	963, 962, 1261, 961, 233, 960, 1817, 1818, 959, 958,
	957, 956, 3329, 234, 955, 954, 953, 952, 3314, 3315,
	951, 2091, 2091, 95, 950, 2091, 2091, 949, 948, 947,
	946, 2091, 2596, 2597, 2598, 2599, 1820, 2091, 945, 944,
	193, 943, 2590, 240, 942, 941, 940, 99, 939, 3329,
	938, 3252, 1190, 937, 936, 935, 934, 933, 932, 921,
	920, 919, 915, 914, 3096, 53, 907, 906, 905, 890,
	889, 1819, 846, 845, 844, 843, 1651, 834, 1539, 39,
	56, 833, 832, 831, 797, 59, 788, 787, 786, 768,
	263, 262, 193, 261, 1903, 69, 2108, 260, 259, 258,
	257, 58, 190, 102, 256, 255, 106, 3320, 254, 253,
	54, 252, 251, 250, 162, 2600, 2601, 249, 248, 247,
	239, 1540, 55, 246, 245, 1346, 1145, 244, 243, 242,
	4162, 4119, 239, 153, 4332, 3887, 3858, 3661, 3679, 3410,
	62, 3275, 2636, 3258, 3320, 153, 3249, 1551, 2593, 2831,
	3153, 3044, 3358, 1145, 1145, 1145, 1285, 2837, 3320, 2811,
	159, 1985, 2796, 2450, 2108, 2664, 3078, 2154, 241, 99,
	2404, 1405, 2662, 2110, 2008, 1405, 1825, 2648, 1943, 2646,
	241, 1912, 1346, 1784, 1534, 1942, 1943, 1391, 3320, 1816,
	4561, 1269, 4778, 1942, 3359, 239, 1673, 1903, 4777, 4774,
	2111, 2863, 4754, 4739, 2089, 2108, 157, 1145, 3336, 1145,
	2105, 1145, 1946, 3330, 4642, 4546, 2453, 240, 1564, 4379,
	1941, 194, 4339, 1335, 190, 102, 4540, 4538, 106, 240,
	233, 4420, 4317, 4174, 2761, 1374, 4142, 1138, 4141, 234,
	4135, 1263, 233, 241, 1346, 4134, 1655, 1387, 1388, 1389,
	3330, 234, 4133, 1904, 239, 1902, 892, 1540, 2630, 1540,
	4126, 4125, 899, 4123, 1564, 4118, 193, 153, 1510, 4115,
	4114, 1564, 4005, 1498, 3891, 3890, 1509, 1335, 193, 4019,
	1145, 3, 1145, 73, 3889, 895, 894, 1564, 1870, 2846,
	1246, 1530, 240, 1505, 3330, 1145, 1500, 1145, 3868, 2308,
	74, 2594, 241, 1285, 3834, 233, 3833, 1352, 3832, 3754,
	1318, 1321, 3749, 3405, 234, 3351, 79, 3342, 3313, 3310,
	3309, 3307, 1366, 3302, 1331, 1870, 3301, 1905, 157, 3300,
	3297, 3294, 3314, 3315, 3274, 3257, 1368, 1607, 1610, 1870,
	4334, 193, 4946, 194, 3250, 1564, 1335, 1335, 3248, 3111,
	2797, 240, 2619, 1816, 1515, 2271, 88, 1870, 2566, 1872,
	2269, 1815, 1817, 1818, 233, 1145, 3331, 4020, 1145, 1870,
	4893, 1613, 4892, 234, 4817, 827, 830, 4815, 1398, 1271,
	1492, 1497, 3780, 4698, 239, 1848, 1088, 4619, 4605, 1546,
	239, 239, 1820, 4602, 4601, 1360, 4600, 898, 182, 182,
	193, 4580, 1529, 3331, 4579, 4577, 4560, 4559, 4534, 49,
	1528, 110, 2560, 4520, 3080, 1596, 94, 107, 1873, 4517,
	4516, 3431, 4511, 4496, 4495, 3945, 4444, 1819, 4415, 4377,
	1674, 1086, 241, 4360, 1638, 1640, 4359, 1839, 241, 241,
	4303, 2580, 2581, 2582, 2606, 2592, 2586, 3331, 2588, 2589,
	2587, 2574, 2575, 2576, 2577, 2578, 2579, 4296, 4293, 4272,
	3314, 3315, 3356, 3332, 3333, 3334, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 4161, 4140, 95, 4073, 3933, 3932,
	3915, 240, 1636, 3914, 3912, 3849, 3837, 240, 240, 3744,
	1890, 3680, 1374, 3672, 233, 1374, 3638, 3553, 1731, 1145,
	233, 233, 3320, 234, 3511, 1145, 3478, 3433, 1629, 234,
	234, 3279, 3278, 3325, 3323, 3324, 3316, 3317, 3318, 3319,
	3321, 3322, 1842, 1843, 1844, 1845, 3273, 239, 3239, 239,
	193, 3057, 1825, 1949, 4020, 3329, 3095, 193, 1794, 1948,
	1947, 1627, 3402, 3326, 3327, 3328, 1944, 1747, 1817, 1818,
	3325, 3323, 3324, 3316, 3317, 3318, 3319, 3321, 3322, 1936,
	1934, 1650, 1679, 2844, 1911, 2843, 2808, 3316, 3317, 3318,
	3319, 3321, 3322, 2801, 2767, 241, 1668, 241, 1820, 2644,
	1847, 1849, 1889, 2007, 1963, 1821, 1822, 1823, 1824, 1826,
	1827, 1958, 1892, 4333, 3325, 3323, 3324, 3316, 3317, 3318,
	3319, 3321, 3322, 1545, 1957, 1956, 2835, 1955, 3330, 1788,
	1145, 1145, 1145, 1819, 1954, 1953, 1145, 3079, 1952, 1951,
	1950, 239, 99, 1267, 240, 1267, 240, 1931, 1930, 1696,
	3320, 1929, 1928, 1927, 1926, 1925, 1924, 233, 1840, 233,
	1405, 1923, 1922, 1732, 1921, 1920, 234, 239, 234, 1919,
	1918, 1145, 1917, 1916, 821, 1346, 1905, 1891, 1888, 1883,
	2050, 821, 1346, 2011, 1346, 1359, 1086, 1962, 1795, 241,
	1289, 1280, 3337, 193, 1632, 193, 4563, 190, 102, 4562,
	2029, 106, 4306, 1870, 4170, 4111, 3886, 2078, 1791, 2080,
	3861, 3852, 1799, 3261, 3336, 241, 1798, 239, 2799, 4398,
	4172, 3885, 1904, 3314, 3315, 1066, 1971, 239, 3429, 1886,
	1065, 3667, 1793, 1870, 2003, 899, 3514, 1384, 240, 1945,
	153, 1386, 4890, 2145, 1346, 4236, 4883, 2974, 2145, 4603,
	1145, 233, 4512, 1812, 1813, 4503, 3330, 2145, 4502, 4337,
	234, 2023, 4274, 4273, 240, 241, 4235, 1509, 1992, 2113,
	4770, 4164, 1968, 1969, 1145, 241, 4078, 233, 239, 4840,
	182, 3331, 1405, 2663, 2018, 2012, 234, 193, 1846, 2095,
	2661, 2170, 2097, 4077, 4076, 2647, 4508, 2645, 2102, 4075,
	2952, 157, 2104, 2214, 4074, 1233, 1385, 2107, 1937, 1938,
	2143, 1841, 1086, 193, 240, 1509, 194, 4541, 4539, 3856,
	1926, 3855, 3682, 3681, 240, 1926, 241, 233, 3674, 3673,
	4838, 1870, 1379, 1985, 3314, 3315, 234, 233, 3314, 3315,
	2117, 3001, 1374, 1993, 3731, 2016, 234, 2116, 4419, 4023,
	1045, 1379, 3959, 3299, 827, 830, 1351, 239, 1943, 1379,
	239, 827, 830, 193, 1695, 1942, 3298, 3221, 2152, 1872,
	2934, 1382, 3930, 893, 1990, 240, 2131, 1983, 3480, 3621,
	2309, 3620, 1914, 4861, 2333, 2024, 4499, 4800, 233, 4781,
	4766, 1961, 2073, 3594, 1786, 1046, 3125, 234, 2228, 2093,
	1265, 1748, 1265, 1705, 1704, 241, 1632, 1245, 241, 3331,
	4381, 1987, 2246, 3545, 2002, 1564, 1564, 2001, 2000, 1998,
	1997, 1996, 4027, 2017, 193, 1405, 4002, 4013, 2245, 3323,
	3324, 3316, 3317, 3318, 3319, 3321, 3322, 1537, 3961, 1544,
	3956, 1550, 2030, 2119, 1631, 3938, 3704, 3454, 2338, 2180,
	2360, 3363, 3782, 3267, 240, 2115, 2213, 240, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 233, 2627, 4439,
	233, 4411, 4775, 2842, 1959, 1939, 234, 3602, 2302, 234,
	1606, 1522, 1355, 2982, 2210, 1317, 2218, 4790, 2993, 2223,
	4787, 3657, 3907, 2044, 2990, 1683, 3152, 1262, 2632, 1262,
	4595, 2988, 3036, 193, 3320, 4321, 193, 4704, 3320, 2931,
	1649, 4573, 1654, 2256, 2261, 3483, 3925, 3092, 3577, 4841,
	4842, 3458, 4442, 4438, 4417, 1667, 3725, 1672, 4466, 4223,
	1564, 3430, 1564, 1261, 1564, 1261, 1581, 2148, 2138, 4776,
	3974, 1573, 1727, 2877, 1727, 2981, 3460, 4942, 1043, 3326,
	3327, 3328, 1564, 1564, 4609, 4459, 3325, 3323, 3324, 3316,
	3317, 3318, 3319, 3321, 3322, 1564, 1386, 4221, 4450, 1025,
	2186, 2930, 4264, 4263, 885, 4218, 1524, 1564, 3972, 1564,
	1564, 1564, 3971, 2188, 3963, 2248, 2249, 1746, 1041, 2633,
	2418, 2301, 1730, 4876, 1745, 1039, 2132, 827, 830, 2416,
	1037, 2895, 3953, 821, 2208, 2895, 2192, 2369, 3973, 1724,
	3330, 3952, 1034, 3950, 3949, 1386, 2893, 3937, 2359, 2298,
	2893, 2250, 3902, 1582, 1529, 1145, 3901, 3314, 3315, 3583,
	3582, 1385, 1528, 3423, 3272, 3271, 2303, 3270, 3269, 3225,
	2999, 2998, 2315, 3513, 2468, 2995, 2984, 2968, 1726, 2967,
	1726, 2962, 1827, 2207, 2204, 2961, 1631, 2222, 2960, 2939,
	1145, 2938, 2899, 2189, 2823, 2677, 2541, 2676, 2336, 2634,
	2370, 2631, 1725, 1792, 2498, 760, 1681, 2262, 886, 3089,
	1385, 760, 2364, 2850, 2827, 1870, 2836, 1619, 4358, 1618,
	2352, 4440, 3705, 4412, 1744, 2448, 1145, 1086, 1145, 1086,
	2936, 4878, 2323, 1577, 2466, 1145, 1380, 2440, 2050, 2050,
	1405, 2312, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1636, 1145,
	1636, 1145, 1145, 1145, 1145, 2283, 2325, 2428, 2452, 2284,
	1629, 3480, 2320, 3331, 2320, 2443, 2470, 2260, 2246, 2321,
	2317, 2193, 1263, 2346, 1263, 2932, 3543, 1145, 2329, 4217,
	2330, 1145, 1145, 827, 830, 1360, 2457, 2137, 2136, 1145,
	2333, 2145, 2147, 1145, 4219, 1145, 1145, 3320, 2956, 4879,
	4877, 2932, 4180, 1405, 2177, 2494, 2495, 3322, 1303, 1145,
	1145, 1145, 1145, 2282, 2389, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1376, 2351, 2949, 2950, 2636, 1817, 1818,
	2949, 2950, 2468, 1031, 2368, 4237, 2194, 2195, 2173, 2949,
	2950, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	2379, 1525, 1084, 2467, 1145, 1617, 1999, 1616, 1820, 1697,
	4475, 2190, 2047, 2356, 1676, 4179, 1267, 2178, 2179, 2627,
	1782, 2608, 2609, 1405, 709, 1590, 2442, 2412, 2884, 2216,
	2376, 2556, 1267, 3132, 2556, 2608, 2624, 2431, 1595, 2430,
	3168, 2922, 2466, 1819, 1757, 2422, 2481, 2174, 1145, 1405,
	704, 759, 2813, 3330, 2564, 2191, 1381, 759, 4881, 2410,
	2140, 2562, 2672, 3316, 3317, 3318, 3319, 3321, 3322, 3318,
	3319, 3321, 3322, 2120, 4215, 2456, 4841, 2465, 3179, 2455,
	2462, 2718, 2718, 2732, 2454, 2608, 2469, 3544, 2753, 2755,
	2572, 1083, 2429, 2630, 2759, 1066, 1086, 2784, 1066, 1066,
	2485, 2003, 3198, 2486, 2487, 1743, 1086, 2623, 4357, 2373,
	1086, 1785, 1705, 2992, 1377, 1705, 2367, 4907, 2921, 2322,
	2935, 3457, 3714, 1378, 2464, 3713, 4772, 2439, 1870, 3213,
	888, 887, 1677, 1797, 3170, 1602, 1358, 4588, 2809, 2776,
	1973, 2377, 2636, 2898, 3771, 2991, 4262, 3951, 1825, 2674,
	2898, 2989, 1346, 1346, 2675, 1992, 4220, 2678, 2987, 2679,
	2680, 761, 1275, 2568, 3948, 2908, 1335, 761, 3922, 930,
	1369, 2044, 2044, 1693, 2142, 3768, 2196, 1277, 2872, 3894,
	2621, 2161, 2798, 3881, 1233, 3589, 2162, 1600, 1682, 3182,
	3934, 2467, 2826, 1761, 2894, 1405, 1740, 2038, 3581, 1086,
	3541, 2994, 1380, 1085, 1272, 182, 3331, 2959, 2775, 2937,
	4854, 2830, 2141, 2449, 2858, 1335, 4673, 1035, 2880, 2783,
	2862, 2788, 2727, 1977, 2794, 2795, 4863, 3982, 2757, 2050,
	2744, 2714, 2268, 2267, 2873, 1576, 1344, 2866, 4862, 2882,
	2777, 2849, 2874, 2765, 2766, 3910, 1335, 1335, 1278, 2838,
	2781, 2782, 2197, 1374, 4880, 3769, 4476, 1035, 2417, 1945,
	4590, 1990, 795, 3212, 1035, 2465, 2865, 2415, 4474, 1036,
	1980, 2180, 1405, 1265, 4472, 2869, 2883, 883, 4213, 882,
	2911, 1035, 3205, 3206, 3983, 1975, 4887, 3920, 1346, 1265,
	4908, 3236, 2821, 4216, 4830, 4093, 2441, 2881, 1379, 1380,
	2163, 4773, 2636, 1978, 2787, 4092, 3708, 3590, 3654, 1145,
	1145, 3935, 1145, 2845, 2900, 1276, 3587, 2167, 2896, 1376,
	3234, 4471, 2868, 3181, 2857, 1094, 2942, 3981, 2860, 2205,
	2861, 3176, 1937, 1938, 4202, 2090, 821, 1579, 1346, 1498,
	1302, 2848, 2852, 4683, 2875, 2232, 1976, 2734, 2867, 4473,
	2239, 2897, 3061, 4403, 3178, 3324, 3316, 3317, 3318, 3319,
	3321, 3322, 3468, 3655, 2972, 2975, 3996, 2957, 4195, 1564,
	1262, 1509, 4188, 793, 2964, 3994, 2241, 2941, 2963, 3103,
	3378, 2878, 1564, 4596, 1564, 1082, 1262, 4616, 2985, 4186,
	2164, 2169, 3120, 3123, 3530, 2180, 705, 4746, 4190, 4747,
	2538, 1564, 1381, 4671, 2211, 4771, 1261, 3039, 1602, 3076,
	3522, 2375, 3041, 2636, 3122, 3031, 1376, 2913, 2916, 2903,
	1755, 2925, 1261, 4196, 1932, 1346, 2966, 1346, 3459, 3072,
	3000, 3133, 3134, 2240, 2940, 3028, 3029, 4214, 2229, 1758,
	2217, 1706, 3140, 3141, 3142, 3654, 4672, 2958, 2206, 1145,
	3154, 3531, 3155, 2951, 2953, 2954, 2955, 758, 1523, 3180,
	1377, 3231, 1287, 2965, 2233, 4189, 1979, 3523, 4290, 1378,
	835, 4829, 3032, 2165, 2200, 2980, 2970, 706, 2552, 3427,
	3126, 2910, 1032, 2405, 827, 830, 3227, 3997, 3232, 2555,
	2215, 3556, 3237, 2411, 3529, 3499, 842, 3130, 3037, 1381,
	2229, 182, 4810, 3135, 2563, 3136, 3117, 2550, 3495, 4851,
	3521, 1529, 4811, 1678, 1145, 3030, 827, 830, 1509, 3042,
	1145, 1145, 2171, 2149, 2150, 1756, 707, 4589, 708, 1335,
	3055, 2201, 1273, 1103, 2812, 3150, 2183, 3107, 4885, 3149,
	2047, 2047, 2044, 3588, 3065, 4089, 2229, 3066, 3105, 3501,
	2161, 931, 4202, 3156, 3159, 2162, 3161, 1377, 3163, 1823,
	1824, 1826, 1827, 2171, 3087, 3494, 1378, 3098, 4370, 3469,
	2536, 2372, 3108, 2539, 2199, 3463, 1145, 1145, 2366, 3377,
	1759, 1509, 1145, 1509, 1973, 1274, 4195, 1636, 4715, 4354,
	794, 4247, 3147, 2184, 1796, 1145, 1145, 1357, 3184, 2225,
	3186, 1145, 1145, 3106, 3127, 3921, 3187, 1145, 3158, 3189,
	3160, 3695, 3162, 3500, 3164, 3165, 727, 1882, 2618, 3277,
	2780, 4909, 2535, 2895, 3693, 3037, 2224, 4191, 2909, 2793,
	3157, 1085, 4192, 3686, 1692, 1694, 2182, 3174, 2914, 796,
	3784, 4196, 4197, 792, 1379, 1263, 3996, 4886, 2546, 4094,
	4896, 4310, 1145, 1145, 1145, 3994, 3228, 4305, 1145, 3995,
	2220, 1263, 1977, 2971, 4083, 4894, 2202, 1977, 1145, 2163,
	2547, 4311, 4267, 4828, 1760, 2548, 2215, 3882, 3233, 2553,
	3260, 3204, 2236, 4888, 4194, 1145, 2167, 4291, 3235, 2178,
	2179, 1292, 3727, 2217, 3196, 1711, 2091, 3195, 3194, 4636,
	4720, 4198, 3193, 4655, 4519, 2166, 922, 4266, 4265, 1980,
	4041, 3642, 2481, 3199, 1980, 4018, 3214, 836, 837, 2221,
	2820, 2290, 1970, 2212, 2778, 2038, 2038, 4353, 2214, 1975,
	3688, 1290, 923, 1283, 696, 1806, 1806, 1807, 4090, 2234,
	3823, 1379, 1978, 3255, 3256, 3687, 4138, 1978, 3259, 1801,
	2484, 2181, 3251, 2133, 4437, 4914, 4809, 4528, 2130, 2164,
	2169, 4629, 4572, 4042, 3475, 1557, 2209, 3997, 1086, 3415,
	3874, 3967, 3954, 3226, 3906, 3643, 3386, 1145, 1145, 1145,
	1145, 3634, 2235, 908, 3471, 3077, 3071, 1145, 1145, 1145,
	1976, 3059, 1145, 2316, 2310, 2304, 2296, 2276, 2216, 3767,
	2275, 3696, 1145, 1267, 1405, 4637, 1570, 3838, 1145, 913,
	1145, 3370, 3371, 2474, 4621, 1294, 4688, 2537, 1644, 1267,
	3728, 3898, 2898, 4658, 3875, 767, 2943, 4622, 1806, 2423,
	2126, 4193, 2128, 4044, 1659, 2771, 4326, 1405, 1805, 1805,
	4095, 3056, 2165, 1305, 4491, 4191, 4489, 4414, 3486, 1267,
	4192, 3876, 1405, 3873, 3482, 3481, 3219, 2357, 3266, 3992,
	4197, 4623, 839, 838, 1346, 2549, 4355, 3197, 2774, 3851,
	4203, 4204, 3387, 3375, 2050, 2551, 2129, 3374, 1405, 1734,
	1733, 2213, 3353, 2349, 4308, 2339, 3878, 3505, 1346, 3422,
	2273, 2171, 1687, 1728, 1346, 2819, 3395, 2818, 3372, 2817,
	2816, 2815, 4194, 4001, 1611, 1979, 1625, 1807, 1807, 2773,
	1979, 2047, 3063, 3437, 2772, 1623, 1145, 1612, 1083, 4198,
	929, 3382, 3385, 3392, 4096, 4625, 840, 841, 4426, 4583,
	1145, 1805, 3824, 2915, 2170, 4493, 4281, 3404, 1882, 3995,
	1346, 3825, 3380, 2919, 3503, 2050, 4014, 4139, 4624, 3464,
	3465, 2475, 3409, 924, 925, 3913, 3391, 3694, 3689, 3690,
	3691, 3692, 2314, 1145, 4913, 4626, 3597, 4848, 2170, 3903,
	3484, 3428, 3381, 3488, 4401, 3035, 3440, 3393, 3444, 1346,
	3425, 3446, 3447, 3396, 3397, 1017, 3450, 3504, 3451, 3131,
	3452, 3413, 3401, 3408, 3417, 3418, 3419, 3420, 3364, 2944,
	2945, 1346, 4638, 1346, 1509, 1509, 1374, 4492, 3040, 1079,
	3455, 3379, 3348, 3349, 3350, 3394, 3038, 3045, 3899, 2228,
	3048, 3448, 3050, 2343, 3461, 1405, 2245, 1686, 2228, 3477,
	909, 910, 4427, 4694, 4584, 3399, 1346, 3400, 3485, 1712,
	1346, 3490, 3476, 4409, 3492, 3559, 3557, 3561, 1517, 4193,
	3565, 4422, 4421, 3877, 3571, 3472, 3434, 3435, 4701, 3436,
	1265, 4685, 3388, 3389, 3390, 1564, 3520, 4145, 3094, 3840,
	3539, 3094, 2643, 4852, 2166, 1778, 1265, 1509, 1346, 1564,
	4722, 1564, 3546, 2435, 4853, 1405, 4850, 4792, 4203, 4204,
	4410, 3445, 821, 1564, 3516, 3449, 2038, 4478, 4612, 3554,
	3416, 1018, 2301, 3591, 1564, 1403, 1265, 3456, 1780, 1503,
	1603, 1777, 766, 4604, 3607, 3467, 1346, 4376, 3462, 1775,
	1752, 1750, 4695, 4585, 4137, 1722, 1720, 4000, 1718, 3345,
	3534, 3542, 3904, 1267, 3743, 2161, 1716, 3650, 1714, 1708,
	2162, 3702, 3701, 3626, 1702, 3438, 1624, 3308, 1700, 1621,
	926, 927, 3120, 3166, 3502, 1622, 3518, 1262, 1564, 3238,
	928, 3120, 3512, 3060, 2983, 2933, 3525, 2847, 2444, 2414,
	1564, 2334, 1564, 1262, 2010, 2006, 3633, 3592, 3532, 3595,
	1781, 1662, 3528, 3346, 3723, 3722, 1801, 2044, 3172, 3578,
	3171, 3138, 3670, 1261, 2463, 3659, 3648, 1739, 2384, 2381,
	2295, 3555, 3547, 1262, 2274, 2079, 1915, 1675, 3568, 1261,
	3579, 1594, 3526, 3566, 3641, 4627, 3527, 3572, 2966, 1405,
	3706, 4628, 1405, 1335, 2254, 3574, 2642, 911, 912, 4765,
	4248, 3958, 3957, 1033, 4249, 4232, 3644, 4684, 3716, 1261,
	4324, 4254, 3580, 4245, 2017, 1023, 1022, 4184, 4040, 4031,
	3970, 3955, 3928, 3649, 2163, 3926, 1145, 3558, 2044, 3905,
	3599, 2941, 1145, 1145, 2437, 4826, 1145, 1145, 1145, 2436,
	1145, 2167, 827, 830, 3631, 3699, 3651, 3629, 3697, 1145,
	2050, 3630, 3584, 182, 182, 3637, 3632, 3622, 1145, 3090,
	3647, 4319, 1019, 1145, 1779, 3082, 3764, 1776, 3075, 1405,
	4823, 3656, 3067, 1086, 3053, 1774, 1751, 1749, 1145, 3052,
	3665, 1721, 1719, 1680, 1717, 1017, 1405, 3033, 3720, 3668,
	3669, 3658, 1715, 1509, 1713, 1707, 2050, 2050, 1145, 1145,
	1701, 1145, 1145, 1145, 1699, 1620, 2864, 2859, 2272, 1079,
	3721, 2270, 3718, 2247, 2164, 2169, 2230, 2198, 3729, 1145,
	2413, 3724, 2185, 1145, 2172, 2050, 2050, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 3710, 1145, 3711,
	2380, 3712, 3796, 3717, 3797, 3746, 1145, 1145, 2050, 2112,
	1265, 2109, 3700, 1145, 1038, 1040, 1042, 3756, 3757, 2106,
	2103, 2098, 2096, 3726, 1145, 2253, 2092, 2083, 3569, 1242,
	1810, 2022, 3217, 2239, 1020, 1267, 1267, 4310, 4842, 1145,
	2134, 4582, 3190, 2494, 3787, 2122, 2123, 2165, 2447, 3188,
	3026, 1018, 1263, 4734, 4340, 1243, 4261, 4311, 4176, 3121,
	2153, 1021, 1575, 4530, 2895, 2895, 2920, 4523, 1263, 3751,
	3753, 1405, 2494, 3802, 4052, 2180, 1772, 1773, 3870, 2893,
	2917, 2371, 2313, 1326, 1346, 1346, 3763, 4733, 3770, 3772,
	3773, 2408, 2159, 3779, 2445, 1325, 2171, 2403, 1263, 1346,
	1346, 2378, 1346, 3835, 3786, 3831, 3774, 1262, 4224, 3879,
	3880, 4256, 3794, 1698, 1024, 4548, 3795, 4424, 3857, 1817,
	1818, 1145, 2923, 4146, 3892, 3893, 4124, 3895, 3218, 3793,
	3827, 3799, 3497, 3801, 2924, 2946, 3842, 1814, 1353, 1145,
	2446, 1811, 1293, 1261, 4845, 1817, 1818, 3570, 3966, 2157,
	182, 4836, 4801, 3051, 2924, 264, 3836, 4028, 3847, 3848,
	2297, 1364, 2990, 2988, 3828, 2997, 1244, 1326, 2121, 2979,
	3965, 2977, 1145, 1145, 2926, 1820, 2047, 4693, 2928, 4882,
	1326, 2331, 2978, 4678, 1819, 4649, 3896, 3844, 3845, 4643,
	3897, 2927, 2158, 4581, 2009, 1023, 1022, 4514, 4484, 2345,
	2347, 4402, 693, 4038, 4030, 4017, 3867, 3636, 3097, 3860,
	1819, 3859, 2350, 2044, 1145, 1077, 2758, 1017, 2118, 2031,
	4724, 4423, 2969, 1521, 2358, 4725, 2361, 2362, 2363, 3927,
	1520, 3929, 3426, 4912, 3314, 3315, 1817, 1818, 1564, 4724,
	4645, 1079, 1019, 1346, 4725, 4856, 1685, 2047, 2887, 2888,
	2885, 2886, 1684, 1531, 4116, 2638, 3884, 2887, 2885, 2044,
	2044, 2673, 3939, 4037, 1754, 4515, 3888, 1753, 2050, 3944,
	3946, 4460, 3960, 3943, 4258, 4253, 4252, 4112, 3883, 2166,
	3775, 3563, 1895, 3560, 1909, 1908, 1900, 1078, 2044, 2044,
	3192, 3909, 1265, 1265, 2451, 4900, 3506, 3507, 4864, 3508,
	3509, 3510, 3969, 4682, 3962, 3931, 4681, 4680, 4611, 1564,
	4610, 3968, 3984, 3986, 4565, 1145, 2155, 3936, 4487, 4454,
	1335, 2044, 4399, 1267, 1145, 4396, 4054, 4394, 4298, 4278,
	3980, 4222, 4171, 1018, 1564, 1564, 1564, 4061, 3103, 2941,
	4068, 1564, 1564, 1564, 4058, 4004, 3999, 3548, 3549, 4003,
	3550, 3551, 3552, 3924, 3916, 3120, 3640, 3639, 3491, 3443,
	3177, 2038, 1564, 3990, 1020, 3476, 3998, 3169, 1405, 3146,
	4049, 3145, 4024, 3144, 4045, 3988, 4046, 4065, 3143, 3081,
	3054, 4025, 1263, 4012, 4034, 2918, 2855, 3977, 2851, 1262,
	1262, 1021, 2840, 2301, 1405, 2839, 4069, 1145, 1145, 4016,
	3989, 2828, 2567, 1145, 1145, 2050, 2438, 2409, 1145, 1145,
	2402, 1145, 2401, 4048, 2400, 2399, 1145, 2398, 4010, 2311,
	3978, 4029, 2285, 2281, 2280, 1261, 1261, 1145, 2279, 2278,
	2277, 2086, 2038, 2085, 2084, 2082, 2021, 1771, 4032, 1770,
	1153, 1709, 1589, 1145, 1024, 1588, 1587, 1586, 4047, 1585,
	1584, 1583, 4055, 1578, 1574, 1572, 4050, 1571, 1514, 2265,
	4081, 4097, 4079, 1513, 4060, 1512, 4056, 1396, 4098, 4066,
	1395, 4080, 1394, 1393, 4067, 1392, 1356, 1023, 1022, 1312,
	1311, 1310, 1309, 1308, 1307, 1306, 271, 271, 271, 1304,
	699, 700, 1299, 715, 699, 715, 725, 1298, 1297, 765,
	1296, 4110, 1295, 785, 1267, 897, 8, 1225, 791, 2124,
	4106, 4091, 1267, 1044, 1030, 271, 1405, 1405, 4587, 1405,
	4201, 4200, 4199, 2434, 1019, 93, 1267, 1580, 859, 87,
	2237, 4151, 3923, 4795, 996, 4721, 904, 1564, 1564, 4615,
	1555, 867, 4703, 271, 4026, 3493, 3002, 2383, 1405, 1710,
	2385, 3403, 2800, 4086, 4670, 4120, 3276, 4555, 4369, 2641,
	1913, 3357, 89, 1129, 1175, 4289, 4288, 4185, 3908, 3610,
	4285, 4284, 2035, 1267, 2037, 1267, 1093, 1408, 4177, 4178,
	1265, 2044, 2047, 4745, 2135, 1135, 4136, 2151, 2144, 2841,
	4154, 4156, 2717, 1152, 1149, 2039, 2041, 4212, 1346, 1151,
	1150, 2040, 1933, 4225, 1148, 2034, 4036, 3101, 1405, 3666,
	1346, 1630, 1628, 1346, 4227, 4228, 998, 2139, 2561, 4159,
	2625, 3265, 1906, 1109, 1405, 1131, 2622, 4147, 2047, 2047,
	4181, 182, 1288, 1120, 1108, 4152, 4150, 4143, 4153, 3383,
	4160, 4148, 4149, 3362, 3653, 4163, 1020, 4257, 3866, 4259,
	2473, 877, 3311, 2628, 1279, 2741, 4211, 2047, 2047, 2733,
	2729, 1564, 1564, 3453, 1263, 1263, 3091, 4169, 1787, 4383,
	3408, 1076, 4226, 1021, 699, 699, 4167, 1262, 4183, 1884,
	4175, 4246, 271, 3102, 4282, 1783, 1390, 1113, 2559, 1346,
	2047, 1897, 3243, 2483, 3660, 3406, 2834, 4241, 4251, 4727,
	3783, 1405, 3175, 2289, 1241, 1240, 1564, 1286, 1239, 4709,
	4706, 2227, 4292, 1261, 2301, 3605, 4276, 4208, 2044, 4208,
	3606, 2127, 2879, 2571, 3623, 4260, 1024, 4279, 1125, 1508,
	2427, 3368, 4015, 1591, 1335, 1564, 1564, 1564, 1564, 1564,
	4270, 4313, 4244, 790, 2497, 4431, 1137, 1869, 4275, 3023,
	1405, 3022, 4576, 2478, 1375, 1373, 1372, 1371, 4316, 4873,
	4277, 1265, 1145, 1145, 1145, 3919, 4269, 2038, 3918, 1265,
	4268, 4327, 3917, 4328, 4230, 4322, 238, 3211, 4315, 1808,
	1405, 4331, 4294, 1265, 4287, 1145, 4283, 4239, 1145, 1145,
	4242, 4304, 1800, 235, 237, 236, 4295, 4299, 1145, 3871,
	3412, 2050, 4799, 3941, 3596, 23, 1145, 1145, 22, 21,
	116, 42, 20, 2038, 2038, 4329, 155, 4336, 133, 152,
	151, 125, 150, 1405, 149, 1564, 148, 4361, 147, 154,
	1265, 146, 1265, 145, 4345, 4343, 140, 2639, 144, 4342,
	143, 142, 2038, 2038, 141, 4349, 4356, 139, 137, 1405,
	138, 132, 4350, 136, 135, 134, 131, 1145, 1262, 130,
	129, 128, 127, 126, 124, 156, 1262, 123, 122, 273,
	1145, 121, 120, 119, 118, 2038, 4366, 4372, 117, 1145,
	1262, 778, 779, 61, 2050, 60, 115, 113, 114, 19,
	40, 14, 65, 1145, 1261, 66, 1145, 18, 3139, 2735,
	13, 35, 1261, 92, 105, 104, 4378, 103, 36, 101,
	1145, 4392, 100, 4393, 34, 17, 1261, 1405, 16, 4434,
	4389, 4390, 15, 98, 1346, 97, 96, 1262, 33, 1262,
	4405, 31, 11, 2810, 1564, 1564, 4406, 9, 37, 4413,
	1994, 12, 5, 2170, 187, 186, 189, 185, 188, 91,
	2047, 184, 1263, 183, 1267, 90, 29, 4404, 10, 179,
	4506, 4022, 4477, 1261, 82, 1261, 4445, 4446, 2871, 181,
	180, 4456, 178, 177, 4486, 4465, 176, 83, 4497, 80,
	3607, 4443, 175, 86, 4505, 1405, 174, 4490, 1564, 81,
	4453, 85, 4455, 84, 4451, 27, 4461, 6, 4463, 64,
	4464, 7, 4351, 3703, 4462, 108, 4033, 109, 38, 78,
	4479, 4469, 77, 76, 75, 4529, 26, 4480, 63, 25,
	1145, 1145, 173, 220, 219, 4488, 218, 4483, 217, 216,
	4457, 215, 214, 4482, 213, 4494, 2565, 1145, 2050, 4513,
	4533, 208, 4535, 4504, 207, 212, 210, 4527, 209, 211,
	206, 230, 1895, 4524, 4509, 4525, 229, 223, 1346, 4521,
	222, 1346, 228, 227, 1107, 226, 225, 4526, 224, 4331,
	4531, 221, 4082, 232, 4532, 205, 1145, 204, 1145, 2890,
	1145, 203, 201, 4564, 197, 196, 4566, 2047, 200, 202,
	1267, 199, 198, 195, 231, 72, 171, 172, 4208, 71,
	170, 4467, 169, 1145, 3027, 1267, 4571, 2740, 168, 167,
	4544, 4545, 166, 165, 2044, 164, 70, 24, 2, 1509,
	1, 0, 0, 0, 0, 0, 0, 4567, 0, 0,
	0, 0, 4547, 1263, 0, 2038, 4543, 4570, 0, 0,
	0, 1263, 1281, 4553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3068, 1263, 1267, 1267, 4598, 4591,
	4592, 0, 0, 1145, 1145, 4618, 0, 0, 0, 0,
	0, 0, 0, 1145, 0, 1301, 0, 0, 1267, 0,
	0, 1267, 0, 0, 0, 1564, 4599, 271, 0, 271,
	271, 4606, 1330, 271, 1340, 1564, 0, 2044, 0, 0,
	0, 0, 1263, 4613, 1263, 1354, 4607, 0, 0, 1145,
	1145, 1265, 0, 785, 0, 4630, 785, 0, 4608, 1145,
	0, 4666, 0, 4667, 4639, 0, 4644, 1335, 0, 4647,
	4651, 4646, 0, 0, 4208, 0, 0, 4632, 4633, 4660,
	271, 0, 271, 271, 1330, 4665, 271, 271, 4663, 4208,
	4664, 1340, 4659, 0, 0, 4509, 0, 4640, 4641, 4652,
	0, 0, 4654, 1145, 1145, 271, 1145, 1533, 4675, 4679,
	1346, 0, 2038, 1346, 4662, 0, 0, 0, 0, 0,
	0, 0, 0, 1553, 0, 0, 0, 0, 0, 0,
	1568, 4691, 4692, 0, 4726, 4718, 4729, 4699, 4719, 4674,
	4208, 4208, 4700, 4730, 0, 0, 4723, 0, 1262, 1593,
	4708, 4711, 1340, 0, 0, 0, 271, 271, 0, 1330,
	0, 0, 4208, 4717, 0, 4208, 0, 4750, 0, 0,
	0, 0, 1145, 1145, 1145, 0, 0, 0, 0, 0,
	785, 0, 271, 271, 1261, 0, 0, 1265, 0, 4735,
	0, 2044, 0, 4712, 1656, 0, 4716, 4741, 4713, 0,
	0, 0, 1265, 0, 1663, 1145, 4749, 0, 0, 904,
	4779, 0, 0, 0, 0, 4761, 4762, 4784, 4764, 4763,
	4780, 0, 0, 0, 0, 4748, 0, 4297, 0, 0,
	798, 0, 0, 0, 0, 0, 0, 4806, 2170, 0,
	4314, 4808, 0, 4807, 0, 0, 0, 0, 0, 4816,
	0, 0, 4814, 1265, 1265, 809, 4798, 0, 1145, 3201,
	0, 0, 0, 4335, 0, 0, 4782, 0, 0, 4486,
	4827, 4813, 0, 0, 4812, 1265, 0, 0, 1265, 0,
	0, 4822, 0, 0, 1262, 4843, 4821, 271, 0, 0,
	4833, 4834, 4824, 0, 0, 0, 0, 4839, 4794, 1262,
	4797, 4837, 4835, 0, 0, 0, 0, 0, 0, 4846,
	4860, 271, 4820, 4849, 4859, 4858, 1267, 4847, 1267, 0,
	1261, 4867, 4729, 2047, 0, 4869, 0, 0, 0, 4866,
	4857, 4855, 4865, 0, 0, 1261, 4708, 0, 0, 4711,
	2735, 2735, 4874, 0, 0, 4875, 0, 0, 803, 0,
	1262, 1262, 0, 0, 1346, 815, 0, 0, 0, 0,
	4897, 4889, 3240, 3241, 4891, 0, 4899, 0, 4898, 808,
	0, 4904, 1262, 0, 0, 1262, 4902, 0, 0, 4895,
	0, 4901, 0, 1145, 1145, 0, 1261, 1261, 0, 0,
	0, 1145, 0, 1145, 1145, 4910, 4906, 4868, 0, 4870,
	4923, 4920, 3575, 4922, 4925, 4916, 2047, 0, 1261, 0,
	4927, 1261, 4928, 0, 4929, 4926, 4924, 4930, 807, 0,
	0, 0, 0, 1263, 3103, 0, 4933, 0, 0, 4934,
	3600, 4935, 0, 4936, 4941, 760, 4939, 4937, 0, 4945,
	4938, 3627, 0, 0, 0, 4944, 4947, 1145, 0, 0,
	0, 4948, 0, 4950, 4941, 4952, 73, 0, 0, 805,
	4208, 0, 4208, 0, 0, 0, 0, 2740, 0, 0,
	0, 0, 0, 74, 0, 0, 4919, 0, 0, 0,
	0, 0, 0, 4917, 4918, 0, 0, 0, 0, 79,
	0, 0, 1107, 1107, 1107, 3676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3698, 2038, 0,
	1489, 0, 699, 0, 1489, 0, 0, 814, 0, 0,
	0, 0, 2735, 2735, 2735, 2735, 0, 0, 3369, 88,
	0, 0, 0, 271, 0, 271, 0, 4949, 0, 271,
	0, 0, 0, 0, 3338, 3339, 3340, 3341, 2740, 2740,
	3442, 0, 1533, 1330, 2014, 271, 0, 271, 2020, 1263,
	2047, 3398, 0, 0, 271, 0, 715, 0, 0, 0,
	898, 271, 0, 1265, 1263, 1265, 3411, 0, 0, 0,
	0, 0, 49, 0, 110, 0, 2087, 0, 0, 94,
	107, 2038, 0, 800, 0, 0, 3470, 0, 271, 0,
	0, 0, 3432, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 804, 1263, 1263, 0, 0, 0,
	0, 0, 0, 0, 0, 3519, 1848, 0, 785, 0,
	0, 0, 0, 1820, 0, 0, 0, 1263, 0, 95,
	1263, 0, 1867, 0, 0, 0, 0, 3533, 0, 3535,
	0, 759, 0, 0, 0, 0, 0, 0, 3695, 1873,
	1262, 0, 1262, 0, 0, 0, 810, 0, 1819, 0,
	0, 3693, 802, 0, 0, 0, 0, 0, 1839, 0,
	3686, 0, 3567, 0, 4617, 0, 3573, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 4650, 0, 0, 0, 0, 799,
	2740, 2740, 2740, 2740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 2038, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 3635, 1842, 1843, 1844, 1845, 1873, 0, 0,
	0, 0, 801, 1825, 0, 0, 1819, 3688, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 3687, 271, 0, 812, 813, 271, 0, 3411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	190, 102, 0, 4736, 106, 0, 1834, 1835, 3696, 4738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 1856, 271, 0, 0, 0, 0,
	239, 271, 0, 0, 0, 0, 0, 271, 899, 1840,
	0, 1825, 0, 153, 3684, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 271, 0, 0, 0, 699,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 904, 241, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 1847,
	1849, 0, 0, 1503, 0, 1263, 1403, 1263, 0, 0,
	0, 0, 0, 0, 157, 3975, 271, 0, 1330, 271,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 194,
	0, 0, 0, 785, 0, 0, 0, 240, 0, 1489,
	271, 0, 0, 0, 0, 0, 0, 0, 2382, 0,
	233, 0, 0, 271, 271, 0, 271, 1840, 271, 234,
	271, 0, 271, 0, 0, 0, 1817, 1818, 0, 0,
	0, 0, 2735, 2735, 3694, 3689, 3690, 3691, 3692, 1846,
	0, 0, 0, 3760, 0, 0, 193, 2419, 0, 1848,
	2420, 0, 2421, 0, 3739, 3740, 1820, 0, 0, 0,
	3776, 0, 1841, 0, 271, 271, 271, 271, 0, 0,
	0, 4062, 4063, 4064, 0, 0, 0, 0, 2345, 4070,
	4071, 0, 1873, 0, 0, 0, 0, 0, 0, 1859,
	0, 1819, 1870, 765, 0, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	1872, 1489, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735,
	2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735,
	2735, 2735, 0, 2735, 3803, 3804, 3805, 3806, 3807, 3808,
	3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818,
	3819, 3820, 3821, 3822, 0, 3826, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2573, 0, 1857, 0, 0, 3869, 1825, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 1872, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 0,
	2740, 2740, 0, 0, 1847, 1849, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1848, 1820, 0, 0, 0,
	0, 699, 1820, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4165, 4166, 271, 0, 0, 0,
	0, 0, 1873, 0, 0, 699, 0, 0, 1873, 0,
	0, 1819, 271, 0, 699, 0, 0, 1819, 0, 3979,
	0, 1839, 1840, 0, 0, 0, 271, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 271, 1340, 0, 0,
	2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740,
	2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740,
	0, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 1340, 1870, 0, 0,
	715, 0, 0, 0, 2854, 0, 1842, 1843, 1844, 1845,
	271, 0, 0, 271, 0, 0, 1825, 271, 2345, 271,
	0, 0, 1825, 0, 1330, 0, 271, 271, 0, 1340,
	1340, 2870, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 1847, 1849, 0, 0, 0, 0,
	1847, 1849, 0, 0, 0, 1841, 0, 79, 0, 0,
	0, 0, 2907, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 4344, 271, 4346, 4347, 4348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1817, 1818,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 271,
	0, 0, 1840, 1100, 0, 0, 0, 0, 1840, 0,
	785, 1848, 73, 1872, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 271, 0, 0, 0, 0, 0, 0, 898, 0,
	0, 0, 0, 0, 1873, 79, 0, 0, 0, 1489,
	49, 0, 110, 1819, 0, 0, 0, 94, 107, 0,
	0, 0, 4395, 1839, 271, 3043, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 1870, 0, 88, 0, 0, 0, 0,
	0, 1533, 0, 0, 271, 0, 271, 0, 0, 0,
	0, 0, 0, 271, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 3086, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 2907, 0, 699, 898, 3742, 0, 0,
	0, 0, 1846, 0, 3115, 904, 2907, 0, 49, 0,
	110, 0, 1489, 4158, 0, 94, 107, 0, 1842, 1843,
	1844, 1845, 0, 0, 4231, 1841, 0, 271, 1825, 0,
	0, 1841, 0, 0, 0, 0, 4240, 0, 0, 4243,
	0, 4481, 4173, 0, 0, 0, 271, 1330, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 271,
	0, 0, 1330, 0, 1330, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 1847, 1849, 0, 0,
	0, 0, 1489, 1872, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 1489, 0,
	271, 271, 271, 271, 1330, 4312, 0, 1330, 0, 271,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 1821, 1822, 1823, 1824, 1826, 1827, 0, 190, 102,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 99, 0, 0, 0, 0, 899, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 4367, 0, 190, 102, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 1841, 0, 1533,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2345, 0, 0, 0, 239, 194, 0, 0,
	0, 0, 0, 2735, 899, 240, 0, 4367, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 1489, 0, 0, 0, 4375, 0, 234, 0, 0,
	0, 0, 0, 2497, 0, 1872, 0, 0, 0, 0,
	4468, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 2735, 0, 0, 0, 0, 0, 0, 0,
	157, 3314, 3315, 0, 3332, 3333, 3334, 0, 0, 0,
	0, 0, 0, 0, 4416, 194, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 2497, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 1817, 1818, 0,
	0, 1837, 1833, 271, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 0, 0, 271,
	1848, 0, 1639, 0, 699, 0, 3329, 1820, 0, 699,
	0, 0, 699, 0, 0, 699, 699, 0, 0, 0,
	0, 699, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 271, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3314, 3315, 0, 3332, 3333, 3334, 0, 0, 0,
	0, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 4102, 271, 271, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 3320, 2735, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 2907, 2907, 271, 0, 2014, 1820, 0,
	0, 0, 0, 2907, 4552, 0, 2020, 1867, 0, 0,
	2740, 0, 0, 0, 2907, 2020, 3329, 2907, 2020, 0,
	0, 2020, 0, 2735, 1873, 0, 0, 1825, 0, 0,
	0, 0, 0, 1819, 0, 0, 271, 271, 2014, 0,
	271, 0, 0, 1839, 0, 4575, 0, 0, 2735, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 271, 0, 3538, 3538, 0, 0, 0, 1330,
	4597, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3330, 0, 2907,
	0, 2907, 0, 3564, 2907, 2014, 0, 0, 2907, 2014,
	0, 0, 785, 0, 0, 0, 0, 0, 0, 0,
	0, 3320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 1842, 1843,
	1844, 1845, 0, 1840, 271, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 3601, 0, 0, 3603, 2907, 0,
	0, 271, 1870, 0, 0, 271, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 3336, 0, 1858, 0, 0,
	1868, 0, 0, 271, 0, 0, 1847, 1849, 3086, 0,
	2740, 1330, 0, 271, 0, 0, 2907, 0, 699, 0,
	0, 0, 1864, 0, 1865, 2907, 0, 0, 1870, 0,
	0, 1834, 1835, 0, 0, 0, 0, 3330, 0, 0,
	0, 0, 0, 0, 0, 0, 3018, 0, 0, 1856,
	0, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	3331, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3709, 0, 2740, 0, 0, 3010,
	3008, 0, 0, 0, 0, 0, 3012, 3014, 3004, 0,
	0, 0, 0, 0, 3715, 0, 0, 1533, 0, 0,
	1330, 271, 0, 271, 0, 0, 1841, 0, 0, 1330,
	1866, 0, 1870, 1489, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 1870,
	271, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 1872, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 1854, 1848,
	3331, 88, 0, 0, 1846, 0, 1820, 0, 3781, 0,
	3326, 3327, 3328, 0, 0, 1867, 0, 3325, 3323, 3324,
	3316, 3317, 3318, 3319, 3321, 3322, 1853, 1841, 0, 0,
	0, 0, 1873, 0, 0, 1107, 0, 0, 0, 0,
	0, 1819, 898, 0, 0, 0, 0, 0, 0, 1107,
	0, 1839, 0, 0, 1859, 0, 110, 0, 0, 0,
	1836, 94, 107, 0, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 3006, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 3020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 271, 0, 0, 0,
	3019, 3011, 3009, 3013, 3015, 3005, 3007, 3021, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 3017, 0, 0,
	699, 699, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	3326, 3327, 3328, 0, 1489, 0, 1825, 3325, 3323, 3324,
	3316, 3317, 3318, 3319, 3321, 3322, 0, 1857, 0, 0,
	3024, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 1858, 0, 4129, 1868, 0,
	0, 4128, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 3314, 3315, 0, 3332, 3333, 3334,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 3748, 3538, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 271, 0, 1855, 0, 715, 715,
	1340, 0, 190, 102, 0, 0, 106, 1870, 0, 3329,
	0, 0, 0, 271, 0, 0, 0, 0, 1489, 0,
	3025, 1489, 0, 0, 271, 3086, 0, 0, 3086, 3016,
	0, 0, 239, 271, 0, 0, 0, 0, 0, 0,
	899, 0, 0, 271, 0, 153, 0, 0, 271, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2907, 271, 0, 0, 0, 0, 0, 0,
	241, 0, 3115, 3115, 0, 1841, 0, 0, 904, 2907,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 3320, 0, 157, 0, 0, 0,
	0, 0, 1859, 0, 0, 1489, 271, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 1872, 0, 0, 0, 0, 0, 1853,
	0, 234, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 3336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 3314, 3315, 0, 3332, 3333, 3334, 0, 0,
	0, 4121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3314, 3315, 3747, 3332, 3333, 3334, 0, 0,
	3330, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 3289, 0, 0, 0, 3290,
	1489, 0, 0, 0, 271, 0, 0, 3329, 0, 0,
	1533, 1853, 271, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 3329, 0, 1853,
	0, 0, 0, 0, 1853, 1870, 0, 0, 0, 0,
	0, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 0, 2907, 2907, 0, 3538, 2907, 0, 0, 0,
	0, 0, 0, 4210, 0, 4210, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2907, 0, 2020,
	0, 0, 0, 1533, 1533, 271, 2014, 0, 0, 1853,
	0, 0, 3320, 0, 0, 1853, 0, 0, 0, 2014,
	0, 271, 2014, 3331, 271, 0, 3538, 0, 0, 0,
	0, 0, 3320, 0, 0, 0, 0, 0, 0, 0,
	0, 2907, 0, 2907, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3336, 0, 2907, 2907,
	1854, 1848, 0, 0, 3086, 3086, 0, 0, 1820, 0,
	0, 4301, 0, 0, 0, 0, 3336, 1867, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 1873, 0, 0, 0, 3330, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 3330, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 0, 0, 0, 0,
	0, 0, 0, 3326, 3327, 3328, 0, 0, 1853, 0,
	3325, 3323, 3324, 3316, 3317, 3318, 3319, 3321, 3322, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 2739, 1825, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 2907, 0, 2020, 0, 0,
	4408, 0, 0, 0, 0, 0, 0, 1858, 0, 271,
	1868, 3331, 0, 0, 0, 0, 1847, 1849, 0, 4432,
	0, 4432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3331, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 1972, 0, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3538, 0, 1330, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 1840, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 1489, 0, 1489, 0,
	0, 4408, 0, 0, 4210, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 2907, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 4518, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 1870,
	0, 3326, 3327, 3328, 0, 0, 0, 0, 3325, 3323,
	3324, 3316, 3317, 3318, 3319, 3321, 3322, 0, 271, 271,
	0, 3326, 3327, 3328, 0, 0, 0, 0, 3325, 3323,
	3324, 3316, 3317, 3318, 3319, 3321, 3322, 1489, 0, 0,
	0, 0, 3781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 1846, 0, 0, 0, 0, 0,
	0, 0, 3538, 4569, 0, 0, 0, 0, 0, 0,
	4408, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 1092, 0,
	4210, 0, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 4210, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 271, 0, 0,
	1489, 0, 0, 0, 0, 1872, 0, 0, 0, 715,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 4210, 4210, 0, 0,
	0, 1839, 4301, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 4210, 1489,
	271, 4210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 1533, 0, 0, 0, 0, 1857, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 2616, 4689, 0,
	0, 2617, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 1489, 0, 4432, 0, 1825, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	2907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 1853, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 1853, 0, 3781, 0,
	1853, 0, 0, 0, 0, 0, 1489, 1856, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 1533,
	0, 0, 1840, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 0,
	0, 0, 0, 0, 1853, 0, 1853, 1853, 1853, 1853,
	0, 0, 0, 0, 1489, 0, 0, 0, 2739, 2739,
	0, 0, 0, 745, 0, 0, 4408, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4210, 0, 4210, 0,
	0, 1533, 0, 0, 1853, 0, 0, 730, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1841, 0, 1853, 0, 732,
	1853, 0, 0, 1853, 0, 0, 0, 0, 0, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 0, 0, 0, 0,
	0, 751, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3115, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 2907, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 3115, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 1107, 1107, 0, 1853, 0, 0, 3335, 0,
	2739, 2739, 2739, 2739, 0, 0, 0, 1853, 735, 1853,
	0, 736, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 1349,
	0, 0, 750, 0, 0, 0, 0, 0, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 0, 1092, 1092, 1092, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	747, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	1535, 0, 1541, 0, 1547, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 1652, 0, 0, 0, 0,
	0, 0, 758, 0, 739, 0, 0, 0, 1665, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 0, 0, 1825, 759, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 755, 756, 753,
	0, 0, 0, 0, 0, 748, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 1741, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	1853, 1853, 0, 1853, 0, 0, 0, 1864, 0, 1865,
	742, 0, 749, 0, 0, 0, 1834, 1835, 0, 0,
	0, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 744, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 1855, 0, 0, 0, 0, 1907, 0,
	0, 1853, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 1853, 1853, 1846,
	2739, 2739, 0, 1820, 1853, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 3335, 3335, 0, 0, 1853, 1853,
	0, 0, 1841, 0, 0, 0, 0, 0, 1853, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 1966, 1966, 1966, 0, 0, 1839, 1859,
	0, 0, 0, 0, 1853, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739,
	2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739,
	0, 2739, 3335, 3335, 3335, 3335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 1853, 0, 0,
	1141, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 1858, 0, 0, 1868, 4127, 1092, 0, 0,
	0, 1847, 1849, 0, 0, 0, 270, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 828, 2710, 2711, 2712, 2713,
	2706, 2707, 2708, 2709, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2686, 2687, 2688, 2689,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 2698,
	2699, 2700, 2701, 2694, 2695, 2696, 2697, 2702, 2703, 2704,
	2705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 2682, 2683, 2684,
	2685, 2690, 2691, 2692, 2693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1853,
	0, 0, 1853, 3335, 3335, 1853, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 2406, 1853,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	3246, 0, 1853, 1853, 1853, 1853, 1853, 0, 0, 0,
	0, 0, 1853, 2432, 1853, 0, 0, 3335, 3335, 3335,
	3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335, 3335,
	3335, 3335, 3335, 3335, 3335, 3335, 3335, 0, 0, 0,
	3335, 0, 0, 1853, 1853, 0, 0, 0, 0, 2472,
	0, 2476, 0, 0, 0, 1853, 0, 0, 2490, 0,
	0, 0, 0, 0, 1853, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 0, 2540, 0, 2542, 2543, 2544, 2545, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	2569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 0, 0, 2620, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 2650, 2653, 2656, 2659, 0, 0, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2731, 0, 2743, 2745,
	2750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1853, 0, 0, 0, 1853, 1853,
	0, 0, 1853, 1853, 0, 0, 0, 1853, 0, 0,
	0, 1853, 0, 0, 0, 0, 1853, 270, 0, 270,
	270, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 2739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	270, 1820, 270, 270, 0, 0, 270, 270, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2739, 0, 0, 0, 0, 828, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 3046, 3047, 0, 3049, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 1873, 0,
	0, 1825, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1868, 0, 0, 1853, 1853, 1853, 1847,
	1849, 0, 0, 0, 0, 0, 0, 1853, 1853, 3335,
	2739, 0, 0, 0, 0, 0, 1853, 270, 0, 1853,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 270, 1856, 0, 0, 0, 0, 0, 0, 0,
	3335, 2739, 1842, 1843, 1844, 1845, 0, 1840, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 3167, 0, 0, 1853, 2739, 0, 0, 0,
	0, 0, 0, 1853, 0, 266, 266, 695, 0, 0,
	0, 0, 1853, 0, 1817, 1818, 0, 0, 0, 0,
	0, 1858, 0, 0, 1868, 0, 0, 0, 0, 0,
	1847, 1849, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 1864, 0, 1865, 0,
	0, 0, 1870, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 1874, 1875, 1268, 0, 0, 0, 0,
	1873, 0, 0, 1856, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 3335, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3223,
	3224, 0, 0, 0, 0, 3230, 0, 0, 1853, 3335,
	1841, 0, 1853, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3244, 3245, 0, 0, 0, 0,
	2620, 3335, 1855, 3737, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 0, 1988, 1825, 1264, 0, 0, 1872, 270,
	0, 0, 0, 0, 0, 3254, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 270, 1988, 270, 0, 0,
	0, 3268, 0, 0, 828, 0, 0, 0, 1846, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 3280, 0,
	0, 0, 1847, 1849, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 270, 0, 1834, 1835, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2750, 2750, 2750, 0, 0, 0, 0, 1853, 745, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 3373, 0, 0, 0, 0, 728, 0,
	0, 0, 0, 729, 0, 1870, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 0, 730, 0, 0, 3750, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 751, 828, 0, 1092,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1853,
	0, 0, 0, 1092, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 1872, 0, 0, 0, 0, 3496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 735, 0, 270, 736, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 747, 0, 0, 1268, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 828, 270, 0, 270, 0, 270, 0,
	270, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 270, 270, 270, 270, 738, 0,
	0, 0, 0, 0, 1854, 1848, 1316, 0, 1316, 1316,
	0, 0, 1820, 0, 0, 0, 0, 1268, 0, 0,
	0, 1867, 0, 0, 1268, 0, 0, 758, 0, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1268, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1400,
	0, 0, 0, 0, 0, 1507, 1836, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 0, 755, 756, 753, 0, 0, 0, 0, 0,
	748, 0, 0, 741, 0, 0, 0, 0, 1268, 2490,
	0, 0, 0, 0, 0, 3734, 3735, 0, 0, 3738,
	0, 0, 0, 3741, 0, 0, 0, 0, 0, 0,
	0, 0, 3745, 0, 0, 0, 0, 0, 0, 0,
	0, 3752, 0, 0, 0, 742, 3373, 749, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 743, 0, 0, 0,
	0, 3765, 1825, 0, 0, 0, 0, 0, 0, 0,
	744, 1645, 1646, 0, 0, 752, 0, 0, 0, 0,
	0, 3788, 3789, 0, 3790, 3791, 3792, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 1858, 3798, 0, 1868, 0, 3800, 0, 0, 0,
	1847, 1849, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 1264, 0, 0, 1834, 1835, 0, 0, 3829,
	3830, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 3841, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 1840, 0,
	0, 0, 3850, 1817, 1818, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	270, 0, 1855, 270, 0, 0, 0, 270, 1819, 270,
	0, 0, 0, 1870, 0, 0, 270, 270, 1839, 0,
	0, 0, 0, 0, 3900, 0, 270, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 1268, 0, 0, 3940, 0, 0, 0,
	0, 0, 3736, 270, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 2051, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 270,
	0, 0, 0, 1825, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 2004, 0,
	0, 0, 0, 0, 270, 0, 828, 0, 0, 0,
	0, 0, 0, 270, 2015, 0, 1507, 0, 1966, 1840,
	0, 1857, 0, 0, 0, 0, 0, 4057, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 3292, 0, 1316, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 270,
	4099, 4100, 0, 0, 0, 0, 4104, 4105, 0, 0,
	0, 4108, 4109, 0, 0, 0, 0, 0, 0, 4113,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1268,
	4117, 0, 0, 0, 0, 1817, 1818, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 4122, 0, 0, 1846,
	270, 270, 270, 270, 0, 0, 0, 0, 1848, 270,
	0, 0, 0, 0, 270, 1820, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 270, 0, 0, 0, 0,
	1819, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 1130, 112, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 1268, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 1268, 0, 0, 0,
	0, 0, 0, 0, 3229, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 0, 1268, 1268, 1268, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	2287, 0, 0, 0, 2294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2307, 0, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 2319, 0, 2319, 0, 0, 0, 0, 0,
	2326, 0, 0, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 1840, 0, 0, 0, 2294, 0, 0, 2354, 0,
	0, 2051, 2051, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2374,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 0,
	0, 0, 0, 2390, 0, 2392, 0, 2394, 1251, 2396,
	0, 2397, 0, 0, 0, 4362, 4363, 4364, 0, 1848,
	0, 0, 0, 1264, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 2490, 1264,
	0, 4373, 4374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 2424, 2425, 2426, 0, 0, 0, 4382,
	4385, 1819, 0, 0, 0, 0, 1268, 0, 0, 1988,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	270, 0, 0, 4433, 270, 270, 0, 0, 0, 1268,
	0, 0, 4441, 0, 0, 3222, 1268, 1817, 1818, 0,
	0, 0, 0, 0, 0, 1268, 4449, 0, 0, 1092,
	0, 0, 0, 0, 0, 270, 1842, 1843, 1844, 1845,
	1848, 0, 1268, 4458, 0, 0, 1825, 1820, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 270, 270, 0, 0,
	270, 0, 1819, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 1839, 0, 1847, 1849, 0, 0, 0, 0,
	0, 1836, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 2807, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 0, 0, 1825, 1268, 0,
	0, 0, 828, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 270, 0, 0, 0, 4574,
	0, 0, 0, 4578, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 270, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 1264, 0, 1847, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2856,
	1834, 1835, 1316, 0, 0, 1268, 1316, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 2307, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 1092, 1092, 0, 0,
	0, 0, 0, 0, 0, 1841, 4648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2490, 0, 0, 0, 0, 0, 0,
	0, 0, 4385, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 1268, 1872, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 1268, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 1092, 0, 0,
	1507, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 2294, 0, 4760, 4760, 4760, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 112, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4783, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 112, 112, 0, 0, 3148, 0, 3151, 0, 0,
	0, 4760, 0, 0, 0, 0, 0, 112, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 3183,
	1507, 3185, 1507, 0, 0, 0, 0, 0, 3191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 3220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4760, 4911, 0, 0,
	0, 0, 0, 0, 4915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1067, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 1887, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 848, 0, 272,
	272, 272, 0, 270, 0, 1893, 0, 0, 270, 1899,
	0, 0, 0, 270, 0, 0, 0, 850, 0, 0,
	0, 0, 851, 0, 0, 0, 1268, 1268, 272, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	1268, 852, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 1268, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 853, 0,
	0, 0, 0, 854, 0, 0, 0, 2051, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 855, 0, 276, 0, 0, 0, 0, 1986,
	0, 1989, 0, 112, 0, 0, 876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 880, 0, 820,
	0, 0, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	3421, 0, 1264, 0, 0, 0, 0, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 1507, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 874, 1988, 0, 0, 1268, 0,
	0, 0, 0, 0, 3466, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 1268, 270, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 270, 0, 0, 270, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 3515, 3517, 0, 0, 2307,
	0, 0, 0, 0, 270, 0, 858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 1268, 0, 1268, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 1268, 871, 0, 1268, 0, 0, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 0,
	3624, 0, 0, 0, 3628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 863, 0, 0, 0, 864, 883,
	0, 882, 0, 2051, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 1087, 866,
	0, 0, 1268, 0, 875, 0, 0, 0, 0, 0,
	884, 0, 881, 0, 0, 0, 0, 0, 761, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2051,
	3719, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 2051, 0, 0, 0, 0, 0, 0, 0, 3732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 1268, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1067, 0, 0, 1067,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 272, 272, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2558, 0, 0, 0, 0,
	0, 0, 0, 272, 1409, 272, 272, 0, 1409, 272,
	272, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1893, 0, 0, 272, 1893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 1251, 0, 1409, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 1988, 1989, 0,
	1409, 2051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	270, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 1268, 0, 1409, 1406,
	0, 0, 0, 0, 0, 0, 0, 1268, 1268, 1268,
	0, 0, 0, 0, 1268, 1268, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 1268, 0, 270, 0, 0,
	0, 1268, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2307, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 0, 4011, 0, 0, 0, 0, 1565, 0,
	0, 0, 4021, 0, 0, 1565, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2307, 0, 0,
	0, 1565, 4039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	0, 0, 0, 0, 0, 4084, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 0, 1268,
	1268, 0, 1268, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 1268, 0, 0, 112, 0, 0, 112, 0, 112,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 1988, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 112, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 1268, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 1268, 272, 272,
	272, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 1268, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 272, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4229, 0, 0, 0, 1268, 1268,
	1268, 1268, 1268, 0, 0, 1409, 0, 0, 0, 0,
	2307, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 0, 0, 0, 820, 0,
	0, 0, 0, 0, 0, 820, 2558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1268, 0,
	0, 2307, 0, 0, 0, 0, 0, 1893, 0, 0,
	0, 4323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 1409, 1409,
	272, 0, 0, 0, 0, 0, 0, 2051, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 1268, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 272, 0, 0, 1268, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 272, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 1268, 0,
	0, 1268, 0, 1409, 0, 1409, 0, 1409, 4418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 272,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 1251,
	1409, 2051, 1409, 1409, 1409, 0, 0, 0, 0, 1565,
	1565, 0, 0, 272, 0, 1251, 0, 0, 0, 1406,
	0, 0, 0, 0, 2307, 0, 272, 272, 0, 272,
	0, 272, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 272, 272,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4542, 1507, 1268,
	1268, 0, 0, 0, 1565, 0, 1565, 0, 1565, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 1268, 0, 1565, 1565, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1565,
	0, 0, 0, 112, 112, 0, 112, 112, 112, 0,
	0, 1565, 0, 1565, 1565, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 112, 0, 112, 112, 112,
	0, 0, 0, 0, 0, 1407, 1409, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1818, 1566, 1850, 1851, 1852, 1861, 1862, 1863, 4653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1848, 0, 0, 1409, 0, 0, 0,
	1820, 0, 0, 0, 1406, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1566, 272,
	0, 0, 1409, 0, 0, 1566, 1873, 0, 0, 1251,
	0, 0, 1087, 0, 0, 1819, 0, 0, 0, 272,
	0, 1566, 0, 0, 0, 1839, 112, 112, 0, 0,
	0, 0, 0, 0, 1836, 0, 4702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 1566,
	0, 0, 0, 272, 0, 0, 272, 0, 0, 0,
	272, 0, 272, 0, 0, 4743, 0, 0, 0, 272,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	1842, 1843, 1844, 1845, 0, 0, 0, 0, 0, 1268,
	1825, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 1868, 0, 0, 0, 272, 0, 1847, 1849,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 272, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 1409, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 272,
	1855, 1251, 1251, 0, 0, 0, 272, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 1409, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 0, 0, 1407, 0, 0, 0, 0, 1841,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 272, 272, 272, 1872, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 1565, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 1565, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 1565, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 3291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	1566, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1566, 0, 1566, 0, 1566, 1836,
	0, 0, 0, 0, 112, 0, 0, 1409, 0, 0,
	1251, 0, 0, 0, 0, 0, 1566, 1566, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 1566, 0, 1566, 1566, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 1409, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1868, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 1865, 0, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 1856, 0, 1406, 272,
	272, 0, 0, 272, 112, 0, 0, 0, 0, 0,
	272, 1840, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 1406, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1407, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1409, 0, 1409, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 272, 1409, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 1409, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 1409, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 272, 1409, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1565, 0, 0, 0, 1406,
	0, 0, 0, 272, 0, 0, 820, 1565, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 1409, 0, 2558, 0, 0, 0, 3288, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 1566, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 1566, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 0, 0, 272, 0, 0, 1820, 0, 0, 0,
	112, 0, 0, 0, 0, 1867, 112, 0, 0, 0,
	0, 1409, 0, 0, 0, 1406, 0, 272, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 272, 0, 0,
	1836, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 1409, 1409,
	0, 0, 0, 0, 1409, 1409, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 0, 1409, 1825, 0, 0, 272,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 1565, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 1565,
	1565, 0, 0, 0, 0, 1565, 1565, 1565, 1866, 1409,
	1409, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 1407, 0,
	1409, 1409, 1406, 0, 0, 0, 0, 1870, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 1407, 0, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	1406, 1406, 0, 1406, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 272, 0, 0, 0, 1409,
	0, 1565, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 1409,
	1409, 1409, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 1857, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 1406, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 1566,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 1566, 0, 1566, 0, 0, 0, 1407,
	0, 0, 0, 1854, 1848, 0, 1409, 1566, 1409, 0,
	0, 1820, 0, 0, 0, 1565, 1565, 0, 1566, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 272, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 1839, 0, 0, 0,
	1565, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 1566, 0, 0, 1565,
	1565, 1565, 1565, 1565, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 1406, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 1406, 0, 1407, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 1409, 0, 0, 0, 0, 0, 1406, 0, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 1847,
	1849, 272, 272, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 1407, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	1841, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 0, 1859, 1820, 0,
	272, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1872, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 1565,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 3287, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 1566, 1566,
	1566, 0, 0, 0, 0, 1566, 1566, 1566, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 1407, 0, 1407, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1566, 1566, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 1407, 0, 0, 0, 0,
	1566, 3286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	1566, 1566, 1566, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1566, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 1419, 646, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 647, 648, 649,
	1422, 306, 307, 650, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 1443, 277, 1444, 1566,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 1566,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 659, 1449, 660, 391, 1450, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 1451, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 1452, 1211, 406, 664, 665, 1453, 666,
	1454, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1455, 419, 421, 420, 1456, 422, 668, 1216, 423, 424,
	1217, 1457, 425, 426, 427, 428, 429, 430, 433, 1458,
	1459, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1460,
	279, 1220, 476, 477, 1461, 669, 478, 670, 480, 481,
	1462, 0, 482, 0, 1463, 1464, 484, 485, 486, 1465,
	1466, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	1467, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 1468, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 1469, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 1470, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 1471, 566, 567, 565, 568, 569, 570, 1472, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 1473, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 1474, 598, 599, 0, 595, 586, 1475,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 1476,
	608, 682, 683, 684, 685, 1477, 617, 1478, 609, 610,
	611, 686, 612, 687, 1479, 613, 614, 615, 616, 0,
	618, 619, 1480, 1481, 620, 621, 622, 624, 625, 623,
	626, 1482, 627, 1483, 0, 628, 629, 630, 688, 689,
	690, 1484, 632, 631, 633, 691, 634, 635, 1485, 1486,
	1487, 1488, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 0, 0,
	0, 0, 0, 2786, 280, 282, 281, 283, 284, 285,
	286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641,
	1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	1419, 646, 299, 300, 301, 302, 303, 304, 1420, 1421,
	0, 305, 647, 648, 649, 1422, 306, 307, 650, 1423,
	1490, 1424, 308, 309, 310, 311, 312, 313, 314, 0,
	1425, 316, 317, 318, 315, 319, 1426, 320, 0, 321,
	322, 323, 324, 325, 326, 1427, 327, 328, 329, 1209,
	330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	1435, 343, 339, 341, 1436, 344, 342, 345, 1437, 346,
	347, 348, 1438, 1439, 349, 350, 351, 1440, 352, 353,
	1441, 354, 355, 356, 1442, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 1443, 277, 1444, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 1445, 375, 376, 377,
	1446, 1447, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1448, 390, 659,
	1449, 660, 391, 1450, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 1451, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 1452, 1211,
	406, 664, 665, 1453, 666, 1454, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 1455, 419, 421, 420, 1456,
	422, 668, 1216, 423, 424, 1217, 1457, 425, 426, 427,
	428, 429, 430, 433, 1458, 1459, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1460, 279, 1220, 476, 477, 1461,
	669, 478, 670, 480, 481, 1462, 0, 482, 0, 1463,
	1464, 484, 485, 486, 1465, 1466, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 1467, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 1468, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 1469, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 1470, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 1471, 566, 567, 565,
	568, 569, 570, 1472, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 1473, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 1474, 598,
	599, 0, 595, 586, 1475, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 1476, 608, 682, 683, 684, 685,
	1477, 617, 1478, 609, 610, 611, 686, 612, 687, 1479,
	613, 614, 615, 616, 0, 618, 619, 1480, 1481, 620,
	621, 622, 624, 625, 623, 626, 1482, 627, 1483, 0,
	628, 629, 630, 688, 689, 690, 1484, 632, 631, 633,
	691, 634, 635, 1485, 1486, 1487, 1488, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 3759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3761, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 1419, 646, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 647, 648, 649, 1422, 306,
	307, 650, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 659, 1449, 660, 391, 1450, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 1451,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 1452, 1211, 406, 664, 665, 1453, 666, 1454, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1455, 419,
	421, 420, 1456, 422, 668, 1216, 423, 424, 1217, 1457,
	425, 426, 427, 428, 429, 430, 433, 1458, 1459, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1460, 279, 1220,
	476, 477, 1461, 669, 478, 670, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 1473, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 1474, 598, 599, 0, 595, 586, 1475, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 1476, 608, 682,
	683, 684, 685, 1477, 617, 1478, 609, 610, 611, 686,
	612, 687, 1479, 613, 614, 615, 616, 0, 618, 619,
	1480, 1481, 620, 621, 622, 624, 625, 623, 626, 1482,
	627, 1483, 0, 628, 629, 630, 688, 689, 690, 1484,
	632, 631, 633, 691, 634, 635, 1485, 1486, 1487, 1488,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4157, 280, 282, 281, 283, 284, 285,
	286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641,
	1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	1419, 646, 299, 300, 301, 302, 303, 304, 1420, 1421,
	0, 305, 647, 648, 649, 1422, 306, 307, 650, 1423,
	1490, 1424, 308, 309, 310, 311, 312, 313, 314, 0,
	1425, 316, 317, 318, 315, 319, 1426, 320, 0, 321,
	322, 323, 324, 325, 326, 1427, 327, 328, 329, 1209,
	330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	1435, 343, 339, 341, 1436, 344, 342, 345, 1437, 346,
	347, 348, 1438, 1439, 349, 350, 351, 1440, 352, 353,
	1441, 354, 355, 356, 1442, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 1443, 277, 1444, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 1445, 375, 376, 377,
	1446, 1447, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1448, 390, 659,
	1449, 660, 391, 1450, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 1451, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 1452, 1211,
	406, 664, 665, 1453, 666, 1454, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 1455, 419, 421, 420, 1456,
	422, 668, 1216, 423, 424, 1217, 1457, 425, 426, 427,
	428, 429, 430, 433, 1458, 1459, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1460, 279, 1220, 476, 477, 1461,
	669, 478, 670, 480, 481, 1462, 0, 482, 0, 1463,
	1464, 484, 485, 486, 1465, 1466, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 1467, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 1468, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 1469, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 1470, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 1471, 566, 567, 565,
	568, 569, 570, 1472, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 1473, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 1474, 598,
	599, 0, 595, 586, 1475, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 1476, 608, 682, 683, 684, 685,
	1477, 617, 1478, 609, 610, 611, 686, 612, 687, 1479,
	613, 614, 615, 616, 0, 618, 619, 1480, 1481, 620,
	621, 622, 624, 625, 623, 626, 1482, 627, 1483, 0,
	628, 629, 630, 688, 689, 690, 1484, 632, 631, 633,
	691, 634, 635, 1485, 1486, 1487, 1488, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4155, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 641, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 1419, 646, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 647,
	648, 649, 1422, 306, 307, 650, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 659, 1449, 660, 391,
	1450, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 1451, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 1452, 1211, 406, 664, 665,
	1453, 666, 1454, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1455, 419, 421, 420, 1456, 422, 668, 1216,
	423, 424, 1217, 1457, 425, 426, 427, 428, 429, 430,
	433, 1458, 1459, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1460, 279, 1220, 476, 477, 1461, 669, 478, 670,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 1473, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 1474, 598, 599, 0, 595,
	586, 1475, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 1476, 608, 682, 683, 684, 685, 1477, 617, 1478,
	609, 610, 611, 686, 612, 687, 1479, 613, 614, 615,
	616, 0, 618, 619, 1480, 1481, 620, 621, 622, 624,
	625, 623, 626, 1482, 627, 1483, 0, 628, 629, 630,
	688, 689, 690, 1484, 632, 631, 633, 691, 634, 635,
	1485, 1486, 1487, 1488, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4368, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4238, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	641, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 1419, 646, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 647, 648, 649, 1422, 306, 307, 650,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	659, 1449, 660, 391, 1450, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 1451, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 1452,
	1211, 406, 664, 665, 1453, 666, 1454, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 1455, 419, 421, 420,
	1456, 422, 668, 1216, 423, 424, 1217, 1457, 425, 426,
	427, 428, 429, 430, 433, 1458, 1459, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1460, 279, 1220, 476, 477,
	1461, 669, 478, 670, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 1473, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 1474,
	598, 599, 0, 595, 586, 1475, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 1476, 608, 682, 683, 684,
	685, 1477, 617, 1478, 609, 610, 611, 686, 612, 687,
	1479, 613, 614, 615, 616, 0, 618, 619, 1480, 1481,
	620, 621, 622, 624, 625, 623, 626, 1482, 627, 1483,
	0, 628, 629, 630, 688, 689, 690, 1484, 632, 631,
	633, 691, 634, 635, 1485, 1486, 1487, 1488, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4085, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 1419, 646, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 647, 648, 649, 1422, 306,
	307, 650, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 659, 1449, 660, 391, 1450, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 1451,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 1452, 1211, 406, 664, 665, 1453, 666, 1454, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1455, 419,
	421, 420, 1456, 422, 668, 1216, 423, 424, 1217, 1457,
	425, 426, 427, 428, 429, 430, 433, 1458, 1459, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1460, 279, 1220,
	476, 477, 1461, 669, 478, 670, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 1473, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 1474, 598, 599, 0, 595, 586, 1475, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 1476, 608, 682,
	683, 684, 685, 1477, 617, 1478, 609, 610, 611, 686,
	612, 687, 1479, 613, 614, 615, 616, 0, 618, 619,
	1480, 1481, 620, 621, 622, 624, 625, 623, 626, 1482,
	627, 1483, 0, 628, 629, 630, 688, 689, 690, 1484,
	632, 631, 633, 691, 634, 635, 1485, 1486, 1487, 1488,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3777, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 1419, 646, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 647, 648, 649,
	1422, 306, 307, 650, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 659, 1449, 660, 391, 1450, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 1451, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 1452, 1211, 406, 664, 665, 1453, 666,
	1454, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1455, 419, 421, 420, 1456, 422, 668, 1216, 423, 424,
	1217, 1457, 425, 426, 427, 428, 429, 430, 433, 1458,
	1459, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1460,
	279, 1220, 476, 477, 1461, 669, 478, 670, 480, 481,
	1462, 0, 482, 0, 1463, 1464, 484, 485, 486, 1465,
	1466, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	1467, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 1468, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 1469, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 1470, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 1471, 566, 567, 565, 568, 569, 570, 1472, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 1473, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 1474, 598, 599, 0, 595, 586, 1475,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 1476,
	608, 682, 683, 684, 685, 1477, 617, 1478, 609, 610,
	611, 686, 612, 687, 1479, 613, 614, 615, 616, 0,
	618, 619, 1480, 1481, 620, 621, 622, 624, 625, 623,
	626, 1482, 627, 1483, 0, 628, 629, 630, 688, 689,
	690, 1484, 632, 631, 633, 691, 634, 635, 1485, 1486,
	1487, 1488, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3598, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 641, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 1419, 646, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 647,
	648, 649, 1422, 306, 307, 650, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 659, 1449, 660, 391,
	1450, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 1451, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 1452, 1211, 406, 664, 665,
	1453, 666, 1454, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1455, 419, 421, 420, 1456, 422, 668, 1216,
	423, 424, 1217, 1457, 425, 426, 427, 428, 429, 430,
	433, 1458, 1459, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1460, 279, 1220, 476, 477, 1461, 669, 478, 670,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 1473, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 1474, 598, 599, 0, 595,
	586, 1475, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 1476, 608, 682, 683, 684, 685, 1477, 617, 1478,
	609, 610, 611, 686, 612, 687, 1479, 613, 614, 615,
	616, 0, 618, 619, 1480, 1481, 620, 621, 622, 624,
	625, 623, 626, 1482, 627, 1483, 0, 628, 629, 630,
	688, 689, 690, 1484, 632, 631, 633, 691, 634, 635,
	1485, 1486, 1487, 1488, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2640, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 1501, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2266, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	641, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 1419, 646, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 647, 648, 649, 1422, 306, 307, 650,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	659, 1449, 660, 391, 1450, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 1451, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 1452,
	1211, 406, 664, 665, 1453, 666, 1454, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 1455, 419, 421, 420,
	1456, 422, 668, 1216, 423, 424, 1217, 1457, 425, 426,
	427, 428, 429, 430, 433, 1458, 1459, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1460, 279, 1220, 476, 477,
	1461, 669, 478, 670, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 1473, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 1474,
	598, 599, 0, 595, 586, 1475, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 1476, 608, 682, 683, 684,
	685, 1477, 617, 1478, 609, 610, 611, 686, 612, 687,
	1479, 613, 614, 615, 616, 0, 618, 619, 1480, 1481,
	620, 621, 622, 624, 625, 623, 626, 1482, 627, 1483,
	0, 628, 629, 630, 688, 689, 690, 1484, 632, 631,
	633, 691, 634, 635, 1485, 1486, 1487, 1488, 636, 637,
	692, 638, 639, 640, 1401, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 1419, 646, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 647, 648, 649,
	1422, 306, 307, 650, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 659, 1449, 660, 391, 1450, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 1451, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 1452, 1211, 406, 664, 665, 1453, 666,
	1454, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1455, 419, 421, 420, 1456, 422, 668, 1216, 423, 424,
	1217, 1457, 425, 426, 427, 428, 429, 430, 433, 1458,
	1459, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1460,
	279, 1220, 476, 477, 1461, 669, 478, 670, 480, 481,
	1462, 0, 482, 0, 1463, 1464, 484, 485, 486, 1465,
	1466, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	1467, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 1468, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 1469, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 1470, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 1471, 566, 567, 565, 568, 569, 570, 1472, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 1473, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 1474, 598, 599, 0, 595, 586, 1475,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 1476,
	608, 682, 683, 684, 685, 1477, 617, 1478, 609, 610,
	611, 686, 612, 687, 1479, 613, 614, 615, 616, 0,
	618, 619, 1480, 1481, 620, 621, 622, 624, 625, 623,
	626, 1482, 627, 1483, 0, 628, 629, 630, 688, 689,
	690, 1484, 632, 631, 633, 691, 634, 635, 1485, 1486,
	1487, 1488, 636, 637, 692, 638, 639, 640, 2615, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 2612, 287, 288, 0, 0, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 2613, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 2611,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 2614, 0,
	0, 0, 0, 0, 0, 1128, 2610, 0, 1088, 1126,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 239,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 241, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 1637, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 233,
	636, 637, 692, 638, 639, 640, 1102, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 1898, 1896, 0, 0, 1126,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 239, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 241, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 1637, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 233, 636, 637,
	692, 638, 639, 640, 1102, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 1898, 3242, 0, 0, 1126, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 239, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 241, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 1637, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 233, 636, 637, 692, 638,
	639, 640, 1102, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 1898, 1896, 0, 0, 1126, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 2746, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2751, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 2747, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 2748,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 2660, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	1128, 2658, 0, 2657, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	1128, 2655, 0, 2654, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	1128, 2652, 0, 2651, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	1128, 2649, 0, 1737, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 1736, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 1091, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 1106, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 4714, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 1106,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 0, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 2492, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 2491, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 0, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 1106, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 4452, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 1106, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 4051,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 1967,
	0, 0, 0, 0, 0, 0, 1128, 0, 0, 0,
	1126, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	3755, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	1967, 0, 0, 0, 0, 0, 0, 1128, 0, 0,
	0, 1126, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2751, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 0, 0, 0, 0, 0, 0, 0, 1128, 1896,
	0, 2756, 1126, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 2754, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 2742, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 2730, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 2728, 0, 2719, 2726, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 2722, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 2723, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 2724, 443, 2721,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 2725, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 2720, 640, 1102, 0, 0, 2716, 0, 2719, 2726,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 2722, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 2723, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 2724, 443,
	2721, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 2725, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 2720, 640, 1102, 0, 0, 0, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 1904, 0, 1128, 0, 0, 0, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2471, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 2433, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 2407,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	1742, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 1671, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 1666, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 1653, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 1648, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 1549, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1548,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 1543, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1542, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 1536, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 1350, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 4759, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	4758, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 4757,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 4759, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 4758, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 4387, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 4388, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 4386, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118, 3209,
	3210, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118,
	3207, 3208, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 0, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 2479, 2480, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 0, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 2738, 0, 0,
	0, 0, 0, 0, 2736, 2737, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 0, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 0, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 3202, 3203, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 2149, 2150, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 0, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 4759, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 0, 1171, 0, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 0,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 4758, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 1088,
	0, 1266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 1167, 0, 305, 647, 648, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 664, 665, 0, 666, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1252,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 279,
	1220, 476, 477, 0, 1172, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 1258, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 1260, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	239, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 0, 595, 586, 241, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 1637, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	233, 636, 637, 692, 638, 639, 640, 1266, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 1256, 0, 1991, 0, 0, 1168,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 1167,
	0, 305, 647, 648, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 1252, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 279, 1220, 476, 477, 0,
	1172, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	1258, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 1260, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 239, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 0, 595, 586, 241, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 1637, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 233, 636, 637, 692,
	638, 639, 640, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 3366, 0, 1266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 1991, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 1167, 0,
	305, 647, 648, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	664, 665, 0, 666, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1252, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 0, 279, 1220, 476, 477, 0, 1172,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 1258,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 1260, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 0, 1248, 0, 1266, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 0, 1256,
	0, 1254, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 1167, 0, 305,
	647, 648, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 664,
	665, 0, 666, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1252, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 0, 279, 1220, 476, 477, 0, 1172, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 1258, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 678,
	1260, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 1266, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1168, 0, 1256, 0,
	1254, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 1167, 0, 305, 647,
	648, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 664, 665,
	0, 666, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1252, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 0, 279, 1220, 476, 477, 0, 1172, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 1258, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 1260,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 1266, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1168, 0, 1256, 0, 1254,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 1167, 0, 305, 647, 648,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 664, 665, 0,
	666, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	0, 279, 1220, 476, 477, 0, 1172, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 1266, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 4209, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 1167, 0, 305, 647, 648, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 664, 665, 0, 666,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 0,
	279, 1220, 476, 477, 0, 1172, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 1260, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 274, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 2583, 2584,
	2585, 2602, 2603, 2604, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 2605, 0,
	641, 0, 0, 0, 0, 289, 290, 1888, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 1873, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	2595, 0, 316, 317, 318, 315, 319, 0, 320, 2591,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 2596, 2597, 2598, 2599, 371,
	372, 373, 656, 0, 0, 2590, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 2600, 2601,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 2593, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 2594, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 1872, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 1563, 2580, 2581, 2582, 2606, 2592, 2586,
	0, 2588, 2589, 2587, 2574, 2575, 2576, 2577, 2578, 2579,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 1490, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 1211, 406, 664, 665, 0,
	666, 0, 407, 408, 1213, 667, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	0, 0, 1220, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 239, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	241, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 1637,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 233, 636, 637, 692, 638, 639, 640, 0,
	0, 234, 1634, 0, 1563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 193, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 1490, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 1211, 406, 664, 665,
	0, 666, 0, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 0, 0, 1220, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 239, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 241, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	1637, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 233, 636, 637, 692, 638, 639, 640,
	1563, 1562, 234, 0, 0, 0, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 193,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 1490, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 1211, 406, 664, 665, 0, 666, 0, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 0, 0, 1220,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1563, 1562, 0, 0,
	0, 0, 1560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1661, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 1211, 406,
	664, 665, 0, 666, 0, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 0, 0, 1220, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1563, 1562, 0, 0, 0, 0, 1560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 3675, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 1490, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 1211, 406, 664, 665, 0, 666,
	0, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 0,
	0, 1220, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 2348,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1563, 2258,
	0, 0, 0, 0, 2259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 1661, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 1490, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	1211, 406, 664, 665, 0, 666, 0, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 2257, 421, 420,
	0, 422, 668, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 0, 1220, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1563, 1562, 0, 0, 0, 0,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 1661, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 1490, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 1211, 406, 664, 665,
	0, 666, 0, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 0, 0, 1220, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	0, 1088, 0, 274, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 1643,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 239, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	241, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 1637,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 274,
	0, 0, 233, 636, 637, 692, 638, 639, 640, 0,
	0, 234, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 193, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 1266, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 2005, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	1167, 0, 305, 647, 648, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 664, 665, 0, 666, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 279, 1220, 476, 477,
	0, 1172, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 274, 3116, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	274, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 4921,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 0, 274, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 3625, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 274, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	1631, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	274, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 3104,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 274, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 3780, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 0, 918, 0, 819, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 2335, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 826, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 916,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 279, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 824, 600, 601, 602, 603, 604, 825, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 819, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 2076, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 829, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	826, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 2075, 561,
	562, 563, 564, 0, 2077, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 824, 600, 601, 602, 603, 604, 825, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 2074,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 819, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 2027, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 829, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 826,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 2026, 561, 562,
	563, 564, 0, 2028, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	824, 600, 601, 602, 603, 604, 825, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 2025, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 817,
	0, 819, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 829, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 826, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 279,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 824, 600,
	601, 602, 603, 604, 825, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 2049, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 0, 2055, 0, 297, 2045, 298, 2061,
	0, 2068, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 2071, 2072, 0, 0, 306, 307, 0, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 1191, 338, 340, 2059, 2058,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 2057, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 2066, 2067, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 1211,
	406, 2052, 2053, 0, 2048, 0, 407, 408, 1213, 0,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 0, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 0, 1220, 476, 477, 0,
	0, 478, 2060, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 0, 1221,
	489, 1222, 0, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 2042, 503,
	504, 505, 2043, 506, 507, 508, 0, 509, 0, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 2056, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 0, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 2054, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	2070, 589, 590, 591, 592, 0, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 2062, 2063, 2064, 2065,
	0, 617, 0, 609, 610, 611, 0, 612, 0, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 0, 2046, 2069, 0, 632, 631, 633,
	0, 634, 635, 0, 0, 0, 0, 636, 637, 0,
	638, 639, 640, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 2036, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 826,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	824, 600, 601, 602, 603, 604, 825, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 819, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 829, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 826, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 2386, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 2387, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 824,
	600, 601, 602, 603, 604, 825, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 2388, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	829, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 279,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 1563, 1562, 0, 0, 0, 0, 1560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 1490, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 1211, 406, 664, 665, 0,
	666, 0, 407, 408, 1213, 667, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	0, 0, 1220, 476, 477, 3976, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1563,
	1562, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 1490, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 1211, 406, 664, 665, 0, 666, 0, 407, 408,
	1213, 667, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 0, 0, 1220, 476,
	477, 3576, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1691, 0, 1563, 1562, 0,
	0, 0, 0, 1560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 1690, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 0, 1220, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	1689, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 1688, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1556, 0, 1563, 1562, 0, 0, 0,
	0, 1560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 1490, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 1558, 662, 663,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 1211, 406, 664,
	665, 0, 666, 0, 407, 408, 1213, 667, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 0, 0, 1220, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1563, 1562, 0, 0, 0, 0, 1560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 1490, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 1211, 406, 664, 665, 0, 666, 0,
	407, 408, 1213, 667, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 0,
	1220, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1563, 1562, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 0, 1220, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 1563, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 1211, 406,
	664, 665, 0, 666, 0, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 0, 0, 1220, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 2908, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 2905, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 2912, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	3617, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 2911, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 3614, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 3616, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 3613, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 2910,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 3615, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 2908, 306, 307, 650, 0, 0, 2902, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 2905, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 2912, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 2911, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 2901, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 2910, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 2909, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	1768, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 1767, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 1766, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 1769, 553, 560, 561, 562, 563,
	564, 0, 1765, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 1763,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 1764, 631, 633, 691, 634, 635, 1494, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1496, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 1258, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 1491, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	1493, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 1258, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 1397, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1399, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 1258,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 724, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 723, 285, 286, 713, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 716, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 717, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 718, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	712, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 713, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	716, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 717, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 718, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 713, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 716,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 717, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	718, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 713, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 716, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	3987, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 718,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 1258, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 3524, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 3074, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 3073, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 2355, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	2293, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 2300,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 2299, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 279,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 2286, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 2288, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	2251, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 1258, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 1609, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1608, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 1511, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	1504, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1506, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 1333, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1332, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 1323, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	1322, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 1320, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1319, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 1315, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 1314, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	694, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 265, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 716, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 717, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 718, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 2395, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2393, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 2391, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 279, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 2306, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 2100, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 2094, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 903, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 902, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 901, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 3617, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 4286, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 1361, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 1364, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 1362, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 784, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 783, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 782, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 1365, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 780, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1361, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 1364, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 1362, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 784, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 783, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 782,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 1365,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 780, 683, 684, 685, 0, 617,
	0, 609, 1363, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 703, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 702, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 701, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 274,
	3116, 0, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 274, 4302, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 4568, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 4182, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 3942, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 2791, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 274, 3116, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 3113, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	2217, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 783, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	782, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 780, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 2365,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 2353, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1664,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1657, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 774, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 770, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 775, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 784, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 783, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 782, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 1642, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 780, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1615, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 1614, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1599, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 1597, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1592,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1569, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 1567, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 1554, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1516, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1499, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1367,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	783, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 782, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	780, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1338, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 1337, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 1329, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 1328,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	1282, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 789,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 774, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 770, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 769, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 775, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	784, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 783, 545, 546, 547, 548, 771, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 782, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 772, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 780, 683, 684, 685, 0, 617, 0, 609,
	776, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 763,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	764, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 726, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 720, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 698, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 3645, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 783, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 782, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 780, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 3562, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 3540, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 3537, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	3489, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 3487,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 3473, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 3084, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 764, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 2324, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	0, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1300, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 1231,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 0, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 0, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 0, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 0, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 1605, 0, 1345, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	1347, 333, 334, 335, 336, 337, 0, 338, 340, 0,
	0, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	1604, 0, 0, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 0, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 0, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 0, 478, 0, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 0,
	0, 489, 0, 0, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 0,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 0, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1348, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 0,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 0, 589, 590, 591, 592, 0, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 0, 0, 0,
	0, 0, 617, 0, 609, 610, 611, 0, 612, 0,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 0, 1519, 0, 1345, 632, 631,
	633, 0, 634, 635, 0, 0, 0, 0, 636, 637,
	0, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 0, 0, 0, 0, 306, 307, 0, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 1347,
	333, 334, 335, 336, 337, 0, 338, 340, 0, 0,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1518,
	0, 0, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 0, 0, 0, 0, 0, 407, 408, 0, 0,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 0, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	0, 478, 0, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 0, 0,
	489, 0, 0, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 0, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 0, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1348, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	0, 589, 590, 591, 592, 0, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 0, 0, 0, 0,
	0, 617, 0, 609, 610, 611, 0, 612, 0, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 0, 1343, 0, 1345, 632, 631, 633,
	0, 634, 635, 0, 0, 0, 0, 636, 637, 0,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 0, 0, 0, 0, 306, 307, 0, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 1347, 333,
	334, 335, 336, 337, 0, 338, 340, 0, 0, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 1342, 0,
	0, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	0, 0, 0, 0, 0, 407, 408, 0, 0, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	0, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 0,
	478, 0, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 0, 0, 489,
	0, 0, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 0, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	0, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1348, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 0, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 0,
	589, 590, 591, 592, 0, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 0, 0, 0, 0, 0,
	617, 0, 609, 610, 611, 0, 612, 0, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 0, 2114, 0, 1345, 632, 631, 633, 0,
	634, 635, 0, 0, 0, 0, 636, 637, 0, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 1347, 333, 334,
	335, 336, 337, 0, 338, 340, 0, 0, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 0,
	0, 0, 0, 0, 407, 408, 0, 0, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 0,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 0, 478,
	0, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 0, 0, 489, 0,
	0, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 0, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 0,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1348, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 0, 589,
	590, 591, 592, 0, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 0, 0, 0, 0, 0, 617,
	0, 609, 610, 611, 0, 612, 0, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 0, 2081, 0, 1345, 632, 631, 633, 0, 634,
	635, 0, 0, 0, 0, 636, 637, 0, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1347, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 0, 0,
	0, 0, 0, 407, 408, 0, 0, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 0, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 0, 478, 0,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 0, 0, 489, 0, 0,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 0, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 0, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1348, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 0, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 0, 589, 590,
	591, 592, 0, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 0, 0, 0, 0, 0, 617, 0,
	609, 610, 611, 0, 612, 0, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	0, 0, 0, 1345, 632, 631, 633, 0, 634, 635,
	0, 0, 0, 0, 636, 637, 0, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 0, 0,
	0, 0, 306, 307, 0, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 1347, 333, 334, 335, 336,
	337, 0, 338, 340, 0, 0, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 0, 0, 0,
	0, 0, 407, 408, 0, 0, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 0, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 0, 478, 0, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 0, 0, 489, 0, 0, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 0, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 0, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1348,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 0, 589, 590, 591,
	592, 0, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 0, 0, 0, 0, 0, 617, 0, 609,
	610, 611, 0, 612, 0, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 0,
	0, 0, 0, 632, 631, 633, 0, 634, 635, 0,
	0, 0, 0, 636, 637, 0, 638, 639, 640, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1817, 1818, 1867, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1854, 1848,
	0, 0, 0, 0, 1819, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 1839, 1867, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 1854, 1848, 1825,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1817, 1818, 1867, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 1873, 0, 0, 1854, 1848, 1825, 0, 1858, 0,
	1819, 1868, 1820, 0, 0, 0, 0, 1847, 1849, 0,
	1839, 1867, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 1864, 0, 1865, 0, 0, 1873, 0,
	0, 0, 1834, 1835, 0, 1858, 0, 1819, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 1839, 0, 0,
	1856, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	1864, 0, 1865, 0, 0, 1840, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 1840, 0, 0, 1825, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 0,
	1870, 0, 1825, 0, 1858, 0, 0, 1868, 1866, 0,
	0, 0, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 1864,
	0, 1865, 0, 0, 0, 0, 0, 1870, 1834, 1835,
	0, 1858, 0, 0, 1868, 0, 0, 0, 0, 0,
	1847, 1849, 0, 0, 0, 1846, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 1840, 0, 0, 0, 1834, 1835, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1841, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 1872, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 1841, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 1846, 0,
	0, 0, 2617, 0, 0, 1857, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 1841, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 1817, 1818, 4690, 1850, 1851, 1852, 1861,
	1862, 1863, 1872, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 1857, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 4686, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 1817,
	1818, 4593, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 1854, 1848, 1825, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 1858, 0, 1819, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 1865, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1854, 1848, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 1866, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	1872, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	1870, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 1841, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 4551, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 1859, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 1858, 0, 0,
	1868, 0, 1820, 0, 0, 0, 1847, 1849, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 1873, 0,
	0, 1834, 1835, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1856,
	0, 0, 0, 0, 0, 0, 1836, 0, 1857, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 4550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 1870,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 1858, 0, 0, 1868, 0, 0, 0, 0, 0,
	1847, 1849, 1854, 1848, 1846, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 1864, 0, 1865, 1867,
	0, 0, 0, 0, 0, 1834, 1835, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 1856, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 1839, 0, 0, 1840, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 4371, 1846, 1858,
	0, 0, 1868, 0, 0, 0, 0, 0, 1847, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 1856, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 1872,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1866, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1855, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 4205, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 1842, 1843, 1844, 1845, 0, 0, 1841,
	0, 1867, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 0, 1859, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 1858, 0, 0, 1868, 1836, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 1857,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 1866, 0, 0, 0, 4132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 1855, 1868, 0, 0, 0, 0, 0,
	1847, 1849, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 1840, 1846,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1841, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 1866, 0, 0, 0, 0, 1859,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1855, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 1841, 1857, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 1859, 0,
	0, 0, 4131, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 1858, 0, 0, 1868, 0, 0,
	0, 0, 0, 1847, 1849, 1854, 1848, 0, 0, 1872,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 1864,
	0, 1865, 1867, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 1856, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 1840, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 1866, 0, 0,
	0, 4130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 1846, 1858, 0, 0, 1868, 0, 1820, 0, 0,
	0, 1847, 1849, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 1864, 0, 1865,
	0, 0, 0, 1873, 0, 0, 1834, 1835, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1839, 0, 1856, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 1870, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 3785, 0, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 0, 0, 0, 0, 0,
	1834, 1835, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 1859,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1848, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 1866,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1855, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 3284, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 1841, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 1858,
	0, 0, 1868, 0, 1820, 0, 0, 0, 1847, 1849,
	0, 0, 0, 1867, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	1873, 0, 0, 1834, 1835, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1856, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 1866, 0, 0, 0, 3283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 1870, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 1847, 1849, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 1859, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 1866, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 1855, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 3282,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 1841, 0, 0, 0, 1825, 4832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1848, 0, 0, 1858, 0, 0, 1868,
	1820, 0, 0, 0, 0, 1847, 1849, 0, 0, 1867,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 0, 1873, 0, 0, 0,
	1834, 1835, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 1856, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 1866,
	0, 0, 0, 3281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 0, 0, 1870, 0,
	1825, 0, 3346, 0, 0, 0, 0, 3345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4831, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1858,
	0, 0, 1868, 0, 0, 0, 0, 0, 1847, 1849,
	0, 1854, 1848, 1846, 0, 0, 0, 3217, 0, 1820,
	0, 0, 0, 0, 1864, 0, 1865, 0, 1867, 0,
	0, 0, 0, 1834, 1835, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 1856, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1839, 0, 1840, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 3218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 1846, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 1864, 0, 1865, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2764, 1859, 0, 0, 0,
	1856, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 1872, 0, 2763,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 1866, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1855,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 0, 0, 0, 0, 0,
	0, 1820, 1842, 1843, 1844, 1845, 0, 0, 1841, 0,
	1867, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 1859, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 1858, 0, 0, 1868, 1836, 0, 0, 0, 0,
	1847, 1849, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 1857, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 1855, 1868, 0, 0, 0, 0, 0, 1847,
	1849, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 0, 0, 1840, 1846, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 1841, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1866, 0, 0, 0, 0, 1859, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1855, 1085, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	1841, 1857, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 1859, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 1847, 1849, 1854, 1848, 0, 0, 1872, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 1864, 0,
	1865, 1867, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 1856, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1840, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 3352,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	1846, 1858, 0, 3347, 1868, 0, 1820, 0, 0, 0,
	1847, 1849, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 1864, 0, 1865, 0,
	0, 0, 1873, 0, 0, 1834, 1835, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1839, 0, 1856, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 1870, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 1859, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1866, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1855, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 1841, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 0, 1858, 3285,
	0, 1868, 1820, 0, 0, 0, 0, 1847, 1849, 0,
	0, 1867, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 1865, 0, 0, 1873, 0,
	0, 0, 1834, 1835, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1856, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 0,
	1870, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	3312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 1858, 0, 0, 1868, 0, 0, 0, 0, 0,
	1847, 1849, 0, 1854, 1848, 1846, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 1864, 0, 1865, 0,
	1867, 0, 0, 0, 0, 1834, 1835, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 1856, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1839, 0, 1840, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 1846, 0,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 1847,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 1856, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 1872,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1866, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1855, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 1017, 0, 1842, 1843, 1844, 1845, 0, 0,
	1841, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 991, 0, 974, 973, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 1847, 1849, 0, 0, 993, 0, 1872, 0,
	0, 0, 975, 0, 0, 0, 0, 978, 1864, 0,
	1865, 0, 1028, 0, 0, 0, 0, 1834, 1835, 0,
	0, 988, 989, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1018, 980,
	1840, 0, 0, 0, 0, 981, 0, 0, 0, 0,
	0, 0, 0, 2337, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 1015, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 1016, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 985,
	986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 994, 992, 0,
	1846, 0, 0, 0, 0, 987, 0, 0, 0, 1003,
	0, 0, 1023, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 1025, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 1019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 979, 0, 0, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	977, 0, 0, 0, 1010, 1011, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 1013, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 1020, 1008, 0, 0, 0, 0, 0, 0, 0,
	1026, 1004, 0, 0, 997, 995, 0, 1000, 0, 0,
	0, 0, 0, 1001, 0, 0, 970, 0, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 1002, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 0, 0, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1009,
}

var sqlPact = [...]int{
	309, -1000, -1000, -1000, -1000, 157, -1000, -1000, 156, 155,
	152, 151, 147, 146, 145, 141, 140, 139, 137, -1000,
	-1000, -1000, -1000, -1000, -1000, 136, -1000, -1000, 133, -1000,
	132, 128, 127, -1000, -1000, 126, -1000, 125, -1000, -1000,
	-1000, -1000, 121, 119, 118, 91026, 90468, 91575, 2348, 114861,
	98199, 1982, 80478, 114303, 79920, 113745, 2216, 8541, 113187, 2783,
	117, -1000, 112629, 116, 115, 114, -1000, 112071, -1000, 2102,
	-1000, 112, -1000, 4728, 69867, 111, 110, 109, 105, 2428,
	103, -1000, 102, 101, -1000, -1000, 100, -1000, 12985, 1551,
	-1000, 98, 97, -1000, 884, 95976, 96, 95, 94, 2741,
	91, 90, 68211, 89, 88, 87, 2664, 2878, -1000, -1000,
	2061, -1000, -1000, 86, 85, 84, 83, 82, 81, 78,
	76, 74, 73, 72, 69, 67, -1000, 66, 58, 57,
	56, 55, -1000, 52, 48, 45, -1000, 44, -1000, 43,
	42, 39, 38, 37, 36, 33, 31, 29, 28, 26,
	25, 23, 21, 132638, -1000, -1000, 20, 1941, 1720, 1708,
	1703, 1696, 1656, 939, 18, 15, 13, 11, 10, 9,
	8, 4, 1, 0, -1, -5, -7, -10, -11, -12,
	-13, -15, 123, -17, -18, -19, -20, -21, -24, -27,
	3553, -1000, 1811, 1014, 32342, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 122547, 115410, -29, -268, -31, -1000, 3367,
	918, 56431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 410, 2044, 702, -1000, -1000,
	-1000, 111522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2347, -66, -1000, 2032, -1000, -1000, -1000, -1000, -1000, 701,
	-1000, 2345, 329, 2302, -1000, -1000, -1000, 3422, 2482, 3840,
	3838, 3836, 3835, 3830, 121998, 1799, 3827, 2543, 3823, 3822,
	3821, 3820, 3819, 3818, 3817, -1000, 89910, 1041, 89352, 88794,
	3433, 110973, 88236, 110415, 124752, 48446, 935, 3418, -1000, -1000,
	-1000, -1000, -1000, -1000, 115410, -1000, 1038, -1000, -1000, 3814,
	2094, 696, 97641, -1000, -1000, 109857, 2128, -1000, -1000, -1000,
	912, 1159, 34055, 34055, 34055, 216, -1000, -1000, -1000, -1000,
	-1000, -1000, 3813, 3811, 3810, 3808, 3805, -1000, -1000, 79362,
	25302, 78804, 78246, 109299, 24734, 87678, 87120, 3803, 3801, 3796,
	108741, 124203, 3542, 3535, 1037, 2028, 1444, -1000, -1000, -1000,
	-1000, -1000, -1000, -52, 72087, 3585, 115410, -1000, 213, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47875, 706, 47304, 1017,
	46733, 561, 108183, -1000, -1000, -1000, -1000, 74361, -1000, 107625,
	2473, 3795, 3793, 1127, 3792, 3304, 1694, 3791, 1877, 1205,
	3789, 3788, 3787, 3785, 3784, 3783, 3780, 1484, 107067, 2988,
	1513, 106509, 1693, 123654, 1036, 86562, 91575, 2633, 105951, 1461,
	1293, -1000, -1000, -1000, -1000, 3107, 2873, 2864, 1169, -1000,
	-1000, -1000, -1000, 59810, 5963, 5875, -1000, -1000, 10766, 105393,
	62640, 91575, 91575, -1000, -1000, -1000, -1000, -1000, -1000, 46162,
	704, 45591, 874, 104835, -1000, -1000, 60376, 2953, -1000, -1000,
	-1000, -1000, -1000, 104277, 45020, 372, 44449, 824, 115410, -1000,
	2984, 1972, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3271, 1603, 3584, 2764, 73793, 2131, 1400, 3379, 3106, 3102,
	1512, 2011, 3097, 3779, 2653, 3096, 3094, 3086, 3084, 3083,
	1260, 2603, 568, 2590, 31771, 2974, 1709, 43878, 1545, 1509,
	3079, 3078, 3602, 1985, 2002, 2151, 77688, 3777, 3775, 3328,
	3077, 3069, 2832, 3066, -1000, 2952, 1479, 212, -1000, -1000,
	-1000, -1000, -1000, -1000, 1502, -1000, -1000, -1000, -1000, -1000,
	82125, -1000, -1000, 1685, -1000, -1000, 1685, -1000, -1000, -1000,
	-1000, -1000, 1266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1811, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2941, -1000, 2091, -1000,
	-1000, 2526, 3342, 3342, 3342, 3417, 391, 383, -1000, 123,
	-1000, -1000, 132473, -1000, -1000, 49017, 49017, 49017, 49017, 49017,
	49017, 49017, 49017, 2219, -1000, 690, -1000, -1000, 742, -1000,
	689, 613, 521, -1000, -1000, -1000, -1000, -1000, -1000, 688,
	-1000, -1000, -1000, -1000, -1000, -1000, 3585, -1000, 28212, -1000,
	-1000, -1000, 286, 687, 49017, -1000, -1000, 3620, 3619, 595,
	-1000, 210, 928, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2983, 684, 683, -1000, 681,
	680, 676, 675, 673, -1000, 672, -1000, 667, 666, 665,
	664, 663, 662, 659, 658, -1000, 1999, -1000, -1000, -1000,
	-1000, -1000, -1000, 591, 590, 590, 590, -1000, 1030, -1000,
	-1000, -1000, 251, 577, 243, 571, 570, 564, -1000, 651,
	650, 649, 646, 645, 638, 636, 635, 622, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1029, -1000, -1000, -1000, -1000,
	-53, 115410, -1000, 410, -53, -1000, -1000, 615, -1000, 36368,
	36368, 36368, -1000, -1000, 2336, 49017, -1000, 2438, -1000, -46,
	-46, 871, 58108, -1000, 55293, 871, 297, 752, 63755, -1000,
	2947, -1000, -1000, 614, 203, -1000, -1000, -1000, -1000, 25868,
	2946, 115410, 115410, 115410, 91575, 91575, 91575, 115410, 3774, 3233,
	49017, -1000, -1000, 69309, 126399, 92124, -1000, -1000, 3521, 70423,
	68760, 126399, 2982, 125850, 3773, -1000, -1000, -1000, -1000, -1000,
	3213, 3772, 3771, 3769, -1000, 115410, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 230, 3212, -1000, -1000, 95418, 230, 3208,
	-1000, 230, 3207, -1000, 94869, -1000, -1000, 2231, 3206, -1000,
	-1000, 236, 3205, -1000, -1000, -1000, 231, 3197, -1000, -1000,
	202, -102, 3195, -1000, -1000, -1000, -1000, -1000, -1000, 132473,
	-1000, -1000, -1000, 125301, -1000, 3336, -1000, 115410, -1000, 49017,
	-1000, -1000, 3520, 2031, 3381, 3458, -1000, -1000, -60, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2519, 2506, 1139, 2373,
	-1000, 3249, 1893, 34055, 3291, -1000, -1000, -1000, -1000, -1000,
	196, 25868, -1000, -1000, -1000, -1000, -1000, -1000, 3071, 3160,
	1469, -1000, 2371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2135, 3158, -1000, 1655, 3153, 2073, -1000, -1000,
	2265, -1000, 3325, -1000, -1000, 2141, 3152, -44, -1000, -1000,
	2281, -1000, -1000, -1000, -1000, 1975, -1000, 1315, 3149, -1000,
	2763, 2763, 86004, 3182, 62074, 60376, 72087, -56, -1000, -1000,
	-1000, -1000, -139, -1000, 24162, 132473, -1000, -1000, -1000, -1000,
	1746, 132473, 836, -1000, -1000, 3147, -1000, 132473, 831, -1000,
	-1000, 3144, -1000, 2600, -1000, 2981, -1000, -1000, 2429, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2426, -1000, -1000,
	3768, -1000, -1000, 3767, -1000, 3766, 3762, 3761, -1000, 1733,
	2026, 3760, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	85455, 2335, -1000, -1000, 84339, 2977, -1000, 2425, 3457, -1000,
	84897, 1034, -1000, 959, 2424, -1000, 94320, 891, 2423, -1000,
	3757, 3420, 2691, 959, 2422, -1000, -1000, -1000, -1000, -1000,
	957, -1000, 65983, -1000, 65983, -1000, 1618, -1000, 121449, -46,
	91575, 3585, -1000, -86, -1000, -1000, -1000, 918, -1000, 59239,
	-1000, 59239, 97083, 74927, 931, 2943, 67652, 132210, -1000, 995,
	-1000, -1000, 132473, -1000, -1000, -1000, 2595, -1000, -151, 2760,
	-1000, 74927, 61508, 2593, -1000, 132473, -1000, -1000, -1000, -1000,
	132473, -1000, -1000, -1000, 74927, 84339, -1000, 103719, 83790, -1000,
	-1000, 1472, 2565, -1000, -1000, -1000, 74927, 1337, 74927, 74927,
	74927, -1000, 103161, -1000, -1000, 2074, 1258, 3332, 2067, 91575,
	-1000, 1870, -1000, -1000, -1000, 3361, 3157, 115410, -1000, -1000,
	2975, -1000, 71538, 93771, -1000, 93222, -1000, 92673, -1000, 91575,
	-1000, 91575, -1000, 3755, 3753, 3752, -1000, -1000, 3750, -1000,
	3748, 3352, -1000, 798, 43307, 132473, 3346, -1000, 3745, 1973,
	2974, 132473, -1000, 3127, 1707, 1698, 115410, -1000, -1000, 115410,
	-1000, 115410, -1000, -1000, -1000, 1523, -1000, -1000, 2518, -1000,
	-1000, -1000, -1000, 91575, 91575, 91575, 91575, 1550, -1000, 42736,
	-1000, -1000, 3041, 3744, 1586, -1000, 1755, -1000, 2940, 3360,
	-1000, 1304, 1729, 192, 3630, -1000, -1000, 242, -1000, -1000,
	-60, -1000, 120900, -1000, 2526, -1000, 115410, -1000, 2525, 2963,
	2971, 1686, 2355, 2618, -1000, 42165, 2596, 52443, 2370, 123,
	-1000, -1000, 123, 123, 33484, -1000, -1000, 70423, 70423, 25868,
	1271, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017,
	49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017,
	49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017, 49017,
	49017, 49017, 49017, 49017, 49017, 49017, 49017, 2310, 49017, 1259,
	49017, 49017, 49017, 49017, 2299, -1000, -1000, 1954, 443, 1986,
	613, -1000, -1000, -1000, 3565, 3565, 3565, 625, 625, 625,
	5102, 5102, 389, 3740, 742, -1000, 49017, -1000, 71, 58664,
	49017, 26436, -1000, 383, 7757, 2540, -1000, 382, 27036, -1000,
	-1000, -1000, 28212, 521, 41565, 49017, 1018, 132473, -1000, -1000,
	1485, 3587, 23590, 3010, 2825, 610, 807, 805, 31171, 30571,
	29971, 29371, 800, 793, 49017, 49017, 49017, 49017, 49017, 49017,
	49017, 49017, -1000, -1000, 3593, -1000, 3587, -1000, -1000, -1000,
	-1000, 3587, 1264, 1262, 3587, -1000, 3587, 3587, 9242, 9242,
	40994, 40423, 39852, 53014, 39281, 49017, 28800, 38710, 38139, -1000,
	115410, -53, 3518, 49017, 260, -1000, 130791, -1000, 260, 260,
	605, -88, 132473, 2584, 2584, 56990, 2433, 2224, 2224, 2224,
	-1000, 871, 18408, 871, 101507, 2236, 871, 871, 191, 219,
	380, 54727, 2438, 101507, 730, 604, -33, -36, -37, -1000,
	-1000, -38, -40, -1000, -1000, 91575, 597, 26436, 25868, 188,
	2010, -89, 2616, 2615, -1000, 2614, 2612, -1000, 2610, 2334,
	-1000, -1000, 1813, -103, 1257, 91575, 115410, 1292, 3739, -68,
	-1000, 431, -106, -1000, 1199, 186, 3587, -1000, -1000, -1000,
	-1000, -1000, 3733, 3730, -1000, 1028, 596, 594, 320, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 591, 590, 590,
	590, -1000, 251, 577, 243, 571, 570, 564, -1000, -1000,
	-1000, -1000, -1000, 2939, 91575, 115410, 1291, 3726, -102, 92124,
	-83, -1000, -1000, 115410, -1000, -1000, -1000, 3724, -1000, 91575,
	-1000, -1000, 91575, 230, 3143, -1000, 91575, -1000, 91575, 227,
	3142, -1000, -1000, 115410, -1000, 91575, 91575, -1000, 115410, 115410,
	115410, 126399, 126399, 226, -1000, 91575, 834, -108, 1132, -60,
	-1000, -1000, -1000, -1000, 1685, -1000, 1780, -1000, -1000, -1000,
	-1000, -1000, -1000, 1491, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 595, -1000, -1000, -1000, -1000, -1000, -1000, 3582,
	3580, -54, -1000, -1000, 25868, -1000, -61, 1637, 1830, 1255,
	-1000, 77130, 2505, 3327, 3723, 2670, 3313, 1617, -1000, 1519,
	-1000, 3434, 82125, 3473, 3490, 1352, -1000, 2937, -1000, -1000,
	911, 1579, 1721, 1254, 1252, 82125, 1655, -1000, 70423, -1000,
	2668, 3415, 1359, 1350, 1359, 1359, 1345, -1000, 82125, 1719,
	1251, 1248, 1244, -1000, -1000, 1930, 1926, -1000, -1000, 102612,
	-1000, 1242, 1240, 3534, 2941, 2197, 775, 1917, -1000, -63,
	3470, 3481, 1326, -1000, 2936, 1239, -1000, -1000, -1000, 3414,
	91575, 25868, 1569, 1562, 1556, 1713, 1238, -55, -1000, 3463,
	1234, 1233, -1000, 990, 6843, 3270, -1000, 126399, 990, 990,
	2014, 3123, 2712, 1584, -1000, 2753, 869, 2745, -1000, -1000,
	-1000, 869, -56, 72087, 115410, 180, -1000, 71, 49017, 49017,
	71, 49017, 71, -1000, 3447, 3115, 3110, -1000, -1000, -1000,
	-1000, -1000, 3718, 1966, 2541, -1000, -1000, 562, 2420, 2935,
	115410, 2630, -57, 91575, -1000, 70989, 3108, 126399, 1655, 2415,
	-1000, -1000, 83232, -1000, 3104, 410, 2414, -1000, 648, 3717,
	3101, -1000, 120351, -1000, 3336, 1284, 3095, 1082, 567, 3510,
	-1000, 567, 66540, -1000, 115410, -1000, -46, 4927, 76032, -113,
	-114, 379, -1000, 102063, 115410, 115410, 3280, 1974, 1953, -1000,
	943, 60376, -1000, 60376, -116, -1000, -151, 2726, 1508, -1000,
	931, 931, 869, -1000, 869, -1000, 91575, 2968, -1000, -1000,
	74927, 931, 931, 931, -1000, -1000, -1000, -1000, 3716, 3711,
	3709, 3707, -1000, -1000, 950, 91575, 115410, 91575, -1000, -1000,
	1578, -1000, 179, -1000, 126399, -1000, 126399, 115410, 91575, -1000,
	950, 115410, 950, 115410, 950, 115410, 950, 950, -1000, -1000,
	-1000, -1000, -1000, 71, -1000, -1000, 132473, -1000, 49017, -1000,
	-1000, 1518, 3705, 1636, -1000, 2967, -1000, 2965, -1000, -2,
	-1000, -1000, 1863, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3698, 132473, -1000, 1918, -1000, -1000, -1000, -1000, 91575,
	91575, 91575, 91575, 115410, 3269, -1000, 115410, 3261, 91575, -1000,
	3626, -1000, -1000, 82125, -1000, 2525, 2963, -1000, -1000, -1000,
	-1000, -1000, -1000, 1498, 2307, -1000, 2571, -1000, 1597, -1000,
	-1000, -1000, 132473, 53585, -1000, -1000, 132473, 1804, -1000, 51872,
	51301, -1000, -1000, 1754, 91575, 2638, -1000, 2638, -136, -1000,
	130528, 2560, 91575, -1000, -1000, -1000, -1000, -1000, 908, 1927,
	1927, 1167, 1167, 1167, 1167, 3474, 5495, 5701, 6526, 8195,
	8195, 981, 981, 981, 981, 981, 8195, 5210, 625, 625,
	5210, 5210, 5210, 5210, 5210, 625, 625, 625, 8195, 8195,
	8195, 625, 5102, 16465, 12085, 49017, 49017, 1232, 1951, 443,
	11774, 49017, 12226, 12226, 12226, 12226, -1000, 2112, -1000, -1000,
	-1000, -1000, 2931, 559, 53014, 53014, -1000, -1000, -1000, -1000,
	27624, 49017, -1000, -1000, -1000, -1000, 37539, -1000, -1000, 9172,
	-321, 378, -1000, 175, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 374, -104, 77,
	-1000, 49017, 49017, 49017, 365, -1000, 172, 49017, 115410, -1000,
	126958, 725, -115, -1000, -119, 1419, -1000, 49017, -1000, -1000,
	1231, -1000, 1230, 1228, 1227, -1000, 557, 364, -1000, 170,
	-1000, 2222, 543, 542, 49017, -1000, -1000, -1000, -1000, -1000,
	129883, -1000, -1000, 129699, -1000, -1000, 129436, -1000, -1000, 129252,
	-1000, -1000, -1000, -1000, -1000, 132011, 17497, 17070, 15604, 7015,
	14889, 11101, -122, 361, -124, 360, 907, 894, 359, 356,
	353, -125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -130, 351, -1000, 2919, -104, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 350, -1000, 349,
	-1000, 131828, -104, 348, 1079, -1000, 53014, 53014, 53014, 53014,
	-1000, 347, -1000, 130329, -1000, 131565, 36968, 36968, 36968, 345,
	131381, 49017, -104, -137, -1000, -142, -1000, -1000, 493, -143,
	1000, 36368, 55872, 25868, -1000, 1000, 1000, 49017, -1000, 49017,
	2586, -1000, -1000, -1000, -1000, 2582, 1994, 2584, 56990, -1000,
	-1000, -1000, -1000, 101507, -1000, 3585, 2697, -1000, 101507, -1000,
	-1000, 115410, 410, -1000, 101507, 101507, 25868, 871, -1000, 871,
	101507, 572, -1000, -1000, -1000, -1000, -1000, 343, 64314, 77,
	168, 25868, 959, -1000, -1000, 2724, 2724, 2724, 2724, 2724,
	91575, -1000, -1000, 126399, 1226, -58, -131, 2717, -1000, 3547,
	-1000, 2066, -1000, 70423, -1000, 741, 1043, 25868, -1000, -1000,
	-1000, 538, -1000, 3587, 3587, -1000, 3587, 126399, 2917, 190,
	2713, -1000, 182, 126399, 3697, -1000, -1000, 230, -1000, 91575,
	230, 230, -1000, 91575, 91575, 2231, -1000, 236, -1000, 231,
	-1000, -1000, -102, -1000, 994, 34055, -1000, 1685, -1000, -1000,
	1548, -1000, 1990, -1000, 1143, -1000, -1000, -1000, -1000, 34055,
	-1000, 2117, 115410, 115410, 91575, -1000, 115410, -1000, 2120, 126399,
	-1000, 2413, 119802, 2393, 70423, 115410, -1000, -1000, 537, 923,
	2559, 2558, 1080, 115410, 115410, 2552, 119253, 118704, -1000, 3696,
	115410, 2127, 49017, 3412, 2177, 2486, 71, 71, -1000, 71,
	71, 71, -1000, 535, 1208, 91575, 91575, 115410, 126399, 91575,
	2009, -1000, -1000, -1000, -1000, -1000, 82674, -1000, -1000, 3590,
	3589, -1000, 1359, -1000, -1000, -1000, 1359, 1655, 1993, 115410,
	126399, 91575, 126399, 118155, 117606, -1000, -1000, 1712, 115410, -1000,
	-1000, -1000, -1000, 1478, -1000, 775, 2095, 71, 71, -1000,
	71, 71, 71, 528, 25868, 2033, -1000, 3001, 115410, 3618,
	117057, 3616, 115410, 115410, 115410, 126399, 3344, 115410, 115410, 126399,
	-1000, 116508, 6843, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73225, 1087, 115410, 1315, -1000, -1000,
	1710, 1223, 1222, 82125, 2072, 1697, 1833, 126399, 60376, 940,
	60376, 2699, -1000, -1000, 23018, -1000, 132473, 132473, -1000, 132473,
	-1000, 70989, 74927, 115410, -1000, 1033, 115410, 76581, 926, 3093,
	65426, -139, 931, 74927, 91575, -57, 2630, 115410, -1000, -1000,
	1655, 3092, 410, 2410, -1000, 126399, 3509, 3091, 527, 3695,
	3694, -1000, 91575, 2325, 2404, -1000, -1000, 115959, 3105, 775,
	115410, 1000, 56990, 1977, -1000, 63199, 1051, 115410, 1840, 163,
	-1000, -1000, -1000, -22, 115410, -1000, 749, -1000, -1000, 4927,
	4927, 931, -219, 524, -1000, 857, 856, 60942, -150, -1000,
	167, 522, 851, 850, -1000, 5044, -1000, -151, -1000, 74927,
	943, 60376, 2914, 2913, -1000, -1000, 993, -1000, 1301, 931,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -47, 1832, 115410, -102, -102, -72, -58, -1000, 950,
	-1000, 950, -1000, 950, -1000, -1000, -1000, 132473, -1000, -1000,
	-1000, 1627, 1624, 115410, -1000, -1000, 115410, -1000, 25868, 115410,
	91575, 25868, 91575, 2962, 2961, -1000, -1000, -1000, 115410, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1097, -1000, 1804,
	2305, -1000, 521, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2497, -1000, -59, 33484, 883, -1000, -1000, 91575,
	-49, 49017, 49017, 11382, 10433, 49017, 53014, 53014, -1000, 49017,
	5957, -1000, -1000, -1000, -1000, -1000, 2906, 520, 49017, 70423,
	7541, 7293, -1000, 342, 10231, 5210, -1000, 49017, -1000, 491,
	-1000, 339, 35797, -1000, 130920, -6, -155, -1000, 18993, -104,
	-158, -1000, -1000, 735, -1000, 3109, -1000, 49017, 131183, 2463,
	1921, 1810, 1650, 3587, 3615, 22446, -1000, 67096, 1001, 2248,
	129054, -1000, -1000, -1000, -1000, 70423, 70423, 49017, 49017, -1000,
	49017, 49017, 49017, -1000, -1000, -1000, 3587, 903, -1000, -1000,
	-1000, 903, -1000, -1000, 1359, -1000, 1359, -1000, 49017, -1000,
	-1000, 2901, 49017, -1000, 70423, 70423, 53014, 53014, 53014, 53014,
	53014, 53014, 53014, 53014, 53014, 53014, 53014, 53014, 53014, 53014,
	53014, 53014, 53014, 53014, 53014, 53014, 2561, 53014, 3563, 3563,
	3563, 607, -1000, 2960, 2901, 49017, 49017, 70423, 338, 336,
	334, -1000, 49017, -104, -1000, -1000, 6949, 517, -1000, 2478,
	-1000, 2822, -1000, 49017, -1000, -149, -1000, 2438, -1000, -1000,
	2822, 2822, -160, 132473, 56990, 56990, -1000, 516, 49017, 2578,
	-1000, -1000, 723, -317, -1000, 849, -1000, -1000, -1000, -1000,
	-1000, -1000, 847, -1000, 410, -1000, -1000, -1000, 165, 101507,
	101507, 722, -1000, -163, -1000, -1000, -168, -1000, 3508, 328,
	25868, -1000, 1000, 2677, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2601, -102, 126399, 126399, 1695, 2288, 3613, -1000, 3588,
	734, 718, 164, 3587, 314, 305, 304, -102, 126399, 126399,
	1691, 126399, -1000, -1000, -1000, 230, -1000, -1000, -1000, 227,
	-1000, -1000, -1000, -1000, 2662, -1000, -60, -1000, -1000, -1000,
	49017, -1000, -1000, 3326, 1219, 1215, -1000, -1000, -1000, 2869,
	-1000, 3065, -1000, 2403, -1000, 1055, -1000, 2053, 49017, 515,
	2684, 514, 511, 3692, 2104, 3691, 1081, 3061, 2231, 3058,
	2231, -1000, -1000, -1000, 915, -1000, 132473, 2177, -1000, 510,
	509, -1000, -61, 1633, 1823, 1210, 992, -1000, -1000, -1000,
	-1000, 49017, 49017, 100958, -1000, 452, 3325, -50, -1000, -1000,
	-1000, 1676, 1207, 1206, -1000, -1000, -1000, -1000, 1655, 1659,
	1204, 1195, -1000, -1000, -1000, -1000, -1000, 2401, -1000, -1000,
	3057, 987, -1000, 3025, 3024, 893, 115410, -1000, 985, -1000,
	-1000, -1000, -1000, 49017, -1000, -63, 1177, 3462, 2400, 91575,
	-1000, 2231, 3056, 1175, -1000, 1171, -1000, -1000, -1000, 3461,
	3460, 1189, -1000, -1000, -1000, -1000, -1000, 72659, -1000, -1000,
	990, 115410, 126399, 91575, 1826, -1000, -1000, 81027, 81576, 115410,
	2712, -102, 869, -1000, 2469, 869, 940, 2899, -1000, 2621,
	-1000, 973, 91575, 3683, 302, -169, -64, 70423, -1000, -1000,
	-1000, -1000, 2393, 91575, 115410, 1306, 2675, 115410, 3507, -1000,
	2331, 565, 91575, 896, -1000, 3585, -1000, -1000, -1000, 969,
	-1000, 3454, 91575, 3506, 3055, 959, 71, 91575, 3598, -1000,
	-1000, 3505, 91575, 3054, 2324, 2392, 2528, 775, 75483, 959,
	2239, -77, -1000, 1840, 35197, 3323, -174, -1000, -1000, -1000,
	1000, 66540, 56990, 49017, 3682, -177, -1000, -1000, -1000, -1000,
	-1000, 98755, 98755, 74927, 74927, 74927, 931, 115410, 115410, 3678,
	74927, 74927, 74927, -65, 508, -1000, 832, 827, 822, -1000,
	-1000, -1000, -1000, -1000, -1000, 821, 804, 943, -1000, -1000,
	-151, 60376, 71, -1000, 2274, 91575, -1000, 21874, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 950, -139, -1000, -1000, 2140,
	2358, 2140, 1827, 1817, -1000, -1000, 2262, -1000, -1000, -1000,
	-1000, 2623, 3333, 25868, 3448, 12226, 49017, 49017, 5695, 6610,
	593, 12226, 49017, 49017, 70423, 10120, -179, 49017, 49017, -1000,
	49017, 717, 132473, -1000, 3612, 49017, 300, 299, -1000, -1000,
	-1000, 3586, -1000, -1000, -1000, 132473, 49017, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 295, -1000, 160, -1000, -1000, -1000,
	123096, -1000, 49017, 293, 3406, -1000, 291, 290, 8792, 6637,
	128791, 128662, 128399, 282, -1000, -1000, 275, 270, 132473, 2960,
	132473, -1000, -1000, 1437, 1437, 1322, 1322, 1322, 1322, 3563,
	1726, 1433, 951, 556, 556, 556, 637, 607, 607, 556,
	556, 556, 607, 2896, 2567, 506, 7561, -1000, -1000, 132473,
	132473, 268, -1000, -1000, -1000, -104, 266, 6949, -1000, 2817,
	3403, 132473, -1000, 56990, 2817, 2817, -1000, -1000, 1994, 115410,
	132473, 56990, -1000, 2697, -1000, 20153, 19576, -1000, 25868, -1000,
	-1000, -1000, -1000, 3585, -1000, 64314, -1000, 505, -1000, 159,
	-1000, 2677, -1000, 799, -1000, -1000, 74927, 74927, 2724, -102,
	-196, 115410, -1000, -1000, 716, 3670, 733, 25868, 263, -1000,
	-1000, -1000, -102, -102, 115410, -102, -1000, -1000, -1000, 3279,
	132473, 115410, 115410, 1474, 100409, 115410, 3053, -1000, 2256, -1000,
	1080, 128201, 57549, -1000, 57549, 115410, -1000, -1000, -1000, -1000,
	1907, 1558, 3669, 1110, -1000, 3369, 115410, -1000, 115410, -1000,
	-1000, -1000, 115410, 115410, 91575, 115410, -1000, 126399, 3034, -184,
	132473, -67, -1000, 794, -1000, 1353, -1000, 21302, 115410, 126399,
	91575, 115410, 126399, 91575, 3049, 115410, 2188, -1000, -1000, 3023,
	-1000, 3033, -185, 25868, -1000, 3611, 3610, 3047, 3375, -1000,
	115410, 3609, 115410, 91575, 3277, -1000, -1000, -1000, -1000, -1000,
	-1000, 1658, 1166, 1165, 2322, -69, 2321, 2283, -72, 2072,
	940, -74, 490, -1000, 791, -1000, -1000, 790, 940, -1000,
	74927, 60376, 3667, 410, -1000, 2663, -1000, 96525, 76581, 2259,
	-1000, -1000, 489, 115410, 115410, 488, -1000, 71, -1000, 3666,
	99311, 471, -1000, 2267, -1000, 714, -1000, 2494, 126399, 1655,
	71, 91575, -1000, -1000, 410, 262, -75, -1000, 3103, 1070,
	25868, 91575, 3046, 2532, 775, 75483, -1000, 1284, 2618, -1000,
	-76, -1000, 624, 71, 2239, -1000, -77, 132473, -1000, 787,
	-1000, -190, -1000, -1000, 252, -1000, 3275, -1000, -1000, -197,
	-1000, -1000, 2447, 2447, 74927, 60376, 74927, 74927, 74927, -1000,
	943, 869, -1000, 2456, -1000, -1000, -1000, -1000, -1000, 25868,
	1567, -1000, 467, 464, -1000, -1000, -1000, -1000, 3333, 12226,
	12226, 49017, 49017, 49017, 12226, 10120, -198, -1000, 12226, 12226,
	-104, -1000, -1000, 130920, -1000, -1000, -1000, 132473, -1000, 20730,
	2163, -1000, 128017, -1000, 33484, -1000, -1000, 49017, 49017, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53014, 2889, 460,
	70423, -1000, -1000, 249, 958, 49017, 50730, 2438, 958, 958,
	-1000, -199, -1000, -1000, -1000, 3585, -1000, 3585, 159, -1000,
	-1000, 3665, 25868, -1000, 74927, -1000, -1000, -1000, 3663, -191,
	732, -1000, 3660, -1000, -1000, 122, -1000, -1000, -1000, 2711,
	3503, -1000, 1905, -1000, 115410, -1000, 115410, -1000, 25868, 115410,
	2834, 1245, -1000, 923, 2551, 459, 53014, 1095, 91575, 859,
	2797, 2796, -1000, 3531, 3397, 2757, -200, -1000, 115410, 49017,
	115410, -205, -206, 2378, -1000, -1000, 1094, 1243, 49017, 1093,
	-1000, -1000, -1000, 70423, 457, 2231, 2231, -207, -208, -1000,
	-1000, -1000, 49017, 1161, 115410, 34626, -1000, 3657, 3325, -1000,
	-1000, -1000, -1000, -1000, -1000, 115410, -1000, 115410, -1000, 49017,
	1148, -1000, -1000, -1000, 3606, 2231, 25868, 2231, -1000, 2231,
	3375, 1109, 115410, 126399, 91575, 1779, 1779, 2874, -1000, -1000,
	-1000, 2189, 2189, 74927, 60376, -1000, -78, 940, -1000, 3500,
	2158, 3656, -1000, -1000, -1000, -1000, 2550, -1000, -1000, -1000,
	115410, 2548, 2742, 57549, 455, 454, 115410, 933, -1000, -216,
	-1000, 786, 783, 76581, 926, 888, -1000, -81, 453, -1000,
	780, -1000, -1000, -1000, -1000, 410, 3499, -1000, 3600, 451,
	450, 115410, 2318, 444, 25868, 3315, 775, 75483, -1000, 3105,
	1840, -1000, 2385, 115410, 3310, -1000, 2618, 443, -1000, 931,
	439, 931, -1000, -217, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -82, -1000, 829, 828, -1000, -1000, 91575, 91575, 49017,
	49017, -1000, 12226, 12226, 12226, -1000, 245, -1000, -1000, 2239,
	3395, -1000, -84, 127728, 127582, 6480, 53014, 70423, -223, -1000,
	-1000, 115410, 132473, -85, -1000, 132473, 438, 437, 358, -1000,
	-1000, -1000, 711, 708, -1000, -1000, -1000, 126399, 3652, -1000,
	126399, 99860, 115410, -1000, -1000, 2474, -1000, -1000, -1000, 115410,
	2391, -1000, -1000, -1000, 1076, 49017, 7561, 53014, 436, 49017,
	-1000, 435, 432, 3495, 3254, -1000, 2654, 2862, 1996, 57549,
	-1000, 3333, -1000, 127141, -1000, 1065, 1938, -1000, -1000, -1000,
	-1000, 132473, 53014, 3375, 57549, -1000, -1000, 427, 425, 132473,
	424, 777, 2885, -1000, -1000, -1000, -1000, -1000, 132473, 419,
	3462, -1000, -1000, -1000, -1000, 2231, 91575, -1000, -1000, -1000,
	1147, -1000, -1000, -1000, -1000, 3648, 3646, 2870, 81027, -1000,
	-224, -1000, -1000, 1944, 71, 926, -1000, -1000, 2259, 418,
	-1000, -1000, 2693, 2693, -225, 57549, 57549, -231, 2313, 2646,
	-1000, 99311, 34055, 34055, 244, 3491, 888, -1000, 3571, -1000,
	3260, 3260, 49017, 3487, 71, -1000, 3598, 57549, -1000, 91575,
	57549, 2317, 2012, 2510, 75483, -1000, 2528, -1000, -1000, -232,
	115410, 1840, -1000, -1000, 74927, -1000, -1000, 2456, -1000, 115410,
	-1000, 115410, -1000, -1000, -238, -240, -1000, 1967, 49017, 33484,
	-1000, -1000, 6480, -241, -1000, -101, -1000, 3485, 50730, 3645,
	3644, 3641, -1000, -1000, -102, -1000, -102, -1000, 1895, -1000,
	-1000, -1000, 3043, 2810, 127104, 7561, 2488, 115410, 126995, 1655,
	1655, -1000, 3479, 2861, -1000, -1000, 2095, 414, -1000, -1000,
	-1000, -1000, 883, 115410, -1000, 2807, 91575, 7561, 1072, -247,
	2140, 2140, 49017, 32913, 2185, 49017, -1000, -1000, 3375, 126399,
	-1000, -1000, 126399, 2314, -1000, 2851, 3574, -1000, 2313, 115410,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1065, -248, -255, -1000, -1000, 3345, -1000, 3274, -1000,
	-1000, -1000, 2663, 71, -1000, -1000, -1000, -256, 132473, 71,
	-1000, 233, -257, 1070, -265, 91575, 1949, -1000, 775, -1000,
	2532, 1000, -1000, -1000, -267, -1000, -272, -273, -1000, -1000,
	232, 50159, 50159, 50159, -104, -136, -1000, 115410, 413, -1000,
	-1000, -1000, -1000, -1000, 3020, 937, -1000, 801, 1897, 229,
	1092, 228, 222, -1000, -1000, -1000, 2757, -1000, 115410, -1000,
	-1000, 936, 410, -1000, 49017, 1065, -275, -1000, 1050, -280,
	-1000, 1047, -281, -1000, 2859, -1000, -282, 2231, -254, 226,
	1779, 934, 3446, -1000, -1000, -1000, 2502, -283, -1000, -1000,
	1996, 1065, 2095, 2329, -1000, 2158, 933, -1000, -1000, -1000,
	1065, 408, 1996, 405, 1496, 775, -1000, -1000, 1359, 3315,
	3120, 931, -1000, -1000, -1000, 3073, -1000, 54156, 2249, 1816,
	130146, 3073, 3073, -1000, -1000, 115410, 3436, -1000, 861, 810,
	1497, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1000,
	-288, 3429, 2488, 132473, -1000, -1000, 2140, 2704, -1000, 2140,
	2858, -1000, 2106, -1000, -1000, -1000, 2829, -1000, 2856, -1000,
	1724, 3555, -1000, -1000, -1000, 115410, 2095, 1996, 930, 1759,
	1747, 3636, 926, 2313, 1996, 57549, 2095, 57549, 2079, -1000,
	115410, -1000, 2012, 1371, -1000, -1000, 1702, 3486, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 774, -1000, 3245, -1000,
	1090, 2182, 2182, -1000, -1000, 770, 801, -1000, 403, -1000,
	401, -1000, 2276, 126399, 2260, -1000, -1000, -1000, 930, 2095,
	1000, 398, -1000, 3633, -1000, 2313, -1000, 2095, -289, 930,
	-296, -1000, -1000, -1000, -139, 1949, -1000, 1616, 1812, -1000,
	-1000, 2227, 49588, 49017, -1000, 3550, -1000, -1000, 2588, -1000,
	49017, 2757, 49017, 49017, -1000, 226, 64870, 1000, 930, -1000,
	-1000, 2502, 930, 1065, 1000, 1996, 1496, 66540, -1000, -1000,
	-1000, 132473, -1000, -1000, -1000, 132473, -1000, -297, -302, -1000,
	-219, 98755, -1000, 1000, -1000, 1000, 1996, -1000, 2095, 2079,
	-262, 2095, 1140, -303, -1000, -1000, 2095, 930, -1000, -1000,
	-1000, -1000, 373, -1000, 930, 1000, 49017, 1000, -1000, -308,
	-1000, 2095, -1000,
}

var sqlPgo = [...]int{
	0, 4460, 4458, 4457, 4456, 4455, 4453, 4452, 4449, 4448,
	4442, 4440, 4439, 146, 4437, 4436, 4435, 4434, 4433, 4432,
	4431, 4429, 4428, 4425, 4424, 4422, 4421, 4417, 4415, 4413,
	4411, 4408, 4406, 4405, 4403, 4402, 4400, 4397, 4396, 4391,
	4390, 4389, 4388, 4386, 4385, 4384, 4381, 4374, 4372, 4371,
	4369, 4368, 4366, 4364, 4363, 4362, 4359, 4358, 4356, 4354,
	4353, 4352, 4349, 4348, 4347, 4345, 4343, 4342, 47, 4341,
	4339, 4337, 4335, 4333, 4331, 4329, 4326, 4323, 4322, 4319,
	4317, 4316, 4313, 4312, 4310, 4309, 4304, 4301, 4300, 59,
	4299, 274, 4298, 4296, 4295, 4293, 4291, 4289, 4288, 4287,
	4286, 4285, 4284, 4282, 273, 4281, 139, 169, 4280, 4278,
	3845, 4277, 4272, 272, 4271, 4268, 4266, 4265, 4263, 280,
	4262, 4258, 4255, 4254, 4252, 4249, 4248, 4247, 4245, 4244,
	4243, 4241, 98, 220, 4240, 4237, 709, 4235, 4232, 4231,
	4230, 4229, 4228, 4227, 4226, 4225, 4223, 4222, 252, 176,
	4221, 271, 4218, 4214, 4213, 4212, 4211, 4208, 4207, 4205,
	4204, 4203, 4202, 4201, 4200, 4199, 4196, 4195, 4194, 4193,
	4191, 4190, 4188, 4187, 4184, 4181, 4180, 4178, 4176, 4173,
	4171, 4169, 4168, 4166, 4164, 4162, 4161, 4160, 4159, 4158,
	4156, 247, 221, 137, 4152, 4151, 270, 267, 4150, 4149,
	4148, 4145, 4144, 132, 4, 40, 4143, 4142, 89, 78,
	84, 104, 106, 101, 4140, 113, 4139, 131, 62, 4137,
	19, 1, 167, 250, 11866, 245, 4135, 4134, 4133, 244,
	200, 4132, 239, 4119, 4117, 4116, 4112, 4108, 4105, 68,
	44, 186, 188, 185, 175, 80, 145, 107, 77, 52,
	45, 20, 65, 213, 22, 10, 263, 4099, 262, 7,
	152, 14, 31, 4097, 4096, 4095, 4094, 3780, 121, 4092,
	266, 251, 182, 4091, 4089, 4087, 629, 4086, 4085, 54,
	4083, 122, 74, 108, 16, 135, 4073, 155, 174, 36,
	4072, 183, 83, 4071, 164, 96, 87, 9360, 10389, 4070,
	4069, 128, 91, 86, 100, 181, 180, 201, 178, 173,
	166, 125, 215, 207, 179, 257, 4068, 254, 4064, 3495,
	117, 190, 160, 5983, 4063, 4062, 4061, 79, 4060, 109,
	4055, 4052, 61, 15, 3, 2, 147, 38, 33, 8,
	4051, 49, 129, 46, 30, 4050, 23, 4049, 4048, 4047,
	4045, 4044, 63, 165, 4043, 4042, 276, 4040, 102, 58,
	81, 4039, 21, 222, 4036, 234, 143, 4035, 4034, 260,
	210, 191, 4033, 90, 235, 4032, 4031, 4028, 4027, 4026,
	4025, 141, 9, 130, 4023, 4019, 156, 4009, 50, 240,
	202, 4008, 56, 4006, 4003, 184, 51, 150, 279, 177,
	231, 127, 223, 193, 230, 4000, 3999, 3995, 225, 3994,
	3993, 224, 157, 3992, 3991, 209, 282, 85, 43, 72,
	243, 73, 199, 163, 3990, 205, 3988, 3984, 281, 189,
	216, 11, 6, 112, 115, 3983, 5, 238, 161, 236,
	124, 3979, 8013, 2307, 2285, 3974, 3973, 159, 126, 76,
	136, 162, 265, 105, 3972, 3966, 2493, 3965, 3963, 3962,
	3961, 192, 3960, 3958, 3957, 151, 148, 197, 3956, 92,
	69, 48, 24, 123, 249, 268, 114, 229, 208, 259,
	3952, 3951, 3949, 196, 3947, 88, 110, 170, 203, 248,
	53, 3946, 97, 3945, 158, 867, 70, 154, 3944, 232,
	3942, 3941, 3940, 3939, 3936, 3935, 3934, 682, 241, 3933,
	3932, 3929, 37, 198, 3928, 264, 172, 219, 95, 94,
	3927, 99, 2264, 3925, 313, 218, 67, 2196, 25, 3924,
	1877, 55, 3923, 0, 14054, 10253, 12943, 13114, 3917, 4209,
	3916, 3914, 3912, 217, 153, 3911, 3910, 3909, 118, 3908,
	82, 3907, 3906, 71, 3905, 26, 17, 18, 32, 27,
	390, 354, 3904, 3903, 144, 138, 133, 3902, 269, 227,
	3901, 3900, 3899, 3898, 111, 3897, 41, 3896, 39, 3895,
	3894, 42, 12, 28, 3892, 3891, 211, 3890, 226, 258,
	3889, 168, 3887, 64, 142, 3886, 3885, 3884, 60, 57,
	261, 93, 3882, 285, 3881, 204, 3880, 3879, 29, 3875,
	3874, 246, 120, 116, 3873, 253, 149, 35, 212, 187,
	214, 3872, 3870, 171, 3869, 3868, 3867, 288, 3865, 3863,
	34, 3862, 3861, 3860, 13, 3858, 3854, 206, 3193, 3853,
	3849, 66, 3847, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	600, 600, 618, 618, 23, 23, 45, 45, 24, 46,
	17, 601, 601, 601, 601, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	596, 596, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 602, 602, 245, 245, 245, 246, 246, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 496, 496,
	496, 527, 527, 527, 527, 528, 528, 622, 622, 623,
	623, 623, 623, 623, 135, 135, 394, 394, 394, 56,
	56, 56, 56, 56, 591, 591, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 80, 80, 608, 608, 607,
	606, 606, 606, 609, 609, 609, 207, 207, 207, 131,
	131, 131, 131, 131, 131, 132, 132, 133, 133, 211,
	211, 211, 213, 213, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 217, 16, 16, 16, 114,
	114, 114, 114, 114, 114, 114, 109, 109, 530, 530,
	531, 531, 202, 202, 203, 203, 203, 203, 204, 204,
	205, 205, 205, 71, 71, 214, 214, 216, 216, 215,
	215, 215, 215, 215, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 61,
	62, 62, 69, 69, 69, 69, 69, 69, 69, 193,
	193, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 77, 77, 77, 77, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 625, 625, 626,
	626, 627, 627, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 86,
	86, 354, 354, 318, 318, 87, 87, 87, 88, 88,
	89, 89, 73, 73, 589, 589, 370, 370, 487, 487,
	74, 597, 597, 597, 599, 599, 598, 598, 91, 91,
	393, 393, 92, 92, 92, 92, 92, 92, 93, 93,
	93, 93, 93, 93, 93, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 101,
	101, 101, 101, 101, 102, 102, 102, 99, 99, 99,
	96, 96, 96, 95, 95, 95, 100, 100, 100, 588,
	307, 307, 98, 98, 98, 97, 97, 97, 371, 371,
	103, 103, 103, 103, 319, 104, 104, 104, 104, 104,
	104, 104, 104, 107, 107, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 489, 489,
	105, 105, 105, 454, 454, 110, 110, 110, 409, 409,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 134, 134, 134, 134, 134, 134,
	134, 134, 593, 593, 363, 363, 270, 270, 270, 270,
	123, 123, 123, 123, 124, 124, 124, 125, 125, 198,
	198, 141, 141, 141, 141, 140, 140, 140, 140, 140,
	140, 140, 140, 63, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 68, 68, 68, 68, 68, 144,
	144, 619, 619, 146, 143, 143, 143, 143, 143, 142,
	142, 145, 145, 145, 145, 147, 149, 149, 149, 149,
	149, 148, 148, 148, 148, 148, 150, 150, 521, 521,
	379, 379, 519, 519, 540, 540, 520, 520, 325, 325,
	325, 325, 325, 326, 326, 326, 529, 529, 529, 529,
	529, 529, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 199, 199, 200, 201, 201,
	201, 201, 201, 176, 176, 176, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 380, 380, 179,
	179, 179, 163, 163, 152, 152, 152, 152, 152, 152,
	152, 157, 157, 157, 157, 157, 157, 157, 157, 153,
	153, 165, 165, 165, 165, 165, 158, 158, 159, 159,
	159, 160, 160, 160, 160, 186, 186, 162, 162, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 154, 154,
	154, 154, 167, 167, 167, 167, 416, 416, 416, 191,
	191, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 189, 189, 189,
	189, 189, 189, 610, 610, 611, 611, 611, 183, 183,
	183, 183, 183, 183, 468, 468, 177, 177, 177, 177,
	182, 182, 182, 182, 185, 185, 185, 185, 399, 399,
	174, 174, 174, 175, 175, 175, 180, 180, 181, 355,
	355, 178, 178, 184, 184, 184, 184, 155, 155, 155,
	155, 155, 155, 155, 155, 156, 156, 156, 156, 187,
	187, 173, 173, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 629, 629, 169, 169, 169, 168,
	168, 168, 168, 171, 171, 172, 172, 172, 172, 172,
	172, 170, 161, 190, 590, 590, 586, 586, 586, 586,
	586, 586, 586, 586, 587, 587, 587, 587, 592, 592,
	115, 115, 115, 115, 115, 115, 115, 126, 126, 126,
	126, 126, 126, 126, 129, 129, 116, 116, 116, 116,
	116, 116, 116, 119, 119, 117, 117, 117, 117, 118,
	118, 81, 81, 81, 81, 81, 15, 15, 15, 82,
	82, 261, 261, 220, 220, 220, 343, 343, 221, 221,
	333, 333, 333, 333, 218, 218, 219, 219, 83, 83,
	630, 630, 630, 603, 603, 603, 604, 604, 604, 604,
	604, 604, 327, 327, 328, 328, 434, 434, 434, 434,
	434, 331, 331, 331, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 341, 342, 342, 334, 334, 340, 339,
	339, 338, 338, 337, 337, 335, 336, 336, 336, 345,
	345, 344, 347, 347, 346, 433, 549, 549, 551, 551,
	551, 551, 551, 551, 551, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 417, 417, 631, 631, 632, 633, 547, 547,
	547, 548, 543, 543, 544, 544, 544, 544, 544, 329,
	329, 330, 330, 330, 330, 545, 546, 361, 361, 472,
	550, 550, 552, 552, 554, 634, 634, 634, 634, 634,
	634, 635, 635, 635, 432, 432, 431, 431, 352, 352,
	555, 555, 555, 555, 556, 556, 556, 556, 556, 559,
	558, 557, 557, 557, 557, 557, 85, 85, 85, 396,
	396, 395, 395, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 195, 195,
	273, 273, 79, 79, 79, 12, 12, 12, 12, 12,
	12, 12, 288, 288, 13, 13, 13, 605, 605, 605,
	84, 84, 84, 84, 84, 84, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 595, 595, 594, 594,
	274, 274, 637, 637, 90, 90, 90, 90, 90, 90,
	90, 90, 490, 490, 491, 491, 78, 78, 78, 78,
	78, 418, 418, 415, 415, 414, 414, 360, 360, 470,
	470, 470, 471, 278, 278, 279, 279, 239, 239, 239,
	31, 30, 21, 21, 26, 26, 27, 27, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 28, 28, 49,
	49, 49, 49, 50, 50, 50, 50, 53, 53, 54,
	54, 48, 48, 48, 48, 51, 51, 44, 44, 55,
	55, 55, 55, 55, 612, 614, 614, 613, 613, 617,
	617, 617, 617, 617, 617, 615, 615, 616, 616, 620,
	620, 621, 621, 122, 122, 127, 127, 127, 127, 127,
	128, 128, 128, 128, 130, 130, 130, 130, 139, 139,
	194, 194, 194, 194, 194, 194, 194, 57, 57, 57,
	57, 70, 70, 70, 70, 137, 639, 639, 639, 138,
	138, 138, 638, 638, 271, 271, 428, 428, 429, 429,
	640, 640, 430, 430, 430, 430, 430, 264, 263, 265,
	265, 266, 266, 76, 76, 76, 254, 254, 253, 255,
	255, 256, 256, 251, 251, 532, 532, 258, 258, 258,
	259, 259, 247, 247, 248, 248, 249, 249, 250, 250,
	262, 262, 641, 641, 113, 113, 113, 197, 197, 317,
	317, 317, 425, 425, 425, 353, 353, 285, 285, 427,
	427, 427, 427, 392, 392, 392, 196, 196, 368, 368,
	382, 382, 383, 383, 484, 484, 384, 120, 120, 121,
	121, 136, 136, 224, 224, 222, 222, 222, 222, 222,
	222, 222, 222, 229, 229, 230, 230, 231, 231, 232,
	233, 233, 233, 233, 372, 372, 234, 234, 234, 223,
	223, 223, 225, 225, 225, 225, 225, 225, 225, 228,
	228, 228, 228, 235, 235, 235, 227, 227, 566, 566,
	566, 568, 568, 570, 570, 569, 569, 565, 565, 567,
	567, 636, 636, 398, 398, 398, 350, 351, 348, 348,
	349, 349, 358, 358, 356, 357, 357, 359, 359, 469,
	469, 469, 240, 240, 240, 389, 389, 389, 389, 390,
	390, 421, 421, 419, 419, 419, 419, 420, 420, 422,
	422, 422, 423, 423, 424, 424, 386, 386, 387, 387,
	388, 388, 388, 388, 450, 450, 226, 226, 226, 365,
	365, 365, 366, 366, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 441, 441, 439, 439, 439,
	439, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	474, 475, 475, 367, 367, 476, 426, 426, 584, 584,
	584, 585, 585, 467, 467, 477, 477, 477, 477, 477,
	477, 465, 465, 466, 466, 485, 486, 486, 402, 402,
	402, 402, 400, 400, 403, 403, 403, 403, 403, 401,
	401, 478, 478, 478, 478, 391, 391, 479, 479, 479,
	479, 480, 481, 481, 482, 482, 435, 436, 436, 492,
	492, 492, 492, 494, 364, 364, 364, 364, 364, 542,
	541, 541, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 509, 509, 509, 509, 509, 509, 509,
	495, 495, 495, 495, 495, 499, 499, 499, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 500,
	500, 505, 505, 506, 506, 506, 501, 502, 507, 507,
	507, 507, 642, 642, 511, 511, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 497, 497, 497, 504, 504,
	504, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 410, 410, 412, 412, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 444,
	444, 444, 444, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 560, 560,
	560, 560, 560, 560, 560, 560, 446, 446, 563, 563,
	564, 564, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 571, 571, 572, 572, 574, 574, 575,
	575, 576, 577, 577, 577, 578, 579, 579, 573, 573,
	580, 580, 580, 580, 581, 581, 582, 582, 582, 582,
	582, 583, 583, 583, 583, 583, 456, 456, 457, 457,
	463, 463, 463, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 324, 324,
	323, 275, 275, 275, 275, 275, 275, 377, 377, 375,
	375, 375, 378, 378, 376, 376, 374, 374, 373, 373,
	453, 453, 451, 451, 455, 455, 404, 404, 510, 510,
	510, 510, 510, 510, 510, 510, 405, 405, 405, 413,
	406, 406, 407, 407, 407, 407, 407, 447, 448, 408,
	408, 408, 449, 449, 458, 462, 462, 461, 460, 460,
	459, 459, 437, 437, 438, 438, 385, 385, 643, 643,
	381, 381, 483, 483, 483, 483, 321, 321, 369, 369,
	320, 320, 312, 312, 313, 313, 313, 313, 362, 362,
	464, 464, 512, 512, 513, 513, 514, 514, 515, 515,
	516, 517, 518, 452, 452, 296, 295, 282, 283, 294,
	293, 292, 281, 284, 289, 290, 291, 286, 287, 303,
	302, 301, 252, 257, 308, 309, 309, 311, 311, 310,
	310, 298, 299, 300, 488, 280, 314, 314, 315, 315,
	315, 316, 316, 316, 316, 276, 276, 277, 277, 304,
	304, 305, 306, 306, 297, 297, 297, 267, 267, 267,
	268, 268, 269, 269, 526, 526, 523, 523, 523, 524,
	524, 524, 525, 525, 525, 525, 522, 522, 522, 522,
	522, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 534, 534, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 536, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 1, 2,
	1, 4, 0, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	4, 3, 6, 6, 6, 6, 6, 8, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	9, 5, 3, 1, 5, 9, 6, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 602, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 386, 431, 443, 401, 143, 422, 406,
	-145, -146, 461, -57, -70, -138, -137, 73, 130, 416,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -624, 102, -567,
	-94, -97, -130, -628, 162, 222, -116, -117, -118, 368,
	-124, -125, 424, -127, -128, -129, 427, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 466, -181, -190, -159, 527, 49, 481,
	82, 147, 435, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -566, -95, -96, -99, -101, -102, -98, -100,
	423, -225, -223, 599, 542, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 563, 572, -228, -226, -227, -235, 453,
	550, 501, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, -319, 2, -298, -304, -305, -306,
	-297, -267, -536, -539, 4, -533, -537, 169, 231, 332,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 509, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 232, 233, 234, 237, 243, 244, 248,
	249, 250, 252, 256, 257, 258, 259, 260, 261, 263,
	265, 264, 267, 270, 271, 274, 275, 276, 277, 278,
	279, 283, 284, 280, 285, 286, 288, 289, 292, 290,
	293, 294, 291, 295, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 296, 311, 309, 313,
	314, 315, 316, 330, 325, 326, 327, 320, 321, 317,
	322, 318, 319, 323, 324, 329, 334, 335, 338, 219,
	340, 341, 344, 362, 348, 349, 350, 353, 354, 357,
	360, 361, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 373, 374, 376, 377, 378, 380, 381, 382, 384,
	386, 387, 389, 390, 392, 393, 394, 395, 396, 397,
	398, 400, 401, 403, 402, 404, 406, 408, 409, 410,
	416, 422, 418, 419, 420, 421, 423, 424, 425, 426,
	427, 429, 430, 431, 433, 434, 435, 436, 437, 439,
	441, 442, 446, 447, 463, 464, 483, 443, 444, 445,
	448, 449, 450, 451, 452, 456, 454, 455, 457, 458,
	459, 461, 462, 465, 466, 468, 469, 470, 471, 472,
	473, 474, 477, 479, 480, 481, 500, 482, 484, 488,
	489, 490, 491, 485, 486, 499, 493, 494, 496, 497,
	502, 503, 504, 505, 506, 507, 508, 510, 512, 520,
	521, 522, 524, 527, 528, 529, 530, 518, 532, 533,
	536, 537, 538, 541, 539, 540, 542, 544, 547, 548,
	549, 555, 554, 556, 558, 559, 564, 565, 567, 568,
	569, 36, 50, 51, 54, 56, 58, 69, 70, 71,
	75, 125, 126, 154, 165, 166, 178, 193, 194, 206,
	208, 216, 217, 218, 238, 239, 241, 246, 268, 337,
	339, 355, 359, 375, 379, 383, 385, 399, 438, 475,
	487, 492, 513, 514, 515, 516, 523, 525, 550, 551,
	552, 557, 566, -319, 2, -298, 346, -291, 2, -267,
	-267, 386, 28, 2, 28, 374, 455, 504, 506, 2,
	-593, -363, 2, 28, -270, -267, 102, 204, 453, -291,
	2, -593, -363, 25, 2, -267, 2, 360, 22, 27,
	66, 77, 98, 141, 164, 187, 190, -627, 362, 393,
	441, 457, 499, 510, 524, 2, 554, 289, 454, 501,
	231, 120, 529, 448, -605, 446, 447, 360, 391, 433,
	207, 543, -271, 2, 443, -267, 289, 2, 602, 94,
	74, 438, 458, -148, 2, 279, 521, -149, -150, -147,
	513, -521, 448, 433, 311, -267, 602, 602, 602, 28,
	-280, -267, 501, 231, 448, 120, 497, 602, 2, 501,
	365, 554, 454, 120, 396, 231, 529, 190, 141, 27,
	448, -605, 577, 578, 289, 127, -591, 2, -586, 4,
	-537, -533, -313, -312, 501, 507, 120, -306, -297, 592,
	-305, 602, 602, 602, 602, 2, 249, 250, 395, 394,
	458, 459, 28, 602, 602, 602, 602, 446, 2, 164,
	22, 27, 66, 93, 98, 127, 187, 190, 351, -625,
	362, 393, 457, 499, 503, 510, 524, -604, 482, 68,
	421, 448, -603, -605, 289, 529, 141, -414, 120, 279,
	202, 537, 506, 504, 535, 133, 237, 540, 539, 602,
	602, -107, 2, 599, 32, 31, -106, -110, 143, 461,
	-217, 501, 242, 2, -267, 602, 602, 602, 2, 249,
	250, 446, 447, 28, 602, 602, 188, -586, 2, 602,
	602, 602, 2, 28, 249, 250, 446, 447, 242, 2,
	68, 450, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 2, -192,
	458, 482, 213, 47, 46, 74, 28, 392, 79, 366,
	121, 127, 149, 530, 205, 231, 232, 257, 93, 94,
	-416, 44, 250, 68, 249, 447, -610, 446, -468, 502,
	449, 455, 496, 261, 443, 521, 102, 544, 434, 569,
	396, 397, 494, 410, 280, 158, 189, 4, 120, 311,
	433, 460, 265, 264, 513, 279, 442, 369, 84, 602,
	-636, 2, 501, -638, 2, 521, 521, 2, -638, 2,
	-638, 2, -638, 2, -639, 521, 566, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, -223, -225, -224, 602, 602,
	602, 602, 602, 602, 602, -192, 458, 2, 74, 28,
	-356, -358, 534, 240, 151, 352, -222, -224, 2, -566,
	-519, 2, -442, -540, -444, 590, 591, 583, 498, 67,
	-323, 331, 570, -456, 127, 535, 346, -539, -445, -458,
	154, 362, 438, -378, 8, 9, 5, 6, 7, -276,
	-446, -452, 526, 168, 336, -316, 603, 10, 599, -563,
	-224, -457, 37, 208, 65, -523, -315, -277, -495, 241,
	-314, -297, -560, -561, 4, -533, -534, -524, -498, -506,
	-502, -503, -509, -267, -536, 77, 111, 112, 110, 115,
	114, 282, 281, 116, 113, 460, 543, 66, 36, 216,
	217, 246, 337, 218, 75, -562, 142, -535, 238, 239,
	475, 51, 399, 178, 126, 125, 339, 56, 54, 551,
	-507, 122, 513, 514, 515, 516, 193, 194, 58, 165,
	166, 359, 383, 492, 523, 525, 206, 268, 43, 106,
	189, 236, 220, 245, 247, 251, 269, 272, 312, 328,
	333, 356, 358, 432, 467, -642, 552, 487, 69, 70,
	-568, 402, -569, -291, -568, 602, 602, 604, 602, -348,
	-350, -351, 2, 28, 139, 599, 2, -473, 2, -474,
	-478, -224, 262, -477, 599, -475, 597, -298, 347, -564,
	439, -560, -561, -276, -297, -315, 4, -533, -535, 601,
	-352, 599, 120, 448, 501, 78, 231, 93, 164, -409,
	599, -267, 28, 346, 517, 604, -349, 390, -454, 599,
	346, 188, 349, 60, 293, 2, 2, 2, 2, 2,
	216, -267, 501, 119, 2, 260, 2, 2, 2, 2,
	2, 2, 2, -371, 216, 2, -298, 554, -371, 216,
	2, -371, 216, 2, -415, 2, 87, -281, 216, 2,
	-267, -307, 216, 2, -302, -304, -311, 216, 2, -309,
	-267, -528, 216, 2, -527, 4, -533, 116, 460, -442,
	2, -136, 2, 60, -267, 554, 2, 463, 2, 599,
	-148, 2, 71, 521, 43, 458, -149, 2, -429, 2,
	-430, -263, -264, -265, -485, -266, 248, 389, 398, 573,
	131, 331, 569, -619, 188, 582, 517, -519, -519, -519,
	-379, 601, 2, 2, 2, 2, 2, 2, -478, 216,
	-298, 2, -295, -522, 4, -533, -537, -534, -538, -536,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 127, 131, 135, 139, 140,
	144, 147, 151, 168, 170, 183, 187, 188, 204, 207,
	210, 223, 235, 240, 242, 262, 266, 273, 281, 282,
	331, 336, 342, 346, 347, 351, 352, 372, 388, 405,
	428, 453, 460, 478, 495, 501, 511, 517, 519, 526,
	534, 535, 543, 545, 553, 560, 561, 562, 563, -539,
	77, 2, -478, 216, 2, -301, 216, -478, -304, 2,
	-281, 2, -294, -522, 2, -320, 216, -298, -300, -304,
	-302, 2, 2, 2, 2, -309, 2, -527, 216, 2,
	28, 28, 554, 390, 242, 517, 604, -369, -312, -313,
	-518, 8, -362, -267, 601, -442, 2, -136, -119, 2,
	183, -442, 216, 2, -136, 216, 2, -442, 216, 2,
	-136, 216, 2, -267, 2, -606, 2, -530, 216, -526,
	10, -525, 5, 4, -533, -537, -534, 216, -267, 2,
	293, 2, 2, 524, 2, 98, 501, 119, 2, 420,
	-626, 441, 528, 2, 2, 2, 2, 2, 2, 2,
	501, -286, 2, -267, 183, 485, -309, 216, -310, 2,
	454, -637, 402, -527, 216, 2, 554, -302, 216, 2,
	-302, 231, 244, -281, 216, 2, 506, 504, 506, 504,
	188, 2, 242, 2, 242, 2, -479, 2, -480, -474,
	-481, 597, 347, -489, 2, -488, -525, 550, -107, 599,
	-107, 599, 458, 599, -530, -298, -298, -442, 2, -136,
	-119, 2, -442, 2, -136, 2, -267, 2, -133, -530,
	-132, 599, 188, -267, 2, -442, 2, -136, -119, 2,
	-442, 2, -136, 2, -217, 183, 2, 120, 501, -192,
	2, 183, 545, 2, 8, 2, 223, -530, 449, 397,
	175, 2, 463, 2, 464, 74, -416, 569, 74, 188,
	2, 188, 2, -399, 2, 563, 390, 188, 2, 2,
	-590, 2, 346, 188, 2, 188, 2, 188, 2, 188,
	2, 188, 2, -191, 459, 522, 500, 394, 250, 2,
	-136, 560, -119, 250, 249, -442, 560, 2, -611, 183,
	447, -442, 2, 520, 259, 159, 188, -399, 2, 188,
	2, 188, 2, 5, 2, 395, 483, 2, 248, 389,
	483, 2, -298, 501, 554, 454, 120, 28, 2, 446,
	2, 2, 88, 89, 188, 2, 188, 2, 203, 188,
	2, 188, 501, -380, 601, 569, 2, -391, -478, -428,
	-429, -428, 517, -356, -358, -192, 463, 2, -229, -389,
	-231, 183, -419, -420, -232, 273, 170, 342, -233, -398,
	28, 139, -398, -398, 60, 600, 600, 11, 12, 76,
	41, 590, 591, 592, 593, 181, 594, 595, 588, 589,
	587, 580, 581, 585, 254, 255, 95, 584, 582, 86,
	287, 440, 171, 172, 173, 174, 417, 229, 34, 230,
	14, 15, 16, -323, 33, 351, 272, 570, 220, 467,
	583, 17, 18, 19, 245, 247, 333, 50, 223, -275,
	362, -322, 498, 67, -442, -442, -442, -442, -442, -442,
	-442, -442, 358, 599, -385, -437, 597, -224, 599, 599,
	599, 599, -518, -224, -442, -456, 600, -376, 599, -224,
	-456, -451, 599, 438, 597, 599, -459, -442, 5, 5,
	5, 599, 601, -571, 564, 183, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 385, -500, 599, -499, 599, -499, -499, 555,
	-497, 599, 572, 565, 599, -497, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 555,
	604, -568, -352, 599, -381, -483, -442, 592, -381, -381,
	346, -373, -442, 106, -402, 251, 312, 189, 269, 432,
	236, -439, 603, -439, -467, 572, -224, -475, -297, -224,
	-477, 599, -473, -467, -108, -518, -91, -104, -113, -136,
	-151, -196, -197, 592, -298, 599, 188, 599, 601, -522,
	188, -362, -281, -308, -267, -298, -314, -315, -320, -292,
	-267, 2, 138, -373, -586, 529, 448, 28, 454, -528,
	-270, 38, -453, -492, -493, -542, 603, -541, -495, -505,
	-501, -504, 375, 379, -524, 54, 551, -507, 241, 4,
	-533, -535, 238, 239, 475, 51, 399, 178, 126, 125,
	339, 56, 513, 514, 515, 516, 193, 194, 58, 552,
	487, 69, 70, -586, 529, 448, 28, 454, -528, 183,
	-528, 2, 2, 154, 2, 2, 2, -267, -245, 604,
	64, 425, 154, -371, 216, -245, 154, -245, 154, -321,
	216, -320, -245, 154, -245, 604, 154, -245, 604, 154,
	601, 604, 154, -528, 2, -415, -521, -373, 38, -429,
	2, 127, 4, 5, -640, 604, 271, -326, 286, 330,
	212, 347, 567, 340, 131, -529, 5, 4, -452, -464,
	127, 279, 241, -512, -514, 8, -513, 9, -515, 590,
	591, -520, -519, 109, 601, -522, -242, 418, 461, 361,
	-241, 24, 29, 143, 233, 316, 548, 160, -338, 234,
	-335, 365, 154, 479, 538, -600, -601, 445, 508, 509,
	90, 340, 461, 361, 418, 154, -395, -397, 38, 118,
	316, 360, 61, 226, 291, 292, 481, 557, 154, 461,
	361, 418, 361, -13, -256, 24, 143, -258, -253, 461,
	-601, 99, 418, 576, 423, 371, 493, 388, -601, -244,
	479, 538, -600, -601, 445, 418, -243, -340, -335, 365,
	154, 603, 24, 143, 418, 461, 361, -622, -623, 29,
	418, 361, -594, -288, -565, 223, 563, 154, -288, -288,
	-478, 216, -615, 183, 2, -608, -132, 263, 5, 10,
	-530, -132, -369, 604, 604, -522, 592, 447, 446, 154,
	154, 154, 154, 250, 183, 331, 331, 2, 2, 2,
	2, 2, 190, -603, -627, 2, 2, -298, 216, -354,
	346, -589, -370, 501, -298, 183, 331, 43, -301, 216,
	2, -304, 554, -594, 331, -303, 216, -298, 38, 599,
	331, 2, -415, 2, 231, -565, 331, -479, -317, -298,
	-474, -317, 461, -291, 38, -439, -298, 600, 604, -489,
	-489, -530, -205, 563, 188, 599, -217, 563, 563, 250,
	-486, 604, -485, 223, -531, -530, -133, -530, 421, 250,
	-530, -589, -281, 2, -298, 2, 501, 252, -530, -205,
	223, -530, -530, -530, -521, 28, 464, 2, -191, 459,
	522, 89, 464, 2, -298, 501, 120, 231, 80, -615,
	183, 2, -267, -592, 183, -587, 433, 448, 529, -586,
	-298, 120, -298, 120, -298, 120, -298, -298, 2, 2,
	2, 2, 2, 85, 2, -136, -442, 2, 85, 2,
	46, 480, -611, 183, 2, 520, 2, 520, 2, -267,
	-267, -267, 482, 271, -298, -298, -298, -299, -304, 502,
	449, 447, -442, 2, -629, 2, 188, 183, 2, 501,
	231, 501, 231, 120, 188, 74, 120, 28, 501, 444,
	601, 4, -245, 604, -271, -229, -389, -521, -390, -389,
	-230, -229, -232, 183, 398, 539, 316, 465, 256, -420,
	-419, 28, -442, -424, 177, 315, -442, -422, -444, 590,
	591, -513, -515, -372, 340, -223, -223, -223, -359, -469,
	-442, 388, 231, -494, -492, -492, -296, -522, 513, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, 272, 220, 467, 50, 223,
	-442, 517, -442, -442, -442, -442, 309, 331, 336, 526,
	168, 536, 139, 340, -643, 495, 40, -449, -224, -377,
	599, -463, 35, 478, 28, -456, 599, 2, -437, -442,
	-438, -324, -322, -267, 590, 591, 592, 593, 594, 595,
	580, 581, 582, 14, 15, 16, 585, 589, 587, 588,
	181, 95, 584, 287, 440, 86, 171, 172, 173, 174,
	254, 255, 17, 18, 19, 34, 583, -374, -373, -373,
	600, 553, 28, 139, 592, 2, 600, 604, 38, 600,
	-442, -374, -455, -451, -373, -462, -461, 560, -410, -411,
	568, 296, 123, 214, 294, -412, 452, -516, 8, -522,
	592, -572, 176, 207, 599, 600, 2, 600, 2, 600,
	-442, 2, 600, -442, 2, 600, -442, 2, 600, -442,
	2, 600, 2, 600, 2, -442, -442, -442, -442, -442,
	-442, -442, -373, 8, -516, -516, 513, 513, -516, -516,
	-516, -508, 375, 376, 377, 378, 274, 275, 276, 277,
	379, 380, 381, 382, 301, 302, 303, 304, 297, 298,
	299, 300, 305, 306, 307, 308, 198, 199, 200, 201,
	194, 195, 196, 197, -508, -404, 2, -510, -373, 4,
	568, 296, 123, 214, 294, 452, 5, -404, 2, -405,
	2, -442, -373, -406, -443, -444, 590, 591, 583, -323,
	-456, -407, 2, -442, -374, -442, 57, 266, 519, -408,
	-442, 188, -373, -373, 2, -373, 2, -569, 38, -373,
	-365, 604, 188, 38, 4, -365, -365, 599, 600, 604,
	-403, 211, 290, 285, 244, -403, -473, -402, 251, -400,
	356, -400, -400, -467, -282, 597, 605, -522, -467, -466,
	-465, 38, -291, 353, -467, -467, 601, 600, -466, 598,
	-584, 599, 602, 602, 602, 602, 602, -298, 599, -373,
	-522, 601, 484, 2, 600, 245, 245, 245, 245, 245,
	346, 439, 600, 517, -588, -307, -311, 502, 2, 563,
	-106, 348, 600, 604, -364, 37, 597, 601, -516, 2,
	2, -511, 555, 599, 599, -411, 599, 188, -588, -311,
	502, 2, -363, 517, -267, 2, -298, -371, -245, 154,
	-371, -371, -245, 604, 154, -281, -302, -307, -309, -311,
	-267, -527, -528, -245, -303, -619, 600, 521, -430, -325,
	398, 477, 419, 456, 497, 8, 9, 8, 9, 604,
	-522, 604, -620, 93, 517, 78, 448, -260, 280, 517,
	-433, 216, 78, -543, -284, 93, -544, -267, 72, 535,
	388, 187, 152, -620, 93, 388, -620, 93, 2, 233,
	93, 461, 482, 28, 60, -478, 41, 41, 28, -618,
	329, 267, 559, 188, 569, 501, 231, 448, 517, 517,
	-478, -397, -492, 118, 291, 292, 60, -517, -512, 590,
	591, -517, 60, -517, -517, -517, 563, -301, -478, 448,
	517, 517, 517, 408, 408, -253, -149, 517, 517, 28,
	-192, 426, 127, -641, 582, 408, 604, 41, 41, 28,
	-618, 329, 267, 188, 517, -320, -282, 549, 42, 549,
	42, 549, 517, 42, 448, 517, 604, 42, 517, 517,
	-13, 461, -595, -272, 105, 322, 284, 323, 97, 319,
	96, 318, 103, 320, 104, 321, 556, 334, 63, 317,
	295, 324, -273, -274, 367, 547, 120, -527, -13, -13,
	461, 361, 418, 154, -616, 223, 28, -605, 223, -486,
	223, -486, -312, -267, 601, -136, -442, -442, -136, -442,
	-136, 46, 154, 154, 2, -637, 260, 599, -329, 331,
	188, -362, -487, 242, 604, -370, -586, 154, -527, -396,
	-395, 331, -303, 216, 2, 154, -352, 331, 148, 599,
	396, 2, 154, -283, 216, -268, -267, -415, -247, 505,
	154, -393, 545, -425, -136, 599, 127, 38, -425, -382,
	-383, -484, -384, -284, 599, -291, -439, -107, -488, 600,
	600, 600, -204, 350, -203, -267, 5, -217, -353, -285,
	-284, 119, 400, 400, -211, 563, -132, -133, 600, 604,
	-486, 223, 485, -205, -205, -486, -486, -298, 183, -530,
	-205, -205, -205, 2, 2, 2, 2, -399, -298, -281,
	-320, -298, 28, 601, -528, -528, -311, -307, -399, -281,
	-399, -281, -399, -281, -399, -399, -136, -442, 482, 2,
	458, 183, 183, 601, -399, -355, 428, 2, 396, 120,
	501, 365, 231, -298, -320, -298, -320, -281, 120, -281,
	121, -298, 4, -478, -390, -230, 347, 256, 465, -422,
	-423, -444, 438, 439, -423, 438, 439, 8, 9, 8,
	9, -234, 469, 335, -371, 604, -239, 39, 135, 256,
	-298, 569, 150, -442, -442, 517, -643, 495, -449, 150,
	-442, 309, 336, 526, 168, 536, 139, 340, 188, 599,
	-443, -443, 600, -375, -442, -442, 598, 607, 600, 601,
	600, -358, 604, -356, -442, -373, -373, 600, 601, -373,
	-362, 598, 598, 604, 600, -460, -461, 144, -442, 517,
	517, 517, 517, 599, 600, 601, -577, 357, 599, 599,
	-442, 600, 600, 600, 600, 38, 604, 604, 604, 600,
	604, 604, 604, 600, 600, 600, 604, 600, 569, 569,
	600, 600, 600, 600, 604, 600, 604, 600, 188, 600,
	600, -413, 372, 600, 11, 12, 590, 591, 592, 593,
	181, 594, 595, 588, 589, 587, 580, 581, 582, 86,
	287, 440, 14, 15, 16, -323, 245, 223, -443, -443,
	-443, -443, 600, -447, -448, 188, 183, 38, -408, -408,
	-408, 600, 188, -373, 600, 600, 599, -570, 289, 331,
	600, -436, -435, 561, -483, -366, 2, -473, -293, -522,
	-436, -436, -373, -442, 251, 251, -401, 545, 346, -403,
	-473, -466, -518, -441, -440, 185, 39, 135, 325, 326,
	327, 219, 186, -466, -291, -352, -466, -466, -522, -467,
	-467, -465, 600, -585, -518, 600, -367, -476, -564, -358,
	601, -522, -214, -565, -193, 5, 336, -193, -193, -193,
	-193, -298, -528, 517, 517, 223, 25, 373, -492, 597,
	598, 8, -522, 599, -516, -516, -516, -528, 188, 188,
	223, 188, -527, 2, -245, -371, -245, -245, -320, -321,
	-245, -245, -245, -394, 563, -519, -429, 533, 83, 398,
	513, -519, -241, 418, -284, -284, -298, -308, 202, 409,
	-527, 331, -433, 216, -246, 331, -492, -292, 599, -417,
	565, 256, 256, 545, -284, -292, 256, 216, -284, 216,
	-292, 2, -292, -596, 398, 341, -442, 60, -336, 278,
	396, 332, -242, 418, 461, 361, -136, -136, -136, -136,
	-136, 599, -619, 545, 138, -298, -320, -298, -308, -527,
	-303, 461, 361, 418, 328, -314, -517, -517, -395, 461,
	361, 418, -308, -527, -301, -527, -252, 216, -267, -252,
	216, 448, -281, 408, 569, 45, -641, -243, -136, -136,
	-136, -136, -136, 599, -282, -244, 418, 5, 216, -284,
	5, -284, 216, 5, -267, -284, -308, -527, -623, 24,
	143, -284, -308, -527, -272, -530, 336, 541, -281, -594,
	-288, 448, 517, 517, -478, -612, -613, 204, 431, 448,
	434, -528, -132, -208, 563, -132, -202, 227, 592, -591,
	-530, -267, 554, -267, -327, -330, -328, -284, -434, -433,
	-547, -548, -543, 272, 231, 535, 244, 169, -220, -221,
	565, 563, 154, -318, -298, 597, -205, -530, -298, -487,
	-309, -310, 154, -352, 331, -527, 38, 154, 599, 2,
	2, -302, 346, 331, -283, 216, -248, 145, -641, -281,
	-436, -366, -392, -427, 428, 346, -353, 550, -291, -392,
	-368, 604, 188, 582, 601, -353, -482, 592, -107, -107,
	-205, 604, 599, 582, 582, 599, -530, 600, 604, 601,
	599, 582, 582, -213, 350, -212, 146, 258, 243, 471,
	472, 473, 474, 137, 470, 124, 314, -486, -530, -211,
	-133, 188, 188, -66, 563, 501, -205, 603, 434, -267,
	-399, -399, -399, 458, 458, -267, -362, -294, -281, -298,
	-295, -320, 183, 183, -281, 539, -423, 347, 283, -469,
	-240, 571, -298, 603, -442, -442, 150, 150, -442, -443,
	-443, -442, 150, 188, 599, -442, -453, 33, 33, 600,
	604, -438, -442, -322, 600, 553, -358, -358, 600, 592,
	-522, 603, 600, -451, 147, -442, 511, 296, 214, 294,
	-412, 294, -412, -412, -516, 5, -522, 592, -578, -287,
	599, -267, 561, -357, 352, 600, -494, -492, -442, -442,
	-442, -442, -442, -516, -497, -497, -512, -512, -442, -447,
	-442, -494, -492, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, 139, 331, 340, -443, -448, -447, -442,
	-442, -492, 600, 600, 600, -373, -106, 599, 289, -386,
	207, -442, -486, 604, -386, -386, 600, -473, -473, 599,
	-442, 251, 598, 604, 606, 582, 582, -352, 601, -465,
	-466, 598, 600, 604, 600, 604, -426, 38, 600, -522,
	-436, -216, -215, 136, 53, 107, 134, 336, 245, -528,
	-528, 448, 349, 5, 8, 597, 598, 601, -516, 600,
	600, 600, -528, -528, 448, -528, -245, -245, 119, 316,
	-442, 517, 517, 60, 223, 154, 331, 547, -549, -544,
	152, -442, 599, 231, 599, 599, 2, -236, -237, -238,
	143, 461, 24, -621, 2, 545, 154, -245, 154, -245,
	567, -336, 599, 599, 517, 448, -260, 517, 563, -373,
	-442, -206, 127, -521, -601, 603, -601, 603, 448, 517,
	517, 448, 517, 517, 331, 154, 563, 167, 167, 569,
	-252, 563, -373, 517, -496, 48, 26, 331, -302, -245,
	154, 517, 517, 529, 461, -530, 336, -13, -308, -527,
	-303, 461, 361, 418, -593, -363, -593, 204, -311, -616,
	-486, -210, 350, -209, 146, 430, 137, 258, -486, -208,
	188, 242, 563, -303, 2, 600, 600, 604, 604, -550,
	-246, -298, -283, 231, 231, -290, -268, 38, 344, 344,
	599, -298, -87, 563, -485, -518, -597, 563, 43, -301,
	38, 154, -594, -136, -303, -490, -491, 5, 38, -298,
	154, 346, 331, -249, 265, -641, -526, -565, -358, -392,
	-381, 332, 91, 600, -436, -383, -366, -442, 2, 600,
	-203, -204, -530, -530, -530, -205, -217, -285, 2, -531,
	-530, -530, 604, 599, 582, 582, 582, 582, 582, -211,
	-486, -132, -136, 350, -298, 592, -399, -342, -341, 365,
	340, -342, 438, 438, 347, 177, 261, -239, -282, -442,
	-442, 150, 33, 33, -442, -442, -453, 600, -442, -442,
	-373, 598, 5, -442, 600, 600, 8, -442, 600, 601,
	-579, -267, -442, 600, 60, 600, 600, 604, 604, 600,
	600, 600, 600, 600, 600, 600, -448, 188, 139, 340,
	599, 600, 600, -106, -450, 210, 60, -473, -450, -450,
	-401, -362, -473, -440, -282, 597, -282, 597, -522, -518,
	-476, 599, 601, -215, 582, -530, -530, -193, 563, -311,
	598, 2, 597, -522, 600, -311, 119, -284, -284, 501,
	438, -252, 388, -433, 154, -551, 93, -553, 76, 169,
	102, 331, 336, 535, 388, 72, 127, 346, 405, -631,
	-632, -633, 38, 574, 575, 600, -360, -470, -564, 599,
	-267, -360, -362, 331, 490, 127, 346, 331, 127, 346,
	558, 119, 2, 529, 79, -284, -292, -362, -362, -298,
	-308, -527, 161, 600, 604, 582, 2, 592, 592, -308,
	-527, -303, -308, -527, -301, 154, -252, 363, 167, 161,
	600, -282, 5, 5, 154, -279, 76, -284, 5, -284,
	-302, 119, 448, 517, 517, 346, 346, 349, -612, -613,
	-208, 604, 599, 582, 582, -208, -531, -132, 2, -352,
	-343, 233, -284, -548, -545, -546, 388, -434, -552, -554,
	169, 388, -331, 599, -283, -268, 599, -136, 2, -219,
	-218, -267, 5, 599, -329, 350, 598, -599, 350, -598,
	117, 137, -527, -396, -136, -303, -352, 600, 604, 148,
	-418, 545, -282, -298, 154, -250, 264, -641, -526, -247,
	-421, -419, 140, 599, 346, -136, -358, 582, 600, 600,
	119, 600, -212, -213, -530, -132, -530, -530, -530, -211,
	-486, -67, -68, 231, 93, 370, -295, 501, 231, 599,
	599, -239, -442, -442, -442, 600, -358, -522, 592, -573,
	365, 600, -469, -442, -442, -443, 188, 599, -453, 600,
	-574, 562, -442, -387, -388, -442, 436, 108, 208, -574,
	-574, 600, -518, -518, 2, -530, 2, 517, 597, 2,
	188, 223, 38, 408, -433, -292, -296, -289, -267, 169,
	216, 336, 558, -417, 256, 599, -443, 539, -298, 599,
	2, 215, 215, 30, 60, -634, 131, 235, 600, 604,
	-471, -278, -267, -442, -471, 600, 600, 336, 539, 336,
	558, -442, 539, -492, 599, -245, -245, 600, 600, -442,
	517, -521, 100, -519, 2, -601, -252, -281, -442, 517,
	5, -245, -296, -245, -245, -279, 529, -308, -527, -303,
	-617, 502, 455, 530, 449, 191, 437, -617, 183, -209,
	-210, -530, -132, -208, 38, -337, -338, 2, -550, 256,
	-289, 256, 225, 153, -360, 599, 599, -362, -630, 563,
	600, 604, 582, 582, -327, -220, -88, -89, 518, -485,
	604, 599, 582, -352, 38, 5, 599, 599, -267, 346,
	599, -282, -262, 92, -641, -526, -248, -392, 332, -362,
	93, -421, -449, -205, 599, -205, 600, 604, 28, 599,
	28, 599, -298, -320, -373, -373, 600, -358, 60, 604,
	600, 600, -443, -453, 600, -575, -576, -287, 604, 599,
	599, 462, 598, 598, -528, 2, -528, -252, 388, -267,
	-553, -289, 331, 545, -442, -443, -269, 599, -442, 599,
	599, 38, 127, 235, 132, 221, -432, -635, 101, 491,
	224, -470, -239, 600, -431, 545, 405, -443, -279, -360,
	599, 599, 599, 582, 188, 599, -496, -245, -302, 517,
	2, 2, 188, -593, 600, -607, 403, -136, -220, 599,
	-332, 81, 94, 128, 215, 192, 232, 482, 488, 28,
	-332, 600, -360, -360, 600, -333, 346, 119, 316, -218,
	-519, -519, 600, 38, -89, 9, -598, -599, -442, 38,
	-136, -490, -360, -298, -360, 346, -254, -253, 273, -526,
	-249, 600, -292, -392, -531, -68, -362, -362, 600, 600,
	-580, 396, 439, 209, -373, -359, 600, 604, 38, -388,
	2, 2, 2, 408, 154, 211, 600, -555, 288, -267,
	600, -396, -396, 38, 132, 221, -339, -335, 599, -240,
	-471, 211, -298, -602, 545, 600, -345, -344, -341, -347,
	-346, -341, -373, -519, 100, 363, -373, -279, -528, -528,
	346, -609, 189, -608, 5, 10, -333, -361, -472, -284,
	-431, 600, 600, 82, 119, -343, -136, 600, -136, 600,
	600, -418, 600, -298, -251, -532, 408, 410, -641, -250,
	-436, 600, 600, 600, 600, -581, -582, 50, 532, 109,
	-442, -581, -581, -576, -578, 169, 563, -556, -559, -558,
	579, 468, 189, 364, 600, 490, 557, 600, 600, -634,
	-362, 563, -352, -442, -431, 600, 604, 550, 600, 604,
	550, 600, 188, 600, -245, -614, 563, -245, -617, -207,
	563, 46, -261, -260, 600, 604, -432, -431, -339, 387,
	133, 143, -337, -630, -431, 599, -432, 599, -259, -258,
	-641, -512, -262, 140, -205, -583, 152, -582, 384, 182,
	438, 384, 182, -583, -583, -289, 55, -558, 579, -559,
	579, 539, 133, -436, 600, 55, -555, -344, 223, -346,
	188, 363, 204, 188, 446, -608, 30, -472, -339, -432,
	-221, 563, 439, 439, 2, -220, -333, -432, -360, -339,
	-360, -255, -256, -257, -362, -254, 332, 539, 109, 207,
	512, 316, 33, 582, -557, 316, 425, 64, 461, -557,
	582, -556, 599, 599, 349, -528, 350, -221, -339, -436,
	2, -333, -339, 600, -221, 600, -251, 461, 438, 354,
	-582, -442, 23, 336, 127, -442, -634, -373, -373, -245,
	-204, 599, -436, -221, -261, -221, -431, -436, -432, -259,
	-382, 600, 600, -204, -436, -436, -432, -339, -255, -436,
	-334, -335, 517, 600, -339, -221, 599, -221, -436, -373,
	-436, 600, -334,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 555, 556, 558, 559, 560, 562,
	563, 565, 567, 569, 570, 571, 573, 574, 576, 577,
	578, 579, 580, 582, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	651, 653, 0, 1420, 1422, 1424, 1426, 0, 807, 0,
	36, 37, 39, 0, -2, 334, 336, 338, 340, 0,
	371, 373, 374, 376, 378, 379, 380, 382, -2, 0,
	488, 489, 491, 493, -2, 0, 1020, 1022, 1024, 0,
	640, 642, 0, 1027, 1029, 1031, 0, 0, 663, 664,
	0, 1531, -2, 655, 657, 659, 661, 732, 734, 736,
	738, 740, 742, 744, 746, 748, 750, 751, 753, 755,
	757, 759, 761, 762, 764, 766, 768, 769, 771, 772,
	774, 776, 778, 780, 782, 784, 786, 788, 790, 792,
	794, 796, 798, -2, 801, 802, 803, -2, -2, 0,
	-2, -2, -2, 1438, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 432, 434, 436, 438, 440, 443,
	445, 447, 1589, 495, 497, 499, 501, 503, 505, 507,
	0, -2, 1603, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1562, 1564, 1566, 1568, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 557, 561, 564, 566, 568, 572,
	575, 581, 583, 585, 540, 541, 544, 2301, 2319, 2320,
	2321, 2324, 2325, 2326, 2327, 2328, 2329, 2784, 2865, 2866,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 542, 543, 1209, 0, 609, 607, 2286,
	610, 2581, 612, 614, 482, 483, 484, 485, 486, 487,
	0, 633, 623, 1601, 634, 636, 637, 638, 639, 604,
	602, 0, 633, 2355, 631, 1418, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 411, 1267,
	1268, 1269, 1403, 1404, 2628, 1445, 0, 235, 652, -2,
	-2, 2749, -2, 686, 687, -2, -2, 701, 705, 696,
	2753, 0, 2631, 2615, -2, 708, 1421, 1423, 1425, 805,
	806, 2305, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 245, -2,
	-2, -2, -2, 0, 0, 2676, 2407, 2254, 2321, 2257,
	2252, 335, 337, 339, 341, 342, 0, 0, 0, 0,
	0, 0, 0, 372, 375, 377, 381, -2, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 1083, 1084, 1325, 0, 0, 0, -2, 490,
	492, 545, 546, 0, 1590, 1590, 553, 554, -2, 0,
	0, 0, 0, 305, 295, 1021, 1023, 1025, 1026, 0,
	0, 0, 0, 0, 641, 643, 0, 0, 274, 1028,
	1030, 1032, 1033, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 656, 658, 660, 662, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 752, 754, 756, 758, 760,
	763, 765, 767, 770, 773, 775, 777, 779, 781, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 800, 813,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 915, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 1001, 0, 0, 816, 819, 820,
	821, 822, 823, 824, 0, 888, 913, 914, 924, 804,
	0, 1249, 1591, 1447, 1428, 1442, 1447, 1430, 1431, 1432,
	1433, 1434, 1439, 1441, 1435, 1436, 1437, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 433, 435, 437,
	439, 441, 444, 446, 448, -2, 1560, 1561, 496, 498,
	500, 502, 504, 506, 508, 644, 0, 646, 0, 818,
	-2, 0, 1595, 1595, 1595, 0, 0, 1561, 1559, 0,
	649, 650, 712, 713, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 2128, 1956, 0, 714, -2, 1989, 1991,
	2724, 2554, 2749, 2127, 1993, 1994, 1995, 1996, 1997, 0,
	1999, 2000, 2001, 2002, 2003, 2004, 0, 2006, 0, 2011,
	2012, 2013, 0, 2731, 2231, 2315, -2, 0, 0, 2737,
	2311, 0, 2094, 2029, -2, -2, 2338, 2317, 1800, 1801,
	1802, 1803, 1804, -2, -2, 2767, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 0, 2712, 2732,
	2733, 2738, 2740, 2734, 2721, 2054, 2421, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1827, 1836, -2, -2, -2, -2, -2, -2, -2, 2725,
	2726, 2743, 2746, 2752, 2757, 2758, 2730, 2739, 2766, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 1828, -2, -2, -2, -2,
	1578, 2595, 1581, 1209, 1579, 1563, 1565, 0, 1567, 0,
	0, 0, 1572, 1598, 1596, 0, 1647, 1576, 1577, 1670,
	1670, 1694, 0, 1675, 0, 1694, 1590, 1721, 0, 1681,
	2620, 2030, 2031, 0, 2321, 2316, -2, -2, 2764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 611, 613, 0, 0, 0, 632, 1600, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 416, 417, 418,
	2732, 0, 0, 0, 423, 0, 425, 426, 427, 428,
	429, 430, 431, 205, 2732, 513, 538, 0, 205, 2732,
	516, 205, 2732, 519, 0, 522, 1323, 205, 2732, 525,
	2282, 205, 2732, 528, 530, 2290, 205, 2732, 534, 2297,
	2295, 535, 0, 537, 225, 221, 222, 223, 224, 1414,
	1415, 1416, 1417, 0, 1444, 1324, 654, 0, 680, 0,
	684, 685, 2720, -2, 0, 2640, 689, 690, -2, 692,
	1448, 1452, 1453, 1454, 1455, 1456, 0, 0, 0, 0,
	1461, 0, 0, 0, 0, 681, 682, 699, 700, 706,
	709, 0, 808, 809, 810, 811, 812, 72, 0, 2732,
	1721, 74, 0, 2276, 2346, 2347, 2348, 2349, 2350, 2765,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2767, 78, 0, 2732, 83, 0, 2732, 0, -2, 96,
	0, 108, 0, 2279, 117, 0, 2732, 0, 2251, -2,
	0, 217, 296, 297, 298, 0, 1058, -2, 0, 1261,
	1263, 1263, 0, -2, 0, 0, 0, 1011, 2248, 2253,
	1012, 2272, 1013, 2258, 0, 343, 344, 345, 346, 347,
	0, 348, 2732, 350, 351, 0, 353, 354, 2732, 356,
	357, 0, 359, 0, 361, 0, 256, 260, 2732, 308,
	309, 2334, 2335, 2342, 2343, 2344, 2345, 2732, 385, 387,
	0, 389, 390, 0, 392, 0, 0, 0, 396, -2,
	412, 0, 409, 399, 400, 402, 403, 404, 405, 406,
	0, 452, 450, 2287, 0, 0, -2, 2732, 0, 1055,
	0, 0, 1303, -2, 0, 1254, 0, 1310, 2732, 1306,
	0, -2, 0, 1588, 2732, 1465, 1087, 1088, 1089, 1090,
	1733, 479, 0, 1496, 0, 1498, 0, 1517, 1727, 1670,
	0, 0, 1732, 0, -2, 598, 2304, -2, 548, 0,
	549, 0, -2, 0, 322, 0, 0, 1036, 1038, 1039,
	1041, 1042, 1045, 1046, 1047, 1048, 0, 1050, 1707, 275,
	277, 0, 0, 0, 1035, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 0, 0, 665, 0, 0, 814,
	815, 0, 0, 831, 832, 833, 0, 322, 2632, 2590,
	2442, 840, 0, 843, 846, -2, 0, 0, 0, 0,
	850, 0, 855, 856, 857, 0, -2, 0, 864, 866,
	1019, 868, 0, 0, 870, 0, 874, 0, 877, 0,
	879, 0, 881, -2, -2, -2, 889, 890, -2, 895,
	-2, 0, 899, -2, 0, 902, 0, 905, -2, 0,
	915, 911, 912, 0, 0, 0, 0, 932, 933, 0,
	942, 0, 945, 946, 947, 0, 951, 952, 0, 954,
	955, 956, 957, 0, 2703, 2637, 2407, 0, 964, -2,
	970, 972, 0, -2, 0, 988, 0, 992, 0, 0,
	1000, 0, 0, 817, 0, 825, 826, 205, 1725, 1427,
	-2, 1429, 0, -2, 0, 645, 0, 648, 1620, 1546,
	1543, 0, 1617, 1618, 1547, 0, 0, 0, 1554, 0,
	1593, 1594, 0, 0, 0, 1533, 1534, 0, 0, 0,
	0, 2133, 2134, 2135, 2136, 2149, 2137, 2138, 2148, 2146,
	2147, 2139, 2140, 2145, 2159, 2160, 2150, 2151, 2141, 2154,
	2152, 2153, 2155, 2156, 2157, 2158, 0, 0, 2164, 0,
	2142, 2143, 2144, 2172, 0, 0, 2173, 0, 2175, 0,
	2165, 2161, 2162, 2163, 0, 1935, 1937, 2239, 0, 0,
	0, 2171, 2166, 2167, 1873, 1874, 1875, 1876, 1877, 1910,
	1914, 1915, 0, 0, 1990, 2236, 2235, 1992, 0, 0,
	2187, 0, 2005, -2, 0, 2128, 2182, 0, 0, 2014,
	2015, 2016, 0, 0, 2187, 0, 0, 2230, 2026, 2027,
	1865, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1813, 0, 1815, 0, 1816, 1817, 1824,
	1837, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 2211, -2, 0, 0, 0, 0, 1829,
	0, 1580, 0, 0, 1651, 2240, 2244, 2245, 1651, 1651,
	0, 0, 2188, 1718, 1718, 0, 0, 1713, 1713, 1713,
	1711, 1694, 0, 1694, 1704, 0, 1694, 1694, 0, -2,
	1675, 0, 0, 1704, 0, 1688, 586, 588, 590, 592,
	593, 594, 596, 1722, 1723, 0, 0, 0, 0, 2322,
	0, 0, 0, 0, 2294, 0, 0, 2307, 0, 0,
	2281, 368, 0, 0, 0, 2686, 2631, 0, -2, 616,
	635, 1590, 0, 2190, 1748, 1752, 0, 1754, 1755, 1756,
	1757, 1758, 0, 0, 1749, -2, 1825, 1827, 1848, 2339,
	2340, 2341, 1808, 1809, 1810, 1811, 1812, 1820, 1807, 1807,
	1807, 1818, 1847, 1839, 1847, 1843, 1793, 1794, 1795, 1830,
	1831, 1832, 1833, 0, 2686, 2631, 0, -2, 625, 0,
	0, 1528, 413, 0, 420, 421, 422, 0, 509, 0,
	203, 204, 0, 205, 2732, 514, 0, 517, 0, 205,
	2732, 2246, 523, 0, 526, 0, 0, 532, 0, 0,
	0, 0, 0, 205, 1530, 0, 0, 0, 0, -2,
	694, 702, 703, 704, 0, 1450, 0, 1457, 723, 724,
	725, 1459, 1460, 0, 1462, 697, 726, 727, 728, 729,
	730, 731, 0, 2260, 2261, 2262, 2263, 2266, 2267, 0,
	0, 695, 716, 698, 0, 710, 118, 1400, 0, 0,
	161, 0, 1400, 1400, 0, 0, 0, 0, 188, 0,
	1121, 0, 0, 0, 0, 133, 146, 157, 130, 131,
	0, 0, 0, 0, 0, 0, 84, 1231, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	145, 0, 0, 0, 0, 0, 1493, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1118, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 227, 0,
	0, 0, 1255, 0, 0, 0, 1587, 0, 0, 0,
	0, 2732, 1398, 0, 1383, 0, 1707, 2490, -2, -2,
	275, 1707, 1010, 0, 0, 2322, 2256, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 388, 391, 393,
	394, 395, 0, 1302, 0, 401, 442, 1180, 2732, 0,
	0, 469, 464, 0, 466, 0, 0, 0, 1230, 2732,
	1228, 2291, 0, 1252, 0, 1209, 2732, 2289, 0, 0,
	0, 1311, 2331, 1320, 1324, 1483, 0, 481, 0, 1499,
	1501, 0, 0, 1728, 0, 1730, 1670, 1590, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 1049,
	281, 0, 1706, 0, 0, 310, 1707, 275, 2606, 1034,
	322, 322, 1707, 667, 1707, 669, 0, 0, 834, 835,
	0, 322, 322, 322, 841, 842, 844, 845, -2, -2,
	-2, -2, 847, 848, 939, 0, 0, 0, 938, 858,
	0, 860, 863, 867, 0, 1004, 2615, 2631, 2686, 1017,
	939, 2407, 939, 2407, 939, 2407, 939, 939, 883, 927,
	935, 894, 901, 0, 896, 900, 903, 906, 0, 908,
	916, 0, -2, 0, 919, 0, 921, 0, 923, 939,
	940, 943, 950, 953, 958, 959, 960, 961, 2302, 962,
	963, -2, 967, 968, 0, 979, 984, 985, 981, 0,
	0, 0, 0, 0, 0, 995, 996, 0, 0, 1003,
	0, 827, 1248, 0, 1440, 1620, 1546, 647, 1537, 1619,
	1538, 1545, 1548, 0, 0, 1550, 0, 1552, 0, 1615,
	1616, 1623, 1624, 0, 1634, 1635, 1627, 0, -2, 0,
	0, 1630, 1631, 1556, 0, 1573, 1574, 1575, 1604, 1607,
	1339, 0, 2865, 1869, 1743, 1870, 1871, 2275, 0, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, -2,
	-2, -2, -2, -2, -2, -2, -2, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, -2, -2,
	-2, 1911, 1912, 1913, -2, 2174, 2176, 0, 2239, 0,
	-2, 0, -2, -2, -2, -2, 1932, 0, 1934, 1939,
	1941, 1943, 0, 0, 0, 0, 2238, 1953, 2222, 2223,
	0, 0, 2130, 2131, 2132, 1938, 0, 1957, 2237, 2234,
	0, 0, 2168, 0, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 0, 2186, 1603,
	2018, 0, 0, 0, 0, 2025, 2010, 2184, 0, 2183,
	0, 0, 0, 2194, 0, 2229, 2225, 0, 2273, 1864,
	1851, 1852, 1853, 1854, 1855, 1856, 1866, 0, 2270, 2308,
	2314, 2104, 0, 0, 0, 2055, 2056, 2057, 2058, 2059,
	0, 2061, 2062, 0, 2064, 2065, 0, 2067, 2068, 0,
	2070, 2071, 2072, 2073, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 0, 0, 2076, 0, 2197, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2078, 0,
	2080, 2188, 2208, 0, 0, 1958, 0, 0, 0, 0,
	2128, 0, 2083, 2188, 2216, 0, 0, 0, 0, 0,
	2188, 0, 2221, 0, 2090, 0, 2092, 1582, 0, 0,
	1738, 0, 0, 0, 2243, 1738, 1738, 0, 1646, 0,
	0, 1714, 1715, 1716, 1717, 0, 0, 1718, 0, 1708,
	1712, 1709, 1710, 1704, 1667, 0, 0, 2277, 1704, 1673,
	1703, 0, 1209, 1693, 1704, 1704, 0, -2, 1677, 1694,
	0, 0, 587, 589, 591, 595, 597, 0, 0, 1603,
	-2, 0, -2, 324, 1208, 0, 0, 0, 0, 0,
	0, 606, 608, 0, 0, 529, 0, 0, 622, 0,
	600, 0, 603, 0, 1739, 1742, 0, 0, 1753, 1759,
	1760, 0, -2, 0, 0, 1849, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 424, 539, 205, 511, 0,
	205, 205, 520, 0, 0, 205, 531, 205, 2298, 205,
	2296, 226, 536, 1529, 238, 0, 683, 0, 1449, 1458,
	0, 720, 0, 722, 0, 2264, 2268, 2265, 2269, 0,
	711, 0, 0, 0, 0, 1399, 0, 1346, 0, 0,
	165, 2732, 0, 207, 0, 0, 1173, 2283, 0, 1163,
	0, 0, 2428, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 1232, 1233, 1235, 1242, 1244, 0, 1238, 2271, 0,
	0, 1239, 0, 1241, 1243, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 1264, 0, 0, 1265,
	1266, 1471, 1472, 0, 1492, 1493, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 2250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 0, 1298, 1296, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 0, 0, 0, -2, 1259, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 313, 2249, 2259, 0, 1043, 1044, 349, 352, 355,
	358, 244, 0, 0, 397, 0, 0, 1093, 1068, 0,
	0, 451, 322, 0, 0, 465, 469, 2300, 1053, 1226,
	1229, 0, 1209, 2732, 1275, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 2732, 2278, 2330, 2331, 1485, 1493,
	0, 1738, 0, 1515, 1502, 0, 0, 0, 1515, 1519,
	1520, 1522, 1523, 0, 0, 1729, 1735, 547, 599, 1590,
	1590, 322, 320, 2557, 318, 315, 317, 0, 0, 1505,
	1507, 0, 0, 0, 269, 0, 278, 1707, 276, 0,
	281, 0, 0, 0, 463, 666, 671, 829, 0, 322,
	837, 838, 839, 885, 929, 937, 983, 849, 851, 852,
	853, 0, 0, 0, 1018, 1014, 1015, 1016, 869, 939,
	872, 939, 875, 939, 878, 880, 898, 904, 917, 910,
	918, 0, 0, 0, 931, 948, 0, 966, 0, 0,
	0, 0, 0, 0, 0, 989, 990, 991, 993, 998,
	997, 1002, 828, 1726, 1541, 1542, 1544, 0, 1553, 0,
	0, 1629, -2, -2, 1628, 1632, 1633, -2, -2, -2,
	-2, 1549, 0, 1558, 1555, 0, 1614, 1337, 1338, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1954, 0,
	-2, 1933, 1936, 1940, 1942, 1944, 0, 0, 0, 0,
	0, 0, 2177, 0, 2179, 1955, 2232, 2235, 2170, 0,
	2126, 0, 0, 1602, 1603, 1603, 0, 2024, 0, 2185,
	0, 2192, 2193, 0, 2017, 0, 2226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 2060, 2063, 2066, 2069, 0, 0, 0, 0, 2049,
	0, 0, 0, 2053, 1819, 1805, 0, 1847, 1845, 1846,
	1840, 1847, 1844, 1797, 0, 1796, 0, 2075, 0, 2077,
	2079, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 1962,
	1963, 1983, 2082, 2214, 2215, 0, 0, 0, 0, 0,
	0, 2088, 0, 2220, 2089, 2091, 1590, 0, 1583, 0,
	1648, 1637, 1737, 0, 2241, 1707, 1650, 1652, 2242, 2280,
	1637, 1637, 0, 2189, 0, 0, 1698, 0, 0, 0,
	1700, 1671, 0, 0, 1665, 0, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1672, 1209, 1702, 1674, 1678, 2308, 0,
	1704, 0, 1689, 0, 1691, 1724, 0, 1683, 1686, 0,
	0, 2323, 1738, 0, 362, 369, 370, 363, 364, 365,
	366, 0, 615, 0, 0, 0, 0, 0, 2191, 0,
	1744, 0, 1750, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 1527, 419, 510, 205, 515, 518, 2247, 205,
	524, 527, 533, 234, 0, 679, -2, 718, 719, 721,
	0, 717, 162, 1400, 0, 0, 1342, 1344, 1348, 1354,
	1357, 0, 167, 2732, 179, 0, 1137, 0, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 2732, 205, 2732,
	205, 182, 184, 187, 0, 191, 189, 0, 1125, 0,
	0, 1128, 119, 1400, 0, 0, 122, 126, 134, 135,
	138, 0, 0, 0, 144, 0, 0, 0, 1359, 1363,
	1371, 0, 0, 0, 1236, 1237, 1240, 1246, 85, 0,
	0, 0, 1367, 1369, 1375, 97, 100, 2732, 2292, 102,
	2732, 0, 1341, 0, 0, 0, 0, 193, 124, 128,
	136, 137, 139, 0, 1377, 121, 0, 220, 0, 0,
	210, 205, 2732, 0, 212, 0, 213, 214, 228, 0,
	0, 0, 1056, 1057, 1297, 1250, 1251, 0, 1262, 1256,
	0, 0, 0, 0, 0, 1379, 1380, 0, 0, 0,
	1398, 1395, 1707, 240, 0, 1707, 248, 0, 2255, 0,
	261, 384, 0, 0, 0, 0, 1092, 1191, 1094, 1096,
	1097, 1098, 207, 0, 2331, 1163, 2479, 2331, 0, 1063,
	0, 0, 0, 457, 453, 0, 462, 468, 467, 473,
	-2, 0, 0, 0, 0, -2, 0, 0, 1313, 1307,
	1308, 0, 0, 0, 0, 2732, 1487, 1493, 0, 1588,
	1603, 480, 1494, 1515, 0, 0, 0, 1504, 1500, 1497,
	1738, 0, 0, 0, 0, 0, 1731, 1734, 550, 551,
	299, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 279, 0, 282, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 0, 0, 281, 311, 271,
	1707, 0, 0, 668, 0, 0, 836, 0, 859, 862,
	871, 873, 876, 920, 922, 939, 949, 973, 974, 1115,
	0, 1115, 0, 0, 994, 1551, 0, 1626, 1557, 1608,
	1609, 0, 1339, 0, 1872, 1917, 0, 0, -2, 0,
	0, 1921, 0, 0, 0, -2, 0, 0, 0, 2178,
	2180, 0, 2234, 2169, 2019, 0, 0, 0, 2023, 2007,
	2008, 0, 2129, 2195, 2224, 2228, 0, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 0, 2274, 2309, 2313, 2102, 2103,
	2107, 2288, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1842, 0, 0, 2196, 2207,
	2209, 1959, 1960, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, -2, -2, -2, 1977, 1978, 1979, -2,
	-2, -2, 1984, 0, 0, 0, 2210, 2212, 2213, 2217,
	2218, 0, 2085, 2086, 2087, 2219, 0, 1590, 1584, 1645,
	0, 1736, 1649, 0, 1645, 1645, 1597, 1696, 0, 0,
	1720, 0, 1668, 0, 1669, 0, 0, 1701, 0, 1676,
	1679, 1680, 1690, 0, 1682, 0, 1685, 0, 2019, -2,
	323, 325, 327, 0, 330, 331, 0, 0, 0, 618,
	619, 0, 617, 601, 0, 0, 1746, 0, 0, 1822,
	1826, 1850, 627, 628, 0, 626, 512, 521, 236, 0,
	1705, 0, 0, 0, 0, 0, 0, 206, 1135, 1172,
	0, 0, 0, 1162, 0, 0, 1178, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1122, 0, 0, 0, 0, 1347, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1477, 1478, 0,
	1468, 0, 0, 0, 208, 0, 0, 0, 1336, 230,
	0, 0, 0, 0, 0, 1300, 1301, 1258, 1360, 1364,
	1372, 0, 0, 0, 0, 633, 0, 638, 1397, 0,
	248, 246, 0, 249, 0, 252, 253, 0, 248, 242,
	0, 0, 0, 1209, 398, 1066, 1179, 0, 0, 1181,
	1099, 1103, 0, 2331, 2331, 0, 2285, 0, 1064, 0,
	0, 1180, 449, 0, 456, 0, 470, 0, 0, 1230,
	0, 0, 1253, 1273, 1209, 0, 1312, 1314, 0, 1322,
	0, 0, 0, 1489, 1493, 0, 1482, 1483, 1622, 1495,
	1513, -2, 0, 0, 1603, 1521, 1518, 1524, 1525, 0,
	319, 0, 314, 316, 0, 302, 0, 1506, 1508, 0,
	1037, 1040, 0, 0, 0, 0, 0, 0, 0, 270,
	281, 1707, 306, 0, 830, 854, 930, 975, 1114, 0,
	0, 977, 0, 0, 1625, 1612, 1613, 1610, 1339, 1919,
	1923, 0, 0, 0, 1925, -2, 0, 1947, -2, -2,
	2181, 2233, 1998, 1603, 2020, 2022, 2009, 2227, 1867, 0,
	2109, 2106, 0, 2093, 0, 2044, 2045, 0, 0, 2048,
	2050, 2051, 2052, 1806, 1799, 1798, 2206, 0, 0, 0,
	0, 2084, 1585, 0, 2098, 0, 0, 1653, 2098, 2098,
	1697, 0, 1699, 1666, 1654, 0, 1663, 0, 2309, 1692,
	1684, 0, 0, 328, 0, 332, 333, 367, 0, 0,
	1740, 1745, 0, 1751, 1821, 0, 237, 163, 164, 1351,
	1355, 1352, 0, 166, 0, 1136, 0, 1139, 0, 0,
	0, 0, 1146, 1163, 0, 0, 0, 0, 0, 0,
	1165, 0, 1164, 0, 0, 1195, 0, 1327, 1334, 0,
	-2, 0, 0, 0, 173, 196, 0, 0, 0, 0,
	199, 1401, 175, 0, 0, 205, 205, 0, 0, 1343,
	1345, 1358, 0, 0, 0, 0, 151, 0, 0, 1361,
	1365, 1373, 1368, 1370, 1376, 0, 103, 0, 1479, 0,
	0, 1378, 218, 219, 0, 205, 0, 205, 211, 205,
	1336, 0, 0, 0, 0, 0, 0, 0, 1381, 1382,
	239, 0, 0, 0, 0, 241, 312, 248, 386, 0,
	1124, 0, 1191, 1183, 1184, 1185, 0, 1095, 1190, 1192,
	0, 0, 1100, 0, 0, 0, 0, 1080, 1065, 0,
	1076, 0, 0, 1093, 1068, 0, 454, 471, 0, 474,
	0, 477, 1054, 1227, 1270, 1209, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 1491, 1493, 0, 1484, 1485,
	1515, 1621, 0, 0, 0, 1503, 1622, 0, 321, 322,
	0, 322, 283, 0, 284, 285, 286, 293, 294, 272,
	273, 670, 672, 0, 0, 678, 1113, 0, 0, 0,
	0, 1611, 1927, -2, -2, 1948, 0, 2310, 2312, 1603,
	0, 2095, 1605, 0, 0, -2, 0, 0, 0, 1586,
	1569, 0, 1644, 1636, 1638, 1640, 2618, 2402, 2731, 1570,
	1571, 1719, 0, 0, 1687, 329, 620, 0, 0, 1747,
	0, 0, 0, 1353, 168, 0, 1140, 1141, 2284, 1143,
	0, 1145, 1147, 1148, 1149, 0, 1152, 0, 2333, 0,
	1157, 1160, 1161, 0, 0, 1174, 1196, 0, 1205, 0,
	1329, 1339, 1333, 0, 1331, 1207, 0, 172, 198, 174,
	200, 195, 0, 1336, 0, 176, 185, 0, 0, 123,
	0, 0, 2396, 154, 152, 150, 101, 1340, 125, 0,
	220, 229, 1335, 231, 215, 205, 0, 1362, 1366, 1374,
	0, 1389, 1390, 1391, 1392, 0, 0, 0, 0, 250,
	0, 251, 254, 0, 0, 1068, 1123, 1067, 1182, 0,
	1193, 1194, 0, 0, 0, 0, 0, 0, 1070, 0,
	1069, 0, 0, 0, 0, 0, 455, 458, 0, 461,
	0, 0, 0, 0, 0, 1315, 1313, 0, 1321, 0,
	0, 0, 1467, 0, 0, 1486, 1487, 478, 1509, 0,
	0, 1515, 1526, 301, 0, 304, 280, 0, 674, 0,
	676, 0, 976, 978, 0, 0, 2021, 2113, 0, 0,
	2046, 2047, -2, 0, 1987, 2097, 2099, 0, 0, 0,
	0, 0, 1655, 1664, 621, 1741, 629, 1349, 0, 1356,
	1138, 1142, 0, 0, 0, 1153, 1213, 0, 0, 1230,
	1230, 1166, 0, 0, 1199, 1200, 1120, 0, 1201, 1202,
	1203, 1328, 1614, 1334, 1176, 0, 0, 197, 202, 0,
	0, 0, 0, 0, 0, 0, 209, 232, 1336, 0,
	1393, 1394, 0, 0, 247, 265, 0, 1271, 1070, 0,
	1101, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1102, 1207, 0, 0, 1171, 1078, 0, 1081, 0, 1077,
	1074, 1075, 1066, 0, 459, 460, 475, 0, 476, 0,
	1274, 0, 0, 1322, 0, 0, 1474, 1466, 1493, 1488,
	1489, 1738, 1512, 1516, 0, 673, 0, 0, 986, 987,
	0, 0, 0, 0, 2108, 1606, 1988, 0, 0, 1639,
	1641, 1642, 1643, 1350, 0, 0, 1151, 1218, 0, 0,
	0, 0, 0, 1167, 1197, 1198, 1195, 1119, 0, 1332,
	1330, 0, 1209, 178, 0, 1207, 0, 1129, 0, 0,
	1132, 0, 0, 155, 2396, 153, 0, 205, 1386, 205,
	0, 268, 0, 259, 257, 258, 1062, 0, 1187, 1189,
	1205, 1207, 1120, 0, 1082, 1124, 1080, 472, 1272, 1305,
	1207, 0, 1205, 0, 1481, 1493, 1475, 1476, 0, 1491,
	0, 322, 675, 677, 2105, 2125, 2114, -2, 2689, 2403,
	0, 2125, 2125, 2100, 2101, 0, 0, 1154, 1214, 1215,
	0, 1210, 1211, 1212, 2332, 1155, 1156, 1158, 1159, 1738,
	0, 0, 1213, 201, 183, 1126, 0, 0, 1127, 0,
	0, 158, 0, 160, 233, 1384, 0, 1387, 0, 255,
	0, 0, 1059, 1061, 1186, 0, 1120, 1205, 1068, 0,
	0, 0, 1068, 1070, 1205, 0, 1120, 0, 1470, 1480,
	0, 1490, 1467, 0, 303, 2110, 0, 0, 2116, 2117,
	2118, 2119, 2120, 2111, 2112, 1144, 0, 1216, 0, 1217,
	0, 0, 0, 1175, 1204, 0, 1218, 1130, 0, 1133,
	0, 156, 0, 0, 0, 263, 264, 1188, 1068, 1120,
	1738, 0, 1071, 0, 1073, 1070, 1079, 1120, 0, 1068,
	0, 1463, 1469, 1473, 2293, 1474, 1510, 0, 0, 2122,
	2123, 0, 0, 0, 1219, 0, 1222, 1223, 0, 1220,
	0, 1195, 0, 0, 1385, 205, 0, 1738, 1068, 1170,
	1072, 1062, 1068, 1207, 1738, 1205, 1481, 0, 2121, 2124,
	2115, 1150, 1221, 1224, 1225, 1206, 1177, 0, 0, 1388,
	266, 0, 1168, 1738, 1060, 1738, 1205, 1318, 1120, 1470,
	1738, 1117, 0, 0, 1169, 1316, 1120, 1068, 1464, 1511,
	1131, 1116, 0, 267, 1068, 1738, 0, 1738, 1319, 0,
	1317, 1117, 1134,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 588, 3, 594, 589, 3,
	599, 600, 592, 590, 604, 591, 601, 593, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 607, 3,
	580, 582, 581, 585, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 597, 3, 598, 595, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 605, 587, 606, 583,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 584, 57923, 586, 57924, 596,
	57925, 602, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2465
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2469
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplemented(sqllex, "alter function")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3090
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3096
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3101
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = nil
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3214
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3410
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3440
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "CREATE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create access method")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create cast")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplemented(sqllex, "create publication")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplemented(sqllex, "create rule")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplemented(sqllex, "create server")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3503
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3506
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3507
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop server")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3689
		{

			sqlVAL.union.val = nil
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "DELETE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3776
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4068
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4092
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4100
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DELETE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "INSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "DELETE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "INSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4181
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4214
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "GRANT")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4382
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "RESET")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "USE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return unimplemented(sqllex, "set from current")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4716
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.Low
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.Normal
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.High
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4922
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.str = "client_encoding"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.str = "timezone"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5071
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5080
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = true
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5463
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5467
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = true
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = false
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5533
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = true
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = false
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5580
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5591
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5642
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5727
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5735
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5770
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5779
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5802
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5883
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5896
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6349
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6364
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = nil
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.str = ""
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = nil
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6431
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6461
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6474
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6488
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6490
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.str = ""
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6831
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{

			sqlVAL.union.val = true
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = false
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6886
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6989
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7027
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7107
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7109
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7112
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7268
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7277
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7285
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7397
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = true
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{

			sqlVAL.union.val = true
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = false
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7446
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7460
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7484
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7494
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7504
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = nil
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7614
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7642
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7644
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7648
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7650
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7685
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7702
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7720
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7736
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7752
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = true
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7816
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.str = ""
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7889
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7895
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8120
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8138
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8144
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8164
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = true
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = false
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.Types
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8283
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8471
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8482
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8544
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{

		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8699
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.str = ""
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.str = ""
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8904
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8999
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9014
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = false
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = nil
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9414
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9471
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9476
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9535
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9590
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9661
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9663
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9678
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9700
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9747
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9778
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9820
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9830
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9876
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9906
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9939
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9941
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = nil
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = true
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = false
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.str = tree.AstFull
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.str = tree.AstRight
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.str = tree.AstInner
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10059
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.str = tree.AstHash
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.str = ""
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10151
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10163
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = true
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = false
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10235
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10243
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10262
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10272
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = types.Geography
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10403
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = nil
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = types.Int2
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = types.Int
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = types.Float4
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = types.Float
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = types.Bool
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = types.Float
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10537
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10543
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10565
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.String
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = true
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = types.Date
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10622
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10645
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10653
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = true
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = types.Interval
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10694
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = nil
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10823
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10883
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11032
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11219
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11458
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11484
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11508
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11538
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11549
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11550
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11574
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11640
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11841
		{
			return unimplemented(sqllex, "treat")
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.str = ""
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12003
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12113
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12529
		{
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12530
		{
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12683
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12719
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12736
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12753
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12992
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.str = ""
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
