// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12727

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1460,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 371,
	-2, 0,
	-1, 73,
	236, 223,
	498, 223,
	-2, 0,
	-1, 84,
	224, 1209,
	238, 1209,
	254, 367,
	380, 367,
	390, 980,
	425, 367,
	437, 980,
	482, 980,
	509, 367,
	535, 980,
	-2, 0,
	-1, 90,
	130, 1460,
	231, 1460,
	520, 1460,
	521, 1460,
	-2, 0,
	-1, 106,
	147, 1431,
	166, 1431,
	179, 1431,
	234, 1431,
	267, 1431,
	332, 1431,
	342, 1431,
	515, 1431,
	-2, 1402,
	-1, 145,
	155, 842,
	253, 842,
	383, 809,
	442, 809,
	481, 809,
	501, 842,
	503, 809,
	-2, 0,
	-1, 147,
	4, 1462,
	21, 1462,
	22, 1462,
	23, 1462,
	24, 1462,
	25, 1462,
	26, 1462,
	27, 1462,
	28, 1462,
	30, 1462,
	31, 1462,
	37, 1462,
	42, 1462,
	43, 1462,
	45, 1462,
	46, 1462,
	47, 1462,
	48, 1462,
	49, 1462,
	50, 1462,
	51, 1462,
	53, 1462,
	54, 1462,
	55, 1462,
	56, 1462,
	58, 1462,
	59, 1462,
	60, 1462,
	61, 1462,
	62, 1462,
	63, 1462,
	64, 1462,
	68, 1462,
	69, 1462,
	70, 1462,
	71, 1462,
	73, 1462,
	74, 1462,
	75, 1462,
	79, 1462,
	80, 1462,
	81, 1462,
	82, 1462,
	83, 1462,
	84, 1462,
	85, 1462,
	88, 1462,
	89, 1462,
	90, 1462,
	91, 1462,
	92, 1462,
	94, 1462,
	96, 1462,
	97, 1462,
	98, 1462,
	99, 1462,
	100, 1462,
	101, 1462,
	103, 1462,
	104, 1462,
	105, 1462,
	107, 1462,
	108, 1462,
	116, 1462,
	117, 1462,
	118, 1462,
	119, 1462,
	121, 1462,
	122, 1462,
	123, 1462,
	125, 1462,
	126, 1462,
	127, 1462,
	129, 1462,
	130, 1462,
	132, 1462,
	133, 1462,
	134, 1462,
	137, 1462,
	138, 1462,
	139, 1462,
	141, 1462,
	142, 1462,
	144, 1462,
	145, 1462,
	146, 1462,
	148, 1462,
	149, 1462,
	150, 1462,
	151, 1462,
	152, 1462,
	153, 1462,
	154, 1462,
	155, 1462,
	156, 1462,
	157, 1462,
	158, 1462,
	159, 1462,
	160, 1462,
	161, 1462,
	162, 1462,
	163, 1462,
	165, 1462,
	171, 1462,
	172, 1462,
	173, 1462,
	174, 1462,
	178, 1462,
	180, 1462,
	184, 1462,
	185, 1462,
	186, 1462,
	187, 1462,
	188, 1462,
	189, 1462,
	190, 1462,
	191, 1462,
	192, 1462,
	193, 1462,
	194, 1462,
	195, 1462,
	196, 1462,
	198, 1462,
	199, 1462,
	201, 1462,
	202, 1462,
	204, 1462,
	205, 1462,
	206, 1462,
	207, 1462,
	208, 1462,
	209, 1462,
	210, 1462,
	211, 1462,
	212, 1462,
	214, 1462,
	215, 1462,
	217, 1462,
	218, 1462,
	219, 1462,
	220, 1462,
	224, 1462,
	225, 1462,
	226, 1462,
	227, 1462,
	228, 1462,
	231, 1462,
	232, 1462,
	233, 1462,
	235, 1462,
	237, 1462,
	238, 1462,
	240, 1462,
	242, 1462,
	243, 1462,
	244, 1462,
	246, 1462,
	250, 1462,
	251, 1462,
	252, 1462,
	253, 1462,
	254, 1462,
	255, 1462,
	257, 1462,
	258, 1462,
	259, 1462,
	261, 1462,
	262, 1462,
	264, 1462,
	265, 1462,
	268, 1462,
	272, 1462,
	273, 1462,
	274, 1462,
	277, 1462,
	278, 1462,
	279, 1462,
	280, 1462,
	282, 1462,
	283, 1462,
	284, 1462,
	285, 1462,
	286, 1462,
	287, 1462,
	288, 1462,
	289, 1462,
	290, 1462,
	291, 1462,
	292, 1462,
	293, 1462,
	294, 1462,
	295, 1462,
	296, 1462,
	297, 1462,
	298, 1462,
	299, 1462,
	300, 1462,
	301, 1462,
	302, 1462,
	303, 1462,
	305, 1462,
	307, 1462,
	308, 1462,
	309, 1462,
	310, 1462,
	311, 1462,
	312, 1462,
	313, 1462,
	314, 1462,
	315, 1462,
	316, 1462,
	317, 1462,
	318, 1462,
	320, 1462,
	322, 1462,
	324, 1462,
	325, 1462,
	327, 1462,
	328, 1462,
	329, 1462,
	330, 1462,
	331, 1462,
	334, 1462,
	337, 1462,
	338, 1462,
	339, 1462,
	340, 1462,
	343, 1462,
	344, 1462,
	345, 1462,
	347, 1462,
	349, 1462,
	350, 1462,
	351, 1462,
	352, 1462,
	353, 1462,
	354, 1462,
	355, 1462,
	356, 1462,
	357, 1462,
	358, 1462,
	359, 1462,
	360, 1462,
	362, 1462,
	363, 1462,
	364, 1462,
	365, 1462,
	366, 1462,
	367, 1462,
	368, 1462,
	369, 1462,
	370, 1462,
	371, 1462,
	372, 1462,
	373, 1462,
	374, 1462,
	375, 1462,
	376, 1462,
	378, 1462,
	379, 1462,
	381, 1462,
	382, 1462,
	383, 1462,
	384, 1462,
	385, 1462,
	386, 1462,
	387, 1462,
	388, 1462,
	389, 1462,
	390, 1462,
	391, 1462,
	392, 1462,
	394, 1462,
	396, 1462,
	397, 1462,
	398, 1462,
	403, 1462,
	405, 1462,
	406, 1462,
	407, 1462,
	408, 1462,
	409, 1462,
	410, 1462,
	411, 1462,
	412, 1462,
	414, 1462,
	415, 1462,
	416, 1462,
	418, 1462,
	419, 1462,
	420, 1462,
	421, 1462,
	422, 1462,
	423, 1462,
	425, 1462,
	426, 1462,
	427, 1462,
	428, 1462,
	429, 1462,
	430, 1462,
	431, 1462,
	432, 1462,
	433, 1462,
	434, 1462,
	435, 1462,
	437, 1462,
	438, 1462,
	439, 1462,
	440, 1462,
	441, 1462,
	442, 1462,
	444, 1462,
	445, 1462,
	446, 1462,
	447, 1462,
	448, 1462,
	449, 1462,
	451, 1462,
	452, 1462,
	453, 1462,
	454, 1462,
	455, 1462,
	456, 1462,
	457, 1462,
	459, 1462,
	461, 1462,
	462, 1462,
	463, 1462,
	464, 1462,
	465, 1462,
	466, 1462,
	467, 1462,
	468, 1462,
	469, 1462,
	470, 1462,
	471, 1462,
	472, 1462,
	473, 1462,
	474, 1462,
	475, 1462,
	477, 1462,
	478, 1462,
	480, 1462,
	481, 1462,
	483, 1462,
	484, 1462,
	485, 1462,
	486, 1462,
	487, 1462,
	488, 1462,
	489, 1462,
	490, 1462,
	491, 1462,
	493, 1462,
	494, 1462,
	495, 1462,
	496, 1462,
	497, 1462,
	499, 1462,
	501, 1462,
	502, 1462,
	503, 1462,
	504, 1462,
	505, 1462,
	506, 1462,
	508, 1462,
	509, 1462,
	510, 1462,
	511, 1462,
	513, 1462,
	514, 1462,
	517, 1462,
	518, 1462,
	519, 1462,
	520, 1462,
	521, 1462,
	522, 1462,
	523, 1462,
	525, 1462,
	528, 1462,
	529, 1462,
	530, 1462,
	531, 1462,
	532, 1462,
	533, 1462,
	535, 1462,
	536, 1462,
	537, 1462,
	538, 1462,
	543, 1462,
	544, 1462,
	545, 1462,
	546, 1462,
	547, 1462,
	548, 1462,
	-2, 0,
	-1, 148,
	1, 1318,
	128, 1318,
	242, 1318,
	321, 1318,
	378, 1318,
	387, 1318,
	552, 1318,
	576, 1318,
	-2, 0,
	-1, 150,
	1, 1318,
	576, 1318,
	-2, 0,
	-1, 151,
	1, 1318,
	576, 1318,
	-2, 0,
	-1, 152,
	1, 1318,
	498, 1318,
	576, 1318,
	-2, 0,
	-1, 181,
	147, 1430,
	166, 1430,
	179, 1430,
	234, 1430,
	267, 1430,
	332, 1430,
	342, 1430,
	515, 1430,
	-2, 1405,
	-1, 227,
	4, 1469,
	5, 1469,
	6, 1469,
	7, 1469,
	8, 1469,
	9, 1469,
	10, 1469,
	21, 1469,
	22, 1469,
	23, 1469,
	24, 1469,
	25, 1469,
	26, 1469,
	27, 1469,
	28, 1469,
	30, 1469,
	31, 1469,
	37, 1469,
	38, 1469,
	42, 1469,
	43, 1469,
	44, 1469,
	45, 1469,
	46, 1469,
	47, 1469,
	48, 1469,
	49, 1469,
	50, 1469,
	51, 1469,
	53, 1469,
	54, 1469,
	55, 1469,
	56, 1469,
	58, 1469,
	59, 1469,
	60, 1469,
	61, 1469,
	62, 1469,
	63, 1469,
	64, 1469,
	65, 1469,
	66, 1469,
	67, 1469,
	68, 1469,
	69, 1469,
	70, 1469,
	71, 1469,
	73, 1469,
	74, 1469,
	75, 1469,
	77, 1469,
	79, 1469,
	80, 1469,
	81, 1469,
	82, 1469,
	83, 1469,
	84, 1469,
	85, 1469,
	88, 1469,
	89, 1469,
	90, 1469,
	91, 1469,
	92, 1469,
	94, 1469,
	96, 1469,
	97, 1469,
	98, 1469,
	99, 1469,
	100, 1469,
	101, 1469,
	103, 1469,
	104, 1469,
	105, 1469,
	106, 1469,
	107, 1469,
	108, 1469,
	109, 1469,
	110, 1469,
	111, 1469,
	112, 1469,
	113, 1469,
	114, 1469,
	115, 1469,
	116, 1469,
	117, 1469,
	118, 1469,
	119, 1469,
	120, 1469,
	121, 1469,
	122, 1469,
	123, 1469,
	124, 1469,
	125, 1469,
	126, 1469,
	127, 1469,
	129, 1469,
	130, 1469,
	132, 1469,
	133, 1469,
	134, 1469,
	137, 1469,
	138, 1469,
	139, 1469,
	141, 1469,
	142, 1469,
	144, 1469,
	145, 1469,
	146, 1469,
	148, 1469,
	149, 1469,
	150, 1469,
	151, 1469,
	152, 1469,
	153, 1469,
	154, 1469,
	155, 1469,
	156, 1469,
	157, 1469,
	158, 1469,
	159, 1469,
	160, 1469,
	161, 1469,
	162, 1469,
	163, 1469,
	164, 1469,
	165, 1469,
	171, 1469,
	172, 1469,
	173, 1469,
	174, 1469,
	178, 1469,
	180, 1469,
	183, 1469,
	184, 1469,
	185, 1469,
	186, 1469,
	187, 1469,
	188, 1469,
	189, 1469,
	190, 1469,
	191, 1469,
	192, 1469,
	193, 1469,
	194, 1469,
	195, 1469,
	196, 1469,
	198, 1469,
	199, 1469,
	201, 1469,
	202, 1469,
	204, 1469,
	205, 1469,
	206, 1469,
	207, 1469,
	208, 1469,
	209, 1469,
	210, 1469,
	211, 1469,
	212, 1469,
	213, 1469,
	214, 1469,
	215, 1469,
	217, 1469,
	218, 1469,
	219, 1469,
	220, 1469,
	224, 1469,
	225, 1469,
	226, 1469,
	227, 1469,
	228, 1469,
	230, 1469,
	231, 1469,
	232, 1469,
	233, 1469,
	235, 1469,
	237, 1469,
	238, 1469,
	239, 1469,
	240, 1469,
	241, 1469,
	242, 1469,
	243, 1469,
	244, 1469,
	245, 1469,
	246, 1469,
	250, 1469,
	251, 1469,
	252, 1469,
	253, 1469,
	254, 1469,
	255, 1469,
	257, 1469,
	258, 1469,
	259, 1469,
	261, 1469,
	262, 1469,
	263, 1469,
	264, 1469,
	265, 1469,
	266, 1469,
	268, 1469,
	272, 1469,
	273, 1469,
	274, 1469,
	275, 1469,
	276, 1469,
	277, 1469,
	278, 1469,
	279, 1469,
	280, 1469,
	282, 1469,
	283, 1469,
	284, 1469,
	285, 1469,
	286, 1469,
	287, 1469,
	288, 1469,
	289, 1469,
	290, 1469,
	291, 1469,
	292, 1469,
	293, 1469,
	294, 1469,
	295, 1469,
	296, 1469,
	297, 1469,
	298, 1469,
	299, 1469,
	300, 1469,
	301, 1469,
	302, 1469,
	303, 1469,
	305, 1469,
	306, 1469,
	307, 1469,
	308, 1469,
	309, 1469,
	310, 1469,
	311, 1469,
	312, 1469,
	313, 1469,
	314, 1469,
	315, 1469,
	316, 1469,
	317, 1469,
	318, 1469,
	319, 1469,
	320, 1469,
	321, 1469,
	322, 1469,
	323, 1469,
	324, 1469,
	325, 1469,
	326, 1469,
	327, 1469,
	328, 1469,
	329, 1469,
	330, 1469,
	331, 1469,
	334, 1469,
	338, 1469,
	339, 1469,
	340, 1469,
	343, 1469,
	344, 1469,
	345, 1469,
	346, 1469,
	347, 1469,
	348, 1469,
	349, 1469,
	350, 1469,
	351, 1469,
	352, 1469,
	353, 1469,
	354, 1469,
	355, 1469,
	356, 1469,
	357, 1469,
	358, 1469,
	359, 1469,
	360, 1469,
	362, 1469,
	363, 1469,
	364, 1469,
	365, 1469,
	366, 1469,
	367, 1469,
	368, 1469,
	369, 1469,
	370, 1469,
	371, 1469,
	372, 1469,
	373, 1469,
	374, 1469,
	375, 1469,
	376, 1469,
	378, 1469,
	379, 1469,
	381, 1469,
	382, 1469,
	383, 1469,
	384, 1469,
	385, 1469,
	386, 1469,
	387, 1469,
	388, 1469,
	389, 1469,
	390, 1469,
	391, 1469,
	392, 1469,
	394, 1469,
	396, 1469,
	397, 1469,
	398, 1469,
	403, 1469,
	405, 1469,
	406, 1469,
	407, 1469,
	408, 1469,
	409, 1469,
	410, 1469,
	411, 1469,
	412, 1469,
	414, 1469,
	415, 1469,
	416, 1469,
	417, 1469,
	418, 1469,
	419, 1469,
	420, 1469,
	421, 1469,
	422, 1469,
	423, 1469,
	425, 1469,
	426, 1469,
	427, 1469,
	428, 1469,
	429, 1469,
	430, 1469,
	431, 1469,
	432, 1469,
	433, 1469,
	434, 1469,
	435, 1469,
	437, 1469,
	438, 1469,
	439, 1469,
	440, 1469,
	441, 1469,
	442, 1469,
	443, 1469,
	444, 1469,
	445, 1469,
	446, 1469,
	447, 1469,
	448, 1469,
	449, 1469,
	450, 1469,
	451, 1469,
	452, 1469,
	453, 1469,
	454, 1469,
	455, 1469,
	456, 1469,
	457, 1469,
	459, 1469,
	461, 1469,
	462, 1469,
	463, 1469,
	464, 1469,
	465, 1469,
	466, 1469,
	467, 1469,
	468, 1469,
	469, 1469,
	470, 1469,
	471, 1469,
	472, 1469,
	473, 1469,
	474, 1469,
	475, 1469,
	477, 1469,
	478, 1469,
	479, 1469,
	480, 1469,
	481, 1469,
	483, 1469,
	484, 1469,
	485, 1469,
	486, 1469,
	487, 1469,
	488, 1469,
	489, 1469,
	490, 1469,
	491, 1469,
	493, 1469,
	494, 1469,
	495, 1469,
	496, 1469,
	497, 1469,
	499, 1469,
	501, 1469,
	502, 1469,
	503, 1469,
	504, 1469,
	505, 1469,
	506, 1469,
	507, 1469,
	508, 1469,
	509, 1469,
	510, 1469,
	511, 1469,
	513, 1469,
	514, 1469,
	516, 1469,
	517, 1469,
	518, 1469,
	519, 1469,
	520, 1469,
	521, 1469,
	522, 1469,
	523, 1469,
	524, 1469,
	525, 1469,
	528, 1469,
	529, 1469,
	530, 1469,
	531, 1469,
	532, 1469,
	533, 1469,
	535, 1469,
	536, 1469,
	537, 1469,
	538, 1469,
	543, 1469,
	544, 1469,
	545, 1469,
	546, 1469,
	547, 1469,
	548, 1469,
	549, 1469,
	557, 1469,
	564, 1469,
	565, 1469,
	566, 1469,
	573, 1469,
	577, 1469,
	-2, 0,
	-1, 715,
	4, 1207,
	21, 1207,
	22, 1207,
	23, 1207,
	24, 1207,
	25, 1207,
	26, 1207,
	27, 1207,
	28, 1207,
	30, 1207,
	31, 1207,
	37, 1207,
	42, 1207,
	43, 1207,
	45, 1207,
	46, 1207,
	47, 1207,
	48, 1207,
	49, 1207,
	50, 1207,
	51, 1207,
	53, 1207,
	54, 1207,
	55, 1207,
	56, 1207,
	58, 1207,
	59, 1207,
	60, 1207,
	61, 1207,
	62, 1207,
	63, 1207,
	64, 1207,
	68, 1207,
	69, 1207,
	70, 1207,
	71, 1207,
	73, 1207,
	74, 1207,
	75, 1207,
	79, 1207,
	80, 1207,
	81, 1207,
	82, 1207,
	83, 1207,
	84, 1207,
	85, 1207,
	88, 1207,
	89, 1207,
	90, 1207,
	91, 1207,
	92, 1207,
	94, 1207,
	96, 1207,
	97, 1207,
	98, 1207,
	99, 1207,
	100, 1207,
	101, 1207,
	103, 1207,
	104, 1207,
	105, 1207,
	107, 1207,
	108, 1207,
	116, 1207,
	117, 1207,
	118, 1207,
	119, 1207,
	121, 1207,
	122, 1207,
	123, 1207,
	125, 1207,
	126, 1207,
	127, 1207,
	129, 1207,
	130, 1207,
	132, 1207,
	133, 1207,
	134, 1207,
	137, 1207,
	138, 1207,
	139, 1207,
	141, 1207,
	142, 1207,
	144, 1207,
	145, 1207,
	146, 1207,
	148, 1207,
	149, 1207,
	150, 1207,
	151, 1207,
	152, 1207,
	153, 1207,
	154, 1207,
	155, 1207,
	156, 1207,
	157, 1207,
	158, 1207,
	159, 1207,
	160, 1207,
	161, 1207,
	162, 1207,
	163, 1207,
	165, 1207,
	171, 1207,
	172, 1207,
	173, 1207,
	174, 1207,
	178, 1207,
	180, 1207,
	184, 1207,
	185, 1207,
	186, 1207,
	187, 1207,
	188, 1207,
	189, 1207,
	190, 1207,
	191, 1207,
	192, 1207,
	193, 1207,
	194, 1207,
	195, 1207,
	196, 1207,
	198, 1207,
	199, 1207,
	201, 1207,
	202, 1207,
	204, 1207,
	205, 1207,
	206, 1207,
	207, 1207,
	208, 1207,
	209, 1207,
	210, 1207,
	211, 1207,
	212, 1207,
	214, 1207,
	215, 1207,
	217, 1207,
	218, 1207,
	219, 1207,
	220, 1207,
	224, 1207,
	225, 1207,
	226, 1207,
	227, 1207,
	228, 1207,
	231, 1207,
	232, 1207,
	233, 1207,
	235, 1207,
	237, 1207,
	238, 1207,
	240, 1207,
	242, 1207,
	243, 1207,
	244, 1207,
	246, 1207,
	250, 1207,
	251, 1207,
	252, 1207,
	253, 1207,
	254, 1207,
	255, 1207,
	257, 1207,
	258, 1207,
	259, 1207,
	261, 1207,
	262, 1207,
	264, 1207,
	265, 1207,
	268, 1207,
	272, 1207,
	273, 1207,
	274, 1207,
	277, 1207,
	278, 1207,
	279, 1207,
	280, 1207,
	282, 1207,
	283, 1207,
	284, 1207,
	285, 1207,
	286, 1207,
	287, 1207,
	288, 1207,
	289, 1207,
	290, 1207,
	291, 1207,
	292, 1207,
	293, 1207,
	294, 1207,
	295, 1207,
	296, 1207,
	297, 1207,
	298, 1207,
	299, 1207,
	300, 1207,
	301, 1207,
	302, 1207,
	303, 1207,
	305, 1207,
	307, 1207,
	308, 1207,
	309, 1207,
	310, 1207,
	311, 1207,
	312, 1207,
	313, 1207,
	314, 1207,
	315, 1207,
	316, 1207,
	317, 1207,
	318, 1207,
	320, 1207,
	322, 1207,
	324, 1207,
	325, 1207,
	327, 1207,
	328, 1207,
	329, 1207,
	330, 1207,
	331, 1207,
	334, 1207,
	338, 1207,
	339, 1207,
	340, 1207,
	343, 1207,
	344, 1207,
	345, 1207,
	347, 1207,
	349, 1207,
	350, 1207,
	351, 1207,
	352, 1207,
	353, 1207,
	354, 1207,
	355, 1207,
	356, 1207,
	357, 1207,
	358, 1207,
	359, 1207,
	360, 1207,
	362, 1207,
	363, 1207,
	364, 1207,
	365, 1207,
	366, 1207,
	367, 1207,
	368, 1207,
	369, 1207,
	370, 1207,
	371, 1207,
	372, 1207,
	373, 1207,
	374, 1207,
	375, 1207,
	376, 1207,
	378, 1207,
	379, 1207,
	381, 1207,
	382, 1207,
	383, 1207,
	384, 1207,
	385, 1207,
	386, 1207,
	387, 1207,
	388, 1207,
	389, 1207,
	390, 1207,
	391, 1207,
	392, 1207,
	394, 1207,
	396, 1207,
	397, 1207,
	398, 1207,
	403, 1207,
	405, 1207,
	406, 1207,
	407, 1207,
	408, 1207,
	409, 1207,
	410, 1207,
	411, 1207,
	412, 1207,
	414, 1207,
	415, 1207,
	416, 1207,
	418, 1207,
	419, 1207,
	420, 1207,
	421, 1207,
	422, 1207,
	423, 1207,
	425, 1207,
	426, 1207,
	427, 1207,
	428, 1207,
	429, 1207,
	430, 1207,
	431, 1207,
	432, 1207,
	433, 1207,
	434, 1207,
	435, 1207,
	437, 1207,
	438, 1207,
	439, 1207,
	440, 1207,
	441, 1207,
	442, 1207,
	444, 1207,
	445, 1207,
	446, 1207,
	447, 1207,
	448, 1207,
	449, 1207,
	451, 1207,
	452, 1207,
	453, 1207,
	454, 1207,
	455, 1207,
	456, 1207,
	457, 1207,
	459, 1207,
	461, 1207,
	462, 1207,
	463, 1207,
	464, 1207,
	465, 1207,
	466, 1207,
	467, 1207,
	468, 1207,
	469, 1207,
	470, 1207,
	471, 1207,
	472, 1207,
	473, 1207,
	474, 1207,
	475, 1207,
	477, 1207,
	478, 1207,
	480, 1207,
	481, 1207,
	483, 1207,
	484, 1207,
	485, 1207,
	486, 1207,
	487, 1207,
	488, 1207,
	489, 1207,
	490, 1207,
	491, 1207,
	493, 1207,
	494, 1207,
	495, 1207,
	496, 1207,
	497, 1207,
	499, 1207,
	501, 1207,
	502, 1207,
	503, 1207,
	504, 1207,
	505, 1207,
	506, 1207,
	508, 1207,
	509, 1207,
	510, 1207,
	511, 1207,
	513, 1207,
	514, 1207,
	517, 1207,
	518, 1207,
	519, 1207,
	520, 1207,
	521, 1207,
	522, 1207,
	523, 1207,
	525, 1207,
	528, 1207,
	529, 1207,
	530, 1207,
	531, 1207,
	532, 1207,
	533, 1207,
	535, 1207,
	536, 1207,
	537, 1207,
	538, 1207,
	543, 1207,
	544, 1207,
	545, 1207,
	546, 1207,
	547, 1207,
	548, 1207,
	-2, 0,
	-1, 734,
	182, 2226,
	498, 2226,
	556, 2226,
	575, 2226,
	-2, 0,
	-1, 735,
	182, 2327,
	498, 2327,
	556, 2327,
	575, 2327,
	-2, 0,
	-1, 736,
	182, 2213,
	498, 2213,
	556, 2213,
	575, 2213,
	-2, 0,
	-1, 738,
	182, 2456,
	498, 2456,
	556, 2456,
	575, 2456,
	-2, 0,
	-1, 740,
	182, 2495,
	498, 2495,
	556, 2495,
	575, 2495,
	-2, 0,
	-1, 747,
	182, 2354,
	498, 2354,
	556, 2354,
	575, 2354,
	-2, 645,
	-1, 776,
	575, 2162,
	578, 2162,
	-2, 911,
	-1, 777,
	575, 2164,
	578, 2164,
	-2, 912,
	-1, 778,
	575, 2163,
	578, 2163,
	-2, 913,
	-1, 779,
	578, 2089,
	-2, 914,
	-1, 802,
	179, 237,
	-2, 0,
	-1, 825,
	44, 2136,
	-2, 0,
	-1, 826,
	535, 1185,
	-2, 981,
	-1, 842,
	4, 1598,
	21, 1598,
	22, 1598,
	23, 1598,
	24, 1598,
	25, 1598,
	26, 1598,
	27, 1598,
	28, 1598,
	30, 1598,
	31, 1598,
	37, 1598,
	42, 1598,
	43, 1598,
	45, 1598,
	46, 1598,
	47, 1598,
	48, 1598,
	49, 1598,
	50, 1598,
	51, 1598,
	53, 1598,
	54, 1598,
	55, 1598,
	56, 1598,
	58, 1598,
	59, 1598,
	60, 1598,
	61, 1598,
	62, 1598,
	63, 1598,
	64, 1598,
	68, 1598,
	69, 1598,
	70, 1598,
	71, 1598,
	73, 1598,
	74, 1598,
	75, 1598,
	79, 1598,
	80, 1598,
	81, 1598,
	82, 1598,
	83, 1598,
	84, 1598,
	85, 1598,
	88, 1598,
	89, 1598,
	90, 1598,
	91, 1598,
	92, 1598,
	94, 1598,
	96, 1598,
	97, 1598,
	98, 1598,
	99, 1598,
	100, 1598,
	101, 1598,
	103, 1598,
	104, 1598,
	105, 1598,
	107, 1598,
	108, 1598,
	116, 1598,
	117, 1598,
	118, 1598,
	119, 1598,
	121, 1598,
	122, 1598,
	123, 1598,
	125, 1598,
	126, 1598,
	127, 1598,
	129, 1598,
	130, 1598,
	132, 1598,
	133, 1598,
	134, 1598,
	137, 1598,
	138, 1598,
	139, 1598,
	141, 1598,
	142, 1598,
	144, 1598,
	145, 1598,
	146, 1598,
	148, 1598,
	149, 1598,
	150, 1598,
	151, 1598,
	152, 1598,
	153, 1598,
	154, 1598,
	155, 1598,
	156, 1598,
	157, 1598,
	158, 1598,
	159, 1598,
	160, 1598,
	161, 1598,
	162, 1598,
	163, 1598,
	165, 1598,
	171, 1598,
	172, 1598,
	173, 1598,
	174, 1598,
	178, 1598,
	180, 1598,
	184, 1598,
	185, 1598,
	186, 1598,
	187, 1598,
	188, 1598,
	189, 1598,
	190, 1598,
	191, 1598,
	192, 1598,
	193, 1598,
	194, 1598,
	195, 1598,
	196, 1598,
	198, 1598,
	199, 1598,
	201, 1598,
	202, 1598,
	204, 1598,
	205, 1598,
	206, 1598,
	207, 1598,
	208, 1598,
	209, 1598,
	210, 1598,
	211, 1598,
	212, 1598,
	214, 1598,
	215, 1598,
	217, 1598,
	218, 1598,
	219, 1598,
	220, 1598,
	224, 1598,
	225, 1598,
	226, 1598,
	227, 1598,
	228, 1598,
	231, 1598,
	232, 1598,
	233, 1598,
	235, 1598,
	237, 1598,
	238, 1598,
	240, 1598,
	242, 1598,
	243, 1598,
	244, 1598,
	246, 1598,
	250, 1598,
	251, 1598,
	252, 1598,
	253, 1598,
	254, 1598,
	255, 1598,
	257, 1598,
	258, 1598,
	259, 1598,
	261, 1598,
	262, 1598,
	264, 1598,
	265, 1598,
	268, 1598,
	272, 1598,
	273, 1598,
	274, 1598,
	277, 1598,
	278, 1598,
	279, 1598,
	280, 1598,
	282, 1598,
	283, 1598,
	284, 1598,
	285, 1598,
	286, 1598,
	287, 1598,
	288, 1598,
	289, 1598,
	290, 1598,
	291, 1598,
	292, 1598,
	293, 1598,
	294, 1598,
	295, 1598,
	296, 1598,
	297, 1598,
	298, 1598,
	299, 1598,
	300, 1598,
	301, 1598,
	302, 1598,
	303, 1598,
	305, 1598,
	307, 1598,
	308, 1598,
	309, 1598,
	310, 1598,
	311, 1598,
	312, 1598,
	313, 1598,
	314, 1598,
	315, 1598,
	316, 1598,
	317, 1598,
	318, 1598,
	320, 1598,
	322, 1598,
	324, 1598,
	325, 1598,
	327, 1598,
	328, 1598,
	329, 1598,
	330, 1598,
	331, 1598,
	334, 1598,
	338, 1598,
	339, 1598,
	340, 1598,
	343, 1598,
	344, 1598,
	345, 1598,
	347, 1598,
	349, 1598,
	350, 1598,
	351, 1598,
	352, 1598,
	353, 1598,
	354, 1598,
	355, 1598,
	356, 1598,
	357, 1598,
	358, 1598,
	359, 1598,
	360, 1598,
	362, 1598,
	363, 1598,
	364, 1598,
	365, 1598,
	366, 1598,
	367, 1598,
	368, 1598,
	369, 1598,
	370, 1598,
	371, 1598,
	372, 1598,
	373, 1598,
	374, 1598,
	375, 1598,
	376, 1598,
	378, 1598,
	379, 1598,
	381, 1598,
	382, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	386, 1598,
	387, 1598,
	388, 1598,
	389, 1598,
	390, 1598,
	391, 1598,
	392, 1598,
	394, 1598,
	396, 1598,
	397, 1598,
	398, 1598,
	403, 1598,
	405, 1598,
	406, 1598,
	407, 1598,
	408, 1598,
	409, 1598,
	410, 1598,
	411, 1598,
	412, 1598,
	414, 1598,
	415, 1598,
	416, 1598,
	418, 1598,
	419, 1598,
	420, 1598,
	421, 1598,
	422, 1598,
	423, 1598,
	425, 1598,
	426, 1598,
	427, 1598,
	428, 1598,
	429, 1598,
	430, 1598,
	431, 1598,
	432, 1598,
	433, 1598,
	434, 1598,
	435, 1598,
	437, 1598,
	438, 1598,
	439, 1598,
	440, 1598,
	441, 1598,
	442, 1598,
	444, 1598,
	445, 1598,
	446, 1598,
	447, 1598,
	448, 1598,
	449, 1598,
	451, 1598,
	452, 1598,
	453, 1598,
	454, 1598,
	455, 1598,
	456, 1598,
	457, 1598,
	459, 1598,
	461, 1598,
	462, 1598,
	463, 1598,
	464, 1598,
	465, 1598,
	466, 1598,
	467, 1598,
	468, 1598,
	469, 1598,
	470, 1598,
	471, 1598,
	472, 1598,
	473, 1598,
	474, 1598,
	475, 1598,
	477, 1598,
	478, 1598,
	480, 1598,
	481, 1598,
	483, 1598,
	484, 1598,
	485, 1598,
	486, 1598,
	487, 1598,
	488, 1598,
	489, 1598,
	490, 1598,
	491, 1598,
	493, 1598,
	494, 1598,
	495, 1598,
	496, 1598,
	497, 1598,
	499, 1598,
	501, 1598,
	502, 1598,
	503, 1598,
	504, 1598,
	505, 1598,
	506, 1598,
	508, 1598,
	509, 1598,
	510, 1598,
	511, 1598,
	513, 1598,
	514, 1598,
	517, 1598,
	518, 1598,
	519, 1598,
	520, 1598,
	521, 1598,
	522, 1598,
	523, 1598,
	525, 1598,
	528, 1598,
	529, 1598,
	530, 1598,
	531, 1598,
	532, 1598,
	533, 1598,
	535, 1598,
	536, 1598,
	537, 1598,
	538, 1598,
	543, 1598,
	544, 1598,
	545, 1598,
	546, 1598,
	547, 1598,
	548, 1598,
	-2, 0,
	-1, 850,
	254, 371,
	-2, 0,
	-1, 920,
	383, 810,
	442, 810,
	481, 810,
	503, 810,
	-2, 0,
	-1, 921,
	383, 809,
	442, 809,
	481, 809,
	503, 809,
	-2, 749,
	-1, 925,
	1, 856,
	572, 856,
	574, 856,
	576, 856,
	-2, 0,
	-1, 926,
	1, 784,
	572, 784,
	574, 784,
	576, 784,
	-2, 0,
	-1, 927,
	1, 788,
	572, 788,
	574, 788,
	576, 788,
	-2, 0,
	-1, 928,
	1, 910,
	179, 910,
	572, 910,
	574, 910,
	576, 910,
	-2, 0,
	-1, 936,
	1, 815,
	572, 815,
	574, 815,
	576, 815,
	-2, 0,
	-1, 942,
	1, 856,
	572, 856,
	574, 856,
	576, 856,
	-2, 0,
	-1, 943,
	1, 858,
	572, 858,
	574, 858,
	576, 858,
	-2, 0,
	-1, 944,
	1, 861,
	572, 861,
	574, 861,
	576, 861,
	-2, 0,
	-1, 950,
	1, 878,
	572, 878,
	574, 878,
	576, 878,
	-2, 0,
	-1, 951,
	1, 880,
	572, 880,
	574, 880,
	576, 880,
	-2, 0,
	-1, 956,
	1, 905,
	572, 905,
	574, 905,
	576, 905,
	-2, 0,
	-1, 1002,
	166, 1473,
	179, 1473,
	267, 1473,
	332, 1473,
	-2, 1409,
	-1, 1017,
	166, 1472,
	179, 1472,
	267, 1472,
	332, 1472,
	-2, 1406,
	-1, 1043,
	575, 2161,
	-2, 653,
	-1, 1071,
	5, 2153,
	573, 2151,
	-2, 2142,
	-1, 1079,
	5, 2174,
	573, 2171,
	-2, 2162,
	-1, 1080,
	5, 2175,
	573, 2172,
	-2, 2163,
	-1, 1088,
	575, 2159,
	-2, 2141,
	-1, 1089,
	573, 2577,
	-2, 2160,
	-1, 1112,
	573, 2576,
	-2, 2176,
	-1, 1113,
	5, 1673,
	-2, 2547,
	-1, 1114,
	5, 1674,
	-2, 2548,
	-1, 1115,
	5, 1675,
	-2, 2562,
	-1, 1116,
	5, 1676,
	-2, 2526,
	-1, 1117,
	5, 1677,
	-2, 2560,
	-1, 1118,
	5, 1685,
	-2, 2539,
	-1, 1119,
	5, 1672,
	-2, 2535,
	-1, 1120,
	5, 1672,
	-2, 2534,
	-1, 1121,
	5, 1672,
	-2, 2553,
	-1, 1122,
	5, 1683,
	-2, 2528,
	-1, 1123,
	5, 1688,
	-2, 2527,
	-1, 1124,
	5, 1690,
	-2, 2572,
	-1, 1127,
	5, 1712,
	-2, 2565,
	-1, 1128,
	5, 1704,
	-2, 2566,
	-1, 1129,
	5, 1712,
	-2, 2567,
	-1, 1130,
	5, 1708,
	-2, 2568,
	-1, 1131,
	5, 1658,
	-2, 2540,
	-1, 1132,
	5, 1659,
	-2, 2541,
	-1, 1133,
	5, 1660,
	-2, 2529,
	-1, 1161,
	5, 1695,
	-2, 2573,
	-1, 1162,
	5, 1696,
	-2, 2563,
	-1, 1163,
	5, 1697,
	536, 1697,
	-2, 2530,
	-1, 1164,
	5, 1698,
	536, 1698,
	-2, 2531,
	-1, 1201,
	573, 2171,
	-2, 2162,
	-1, 1202,
	573, 2172,
	-2, 2163,
	-1, 1301,
	182, 2495,
	498, 2495,
	556, 2495,
	575, 2495,
	-2, 0,
	-1, 1304,
	1, 631,
	576, 631,
	-2, 1326,
	-1, 1431,
	351, 2137,
	405, 2137,
	444, 2137,
	566, 2137,
	-2, 2127,
	-1, 1442,
	577, 2137,
	-2, 2138,
	-1, 1447,
	1, 1182,
	572, 1182,
	574, 1182,
	576, 1182,
	-2, 1458,
	-1, 1495,
	390, 980,
	535, 980,
	-2, 366,
	-1, 1511,
	44, 2135,
	-2, 946,
	-1, 1518,
	1, 1182,
	572, 1182,
	574, 1182,
	576, 1182,
	-2, 1458,
	-1, 1526,
	4, 1207,
	21, 1207,
	22, 1207,
	23, 1207,
	24, 1207,
	25, 1207,
	26, 1207,
	27, 1207,
	28, 1207,
	30, 1207,
	31, 1207,
	37, 1207,
	42, 1207,
	43, 1207,
	45, 1207,
	46, 1207,
	47, 1207,
	48, 1207,
	49, 1207,
	50, 1207,
	51, 1207,
	53, 1207,
	54, 1207,
	55, 1207,
	56, 1207,
	58, 1207,
	59, 1207,
	60, 1207,
	61, 1207,
	62, 1207,
	63, 1207,
	64, 1207,
	68, 1207,
	69, 1207,
	70, 1207,
	71, 1207,
	73, 1207,
	74, 1207,
	75, 1207,
	79, 1207,
	80, 1207,
	81, 1207,
	82, 1207,
	83, 1207,
	84, 1207,
	85, 1207,
	88, 1207,
	89, 1207,
	90, 1207,
	91, 1207,
	92, 1207,
	94, 1207,
	96, 1207,
	97, 1207,
	98, 1207,
	99, 1207,
	100, 1207,
	101, 1207,
	103, 1207,
	104, 1207,
	105, 1207,
	107, 1207,
	108, 1207,
	116, 1207,
	117, 1207,
	118, 1207,
	119, 1207,
	121, 1207,
	122, 1207,
	123, 1207,
	125, 1207,
	126, 1207,
	127, 1207,
	129, 1207,
	130, 1207,
	132, 1207,
	133, 1207,
	134, 1207,
	137, 1207,
	138, 1207,
	139, 1207,
	141, 1207,
	142, 1207,
	144, 1207,
	145, 1207,
	146, 1207,
	148, 1207,
	149, 1207,
	150, 1207,
	151, 1207,
	152, 1207,
	153, 1207,
	154, 1207,
	155, 1207,
	156, 1207,
	157, 1207,
	158, 1207,
	159, 1207,
	160, 1207,
	161, 1207,
	162, 1207,
	163, 1207,
	171, 1207,
	172, 1207,
	173, 1207,
	174, 1207,
	178, 1207,
	180, 1207,
	184, 1207,
	185, 1207,
	186, 1207,
	187, 1207,
	188, 1207,
	189, 1207,
	190, 1207,
	191, 1207,
	192, 1207,
	193, 1207,
	194, 1207,
	195, 1207,
	196, 1207,
	198, 1207,
	199, 1207,
	201, 1207,
	202, 1207,
	204, 1207,
	205, 1207,
	206, 1207,
	207, 1207,
	208, 1207,
	209, 1207,
	210, 1207,
	211, 1207,
	212, 1207,
	214, 1207,
	215, 1207,
	217, 1207,
	218, 1207,
	219, 1207,
	220, 1207,
	225, 1207,
	226, 1207,
	227, 1207,
	228, 1207,
	231, 1207,
	232, 1207,
	233, 1207,
	235, 1207,
	237, 1207,
	238, 1207,
	240, 1207,
	242, 1207,
	243, 1207,
	244, 1207,
	246, 1207,
	250, 1207,
	251, 1207,
	252, 1207,
	253, 1207,
	254, 1207,
	255, 1207,
	257, 1207,
	258, 1207,
	259, 1207,
	261, 1207,
	262, 1207,
	264, 1207,
	265, 1207,
	268, 1207,
	272, 1207,
	273, 1207,
	274, 1207,
	277, 1207,
	278, 1207,
	279, 1207,
	280, 1207,
	282, 1207,
	283, 1207,
	284, 1207,
	285, 1207,
	286, 1207,
	287, 1207,
	288, 1207,
	289, 1207,
	290, 1207,
	291, 1207,
	292, 1207,
	293, 1207,
	294, 1207,
	295, 1207,
	296, 1207,
	297, 1207,
	298, 1207,
	299, 1207,
	300, 1207,
	301, 1207,
	302, 1207,
	303, 1207,
	305, 1207,
	307, 1207,
	308, 1207,
	309, 1207,
	310, 1207,
	311, 1207,
	312, 1207,
	313, 1207,
	314, 1207,
	315, 1207,
	316, 1207,
	317, 1207,
	318, 1207,
	320, 1207,
	324, 1207,
	325, 1207,
	327, 1207,
	328, 1207,
	329, 1207,
	330, 1207,
	331, 1207,
	334, 1207,
	336, 1207,
	338, 1207,
	339, 1207,
	340, 1207,
	343, 1207,
	344, 1207,
	345, 1207,
	347, 1207,
	349, 1207,
	350, 1207,
	351, 1207,
	352, 1207,
	353, 1207,
	354, 1207,
	355, 1207,
	356, 1207,
	357, 1207,
	358, 1207,
	359, 1207,
	360, 1207,
	362, 1207,
	363, 1207,
	364, 1207,
	365, 1207,
	366, 1207,
	367, 1207,
	368, 1207,
	369, 1207,
	370, 1207,
	371, 1207,
	372, 1207,
	373, 1207,
	374, 1207,
	375, 1207,
	376, 1207,
	378, 1207,
	379, 1207,
	381, 1207,
	382, 1207,
	383, 1207,
	384, 1207,
	385, 1207,
	386, 1207,
	387, 1207,
	388, 1207,
	389, 1207,
	390, 1207,
	391, 1207,
	392, 1207,
	394, 1207,
	396, 1207,
	397, 1207,
	398, 1207,
	403, 1207,
	405, 1207,
	406, 1207,
	407, 1207,
	408, 1207,
	409, 1207,
	410, 1207,
	411, 1207,
	412, 1207,
	414, 1207,
	415, 1207,
	416, 1207,
	418, 1207,
	419, 1207,
	420, 1207,
	421, 1207,
	422, 1207,
	423, 1207,
	425, 1207,
	426, 1207,
	427, 1207,
	428, 1207,
	429, 1207,
	430, 1207,
	431, 1207,
	432, 1207,
	433, 1207,
	434, 1207,
	435, 1207,
	437, 1207,
	438, 1207,
	439, 1207,
	440, 1207,
	441, 1207,
	442, 1207,
	444, 1207,
	445, 1207,
	446, 1207,
	447, 1207,
	448, 1207,
	449, 1207,
	451, 1207,
	452, 1207,
	453, 1207,
	454, 1207,
	455, 1207,
	456, 1207,
	457, 1207,
	459, 1207,
	461, 1207,
	462, 1207,
	463, 1207,
	464, 1207,
	465, 1207,
	466, 1207,
	467, 1207,
	468, 1207,
	469, 1207,
	470, 1207,
	471, 1207,
	472, 1207,
	473, 1207,
	474, 1207,
	475, 1207,
	477, 1207,
	478, 1207,
	480, 1207,
	481, 1207,
	483, 1207,
	484, 1207,
	485, 1207,
	486, 1207,
	487, 1207,
	488, 1207,
	489, 1207,
	490, 1207,
	491, 1207,
	493, 1207,
	494, 1207,
	495, 1207,
	496, 1207,
	497, 1207,
	499, 1207,
	501, 1207,
	502, 1207,
	503, 1207,
	504, 1207,
	505, 1207,
	506, 1207,
	508, 1207,
	509, 1207,
	510, 1207,
	511, 1207,
	513, 1207,
	514, 1207,
	517, 1207,
	518, 1207,
	519, 1207,
	520, 1207,
	521, 1207,
	522, 1207,
	523, 1207,
	525, 1207,
	528, 1207,
	529, 1207,
	530, 1207,
	531, 1207,
	532, 1207,
	533, 1207,
	535, 1207,
	536, 1207,
	537, 1207,
	538, 1207,
	543, 1207,
	544, 1207,
	545, 1207,
	546, 1207,
	547, 1207,
	548, 1207,
	-2, 0,
	-1, 1549,
	1, 504,
	572, 504,
	574, 504,
	576, 504,
	-2, 1429,
	-1, 1552,
	4, 2571,
	11, 2571,
	12, 2571,
	14, 2571,
	15, 2571,
	16, 2571,
	17, 2571,
	18, 2571,
	19, 2571,
	21, 2571,
	22, 2571,
	23, 2571,
	24, 2571,
	25, 2571,
	26, 2571,
	27, 2571,
	28, 2571,
	30, 2571,
	31, 2571,
	34, 2571,
	35, 2571,
	37, 2571,
	39, 2571,
	42, 2571,
	43, 2571,
	45, 2571,
	46, 2571,
	47, 2571,
	48, 2571,
	49, 2571,
	50, 2571,
	51, 2571,
	53, 2571,
	54, 2571,
	55, 2571,
	56, 2571,
	58, 2571,
	59, 2571,
	60, 2571,
	61, 2571,
	62, 2571,
	63, 2571,
	64, 2571,
	68, 2571,
	69, 2571,
	70, 2571,
	71, 2571,
	73, 2571,
	74, 2571,
	75, 2571,
	76, 2571,
	79, 2571,
	80, 2571,
	81, 2571,
	82, 2571,
	83, 2571,
	84, 2571,
	85, 2571,
	86, 2571,
	88, 2571,
	89, 2571,
	90, 2571,
	91, 2571,
	92, 2571,
	94, 2571,
	95, 2571,
	96, 2571,
	97, 2571,
	98, 2571,
	99, 2571,
	100, 2571,
	101, 2571,
	103, 2571,
	104, 2571,
	105, 2571,
	106, 2571,
	107, 2571,
	108, 2571,
	116, 2571,
	117, 2571,
	118, 2571,
	119, 2571,
	121, 2571,
	122, 2571,
	123, 2571,
	125, 2571,
	126, 2571,
	127, 2571,
	129, 2571,
	130, 2571,
	132, 2571,
	133, 2571,
	134, 2571,
	137, 2571,
	138, 2571,
	139, 2571,
	141, 2571,
	142, 2571,
	144, 2571,
	145, 2571,
	146, 2571,
	148, 2571,
	149, 2571,
	150, 2571,
	151, 2571,
	152, 2571,
	153, 2571,
	154, 2571,
	155, 2571,
	156, 2571,
	157, 2571,
	158, 2571,
	159, 2571,
	160, 2571,
	161, 2571,
	162, 2571,
	163, 2571,
	167, 2571,
	168, 2571,
	169, 2571,
	170, 2571,
	171, 2571,
	172, 2571,
	173, 2571,
	174, 2571,
	177, 2571,
	178, 2571,
	180, 2571,
	183, 2571,
	184, 2571,
	185, 2571,
	186, 2571,
	187, 2571,
	188, 2571,
	189, 2571,
	190, 2571,
	191, 2571,
	192, 2571,
	193, 2571,
	194, 2571,
	195, 2571,
	196, 2571,
	198, 2571,
	199, 2571,
	201, 2571,
	202, 2571,
	204, 2571,
	205, 2571,
	206, 2571,
	207, 2571,
	208, 2571,
	209, 2571,
	210, 2571,
	211, 2571,
	212, 2571,
	213, 2571,
	214, 2571,
	215, 2571,
	216, 2571,
	217, 2571,
	218, 2571,
	219, 2571,
	220, 2571,
	222, 2571,
	223, 2571,
	225, 2571,
	226, 2571,
	227, 2571,
	228, 2571,
	230, 2571,
	231, 2571,
	232, 2571,
	233, 2571,
	235, 2571,
	237, 2571,
	238, 2571,
	239, 2571,
	240, 2571,
	241, 2571,
	242, 2571,
	243, 2571,
	244, 2571,
	245, 2571,
	246, 2571,
	248, 2571,
	249, 2571,
	250, 2571,
	251, 2571,
	252, 2571,
	253, 2571,
	254, 2571,
	255, 2571,
	257, 2571,
	258, 2571,
	259, 2571,
	261, 2571,
	262, 2571,
	263, 2571,
	264, 2571,
	265, 2571,
	266, 2571,
	268, 2571,
	272, 2571,
	273, 2571,
	274, 2571,
	277, 2571,
	278, 2571,
	279, 2571,
	280, 2571,
	281, 2571,
	282, 2571,
	283, 2571,
	284, 2571,
	285, 2571,
	286, 2571,
	287, 2571,
	288, 2571,
	289, 2571,
	290, 2571,
	291, 2571,
	292, 2571,
	293, 2571,
	294, 2571,
	295, 2571,
	296, 2571,
	297, 2571,
	298, 2571,
	299, 2571,
	300, 2571,
	301, 2571,
	302, 2571,
	303, 2571,
	305, 2571,
	306, 2571,
	307, 2571,
	308, 2571,
	309, 2571,
	310, 2571,
	311, 2571,
	312, 2571,
	313, 2571,
	314, 2571,
	315, 2571,
	316, 2571,
	317, 2571,
	318, 2571,
	320, 2571,
	323, 2571,
	324, 2571,
	325, 2571,
	327, 2571,
	328, 2571,
	329, 2571,
	330, 2571,
	331, 2571,
	334, 2571,
	338, 2571,
	339, 2571,
	340, 2571,
	341, 2571,
	343, 2571,
	344, 2571,
	345, 2571,
	347, 2571,
	349, 2571,
	350, 2571,
	351, 2571,
	352, 2571,
	353, 2571,
	354, 2571,
	355, 2571,
	356, 2571,
	357, 2571,
	358, 2571,
	359, 2571,
	360, 2571,
	362, 2571,
	363, 2571,
	364, 2571,
	365, 2571,
	366, 2571,
	367, 2571,
	368, 2571,
	369, 2571,
	370, 2571,
	371, 2571,
	372, 2571,
	373, 2571,
	374, 2571,
	375, 2571,
	376, 2571,
	378, 2571,
	379, 2571,
	381, 2571,
	382, 2571,
	383, 2571,
	384, 2571,
	385, 2571,
	386, 2571,
	387, 2571,
	388, 2571,
	389, 2571,
	390, 2571,
	391, 2571,
	392, 2571,
	394, 2571,
	396, 2571,
	397, 2571,
	398, 2571,
	403, 2571,
	404, 2571,
	405, 2571,
	406, 2571,
	407, 2571,
	408, 2571,
	409, 2571,
	410, 2571,
	411, 2571,
	412, 2571,
	414, 2571,
	415, 2571,
	416, 2571,
	417, 2571,
	418, 2571,
	419, 2571,
	420, 2571,
	421, 2571,
	422, 2571,
	423, 2571,
	424, 2571,
	425, 2571,
	426, 2571,
	427, 2571,
	428, 2571,
	429, 2571,
	430, 2571,
	431, 2571,
	432, 2571,
	433, 2571,
	434, 2571,
	435, 2571,
	437, 2571,
	438, 2571,
	439, 2571,
	440, 2571,
	441, 2571,
	442, 2571,
	444, 2571,
	445, 2571,
	446, 2571,
	447, 2571,
	448, 2571,
	449, 2571,
	450, 2571,
	451, 2571,
	452, 2571,
	453, 2571,
	454, 2571,
	455, 2571,
	456, 2571,
	457, 2571,
	459, 2571,
	461, 2571,
	462, 2571,
	463, 2571,
	464, 2571,
	465, 2571,
	466, 2571,
	467, 2571,
	468, 2571,
	469, 2571,
	470, 2571,
	471, 2571,
	472, 2571,
	473, 2571,
	474, 2571,
	475, 2571,
	477, 2571,
	478, 2571,
	480, 2571,
	481, 2571,
	483, 2571,
	484, 2571,
	485, 2571,
	486, 2571,
	487, 2571,
	488, 2571,
	489, 2571,
	490, 2571,
	491, 2571,
	493, 2571,
	494, 2571,
	495, 2571,
	496, 2571,
	497, 2571,
	499, 2571,
	501, 2571,
	502, 2571,
	503, 2571,
	504, 2571,
	505, 2571,
	506, 2571,
	508, 2571,
	509, 2571,
	510, 2571,
	511, 2571,
	513, 2571,
	514, 2571,
	517, 2571,
	518, 2571,
	519, 2571,
	520, 2571,
	521, 2571,
	522, 2571,
	523, 2571,
	525, 2571,
	528, 2571,
	529, 2571,
	530, 2571,
	531, 2571,
	532, 2571,
	533, 2571,
	535, 2571,
	536, 2571,
	537, 2571,
	538, 2571,
	543, 2571,
	544, 2571,
	545, 2571,
	546, 2571,
	547, 2571,
	548, 2571,
	549, 2571,
	551, 2571,
	554, 2571,
	555, 2571,
	556, 2571,
	557, 2571,
	558, 2571,
	559, 2571,
	561, 2571,
	562, 2571,
	563, 2571,
	564, 2571,
	565, 2571,
	566, 2571,
	567, 2571,
	568, 2571,
	569, 2571,
	571, 2571,
	574, 2571,
	575, 2571,
	577, 2571,
	578, 2571,
	-2, 0,
	-1, 1557,
	182, 2456,
	498, 2456,
	556, 2456,
	575, 2456,
	-2, 0,
	-1, 1606,
	383, 810,
	442, 810,
	481, 810,
	503, 810,
	-2, 0,
	-1, 1633,
	1, 805,
	572, 805,
	574, 805,
	576, 805,
	-2, 0,
	-1, 1634,
	1, 843,
	572, 843,
	574, 843,
	576, 843,
	-2, 0,
	-1, 1635,
	1, 851,
	572, 851,
	574, 851,
	576, 851,
	-2, 0,
	-1, 1638,
	1, 814,
	572, 814,
	574, 814,
	576, 814,
	-2, 0,
	-1, 1640,
	1, 818,
	572, 818,
	574, 818,
	576, 818,
	-2, 0,
	-1, 1646,
	1, 825,
	572, 825,
	574, 825,
	576, 825,
	-2, 0,
	-1, 1674,
	1, 2517,
	572, 2517,
	574, 2517,
	575, 2517,
	576, 2517,
	-2, 876,
	-1, 1675,
	1, 2453,
	572, 2453,
	574, 2453,
	575, 2453,
	576, 2453,
	-2, 877,
	-1, 1693,
	1, 1321,
	576, 1321,
	-2, 1326,
	-1, 1696,
	166, 1472,
	179, 1472,
	267, 1472,
	332, 1472,
	-2, 1410,
	-1, 1790,
	147, 1431,
	166, 1431,
	179, 1431,
	234, 1431,
	267, 1431,
	332, 1431,
	342, 1431,
	515, 1431,
	-2, 1873,
	-1, 1850,
	574, 2023,
	-2, 0,
	-1, 1885,
	147, 1431,
	166, 1431,
	179, 1431,
	234, 1431,
	267, 1431,
	332, 1431,
	342, 1431,
	515, 1431,
	-2, 1559,
	-1, 1934,
	573, 1700,
	-2, 1688,
	-1, 2012,
	1, 633,
	576, 633,
	-2, 1326,
	-1, 2137,
	216, 238,
	-2, 2170,
	-1, 2138,
	216, 239,
	-2, 282,
	-1, 2240,
	1, 807,
	572, 807,
	574, 807,
	576, 807,
	-2, 0,
	-1, 2241,
	1, 845,
	572, 845,
	574, 845,
	576, 845,
	-2, 0,
	-1, 2242,
	1, 853,
	572, 853,
	574, 853,
	576, 853,
	-2, 0,
	-1, 2276,
	1, 827,
	572, 827,
	574, 827,
	576, 827,
	-2, 0,
	-1, 2328,
	422, 1499,
	423, 1499,
	-2, 1733,
	-1, 2359,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1753,
	-1, 2360,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1754,
	-1, 2361,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1755,
	-1, 2362,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1756,
	-1, 2363,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1757,
	-1, 2364,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1758,
	-1, 2365,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1759,
	-1, 2366,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1760,
	-1, 2378,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1772,
	-1, 2379,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1773,
	-1, 2380,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1774,
	-1, 2383,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1779,
	-1, 2389,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1783,
	-1, 2391,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1791,
	-1, 2392,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1792,
	-1, 2393,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1793,
	-1, 2394,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1794,
	-1, 2530,
	5, 2174,
	182, 2034,
	573, 2171,
	-2, 2162,
	-1, 2531,
	182, 2035,
	-2, 2522,
	-1, 2532,
	182, 2036,
	-2, 2353,
	-1, 2533,
	182, 2037,
	-2, 2242,
	-1, 2534,
	182, 2038,
	-2, 2294,
	-1, 2535,
	182, 2039,
	-2, 2338,
	-1, 2536,
	182, 2040,
	-2, 2451,
	-1, 2537,
	182, 2041,
	-2, 1856,
	-1, 2607,
	1, 1560,
	2, 1560,
	106, 1560,
	147, 1560,
	166, 1560,
	179, 1560,
	183, 1560,
	200, 1560,
	203, 1560,
	230, 1560,
	234, 1560,
	245, 1560,
	263, 1560,
	267, 1560,
	306, 1560,
	332, 1560,
	336, 1560,
	342, 1560,
	413, 1560,
	417, 1560,
	515, 1560,
	526, 1560,
	540, 1560,
	541, 1560,
	542, 1560,
	552, 1560,
	572, 1560,
	574, 1560,
	576, 1560,
	578, 1560,
	-2, 1559,
	-1, 2620,
	573, 2143,
	-2, 2157,
	-1, 2622,
	53, 1458,
	132, 1458,
	-2, 298,
	-1, 2647,
	573, 1699,
	-2, 1689,
	-1, 2822,
	1, 1182,
	572, 1182,
	574, 1182,
	576, 1182,
	-2, 1458,
	-1, 2988,
	337, 1502,
	-2, 2561,
	-1, 2989,
	337, 1503,
	-2, 2437,
	-1, 2993,
	422, 2100,
	423, 2100,
	-2, 1854,
	-1, 2994,
	422, 2104,
	423, 2104,
	-2, 1855,
	-1, 2995,
	422, 2101,
	423, 2101,
	-2, 1854,
	-1, 2996,
	422, 2105,
	423, 2105,
	-2, 1855,
	-1, 3009,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1781,
	-1, 3010,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1785,
	-1, 3016,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1787,
	-1, 3256,
	1, 630,
	572, 630,
	574, 630,
	576, 630,
	-2, 1326,
	-1, 3406,
	44, 2135,
	-2, 947,
	-1, 3411,
	1, 1182,
	572, 1182,
	574, 1182,
	576, 1182,
	-2, 1458,
	-1, 3515,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1789,
	-1, 3522,
	239, 0,
	241, 0,
	323, 0,
	-2, 1808,
	-1, 3589,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1837,
	-1, 3590,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1838,
	-1, 3591,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1839,
	-1, 3595,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1843,
	-1, 3596,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1844,
	-1, 3597,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1845,
	-1, 3643,
	573, 2144,
	-2, 2158,
	-1, 3803,
	575, 2678,
	-2, 1384,
	-1, 3860,
	239, 0,
	241, 0,
	323, 0,
	-2, 1809,
	-1, 3863,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1812,
	-1, 3864,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1814,
	-1, 3959,
	575, 2159,
	-2, 1217,
	-1, 4093,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1813,
	-1, 4094,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1815,
	-1, 4105,
	239, 0,
	-2, 1846,
	-1, 4272,
	239, 0,
	-2, 1847,
	-1, 4457,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 2525,
}

const sqlPrivate = 57344

const sqlLast = 120261

var sqlAct = [...]int{
	263, 4553, 3396, 4197, 4638, 3167, 2899, 2886, 4456, 4478,
	4510, 4334, 4150, 4304, 4312, 4467, 4438, 4352, 4477, 3395,
	4579, 3955, 2060, 4330, 4426, 2134, 4410, 4390, 4468, 4137,
	3843, 4469, 4407, 2754, 4522, 4225, 4204, 3554, 1459, 4276,
	4455, 4016, 2773, 4045, 4050, 3507, 3997, 4114, 4155, 2338,
	4213, 4082, 1277, 3795, 3787, 3734, 1273, 3002, 1027, 2406,
	1266, 3956, 1205, 1071, 3428, 4030, 2712, 1194, 2562, 3940,
	1921, 4239, 1994, 3754, 778, 3340, 3282, 3422, 3756, 4055,
	1018, 3267, 3770, 2785, 1705, 3391, 1573, 1922, 3285, 2346,
	745, 2339, 2908, 4110, 1337, 2068, 3467, 2875, 778, 3381,
	2921, 3469, 2910, 1891, 3190, 2846, 2856, 3210, 3182, 3646,
	3842, 1614, 3173, 2918, 2870, 1259, 3150, 852, 2901, 2181,
	2887, 1428, 2872, 1078, 2907, 1026, 172, 2129, 2217, 1860,
	2128, 3171, 2079, 4, 4554, 2714, 2600, 3304, 4277, 3149,
	3899, 3614, 2343, 1798, 1836, 2419, 2448, 3279, 1435, 2917,
	2599, 1271, 1513, 257, 2123, 2602, 773, 2105, 2986, 2857,
	2799, 1185, 2112, 1320, 2048, 1075, 1693, 1992, 2052, 1245,
	2580, 2559, 1880, 2215, 256, 2439, 1861, 2450, 1082, 2403,
	3217, 2038, 2327, 2310, 1571, 1080, 2308, 1268, 2632, 3393,
	2880, 2169, 1550, 1256, 1516, 2696, 779, 780, 2753, 2911,
	2631, 39, 676, 1306, 2442, 662, 1188, 1831, 2570, 684,
	2589, 1870, 1167, 2526, 2420, 1783, 172, 1877, 2492, 1646,
	181, 1706, 1707, 2309, 845, 182, 1633, 784, 727, 739,
	1202, 2311, 2194, 2168, 1541, 775, 1454, 1548, 2067, 1184,
	4511, 4353, 2332, 1056, 1970, 1967, 679, 44, 787, 43,
	41, 784, 32, 30, 28, 1981, 1165, 687, 1712, 1190,
	1692, 3037, 914, 1465, 934, 3033, 1720, 1721, 3169, 3628,
	702, 3629, 787, 826, 1022, 1983, 1983, 3438, 1983, 3240,
	1983, 1720, 1721, 105, 4651, 4641, 1983, 1983, 2579, 3447,
	1751, 4626, 1022, 1200, 4625, 2579, 2208, 1723, 2579, 4615,
	4597, 3239, 3046, 2143, 4154, 1751, 3437, 4595, 3047, 4541,
	2572, 4154, 1723, 2143, 1077, 4499, 4492, 4490, 4487, 4500,
	2579, 2579, 4488, 4484, 4453, 4452, 4451, 4485, 2143, 2143,
	2004, 1722, 4446, 867, 4445, 4436, 2004, 1054, 2004, 4154,
	4434, 1742, 1182, 4405, 4154, 4377, 1722, 4154, 4370, 2638,
	1739, 4369, 2579, 1197, 4364, 2579, 1125, 3447, 4154, 4363,
	4357, 1720, 1721, 4154, 2143, 4326, 4274, 4256, 4253, 4008,
	2638, 3830, 2143, 1223, 2143, 4250, 4206, 1168, 1168, 4154,
	4207, 2781, 4170, 4169, 4161, 1751, 2143, 2143, 2143, 1315,
	4160, 4153, 1723, 1003, 4154, 4154, 4121, 3001, 1002, 4095,
	2143, 3856, 4074, 2638, 4063, 3992, 2004, 3978, 3447, 2579,
	3862, 2579, 3811, 1639, 2638, 2216, 3464, 1171, 3225, 1172,
	1315, 1458, 1745, 1746, 1747, 1748, 1722, 3805, 2657, 3768,
	3638, 3464, 1728, 3769, 3639, 3636, 1742, 3621, 3538, 3637,
	2579, 2579, 2143, 1012, 1017, 1739, 3618, 1728, 3534, 3463,
	3454, 3166, 2579, 3464, 3455, 2579, 3161, 1216, 1720, 1721,
	2579, 1753, 1754, 1755, 1763, 1764, 1765, 1023, 3160, 3113,
	4378, 3087, 2579, 3114, 1073, 3088, 3079, 1750, 1752, 1169,
	3080, 1756, 1751, 3077, 3048, 4278, 2634, 2579, 2579, 1723,
	1720, 1721, 1750, 1752, 4269, 2925, 3519, 1769, 2001, 2004,
	1580, 2897, 2896, 1737, 1738, 2204, 2204, 2680, 2656, 2637,
	2579, 2579, 2629, 2638, 1751, 4257, 2579, 1745, 1746, 1747,
	1748, 1723, 2143, 1722, 227, 2623, 2578, 1728, 3036, 2143,
	2579, 2203, 2004, 1742, 3618, 2204, 1743, 1217, 1720, 1721,
	2571, 4043, 1739, 4008, 1196, 3979, 3830, 3455, 2776, 2695,
	2017, 1743, 1982, 1998, 2001, 1722, 227, 3122, 3123, 2852,
	2142, 2793, 1751, 1720, 1721, 2072, 2693, 1198, 1856, 1723,
	229, 90, 1750, 1752, 1453, 3720, 3510, 3486, 1878, 2117,
	1616, 3439, 2616, 2615, 2614, 2613, 2612, 1720, 1721, 227,
	1467, 1173, 1170, 1011, 1723, 1010, 1009, 1008, 1737, 1738,
	3440, 3915, 229, 1722, 1007, 1006, 1005, 1001, 1000, 999,
	998, 1751, 997, 2963, 1745, 1746, 1747, 1748, 1723, 228,
	996, 995, 1984, 1984, 1728, 1984, 994, 1984, 1722, 993,
	221, 1743, 3137, 1984, 1984, 229, 992, 991, 990, 222,
	989, 988, 987, 986, 985, 912, 911, 910, 909, 2883,
	908, 228, 1722, 1479, 907, 906, 1728, 905, 904, 1749,
	1760, 183, 221, 1770, 1458, 903, 902, 901, 900, 1750,
	1752, 222, 1473, 3437, 899, 1217, 898, 1467, 897, 1744,
	896, 895, 894, 893, 228, 892, 1766, 891, 1767, 1566,
	890, 889, 888, 183, 1744, 1737, 1738, 2001, 887, 886,
	885, 1750, 1752, 884, 1728, 883, 2571, 882, 881, 880,
	870, 869, 865, 1758, 864, 858, 857, 1466, 844, 1584,
	1282, 1080, 843, 3128, 801, 800, 183, 799, 1743, 1728,
	798, 790, 789, 788, 760, 751, 750, 749, 733, 251,
	250, 249, 248, 247, 1080, 246, 245, 244, 1080, 1750,
	1752, 243, 242, 1728, 1749, 241, 240, 239, 238, 237,
	1743, 236, 235, 234, 1340, 233, 232, 4057, 1340, 1217,
	1768, 231, 1282, 230, 1744, 3874, 3656, 3632, 3465, 3213,
	3059, 3122, 3123, 3042, 3140, 3141, 3142, 1881, 1757, 2667,
	1982, 3164, 2001, 1080, 1998, 1080, 2946, 1080, 1750, 1752,
	2656, 2303, 1319, 1282, 2833, 2642, 1324, 2621, 1743, 2606,
	1719, 2475, 2865, 1740, 1736, 2046, 1733, 1731, 1732, 1724,
	1725, 1726, 1727, 1729, 1730, 2211, 2003, 3138, 1282, 3165,
	1443, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730,
	1904, 1438, 1809, 1839, 2461, 1839, 2459, 227, 1282, 227,
	1838, 1749, 1838, 1282, 3122, 3123, 3137, 1743, 1461, 1326,
	1478, 1080, 145, 1080, 1204, 4474, 1467, 1282, 1800, 1310,
	4454, 1744, 1842, 1080, 1837, 1080, 4433, 4341, 4266, 1472,
	2738, 4109, 1433, 1250, 1253, 1570, 1457, 4260, 4258, 4148,
	1522, 1525, 4064, 229, 1467, 229, 4281, 1761, 4042, 3922,
	3897, 3896, 3890, 1744, 3889, 2210, 1263, 1304, 1740, 1736,
	3888, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730,
	1282, 3881, 1445, 1289, 1333, 3880, 1425, 1430, 3878, 3873,
	3870, 3869, 3773, 3767, 227, 784, 3122, 3123, 1080, 3660,
	3659, 1080, 228, 3658, 228, 3642, 1290, 3128, 1528, 3609,
	1641, 1744, 3608, 221, 3607, 221, 787, 3530, 3526, 3208,
	3157, 227, 222, 3148, 222, 3121, 3118, 4059, 1299, 3117,
	3139, 3115, 3086, 3085, 172, 172, 3084, 1511, 1456, 1455,
	229, 1025, 1553, 1555, 183, 1807, 183, 1181, 3122, 3123,
	1969, 3081, 3078, 3058, 1585, 1464, 1759, 1471, 3041, 1477,
	1744, 1734, 1735, 1741, 1762, 1740, 1736, 229, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 1801, 3034, 1799,
	3128, 3884, 2898, 2607, 1802, 3883, 2432, 1719, 1800, 228,
	1718, 2184, 2150, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
	221, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 222,
	4645, 3138, 3718, 2867, 1655, 227, 228, 2148, 4589, 4588,
	4555, 3122, 3123, 1564, 1080, 1569, 3774, 221, 4509, 4507,
	1080, 183, 1206, 3556, 4397, 1578, 222, 1583, 3122, 3123,
	4333, 3162, 1544, 1697, 4322, 4319, 4318, 227, 3122, 3123,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 4317, 2882, 4298,
	1310, 229, 3128, 1310, 4280, 4279, 227, 3133, 3131, 3132,
	3124, 3125, 3126, 3127, 3129, 3130, 1724, 1725, 1726, 1727,
	1729, 1730, 2445, 227, 3138, 1565, 4254, 4238, 4237, 2409,
	1691, 1023, 4223, 229, 4220, 4219, 4166, 1579, 1640, 4144,
	1724, 1725, 1726, 1727, 1729, 1730, 4107, 4090, 4089, 3231,
	228, 227, 229, 227, 3128, 4071, 4070, 4033, 4009, 3914,
	3895, 221, 3831, 3825, 3822, 1789, 3706, 3705, 3691, 229,
	222, 3774, 3690, 3688, 3624, 1080, 1080, 1080, 1590, 2415,
	3612, 1080, 228, 3521, 1787, 3466, 1607, 3448, 1202, 3414,
	1202, 3352, 183, 221, 3139, 3315, 3284, 229, 3233, 229,
	1642, 228, 222, 3063, 4058, 1340, 3138, 3062, 2446, 3057,
	3025, 2845, 221, 1080, 1845, 1844, 778, 1843, 228, 1840,
	1832, 222, 1939, 778, 183, 1830, 1282, 3128, 2649, 221,
	3205, 1858, 2648, 2618, 2611, 1694, 2577, 2457, 222, 1903,
	1859, 2866, 1702, 183, 3128, 1907, 228, 1003, 228, 1867,
	1701, 1200, 1002, 1200, 3128, 1918, 1854, 221, 3138, 221,
	183, 1853, 1965, 1852, 1696, 1851, 222, 3139, 222, 1850,
	1849, 1848, 1847, 1911, 1841, 1846, 1698, 1720, 1721, 1715,
	1716, 1914, 1827, 1912, 1826, 1825, 1824, 1823, 183, 2447,
	183, 2444, 1282, 1822, 1821, 1820, 2212, 1819, 1818, 1080,
	1817, 1816, 1888, 1282, 1815, 1864, 1865, 1814, 1723, 1813,
	1802, 1197, 1788, 1197, 1786, 1781, 1298, 172, 1542, 227,
	1221, 1080, 1168, 1908, 3134, 3135, 3136, 1340, 1833, 1834,
	1212, 3133, 3131, 3132, 3124, 3125, 3126, 3127, 3129, 3130,
	4282, 4036, 1722, 2062, 3918, 3866, 3655, 1023, 3635, 3139,
	3627, 3045, 2035, 2640, 2609, 1547, 4125, 3920, 3138, 3654,
	3122, 3123, 1801, 1889, 3229, 229, 1784, 2010, 3981, 784,
	3443, 1899, 4586, 4578, 2774, 1910, 784, 1323, 4320, 2044,
	227, 4209, 4208, 2474, 4062, 4011, 4010, 2009, 3980, 3917,
	787, 3834, 2037, 1895, 1321, 3833, 1886, 787, 1720, 1721,
	1933, 3139, 2037, 1879, 3133, 3131, 3132, 3124, 3125, 3126,
	3127, 3129, 3130, 2037, 228, 227, 2460, 3832, 2458, 1986,
	3318, 3630, 3450, 1857, 3449, 221, 229, 3777, 4214, 1723,
	1310, 4261, 4259, 2072, 222, 1322, 2449, 1315, 1315, 1898,
	1881, 1897, 1896, 1839, 1894, 1893, 1892, 1883, 2114, 3083,
	1838, 1915, 1282, 1282, 2758, 1822, 183, 3345, 1962, 3508,
	4147, 229, 1340, 1722, 1919, 1316, 1606, 1689, 2012, 3082,
	3007, 2740, 1318, 1023, 2023, 228, 3703, 983, 3459, 3286,
	1822, 1315, 3398, 4450, 3397, 2445, 221, 2008, 3132, 3124,
	3125, 3126, 3127, 3129, 3130, 222, 1656, 1811, 1615, 2209,
	4205, 3139, 1196, 2232, 1196, 4495, 1988, 4480, 4466, 1990,
	228, 3382, 2922, 1616, 2130, 1995, 3731, 183, 3727, 1997,
	984, 221, 3169, 3711, 2000, 1198, 3483, 1198, 3254, 2099,
	222, 2104, 4111, 3558, 2109, 3051, 4475, 2006, 2135, 2140,
	2647, 3124, 3125, 3126, 3127, 3129, 3130, 2015, 2443, 2440,
	1855, 1835, 183, 1808, 3389, 1282, 2178, 1282, 1180, 1282,
	1521, 2040, 2030, 1450, 1728, 2185, 1293, 1249, 4489, 4486,
	2790, 2446, 3433, 2787, 2651, 1282, 1282, 3683, 1936, 1312,
	4313, 4046, 4404, 4295, 3289, 3698, 1282, 839, 2078, 1546,
	2905, 2013, 2879, 3374, 4538, 4569, 1594, 4539, 1282, 3502,
	1282, 1282, 1282, 4476, 3258, 3744, 1021, 784, 4187, 3346,
	3968, 1497, 2132, 2318, 3124, 3125, 3126, 3127, 3129, 3130,
	1489, 981, 979, 778, 2681, 977, 4640, 975, 787, 972,
	4180, 2219, 2282, 3126, 3127, 3129, 3130, 2174, 2280, 3131,
	3132, 3124, 3125, 3126, 3127, 3129, 3130, 4172, 4132, 2179,
	1456, 1455, 2447, 1547, 2444, 2699, 2191, 4006, 1317, 3260,
	959, 4005, 2029, 2028, 3740, 964, 2037, 2039, 1451, 3739,
	2697, 3743, 2316, 3733, 2097, 2098, 1654, 2108, 3726, 2214,
	1653, 3725, 3723, 2024, 2488, 1016, 2699, 3722, 840, 1591,
	2141, 959, 3710, 1020, 2236, 1498, 1927, 3670, 3669, 2199,
	3378, 2697, 3377, 3224, 2224, 3056, 3055, 3054, 3053, 1080,
	1323, 1080, 3011, 3230, 2797, 1313, 1016, 1316, 1080, 2796,
	2188, 1939, 1939, 1340, 1314, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
	2220, 1080, 2201, 1080, 1080, 1080, 1080, 2161, 1322, 2160,
	2193, 2069, 2197, 1592, 960, 1544, 784, 2196, 1652, 2196,
	2792, 3952, 2032, 2783, 1323, 1080, 1637, 1299, 1080, 1080,
	2307, 2320, 2205, 4570, 2206, 2772, 1080, 787, 3286, 2449,
	1080, 1022, 1080, 1080, 2065, 960, 2771, 2768, 2344, 2345,
	1340, 2317, 3317, 2487, 3948, 2767, 1080, 1080, 1080, 1080,
	2223, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 2209,
	2766, 1312, 2070, 2071, 2240, 1730, 2745, 2744, 1023, 2707,
	1023, 2348, 1322, 2080, 2630, 2241, 2390, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 1080, 1080, 2421, 2422, 2258, 1695,
	1080, 2072, 2066, 2876, 1305, 2084, 3949, 1534, 2276, 1533,
	2421, 2437, 1202, 1532, 2716, 1531, 674, 2159, 4088, 1340,
	1869, 4573, 1493, 2315, 1636, 2688, 2641, 1546, 1202, 1315,
	2296, 3484, 2331, 2034, 969, 2231, 2483, 2301, 2545, 1933,
	1933, 1587, 2742, 669, 1080, 1340, 2242, 2228, 2293, 1899,
	1317, 2443, 1235, 1506, 2102, 2529, 2529, 2543, 3130, 2421,
	2081, 2306, 2563, 2565, 2304, 1031, 2312, 2319, 2569, 2305,
	1452, 2033, 3982, 1003, 2440, 1200, 1003, 1003, 2335, 3927,
	1608, 2336, 2337, 2622, 2405, 2436, 2302, 2762, 2755, 2756,
	3686, 1200, 2730, 1726, 1727, 1729, 1730, 1873, 2755, 2756,
	1669, 961, 2594, 2286, 1604, 1665, 2405, 1313, 1637, 2755,
	2756, 2984, 2619, 4574, 1019, 2413, 1314, 842, 841, 4306,
	3964, 4599, 2411, 2719, 2586, 2248, 2318, 4538, 1209, 2245,
	1316, 2239, 961, 2729, 1279, 1197, 2295, 2198, 2417, 3926,
	1888, 2966, 3492, 758, 1876, 1282, 1282, 1700, 1297, 3491,
	2485, 1197, 1168, 1688, 2960, 2486, 2434, 1588, 2489, 1871,
	2490, 2491, 2449, 2085, 1517, 2789, 1651, 1634, 1207, 4004,
	3694, 2999, 3724, 3721, 3376, 3257, 1616, 1874, 1616, 3952,
	2608, 2585, 878, 3343, 2791, 2316, 172, 1340, 2765, 2743,
	2593, 3547, 2598, 4550, 2635, 2604, 2605, 2788, 1648, 2670,
	2786, 2538, 2676, 3944, 2525, 2554, 1636, 4558, 3945, 2567,
	1023, 1515, 3948, 2575, 2576, 3707, 3941, 1936, 1936, 1023,
	1872, 1939, 4576, 1023, 2587, 2591, 2592, 2401, 1635, 2086,
	2087, 2249, 4557, 3939, 1886, 4308, 2147, 2146, 1841, 962,
	2628, 4602, 3943, 2643, 1312, 2633, 2698, 2969, 4527, 756,
	3184, 3931, 2669, 2082, 2991, 2992, 2399, 3848, 1340, 3947,
	1593, 973, 973, 2314, 3949, 973, 2115, 974, 2678, 973,
	962, 2281, 1282, 3847, 1210, 3950, 4087, 2279, 2387, 3431,
	3430, 1315, 2650, 3022, 1495, 1310, 2708, 2127, 1080, 1080,
	963, 1080, 2654, 2672, 2083, 2661, 1833, 1834, 2998, 2664,
	2741, 2665, 4472, 2684, 2653, 3942, 2292, 3680, 2748, 2655,
	3269, 1023, 3020, 2679, 1282, 3679, 2111, 3962, 837, 2718,
	836, 963, 2686, 1317, 2317, 2701, 1196, 2053, 2671, 2784,
	2673, 1875, 4314, 2054, 3272, 1927, 1927, 4582, 2449, 2110,
	1666, 2126, 1196, 4386, 4629, 1282, 2849, 1983, 4384, 1198,
	3544, 2747, 2763, 4129, 3932, 2687, 3430, 1282, 2775, 1282,
	2682, 2770, 2041, 2042, 2769, 1198, 2733, 4440, 4328, 4441,
	2814, 1517, 2106, 1282, 3259, 2685, 1663, 670, 2968, 2746,
	1313, 4374, 2662, 2115, 2863, 723, 2103, 1492, 2666, 1314,
	2721, 2724, 2764, 2711, 2294, 2395, 2315, 3227, 3946, 1933,
	2070, 2071, 2677, 2806, 2804, 2890, 4575, 2088, 2965, 2737,
	2808, 2810, 2800, 2396, 1080, 1219, 3301, 1234, 2397, 1828,
	2919, 791, 2402, 2115, 2757, 2759, 2760, 2761, 4502, 3751,
	2107, 3545, 2947, 3355, 2948, 3953, 784, 4503, 2859, 2063,
	3183, 2385, 2055, 2923, 2388, 3844, 2702, 2053, 4100, 2828,
	2780, 3017, 671, 2054, 2830, 4025, 757, 787, 2717, 2059,
	3305, 3944, 2944, 4549, 1080, 4424, 3945, 3963, 2904, 172,
	1080, 1080, 3300, 4473, 3018, 3695, 1667, 2894, 3023, 1456,
	2831, 2704, 2089, 3752, 871, 2699, 4415, 4526, 2834, 2247,
	4307, 2837, 2702, 2839, 2384, 2843, 2892, 4084, 2941, 672,
	2722, 673, 2853, 759, 2943, 2967, 2971, 755, 2973, 859,
	3307, 2951, 3270, 2953, 970, 2955, 2952, 3947, 2954, 3013,
	2956, 1589, 3750, 3990, 2874, 1080, 1080, 2704, 2885, 2056,
	2061, 1080, 1208, 3950, 2926, 2964, 2881, 2895, 2930, 2881,
	2931, 2404, 2906, 2924, 1080, 1080, 2412, 879, 1603, 1605,
	1080, 1080, 2974, 692, 1315, 2976, 1080, 1780, 2702, 3334,
	2893, 3061, 2055, 1668, 4372, 1080, 1080, 1080, 1664, 2703,
	4471, 1080, 2095, 3306, 2244, 3326, 2238, 1936, 2449, 2059,
	2590, 1080, 4580, 2824, 2949, 2802, 2950, 2092, 3014, 1873,
	4603, 1699, 1296, 2704, 2706, 2603, 2816, 1022, 1080, 2398,
	3560, 2431, 4373, 3708, 4590, 2979, 1869, 4035, 3838, 2400,
	3044, 3651, 2057, 3335, 2957, 2703, 1224, 2815, 2807, 2805,
	2809, 2811, 2801, 2803, 2817, 3849, 2990, 2118, 4083, 3327,
	2981, 2813, 2980, 2125, 3039, 3040, 1876, 2825, 2072, 3043,
	2706, 2093, 2075, 3035, 3000, 2331, 2985, 2100, 3759, 2056,
	2061, 2588, 3333, 3504, 2705, 3019, 3946, 3757, 2063, 2928,
	2929, 2982, 792, 793, 2820, 3021, 1621, 4026, 3325, 1874,
	2935, 2936, 2937, 4335, 4501, 4470, 2823, 1014, 2386, 959,
	2091, 2703, 4525, 1873, 4581, 4537, 4535, 2096, 1080, 1080,
	1080, 4630, 4351, 3953, 1984, 1927, 2076, 1080, 1080, 1080,
	2705, 4222, 1080, 3793, 1016, 3418, 2706, 3012, 3263, 2167,
	1866, 1222, 1080, 1202, 1340, 2700, 1215, 4583, 1080, 661,
	1080, 3176, 3177, 3772, 1710, 872, 873, 3845, 3893, 1202,
	1876, 2334, 2057, 2073, 3218, 2074, 1709, 3759, 2025, 4163,
	4162, 4141, 2124, 1039, 4231, 1871, 3757, 1340, 4294, 1015,
	860, 861, 3794, 3737, 3050, 3682, 3280, 4608, 3419, 1202,
	3410, 3276, 1340, 1874, 4085, 3598, 2705, 3760, 2864, 2858,
	3159, 2847, 2192, 3967, 3311, 1709, 1200, 2186, 2063, 1939,
	3966, 2180, 3477, 1340, 2723, 2172, 3178, 2153, 1704, 3543,
	2022, 3470, 1200, 960, 2324, 1486, 1226, 1282, 1282, 4336,
	732, 3666, 795, 794, 3613, 3198, 1872, 4391, 3505, 3223,
	4354, 4130, 3933, 4051, 2749, 3274, 3273, 2287, 1709, 2018,
	1080, 2844, 1200, 1875, 3796, 1237, 3211, 4203, 3309, 4201,
	4143, 3237, 2058, 1023, 1080, 2821, 1197, 1708, 2581, 3188,
	3212, 3186, 3292, 3626, 2812, 2062, 3288, 3287, 1282, 3005,
	3850, 2983, 1197, 1939, 2229, 3207, 3760, 3181, 3192, 3180,
	796, 797, 1638, 2627, 2626, 2020, 3228, 3310, 3154, 3155,
	3156, 1080, 2584, 1540, 2625, 2624, 1708, 1526, 3255, 1538,
	3248, 877, 1197, 2062, 3187, 1282, 3472, 3204, 3170, 3196,
	3216, 1527, 3261, 3764, 2851, 3199, 3200, 3197, 3185, 2094,
	1020, 3471, 1710, 3264, 3265, 2021, 3477, 1282, 2053, 1282,
	1780, 874, 875, 2583, 2054, 3470, 4151, 1875, 2582, 1708,
	3202, 4301, 3203, 3894, 1340, 2103, 2114, 4198, 3290, 2325,
	3758, 3294, 3851, 1282, 2114, 4017, 862, 863, 1282, 3291,
	3281, 1710, 3296, 3277, 3755, 3298, 3220, 3221, 3222, 3193,
	1310, 3599, 2058, 2101, 2121, 3320, 1911, 1933, 3347, 4607,
	3600, 1282, 2727, 3689, 3460, 3322, 3234, 3235, 1282, 3236,
	1282, 2190, 3385, 3245, 1340, 4546, 3249, 3965, 4332, 4068,
	961, 778, 1551, 2750, 2751, 4127, 3342, 3336, 3256, 3468,
	2927, 4337, 1282, 3667, 3358, 2829, 2827, 3361, 3191, 2218,
	1622, 3366, 3368, 1282, 3262, 3324, 1597, 3353, 2119, 4394,
	3472, 4401, 4388, 3362, 3356, 4302, 3900, 4152, 3369, 3758,
	1202, 3615, 2102, 2055, 3426, 3471, 2456, 1196, 3344, 3338,
	3195, 1933, 1684, 4419, 4139, 4548, 2290, 4491, 3308, 2291,
	2059, 1686, 4321, 1196, 3316, 1282, 1282, 2120, 4067, 4106,
	1198, 3152, 3394, 2278, 3380, 3219, 3383, 3244, 3329, 3424,
	3246, 3247, 3409, 3332, 1683, 3250, 1198, 3251, 1282, 3252,
	3417, 1681, 3892, 1196, 3763, 1660, 3312, 3313, 4140, 3348,
	3314, 731, 3354, 1200, 3151, 3520, 3481, 3238, 3364, 2919,
	3435, 3116, 3024, 3375, 4395, 2848, 1198, 3330, 2919, 3371,
	4303, 3331, 3473, 3474, 3475, 3476, 1340, 1539, 2782, 1340,
	2056, 2061, 2739, 1537, 2652, 876, 1013, 2297, 962, 3349,
	3350, 1658, 1632, 3351, 1906, 1630, 1902, 1628, 3379, 3420,
	2747, 1687, 1626, 3425, 784, 1936, 3194, 3387, 1624, 1575,
	1618, 3500, 1080, 1197, 1613, 3499, 3406, 3407, 1080, 1080,
	1611, 3427, 1080, 1080, 1080, 787, 1080, 1536, 1704, 2962,
	2961, 2933, 172, 172, 2313, 1080, 1939, 3479, 3458, 963,
	3444, 3445, 3432, 1647, 1080, 2253, 2152, 1080, 1966, 3462,
	3434, 3441, 3498, 1340, 1812, 1586, 1510, 2455, 4465, 3729,
	3728, 3991, 1080, 2057, 3977, 4387, 971, 4049, 3996, 3456,
	1340, 4523, 3937, 3497, 3488, 3792, 3489, 3783, 3490, 1936,
	1939, 1939, 1080, 1080, 3742, 1080, 1080, 1080, 3357, 3540,
	3701, 1685, 3495, 4044, 3699, 3681, 3473, 3474, 3475, 3476,
	2277, 3501, 3413, 3506, 3408, 2051, 3523, 3399, 3478, 2063,
	2877, 2869, 2862, 2854, 1682, 2841, 2826, 2668, 2663, 2151,
	2149, 1680, 3480, 1927, 3494, 1659, 2131, 1080, 2116, 3532,
	3533, 1080, 3572, 1939, 1939, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1080, 1080, 3503, 1080, 3423, 3403, 3573, 2049,
	2090, 2077, 1080, 1080, 1939, 255, 2064, 2344, 3563, 1080,
	2005, 1657, 1631, 2002, 2855, 1629, 1023, 1627, 1999, 1996,
	1080, 4248, 1625, 1991, 1989, 1985, 1976, 3365, 1623, 3528,
	1617, 1202, 1202, 2125, 1612, 1080, 4515, 1927, 2050, 1177,
	1610, 3539, 1713, 1913, 1196, 3446, 3648, 1535, 3003, 4539,
	3555, 3546, 3548, 3549, 1933, 2026, 2597, 976, 978, 980,
	2344, 3578, 3562, 2977, 1340, 2975, 1178, 1198, 4429, 4073,
	1973, 3644, 4066, 4240, 2300, 4065, 3570, 3610, 4003, 3923,
	3571, 3485, 2920, 2045, 1491, 3550, 4241, 2699, 2699, 4233,
	2728, 3606, 4226, 3804, 1200, 1200, 2072, 2250, 1933, 1933,
	1678, 1679, 2697, 2725, 2243, 2189, 1257, 1258, 3569, 3575,
	3631, 1080, 2273, 3649, 3650, 3577, 3602, 4242, 2272, 2298,
	719, 4428, 3969, 2058, 3998, 3647, 1609, 3661, 3662, 3663,
	2731, 4268, 3901, 1720, 1721, 1080, 1973, 3879, 172, 3004,
	3603, 3671, 2124, 3622, 3623, 3303, 3611, 1973, 1714, 1720,
	1721, 1933, 1933, 2732, 1197, 1197, 2752, 1717, 1291, 1225,
	4542, 2732, 4533, 2299, 1723, 675, 1080, 1080, 3619, 3620,
	4496, 3736, 1179, 2840, 252, 2275, 3780, 4244, 2173, 1302,
	2787, 2779, 1933, 2795, 2794, 2777, 2736, 2734, 4379, 3633,
	1258, 1258, 3735, 771, 2778, 3617, 1088, 3675, 1722, 2735,
	4243, 4345, 4342, 1080, 3634, 827, 4300, 4287, 4217, 4196,
	4133, 4131, 4128, 3790, 1722, 3782, 3771, 4245, 3641, 3412,
	686, 658, 2884, 2568, 2011, 1282, 1920, 4577, 1282, 4149,
	4421, 3935, 1936, 3934, 3712, 4422, 3678, 3271, 3226, 4606,
	3122, 3123, 259, 259, 259, 1939, 664, 665, 4344, 680,
	664, 680, 690, 1720, 1721, 730, 4552, 4421, 3716, 748,
	4592, 3657, 4422, 1458, 754, 3717, 3719, 3871, 3685, 3738,
	259, 3732, 2451, 3730, 1596, 1282, 1936, 1936, 2691, 2692,
	1595, 1080, 2689, 2690, 3653, 2691, 2689, 2484, 856, 1202,
	1080, 3704, 3806, 1662, 259, 3709, 1661, 3789, 4218, 4181,
	1282, 1282, 1282, 3999, 3995, 3813, 3994, 3867, 3747, 3652,
	3551, 3359, 1806, 1805, 4559, 2747, 3797, 1282, 4383, 4382,
	4381, 4283, 4199, 4176, 4126, 4123, 4028, 3798, 3919, 1936,
	1936, 3828, 3281, 3810, 3762, 3766, 3697, 1340, 3692, 3416,
	3415, 3297, 3243, 3112, 3801, 1196, 1196, 3111, 3749, 3110,
	1927, 3664, 1200, 3109, 2890, 3665, 3779, 3800, 3108, 3765,
	1936, 1340, 3107, 3106, 1080, 1080, 3105, 3104, 1198, 1198,
	1080, 1080, 1939, 3829, 3103, 1080, 1080, 3102, 1080, 3778,
	3781, 2919, 1080, 3786, 3101, 3100, 3099, 3098, 3097, 3096,
	3095, 3094, 3784, 1080, 1927, 1927, 3093, 3092, 3091, 1551,
	3700, 1551, 3702, 3799, 3753, 3090, 3089, 3761, 3807, 1080,
	3802, 2959, 1197, 2940, 2939, 2938, 3812, 3852, 664, 664,
	3808, 3818, 3819, 1933, 3823, 2868, 259, 2842, 3827, 3835,
	3820, 3826, 2726, 3824, 2659, 2645, 2644, 2416, 2274, 2271,
	2270, 2269, 3861, 2268, 3853, 2267, 3865, 1927, 1927, 2187,
	2162, 2158, 2157, 2156, 2155, 3841, 4246, 2154, 1979, 3846,
	1978, 4247, 1977, 1975, 3785, 1677, 1676, 1619, 1505, 1202,
	1504, 1503, 3741, 1502, 1501, 1500, 1499, 1202, 1927, 1494,
	1490, 1340, 1488, 1340, 1487, 1331, 2328, 1330, 1329, 1328,
	1202, 1327, 1295, 1294, 1244, 1243, 1242, 3241, 3242, 1241,
	1240, 1239, 1238, 1236, 3836, 1231, 1230, 1340, 1229, 1228,
	1227, 1160, 2016, 3906, 982, 968, 4305, 1792, 3951, 2289,
	1671, 1797, 89, 1496, 814, 83, 2122, 3696, 939, 4418,
	1480, 4327, 1200, 3837, 822, 4403, 3299, 2798, 2252, 1202,
	1200, 1202, 3891, 1620, 2254, 3206, 2610, 4371, 3275, 3875,
	1933, 3060, 4275, 1200, 4099, 2454, 1810, 3211, 3163, 85,
	1064, 1282, 3960, 1110, 3909, 4024, 4023, 3938, 3684, 2909,
	4021, 1340, 4020, 1282, 1924, 1926, 1282, 1030, 1343, 4439,
	3961, 3902, 3905, 3908, 1340, 3323, 3924, 3925, 172, 3907,
	2027, 3912, 1197, 1070, 3972, 3973, 3898, 3913, 3929, 3817,
	1197, 1936, 1200, 1196, 1200, 3916, 3957, 3337, 3957, 3339,
	3903, 3904, 2043, 1197, 1282, 1282, 3970, 2036, 2646, 2528,
	1087, 1084, 1928, 1930, 3936, 2546, 1198, 1086, 3971, 1085,
	1929, 1282, 1829, 3363, 1083, 1923, 3788, 2850, 3370, 2888,
	3975, 3442, 1545, 1340, 1543, 941, 2031, 2410, 1282, 2438,
	3049, 1803, 1045, 3984, 4002, 1066, 3987, 4000, 261, 4001,
	2435, 1220, 1197, 1055, 1197, 1044, 3189, 3993, 3168, 3429,
	4013, 3640, 2323, 1202, 831, 3119, 2441, 1211, 4015, 2551,
	2544, 2540, 3253, 1282, 1282, 1282, 4018, 2878, 1690, 4052,
	4113, 1782, 2889, 3986, 4069, 1340, 1325, 1048, 3989, 4041,
	4053, 4014, 2408, 4007, 1794, 3029, 2333, 1080, 1080, 1080,
	3436, 4012, 3209, 2639, 4072, 4425, 3559, 2166, 1176, 1927,
	1175, 1218, 4019, 1267, 1174, 1340, 4047, 4409, 1936, 4406,
	1080, 4034, 2113, 1080, 1080, 4056, 1200, 4061, 4038, 3821,
	3957, 3392, 2019, 1080, 2683, 1772, 1939, 4054, 3400, 1060,
	1441, 1080, 1080, 4040, 3174, 3461, 1507, 2139, 753, 4156,
	1072, 4091, 1771, 2819, 2818, 4297, 1340, 1311, 1282, 1309,
	4078, 1431, 1308, 1307, 1442, 1267, 4566, 4628, 4076, 3693,
	226, 2997, 4075, 1196, 1711, 1703, 223, 4080, 225, 4086,
	224, 1196, 1340, 4029, 3645, 3215, 1197, 4494, 3714, 4096,
	1080, 3384, 23, 22, 1196, 21, 1198, 109, 42, 1080,
	20, 125, 144, 143, 1198, 117, 4108, 1080, 142, 1939,
	1338, 4102, 141, 4027, 1436, 140, 139, 1198, 1080, 146,
	138, 1080, 137, 132, 4039, 1267, 1267, 136, 135, 134,
	133, 131, 1080, 1043, 129, 130, 1927, 4119, 4120, 1340,
	124, 128, 127, 1196, 126, 1196, 1282, 4060, 4159, 123,
	122, 1282, 1282, 1213, 4122, 121, 4135, 120, 119, 118,
	116, 115, 114, 113, 112, 111, 1198, 110, 1198, 744,
	4134, 4136, 741, 61, 60, 4142, 108, 107, 19, 4175,
	40, 14, 65, 66, 18, 13, 1233, 35, 88, 4186,
	1340, 99, 98, 1282, 4211, 4202, 4165, 36, 259, 96,
	259, 259, 95, 1262, 259, 1272, 34, 17, 16, 15,
	4173, 1202, 1202, 93, 1933, 92, 1292, 33, 31, 4177,
	11, 9, 8, 4192, 37, 748, 4188, 4191, 4183, 1890,
	1080, 1080, 4251, 4252, 4227, 12, 5, 4232, 4194, 177,
	3394, 4200, 176, 4216, 179, 4228, 4178, 1080, 1939, 259,
	175, 259, 259, 1262, 4195, 259, 259, 1272, 178, 4210,
	4230, 87, 4235, 174, 173, 86, 4190, 29, 259, 10,
	1460, 169, 4229, 4224, 1200, 1200, 4212, 1196, 3957, 3957,
	4249, 4234, 3776, 80, 171, 1080, 4056, 1933, 1080, 170,
	168, 1484, 167, 166, 81, 1202, 78, 165, 4264, 4265,
	1198, 4263, 82, 164, 4215, 79, 163, 1202, 1973, 4293,
	1509, 27, 1272, 6, 64, 7, 259, 259, 4273, 1262,
	4267, 4081, 3482, 102, 103, 38, 76, 75, 4316, 74,
	26, 63, 25, 210, 1197, 1197, 209, 208, 748, 1551,
	259, 259, 207, 4284, 206, 4292, 205, 2062, 4289, 1080,
	1080, 204, 4315, 203, 4310, 198, 4309, 197, 1200, 202,
	4331, 1202, 3957, 856, 1202, 200, 4167, 4168, 1282, 199,
	1200, 201, 196, 213, 3957, 212, 218, 4323, 1282, 1282,
	217, 216, 4348, 215, 214, 4350, 211, 220, 4325, 2987,
	195, 194, 1936, 4182, 193, 1282, 4184, 4185, 191, 187,
	186, 190, 192, 4343, 189, 4362, 188, 4339, 4340, 1080,
	1080, 185, 219, 4338, 4347, 161, 162, 71, 1197, 1080,
	4355, 160, 159, 4356, 1200, 158, 1933, 1200, 3957, 157,
	1197, 3957, 156, 155, 4360, 4361, 259, 154, 4367, 4359,
	4368, 70, 3026, 3027, 24, 2, 1, 0, 4396, 4366,
	4358, 4365, 0, 0, 0, 259, 4400, 0, 0, 4376,
	1080, 1080, 0, 1080, 0, 1936, 4380, 0, 0, 2546,
	2546, 0, 0, 0, 0, 0, 0, 4375, 0, 0,
	0, 4215, 0, 0, 1197, 0, 0, 1197, 4408, 4411,
	4423, 0, 0, 0, 4420, 0, 4398, 0, 0, 0,
	4399, 4236, 0, 4444, 0, 0, 1442, 4449, 3748, 0,
	1927, 4255, 4417, 1080, 1080, 1080, 4447, 0, 4448, 4413,
	0, 0, 0, 4430, 2414, 1196, 1196, 0, 4412, 0,
	0, 4416, 0, 4435, 0, 0, 0, 4442, 4329, 1792,
	4427, 4443, 0, 0, 0, 1080, 0, 0, 1198, 1198,
	0, 1905, 1442, 0, 4461, 4462, 0, 4464, 4463, 4346,
	4483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4504, 4497, 4479, 0, 0, 0,
	0, 0, 4324, 1927, 0, 0, 3145, 3146, 3147, 4506,
	4508, 4518, 0, 2550, 0, 4520, 0, 0, 1080, 0,
	0, 0, 4519, 0, 1936, 4481, 4524, 0, 4505, 1196,
	0, 0, 0, 2546, 2546, 2546, 4513, 0, 0, 4514,
	0, 1196, 4512, 0, 0, 0, 0, 4544, 0, 0,
	4540, 0, 1198, 0, 0, 4532, 4530, 4531, 4536, 0,
	4534, 0, 0, 0, 1198, 0, 0, 0, 1202, 4543,
	1202, 0, 4564, 664, 2062, 4547, 4408, 4561, 4545, 4411,
	4562, 0, 4551, 4572, 0, 4556, 0, 4331, 4560, 4563,
	0, 4565, 4568, 2047, 259, 1196, 259, 4571, 1196, 0,
	259, 0, 0, 0, 4431, 0, 4585, 4432, 0, 0,
	0, 4567, 1043, 1460, 1262, 259, 1043, 259, 1198, 4587,
	4584, 1198, 259, 1460, 680, 0, 4594, 4427, 0, 259,
	1460, 1200, 1423, 1200, 4600, 3957, 1423, 3957, 1080, 1080,
	4593, 0, 1927, 4596, 1980, 4598, 4604, 1080, 0, 1080,
	1080, 4601, 0, 0, 4591, 0, 259, 4613, 0, 4619,
	4610, 0, 0, 259, 4624, 4616, 4623, 4622, 0, 4621,
	4618, 4620, 0, 4617, 0, 0, 0, 0, 4631, 0,
	4632, 4627, 0, 0, 4635, 4634, 0, 1276, 4636, 0,
	4637, 1197, 4633, 1197, 0, 4639, 0, 4643, 4642, 0,
	0, 0, 0, 748, 0, 0, 1080, 4647, 0, 4649,
	0, 1973, 1973, 4650, 4644, 4652, 4653, 4611, 4612, 0,
	0, 4639, 4646, 0, 0, 0, 2890, 0, 2144, 0,
	0, 2177, 0, 4493, 0, 0, 0, 0, 0, 1447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3976, 1973, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 3985, 4648, 0, 3988, 0, 0, 0,
	0, 0, 0, 3122, 3123, 0, 3140, 3141, 3142, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 1973,
	0, 0, 4516, 4517, 1720, 1721, 3858, 0, 4521, 0,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	1559, 1973, 0, 1973, 0, 0, 0, 0, 1751, 0,
	0, 4037, 0, 0, 1572, 1723, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 1973, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 259, 3137, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1196, 0, 1196, 0, 0, 1598, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1198, 0, 1198, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 259, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 259, 0, 0, 3128,
	664, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 748, 0, 0, 0, 856, 0,
	1728, 3516, 3517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2550, 0, 2347,
	0, 0, 0, 259, 0, 1262, 259, 0, 2546, 2546,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 1770,
	748, 3143, 0, 0, 0, 1750, 1752, 259, 0, 0,
	0, 0, 0, 0, 2251, 0, 0, 0, 0, 259,
	259, 0, 259, 0, 259, 0, 259, 0, 259, 0,
	0, 1737, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3138, 0, 0, 4189, 0, 0, 1758,
	0, 2283, 0, 0, 2284, 0, 2285, 2550, 2550, 0,
	0, 0, 0, 1423, 1743, 0, 2452, 0, 259, 0,
	0, 0, 0, 3579, 3580, 3581, 3582, 3583, 3584, 3585,
	3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595,
	3596, 3597, 730, 3601, 0, 0, 748, 0, 0, 0,
	2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546,
	2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 2546, 0,
	2546, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 1721, 761, 0, 0, 0, 0,
	0, 2620, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 1043,
	0, 0, 0, 0, 1723, 1423, 3139, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2550, 2550, 2550, 1267, 1267, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 766, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 259, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 259, 0,
	0, 0, 0, 2694, 0, 0, 0, 0, 0, 1745,
	1746, 1747, 1748, 259, 1272, 0, 3134, 3135, 3136, 1728,
	1423, 0, 1442, 3133, 3131, 3132, 3124, 3125, 3126, 3127,
	3129, 3130, 1759, 0, 0, 0, 0, 0, 0, 0,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 725, 0, 0, 0, 0, 0, 0,
	259, 1272, 0, 680, 1750, 1752, 0, 0, 0, 0,
	0, 0, 0, 2658, 0, 0, 0, 768, 0, 259,
	0, 0, 259, 0, 0, 0, 259, 0, 259, 0,
	0, 0, 0, 1262, 72, 259, 259, 0, 1272, 1272,
	2674, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 1743, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2715, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	0, 259, 0, 1267, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 1442, 0, 850, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 259, 0, 0, 2207, 104, 0, 0,
	0, 0, 90, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 2221, 0, 0, 0, 0, 767, 259,
	2832, 0, 0, 2222, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 2230, 0, 2233, 2234, 2235,
	0, 0, 0, 0, 1460, 0, 1744, 259, 0, 0,
	0, 724, 0, 0, 0, 259, 0, 0, 0, 91,
	0, 1423, 0, 0, 770, 2873, 0, 0, 0, 0,
	765, 0, 0, 0, 0, 2715, 0, 664, 0, 0,
	1720, 1721, 0, 0, 0, 0, 2902, 856, 0, 2715,
	2715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 259, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 762, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1262, 259, 0, 1720, 1721,
	1460, 0, 1460, 1272, 259, 0, 0, 1262, 0, 1262,
	0, 1262, 0, 769, 0, 1722, 2550, 2550, 1423, 0,
	0, 0, 1751, 0, 0, 1742, 0, 726, 0, 1723,
	0, 0, 0, 0, 1739, 0, 0, 0, 764, 259,
	259, 259, 259, 1262, 0, 0, 1262, 0, 259, 0,
	259, 0, 2636, 1733, 1731, 1732, 1724, 1725, 1726, 1727,
	1729, 1730, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 1742, 0, 0, 0, 0, 0, 0,
	0, 259, 1739, 0, 0, 3514, 0, 1423, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 1745, 1746, 1747, 1748,
	0, 0, 0, 1423, 0, 0, 1728, 1973, 0, 0,
	1973, 0, 0, 180, 97, 0, 100, 0, 2550, 2550,
	2550, 2550, 2550, 2550, 2550, 2550, 2550, 2550, 2550, 2550,
	2550, 2550, 2550, 2550, 2550, 2550, 2550, 0, 2550, 0,
	227, 0, 0, 0, 1745, 1746, 1747, 1748, 851, 0,
	0, 1750, 1752, 145, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 1460, 0,
	3175, 0, 0, 0, 0, 0, 0, 1737, 1738, 0,
	0, 4105, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	1752, 0, 0, 3201, 0, 1720, 1721, 0, 2546, 0,
	1743, 0, 147, 1442, 1442, 0, 0, 0, 3214, 0,
	0, 0, 0, 0, 0, 1737, 1738, 184, 0, 1751,
	0, 0, 0, 0, 0, 228, 1723, 0, 4145, 3232,
	0, 0, 0, 0, 0, 1423, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 2546, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 1442, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2675, 1276, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 2177, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	664, 0, 0, 1749, 0, 664, 0, 0, 664, 0,
	3513, 664, 664, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 1744, 0, 259, 0, 0, 0, 0,
	0, 1745, 1746, 1747, 1748, 0, 0, 1460, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 1460,
	1973, 0, 0, 0, 0, 4272, 0, 0, 0, 0,
	259, 1744, 0, 0, 259, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 1750, 1752, 0, 0,
	0, 0, 2546, 846, 0, 0, 0, 0, 0, 2822,
	3214, 0, 0, 2715, 2715, 259, 0, 3268, 0, 0,
	0, 0, 1737, 1738, 0, 0, 0, 2715, 0, 0,
	3283, 72, 0, 849, 848, 0, 0, 0, 2715, 3283,
	0, 2715, 3283, 0, 0, 3283, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 259, 259,
	3268, 0, 259, 77, 0, 0, 0, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 3268, 0, 259, 0, 3341, 3341, 0, 1262,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	0, 0, 0, 84, 2715, 0, 3360, 2715, 3268, 0,
	2934, 2715, 2715, 3268, 0, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	850, 0, 1436, 259, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 259, 3388, 90,
	101, 3390, 2715, 0, 0, 259, 0, 0, 0, 259,
	0, 1272, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 72, 0,
	0, 2873, 0, 0, 1262, 0, 259, 0, 1744, 2715,
	0, 664, 0, 0, 73, 0, 0, 0, 2715, 1868,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 3536,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	2873, 0, 0, 2873, 0, 0, 3552, 0, 0, 0,
	1720, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 3487, 1751, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	3493, 0, 0, 1262, 259, 0, 259, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 850, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 1742, 90, 101, 0, 0,
	0, 0, 259, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725,
	1726, 1727, 1729, 1730, 0, 3122, 3123, 0, 3140, 3141,
	3142, 0, 1423, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 3857, 0,
	0, 0, 0, 91, 0, 3015, 0, 0, 3557, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	3643, 0, 0, 0, 1029, 0, 1745, 1746, 1747, 1748,
	1423, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	180, 97, 0, 100, 0, 0, 0, 0, 0, 0,
	3137, 1423, 0, 0, 1720, 1721, 0, 1753, 1754, 1755,
	1763, 1764, 1765, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 1756, 1751, 0,
	145, 1750, 1752, 0, 0, 1723, 0, 0, 1043, 0,
	0, 0, 0, 1769, 0, 0, 2550, 0, 0, 0,
	0, 0, 1043, 0, 0, 0, 0, 1737, 1738, 0,
	0, 0, 0, 229, 1267, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 259, 259, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 147,
	1743, 3128, 0, 0, 0, 0, 94, 0, 0, 664,
	664, 0, 0, 2550, 184, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 2177, 0, 0, 0, 0, 0,
	0, 1460, 1460, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 1460, 1460, 1460, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 180, 97, 0,
	100, 0, 0, 3143, 847, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 0, 0, 0, 0, 3341, 0,
	1728, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 1423, 0, 0, 3138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 1770,
	0, 0, 0, 1749, 748, 1750, 1752, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1744, 1767, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 3341, 0, 147, 0, 1720, 1721,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 1758,
	2550, 184, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 1751, 3268, 1743, 259, 0, 0, 3372, 1723,
	221, 0, 0, 0, 0, 0, 259, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 3404,
	259, 183, 0, 1722, 0, 259, 1768, 0, 0, 0,
	3411, 0, 0, 1742, 1423, 0, 0, 1423, 0, 0,
	0, 0, 1739, 0, 2715, 259, 0, 0, 3139, 0,
	0, 0, 0, 0, 2902, 2902, 0, 0, 0, 0,
	856, 856, 2715, 0, 0, 0, 2873, 2873, 0, 0,
	856, 2715, 3452, 3453, 0, 0, 0, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 259, 0, 3008, 0, 0, 0, 0, 0, 3911,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 1423, 0, 0, 1745, 1746, 1747, 1748, 0, 0,
	0, 0, 0, 3921, 1728, 0, 0, 1744, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 3876, 0, 0, 0, 0, 0, 1750,
	1752, 0, 0, 0, 0, 0, 0, 0, 3134, 3135,
	3136, 0, 0, 0, 0, 3133, 3131, 3132, 3124, 3125,
	3126, 3127, 3129, 3130, 0, 1737, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1287, 0, 0, 0, 0, 259, 0, 0, 1743, 0,
	0, 1460, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 259, 1029, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 0, 0, 0, 2715, 2715, 0, 3341,
	0, 0, 1423, 0, 0, 0, 0, 0, 2715, 0,
	0, 0, 1462, 0, 1468, 3959, 1474, 3959, 1460, 0,
	0, 0, 0, 0, 0, 72, 2715, 0, 3283, 0,
	0, 1338, 1460, 1460, 259, 3268, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 3268, 0,
	259, 3268, 0, 259, 0, 0, 0, 77, 0, 0,
	0, 4097, 0, 0, 0, 0, 0, 2715, 0, 2715,
	259, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1562, 0, 1567, 72, 0, 0, 0, 0, 0, 0,
	0, 1744, 1576, 0, 1581, 0, 2715, 84, 0, 73,
	0, 4031, 4097, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 2347, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 1720, 1721,
	0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 104, 3959,
	0, 0, 1460, 90, 101, 84, 0, 1643, 0, 0,
	1649, 1756, 1751, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 2347, 0, 0, 0, 0,
	0, 0, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 3122, 3123, 104, 3140, 3141, 3142,
	91, 90, 101, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 1442, 1740, 1736, 3525, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 0,
	0, 0, 3745, 0, 2715, 0, 3283, 0, 91, 4138,
	0, 0, 0, 0, 0, 1423, 0, 259, 0, 3137,
	0, 0, 0, 1791, 4157, 0, 4157, 0, 0, 1804,
	0, 0, 0, 0, 1745, 1746, 1747, 1748, 0, 1423,
	0, 0, 0, 0, 1728, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 3268, 0, 259, 0, 0, 0, 3814, 3815, 3816,
	1760, 0, 0, 1770, 0, 0, 0, 0, 0, 1750,
	1752, 0, 4138, 94, 1276, 0, 0, 0, 0, 0,
	2715, 0, 0, 0, 0, 0, 1766, 0, 1767, 0,
	3128, 1112, 0, 4221, 0, 1737, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 1758, 1862, 1862, 1862, 3959, 3959, 0,
	0, 0, 0, 0, 180, 97, 0, 100, 1743, 0,
	0, 94, 0, 0, 259, 259, 0, 0, 0, 1423,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 3143, 0, 0, 0, 0, 0, 3557, 851,
	0, 0, 0, 0, 145, 1423, 0, 0, 0, 0,
	1768, 0, 0, 0, 3341, 4286, 0, 0, 4288, 3341,
	4291, 0, 180, 97, 0, 100, 4138, 0, 1757, 0,
	0, 0, 0, 0, 3138, 0, 0, 229, 0, 0,
	0, 3959, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 3959, 0, 0, 0, 851, 0, 0,
	0, 0, 145, 147, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 259, 0, 0, 0, 184, 0,
	0, 0, 1423, 0, 0, 0, 228, 0, 0, 0,
	0, 1749, 0, 0, 4031, 229, 0, 221, 0, 0,
	1029, 0, 0, 0, 0, 0, 222, 3959, 0, 259,
	3959, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	3283, 147, 0, 0, 0, 0, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 184, 1761, 0, 0,
	0, 1423, 0, 0, 228, 0, 1460, 0, 1460, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 1203, 0, 0, 222, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 4385, 0, 0, 3139, 0, 0,
	0, 0, 0, 0, 0, 4392, 1554, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 4157, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 254, 254, 660, 0, 0, 0, 0, 0,
	2715, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 259, 0,
	0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 4393, 0, 0, 1423, 3557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4077, 0, 4079, 0, 1460, 0, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3134, 3135, 3136,
	0, 259, 0, 0, 3133, 3131, 3132, 3124, 3125, 3126,
	3127, 3129, 3130, 0, 0, 0, 0, 0, 0, 1043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 0, 4138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2715, 3122, 3123,
	0, 3140, 3141, 3142, 3959, 0, 3959, 0, 1423, 1460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 1721, 0, 1753, 1754, 1755, 1763, 1764, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 1751, 0, 0, 0, 0, 0,
	0, 1723, 1460, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 4193, 0,
	0, 0, 0, 3137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 2902, 0, 0,
	0, 0, 0, 0, 0, 1742, 2715, 0, 2322, 0,
	2326, 0, 0, 0, 1739, 0, 0, 2340, 0, 0,
	0, 2902, 0, 0, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 0,
	2389, 0, 2391, 2392, 2393, 2394, 0, 0, 0, 0,
	0, 0, 0, 0, 3128, 0, 0, 1043, 1043, 0,
	0, 0, 0, 0, 2418, 0, 1745, 1746, 1747, 1748,
	0, 0, 0, 0, 0, 1791, 1728, 0, 0, 2433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3144, 0, 2463, 2466, 2469, 2472, 0,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 0, 0, 0,
	0, 0, 1760, 0, 0, 1770, 3143, 0, 0, 0,
	0, 1750, 1752, 0, 0, 0, 0, 0, 2542, 0,
	2553, 2555, 2560, 0, 0, 0, 0, 0, 1766, 0,
	1767, 0, 0, 0, 0, 0, 0, 1737, 1738, 0,
	0, 1203, 0, 0, 0, 0, 0, 0, 3138, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 1043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 1276, 1276, 0, 0, 153,
	0, 0, 0, 0, 0, 1203, 0, 0, 72, 1203,
	46, 45, 1276, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 148, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	1757, 67, 0, 0, 0, 0, 0, 0, 48, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 68, 0, 0, 1203, 0,
	0, 3139, 51, 1749, 0, 0, 0, 57, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 104, 0, 1744, 0, 0, 90, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	1248, 1248, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3122,
	3123, 0, 3140, 3141, 3142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3524, 0, 0, 0, 0, 2835, 2836, 1335,
	2838, 3134, 3135, 3136, 0, 1440, 0, 0, 3133, 3131,
	3132, 3124, 3125, 3126, 3127, 3129, 3130, 0, 1759, 0,
	0, 0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 0, 3073, 3137, 0, 0, 3074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3122, 3123, 0, 3140, 3141, 3142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1560, 1561, 0, 0, 0, 0, 94, 1720, 1721, 0,
	1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	1756, 1751, 0, 2958, 0, 0, 0, 56, 1723, 0,
	0, 0, 59, 0, 0, 3128, 1769, 0, 3137, 0,
	0, 69, 0, 0, 0, 0, 58, 180, 97, 0,
	100, 0, 0, 0, 54, 0, 0, 0, 152, 0,
	0, 0, 1722, 0, 0, 55, 0, 0, 0, 0,
	0, 0, 1742, 0, 227, 0, 0, 0, 0, 1773,
	1774, 1739, 62, 0, 0, 0, 1670, 145, 0, 1203,
	0, 1203, 0, 0, 0, 0, 0, 3143, 0, 0,
	0, 149, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 1940, 0, 0, 0, 1203, 0, 3128,
	0, 0, 0, 0, 3009, 3010, 0, 0, 0, 3138,
	3016, 0, 0, 0, 0, 0, 147, 0, 0, 0,
	0, 0, 0, 1745, 1746, 1747, 1748, 0, 0, 3030,
	3031, 184, 0, 1728, 0, 2433, 0, 0, 0, 228,
	0, 0, 0, 0, 3038, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	3052, 3143, 0, 1203, 0, 0, 0, 0, 0, 1760,
	0, 0, 1770, 0, 1203, 0, 0, 3064, 1750, 1752,
	0, 183, 0, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 1767, 1203, 0,
	0, 0, 0, 3138, 1737, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3139, 0, 0, 0, 0, 0, 0, 0,
	2521, 2522, 2523, 2524, 2517, 2518, 2519, 2520, 0, 0,
	0, 0, 0, 0, 0, 0, 2560, 2560, 2560, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 1757, 0, 3179,
	1900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 1440, 0, 0,
	0, 0, 0, 1203, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 2497, 2498, 2499, 2500, 0, 3139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	1749, 0, 0, 1440, 2509, 2510, 2511, 2512, 2505, 2506,
	2507, 2508, 2513, 2514, 2515, 2516, 0, 0, 0, 0,
	1744, 0, 3134, 3135, 3136, 0, 0, 0, 0, 3133,
	3131, 3132, 3124, 3125, 3126, 3127, 3129, 3130, 0, 1029,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 1203, 0,
	1203, 0, 0, 0, 0, 0, 0, 2493, 2494, 2495,
	2496, 2501, 2502, 2503, 2504, 0, 1203, 1203, 0, 0,
	3302, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 1203, 1203, 1203, 0, 0, 3134, 3135, 3136, 0,
	0, 0, 0, 3133, 3131, 3132, 3124, 3125, 3126, 3127,
	3129, 3130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732,
	1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0, 0,
	2429, 0, 0, 0, 2430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1940, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 0, 0, 2171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2195, 0, 2195, 0, 0, 0,
	0, 0, 2202, 0, 0, 0, 0, 0, 1720, 1721,
	0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 1751, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 2171, 0, 0, 2226, 1769, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2246, 0, 0,
	0, 2340, 0, 1722, 0, 0, 0, 3511, 3512, 0,
	2259, 3515, 2261, 1742, 2263, 3518, 2265, 0, 2266, 0,
	0, 0, 1739, 1203, 3522, 0, 0, 258, 258, 258,
	1203, 0, 0, 3529, 0, 0, 3179, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3541, 0, 0, 0, 785, 1203, 0, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3564, 3565, 0, 3566, 3567, 3568, 0, 0, 785,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 1747, 1748, 0, 0,
	0, 0, 0, 693, 1728, 0, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 3574, 0, 0, 0,
	3576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 1770, 0, 0, 0, 695, 0, 1750,
	1752, 3604, 3605, 0, 0, 0, 1203, 1203, 696, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 1767, 3616,
	0, 0, 0, 0, 0, 1737, 1738, 0, 0, 697,
	0, 0, 0, 0, 3625, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 1203, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 698, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 699, 0, 693, 0, 0, 0, 0, 0, 694,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3668, 0, 700, 0, 0, 701, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 1203, 3687, 0, 0, 695, 2617, 0,
	0, 0, 0, 0, 0, 0, 1720, 1721, 696, 1753,
	1754, 1755, 1763, 1764, 1765, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3713, 0, 0, 697,
	1751, 0, 0, 0, 0, 1203, 0, 1723, 0, 0,
	0, 1749, 0, 0, 0, 1769, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 1203, 0, 698, 0,
	0, 1722, 0, 0, 712, 0, 0, 0, 1203, 2660,
	1203, 1742, 1248, 0, 0, 0, 1248, 1761, 1248, 0,
	1739, 699, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2183, 0, 0, 0, 0,
	0, 0, 700, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 722, 0, 703, 0, 0, 0, 0, 0, 3809,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 1745, 1746, 1747, 1748, 0, 0, 0, 0,
	0, 723, 1728, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 1760, 724,
	0, 1770, 0, 1440, 712, 0, 705, 1750, 1752, 0,
	720, 721, 718, 3854, 3855, 0, 0, 0, 713, 3859,
	3860, 706, 0, 0, 3863, 3864, 0, 0, 0, 0,
	0, 3868, 0, 1737, 1738, 0, 0, 0, 0, 0,
	0, 0, 3872, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 2171, 3877, 0,
	0, 707, 0, 714, 0, 2183, 1743, 0, 0, 0,
	0, 0, 708, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 0, 704, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2932, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2942, 0, 2945, 0, 0, 724,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	720, 721, 718, 0, 0, 0, 0, 0, 713, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2970,
	1440, 2972, 1440, 0, 0, 0, 0, 0, 2978, 1749,
	0, 0, 0, 258, 0, 258, 258, 0, 0, 258,
	0, 707, 0, 714, 0, 0, 0, 0, 0, 1744,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 1203, 1203, 709, 0, 0, 3006,
	0, 717, 0, 0, 0, 1761, 0, 0, 0, 0,
	1203, 0, 0, 0, 258, 726, 258, 258, 0, 0,
	258, 258, 0, 0, 0, 0, 711, 0, 1203, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 1203,
	0, 258, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 258, 258, 0, 0, 1734,
	1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732, 1724,
	1725, 1726, 1727, 1729, 1730, 0, 4092, 4093, 4094, 1203,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2340,
	0, 0, 4103, 4104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	4112, 4115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 1203,
	258, 0, 0, 0, 0, 0, 0, 0, 4158, 0,
	0, 0, 0, 0, 0, 0, 4164, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 4171, 0, 1203,
	1029, 1203, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 4179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1248, 0, 0, 0, 1440, 1440, 1203, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 3266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 3319, 3321,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4296, 0, 0, 4299, 0, 0,
	1720, 1721, 0, 1753, 1754, 1755, 1763, 1764, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 1199, 0, 1756, 1751, 258, 0, 1940, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 1769,
	258, 1884, 258, 0, 1203, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 785, 0, 0, 0, 1029, 1029,
	0, 1203, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 1940, 1940, 0, 0, 1742, 0, 0, 0, 0,
	0, 258, 0, 0, 1739, 3401, 0, 0, 258, 3405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2340,
	0, 0, 0, 0, 1940, 1940, 0, 0, 4115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3457,
	0, 0, 0, 0, 0, 1940, 1745, 1746, 1747, 1748,
	0, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 1203, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 3496, 1770, 1440, 0, 0, 0,
	0, 1750, 1752, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 4460, 4460, 4460, 0, 0, 0, 1766, 0,
	1767, 0, 260, 260, 260, 0, 0, 1737, 1738, 0,
	0, 0, 3509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4482, 1758, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 260, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4460, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 258, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 258, 0, 0, 0, 0, 1203, 258, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 258, 0,
	0, 258, 0, 0, 0, 0, 1203, 4460, 4605, 0,
	0, 0, 0, 0, 0, 0, 4609, 0, 0, 1761,
	1203, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 1203, 1203, 785, 258, 0, 258, 0, 258,
	0, 258, 0, 258, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 1065, 106, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 3882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2183, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 2183, 0, 1203, 0,
	0, 0, 1203, 0, 1203, 0, 3775, 0, 0, 0,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	2183, 0, 0, 0, 0, 3791, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 1199,
	0, 3839, 1203, 0, 1203, 1186, 0, 1203, 0, 0,
	0, 0, 0, 258, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 777, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 1203, 0, 0, 0,
	0, 777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1203, 258, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 258, 0, 0,
	0, 258, 0, 258, 1203, 0, 0, 0, 0, 0,
	258, 258, 0, 0, 1203, 1203, 1203, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 1940, 260, 0,
	260, 260, 0, 0, 260, 0, 1285, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 1203,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 3974, 0, 0, 0, 258, 260,
	1285, 260, 260, 0, 1285, 260, 260, 0, 1285, 0,
	2183, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	1940, 0, 0, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 258, 0, 0, 0, 0, 1203, 0, 0,
	258, 0, 1203, 1203, 1285, 0, 260, 260, 0, 0,
	2183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4048, 0, 0, 0, 1285, 0, 0, 0, 0, 1285,
	260, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 0, 1285, 1203, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 1203, 0, 0, 0, 0, 0, 258,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 258, 258, 258, 0, 0,
	0, 0, 0, 258, 0, 258, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 1203, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 1203, 0, 0, 1203, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	1203, 0, 0, 2183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4262, 1440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1024, 106, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 1283, 0, 260, 260, 260, 0, 0,
	0, 0, 260, 0, 1199, 0, 0, 0, 0, 260,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 260, 1341, 0, 0,
	0, 1341, 0, 260, 0, 1283, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 4349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 258,
	258, 1283, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 1203, 803, 1285, 0, 0, 0, 0, 0, 0,
	0, 1283, 1004, 0, 0, 0, 1283, 0, 0, 0,
	258, 0, 805, 0, 0, 0, 0, 0, 806, 0,
	1283, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 4402, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 258, 0, 807, 258, 824, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 4437, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 808, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 0, 810, 0, 0, 260, 1285, 1285,
	260, 0, 0, 0, 0, 0, 0, 830, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 4498, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 785, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 1882, 258, 1885, 0, 106, 0, 0,
	0, 811, 0, 260, 812, 0, 0, 260, 0, 0,
	0, 258, 260, 0, 0, 834, 0, 0, 260, 0,
	725, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 1285, 258, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 260, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 833, 1285, 0, 1285, 1285, 1285, 0,
	0, 0, 0, 828, 0, 0, 0, 260, 0, 258,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 0, 260, 0, 260, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 813, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 816, 0, 0, 0, 777, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 825, 0, 0, 0, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 0, 0, 0, 819, 837, 1285, 836, 0, 0,
	1341, 820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 1199, 0, 821, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 838, 0, 835, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 0, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1283, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 260, 0, 0, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 0, 260, 260, 0, 0, 0,
	258, 1285, 1285, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	258, 1004, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 1283, 0,
	1283, 258, 1283, 1285, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 258, 0, 0, 1283, 1283,
	258, 260, 0, 0, 0, 0, 0, 0, 0, 1283,
	0, 0, 0, 0, 260, 0, 2407, 0, 0, 0,
	1199, 1283, 0, 1283, 1283, 1283, 0, 260, 0, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 1790, 777, 0, 0, 0,
	0, 0, 0, 260, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	1285, 0, 0, 0, 0, 260, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 1285, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 106, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 260, 260, 1341, 0, 0, 0, 0, 260, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 260, 1884, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 258, 0, 0, 258, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 1721, 0,
	1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	1756, 1751, 0, 0, 0, 258, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 258, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 106, 0, 106, 0, 0,
	0, 0, 1722, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 1283, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 106, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1746, 1747, 1748, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 1760,
	0, 1341, 1770, 1285, 0, 0, 0, 0, 1750, 1752,
	0, 0, 0, 0, 0, 1283, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 1766, 0, 1767, 0, 0,
	0, 0, 0, 0, 1737, 1738, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 1758, 1285, 1285, 0, 0, 1283, 0, 0,
	260, 0, 0, 0, 260, 260, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1283, 0,
	0, 0, 1284, 0, 2407, 260, 0, 0, 0, 0,
	1283, 0, 1283, 0, 1285, 0, 0, 0, 0, 1768,
	0, 0, 1884, 1884, 0, 1790, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 258,
	258, 0, 0, 0, 0, 0, 1342, 0, 260, 260,
	1342, 1285, 260, 0, 1284, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 260, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	1749, 0, 0, 0, 1285, 0, 1884, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	1744, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	1284, 0, 0, 260, 1285, 1284, 1285, 0, 0, 258,
	1285, 0, 0, 0, 0, 0, 1761, 260, 0, 1284,
	0, 0, 0, 0, 0, 260, 0, 0, 1285, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 1884, 0, 258, 1884, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 1186, 0, 0, 0, 0, 0,
	0, 1285, 1285, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732,
	1724, 1725, 1726, 1727, 1729, 1730, 258, 0, 0, 0,
	4389, 0, 1285, 0, 260, 1285, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	106, 106, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 106, 0, 0, 106, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 1720,
	1721, 0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0,
	1283, 1283, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 1884, 1756, 1751, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 1024, 0,
	0, 1283, 0, 0, 1722, 0, 0, 0, 1284, 0,
	0, 0, 106, 106, 1742, 0, 0, 0, 0, 0,
	1285, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1283, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1284, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 1284, 1283, 0, 0, 0,
	0, 1283, 0, 0, 0, 1745, 1746, 1747, 1748, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 1342,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 1283, 0, 1283, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 1770, 1283, 0, 0, 0, 0,
	1750, 1752, 0, 0, 0, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 1766, 0, 1767,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 0,
	0, 1285, 0, 0, 1285, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 260, 0, 1283, 1283,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 1743,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	260, 1283, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 1285, 0, 0, 1284, 1284, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 1285, 1285, 1285, 1341,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 1285, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 1285, 0, 0, 1186, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 1341, 1284, 0, 1284,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 1341, 0, 0, 0, 1284, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	1284, 0, 1284, 1284, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733,
	1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0,
	0, 0, 0, 0, 0, 1342, 3527, 1341, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 106, 1285,
	260, 0, 1285, 260, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	260, 0, 1342, 0, 0, 0, 0, 106, 0, 1285,
	260, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	1285, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 0, 0, 0, 0, 1283, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1283, 0,
	0, 0, 1285, 0, 1285, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 1186, 1283, 1283, 1283, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 1284, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 1285, 0, 0, 0, 0,
	0, 0, 1285, 260, 0, 0, 0, 1285, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 106, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1284, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 1341, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 1284, 0, 1720, 1721,
	0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1751, 0, 0, 0, 0, 1284, 0, 1723,
	0, 0, 0, 0, 260, 0, 0, 1769, 0, 1284,
	0, 1284, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 1284, 1283, 0, 0, 1283,
	0, 0, 0, 1722, 0, 0, 0, 1341, 0, 260,
	0, 0, 0, 1742, 1285, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 1285, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1283, 1283, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 1747, 1748, 0, 0,
	0, 260, 0, 0, 1728, 0, 1283, 1283, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	1760, 0, 0, 1770, 0, 0, 0, 0, 1341, 1750,
	1752, 0, 0, 0, 0, 0, 0, 0, 2407, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 1767, 0,
	0, 0, 0, 0, 0, 1737, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 1283, 0, 1758, 0, 0, 1720, 1721, 0, 1753,
	1754, 1755, 1763, 1764, 1765, 0, 0, 0, 1743, 0,
	0, 260, 0, 0, 0, 1341, 0, 0, 0, 1756,
	1751, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 1742, 1341, 0, 0, 0, 0, 0, 0, 1283,
	1739, 0, 0, 0, 1283, 1283, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 0, 1283, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 1745, 1746, 1747, 1748, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 1770, 0, 0, 0, 1342, 0, 1750, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	1284, 0, 0, 0, 1766, 0, 1767, 0, 0, 0,
	0, 0, 0, 1737, 1738, 0, 0, 0, 106, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 1283, 0, 0, 0, 3076, 0, 1284, 1768, 0,
	0, 1283, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 1283, 1284,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 0, 0,
	1284, 0, 0, 0, 1720, 1721, 0, 1753, 1754, 1755,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 0, 0, 0, 1756, 1751, 1749,
	1284, 0, 1284, 0, 0, 1723, 1342, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 1284, 1284, 0,
	0, 0, 0, 0, 0, 1756, 1751, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	1284, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	1745, 1746, 1747, 1748, 0, 0, 0, 1742, 1342, 0,
	1728, 1342, 0, 0, 1759, 0, 1739, 0, 0, 1734,
	1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732, 1724,
	1725, 1726, 1727, 1729, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 3075, 0, 0, 1760, 0, 0, 1770,
	0, 0, 0, 0, 0, 1750, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 1767, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 0, 1342, 0, 0, 1745, 1746,
	1747, 1748, 0, 0, 0, 0, 0, 0, 1728, 1758,
	0, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1770, 0, 0,
	0, 0, 0, 1750, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	1766, 0, 1767, 0, 0, 0, 0, 0, 0, 1737,
	1738, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 1720, 1721, 0, 1753, 1754, 1755,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 1751, 0,
	0, 0, 0, 0, 0, 1723, 0, 1749, 0, 0,
	0, 0, 0, 1769, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 1744, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 1761, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 0, 0, 0, 0, 0, 0,
	1728, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 0, 0, 0, 1760, 0, 0, 1770,
	0, 3072, 0, 0, 0, 1750, 1752, 1284, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 1767, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	1759, 0, 0, 0, 1743, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 1284, 1284, 1284, 0, 0, 0, 0, 3071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1751, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 1749, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 1761, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	1747, 1748, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 1284, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 1342, 1760, 1284, 0, 1770, 1284, 0,
	0, 3070, 0, 1750, 1752, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 1767, 0, 0, 0, 0, 0, 0, 1737,
	1738, 0, 0, 0, 0, 0, 1284, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 1284, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 1342, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 1284, 1284, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 1342, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 1284, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 1284, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 1284, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 1344, 276, 277, 1345, 1346, 1347, 1284, 1348, 606,
	1349, 1350, 1351, 1352, 278, 279, 1143, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 1353,
	611, 287, 288, 289, 290, 291, 292, 1354, 1355, 0,
	293, 612, 613, 614, 1356, 294, 295, 615, 1357, 1286,
	1358, 296, 297, 298, 299, 300, 301, 302, 0, 1359,
	304, 305, 306, 303, 307, 1360, 308, 0, 309, 310,
	311, 312, 313, 314, 1361, 315, 316, 317, 1144, 318,
	319, 1362, 1363, 1365, 1364, 1366, 1367, 1368, 320, 321,
	322, 323, 0, 324, 616, 617, 1369, 328, 325, 326,
	1370, 329, 327, 1371, 330, 331, 332, 1372, 1373, 333,
	334, 335, 1374, 336, 337, 1375, 338, 339, 340, 1376,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 1377, 265, 1378, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 1379, 359, 1380, 1381, 1145, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 1382,
	371, 624, 1383, 625, 372, 1384, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 1147, 378, 379, 1385, 380,
	381, 382, 383, 0, 0, 0, 266, 384, 385, 386,
	388, 1386, 1146, 387, 629, 630, 1387, 631, 1388, 389,
	390, 1148, 632, 1149, 391, 392, 393, 1150, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 1389, 401,
	403, 402, 1390, 404, 633, 1151, 405, 406, 1152, 1391,
	407, 0, 0, 0, 408, 409, 412, 1392, 1393, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 1153, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 1154, 441, 1394, 267, 1155, 451, 452, 1395, 634,
	453, 635, 455, 456, 1396, 0, 457, 0, 1397, 1398,
	459, 460, 461, 1399, 1400, 462, 463, 636, 1156, 464,
	1157, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 1401, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 1402,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 1403, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 1404, 512, 513, 514, 1158,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 1405, 535,
	536, 534, 537, 538, 539, 1406, 540, 541, 524, 525,
	542, 543, 1159, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 1407, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 1408, 565,
	566, 0, 562, 554, 1409, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 1410, 575, 647, 648, 649, 650,
	1411, 584, 1412, 576, 577, 578, 651, 579, 652, 1413,
	580, 581, 582, 583, 0, 585, 586, 1414, 1415, 587,
	588, 589, 591, 592, 590, 593, 1416, 594, 1417, 0,
	595, 596, 597, 653, 654, 655, 1418, 599, 598, 600,
	656, 1419, 1420, 1421, 1422, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 2595, 0, 0, 0, 0, 0, 0,
	0, 2596, 268, 270, 269, 271, 272, 273, 274, 275,
	1344, 276, 277, 1345, 1346, 1347, 0, 1348, 606, 1349,
	1350, 1351, 1352, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 1353, 611,
	287, 288, 289, 290, 291, 292, 1354, 1355, 0, 293,
	612, 613, 614, 1356, 294, 295, 615, 1357, 1286, 1358,
	296, 297, 298, 299, 300, 301, 302, 0, 1359, 304,
	305, 306, 303, 307, 1360, 308, 0, 309, 310, 311,
	312, 313, 314, 1361, 315, 316, 317, 1144, 318, 319,
	1362, 1363, 1365, 1364, 1366, 1367, 1368, 320, 321, 322,
	323, 0, 324, 616, 617, 1369, 328, 325, 326, 1370,
	329, 327, 1371, 330, 331, 332, 1372, 1373, 333, 334,
	335, 1374, 336, 337, 1375, 338, 339, 340, 1376, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 1377, 265, 1378, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	1379, 359, 1380, 1381, 1145, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 1382, 371,
	624, 1383, 625, 372, 1384, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 1147, 378, 379, 1385, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	1386, 1146, 387, 629, 630, 1387, 631, 1388, 389, 390,
	1148, 632, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 1389, 401, 403,
	402, 1390, 404, 633, 1151, 405, 406, 1152, 1391, 407,
	0, 0, 0, 408, 409, 412, 1392, 1393, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1394, 267, 1155, 451, 452, 1395, 634, 453,
	635, 455, 456, 1396, 0, 457, 0, 1397, 1398, 459,
	460, 461, 1399, 1400, 462, 463, 636, 1156, 464, 1157,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 1401, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 1402, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 1403, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 1404, 512, 513, 514, 1158, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 1405, 535, 536,
	534, 537, 538, 539, 1406, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 1407, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 1408, 565, 566,
	0, 562, 554, 1409, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 1410, 575, 647, 648, 649, 650, 1411,
	584, 1412, 576, 577, 578, 651, 579, 652, 1413, 580,
	581, 582, 583, 0, 585, 586, 1414, 1415, 587, 588,
	589, 591, 592, 590, 593, 1416, 594, 1417, 0, 595,
	596, 597, 653, 654, 655, 1418, 599, 598, 600, 656,
	1419, 1420, 1421, 1422, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 3535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3537, 268,
	270, 269, 271, 272, 273, 274, 275, 1344, 276, 277,
	1345, 1346, 1347, 0, 1348, 606, 1349, 1350, 1351, 1352,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 1353, 611, 287, 288, 289,
	290, 291, 292, 1354, 1355, 0, 293, 612, 613, 614,
	1356, 294, 295, 615, 1357, 1286, 1358, 296, 297, 298,
	299, 300, 301, 302, 0, 1359, 304, 305, 306, 303,
	307, 1360, 308, 0, 309, 310, 311, 312, 313, 314,
	1361, 315, 316, 317, 1144, 318, 319, 1362, 1363, 1365,
	1364, 1366, 1367, 1368, 320, 321, 322, 323, 0, 324,
	616, 617, 1369, 328, 325, 326, 1370, 329, 327, 1371,
	330, 331, 332, 1372, 1373, 333, 334, 335, 1374, 336,
	337, 1375, 338, 339, 340, 1376, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 1377, 265, 1378, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 1379, 359, 1380,
	1381, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 1382, 371, 624, 1383, 625,
	372, 1384, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 1385, 380, 381, 382, 383, 0,
	0, 0, 266, 384, 385, 386, 388, 1386, 1146, 387,
	629, 630, 1387, 631, 1388, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 1389, 401, 403, 402, 1390, 404,
	633, 1151, 405, 406, 1152, 1391, 407, 0, 0, 0,
	408, 409, 412, 1392, 1393, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 1394,
	267, 1155, 451, 452, 1395, 634, 453, 635, 455, 456,
	1396, 0, 457, 0, 1397, 1398, 459, 460, 461, 1399,
	1400, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 1401,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 1402, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 1403, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 1404, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 1405, 535, 536, 534, 537, 538,
	539, 1406, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 1407, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 1408, 565, 566, 0, 562, 554,
	1409, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	1410, 575, 647, 648, 649, 650, 1411, 584, 1412, 576,
	577, 578, 651, 579, 652, 1413, 580, 581, 582, 583,
	0, 585, 586, 1414, 1415, 587, 588, 589, 591, 592,
	590, 593, 1416, 594, 1417, 0, 595, 596, 597, 653,
	654, 655, 1418, 599, 598, 600, 656, 1419, 1420, 1421,
	1422, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3910,
	268, 270, 269, 271, 272, 273, 274, 275, 1344, 276,
	277, 1345, 1346, 1347, 0, 1348, 606, 1349, 1350, 1351,
	1352, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 1353, 611, 287, 288,
	289, 290, 291, 292, 1354, 1355, 0, 293, 612, 613,
	614, 1356, 294, 295, 615, 1357, 1286, 1358, 296, 297,
	298, 299, 300, 301, 302, 0, 1359, 304, 305, 306,
	303, 307, 1360, 308, 0, 309, 310, 311, 312, 313,
	314, 1361, 315, 316, 317, 1144, 318, 319, 1362, 1363,
	1365, 1364, 1366, 1367, 1368, 320, 321, 322, 323, 0,
	324, 616, 617, 1369, 328, 325, 326, 1370, 329, 327,
	1371, 330, 331, 332, 1372, 1373, 333, 334, 335, 1374,
	336, 337, 1375, 338, 339, 340, 1376, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 1377, 265, 1378, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 1379, 359,
	1380, 1381, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 1382, 371, 624, 1383,
	625, 372, 1384, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 1147, 378, 379, 1385, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 1386, 1146,
	387, 629, 630, 1387, 631, 1388, 389, 390, 1148, 632,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 1389, 401, 403, 402, 1390,
	404, 633, 1151, 405, 406, 1152, 1391, 407, 0, 0,
	0, 408, 409, 412, 1392, 1393, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1394, 267, 1155, 451, 452, 1395, 634, 453, 635, 455,
	456, 1396, 0, 457, 0, 1397, 1398, 459, 460, 461,
	1399, 1400, 462, 463, 636, 1156, 464, 1157, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	1401, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 1402, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 1403, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 1404, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 1405, 535, 536, 534, 537,
	538, 539, 1406, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 1407,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 1408, 565, 566, 0, 562,
	554, 1409, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 1410, 575, 647, 648, 649, 650, 1411, 584, 1412,
	576, 577, 578, 651, 579, 652, 1413, 580, 581, 582,
	583, 0, 585, 586, 1414, 1415, 587, 588, 589, 591,
	592, 590, 593, 1416, 594, 1417, 0, 595, 596, 597,
	653, 654, 655, 1418, 599, 598, 600, 656, 1419, 1420,
	1421, 1422, 601, 602, 657, 603, 604, 605, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4098, 268, 270, 269, 271,
	272, 273, 274, 275, 1344, 276, 277, 1345, 1346, 1347,
	0, 1348, 606, 1349, 1350, 1351, 1352, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 1353, 611, 287, 288, 289, 290, 291, 292,
	1354, 1355, 0, 293, 612, 613, 614, 1356, 294, 295,
	615, 1357, 1286, 1358, 296, 297, 298, 299, 300, 301,
	302, 0, 1359, 304, 305, 306, 303, 307, 1360, 308,
	0, 309, 310, 311, 312, 313, 314, 1361, 315, 316,
	317, 1144, 318, 319, 1362, 1363, 1365, 1364, 1366, 1367,
	1368, 320, 321, 322, 323, 0, 324, 616, 617, 1369,
	328, 325, 326, 1370, 329, 327, 1371, 330, 331, 332,
	1372, 1373, 333, 334, 335, 1374, 336, 337, 1375, 338,
	339, 340, 1376, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 1377,
	265, 1378, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 1379, 359, 1380, 1381, 1145, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 1382, 371, 624, 1383, 625, 372, 1384, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 1147, 378,
	379, 1385, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 1386, 1146, 387, 629, 630, 1387,
	631, 1388, 389, 390, 1148, 632, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 1389, 401, 403, 402, 1390, 404, 633, 1151, 405,
	406, 1152, 1391, 407, 0, 0, 0, 408, 409, 412,
	1392, 1393, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1394, 267, 1155, 451,
	452, 1395, 634, 453, 635, 455, 456, 1396, 0, 457,
	0, 1397, 1398, 459, 460, 461, 1399, 1400, 462, 463,
	636, 1156, 464, 1157, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 1401, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 1402, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 1403, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 1404, 512,
	513, 514, 1158, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 1405, 535, 536, 534, 537, 538, 539, 1406, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 1407, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 1408, 565, 566, 0, 562, 554, 1409, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 1410, 575, 647,
	648, 649, 650, 1411, 584, 1412, 576, 577, 578, 651,
	579, 652, 1413, 580, 581, 582, 583, 0, 585, 586,
	1414, 1415, 587, 588, 589, 591, 592, 590, 593, 1416,
	594, 1417, 0, 595, 596, 597, 653, 654, 655, 1418,
	599, 598, 600, 656, 1419, 1420, 1421, 1422, 601, 602,
	657, 603, 604, 605, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3983, 268, 270, 269, 271, 272, 273, 274, 275,
	1344, 276, 277, 1345, 1346, 1347, 0, 1348, 606, 1349,
	1350, 1351, 1352, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 1353, 611,
	287, 288, 289, 290, 291, 292, 1354, 1355, 0, 293,
	612, 613, 614, 1356, 294, 295, 615, 1357, 1286, 1358,
	296, 297, 298, 299, 300, 301, 302, 0, 1359, 304,
	305, 306, 303, 307, 1360, 308, 0, 309, 310, 311,
	312, 313, 314, 1361, 315, 316, 317, 1144, 318, 319,
	1362, 1363, 1365, 1364, 1366, 1367, 1368, 320, 321, 322,
	323, 0, 324, 616, 617, 1369, 328, 325, 326, 1370,
	329, 327, 1371, 330, 331, 332, 1372, 1373, 333, 334,
	335, 1374, 336, 337, 1375, 338, 339, 340, 1376, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 1377, 265, 1378, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	1379, 359, 1380, 1381, 1145, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 1382, 371,
	624, 1383, 625, 372, 1384, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 1147, 378, 379, 1385, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	1386, 1146, 387, 629, 630, 1387, 631, 1388, 389, 390,
	1148, 632, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 1389, 401, 403,
	402, 1390, 404, 633, 1151, 405, 406, 1152, 1391, 407,
	0, 0, 0, 408, 409, 412, 1392, 1393, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1394, 267, 1155, 451, 452, 1395, 634, 453,
	635, 455, 456, 1396, 0, 457, 0, 1397, 1398, 459,
	460, 461, 1399, 1400, 462, 463, 636, 1156, 464, 1157,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 1401, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 1402, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 1403, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 1404, 512, 513, 514, 1158, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 1405, 535, 536,
	534, 537, 538, 539, 1406, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 1407, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 1408, 565, 566,
	0, 562, 554, 1409, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 1410, 575, 647, 648, 649, 650, 1411,
	584, 1412, 576, 577, 578, 651, 579, 652, 1413, 580,
	581, 582, 583, 0, 585, 586, 1414, 1415, 587, 588,
	589, 591, 592, 590, 593, 1416, 594, 1417, 0, 595,
	596, 597, 653, 654, 655, 1418, 599, 598, 600, 656,
	1419, 1420, 1421, 1422, 601, 602, 657, 603, 604, 605,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3840, 268, 270,
	269, 271, 272, 273, 274, 275, 1344, 276, 277, 1345,
	1346, 1347, 0, 1348, 606, 1349, 1350, 1351, 1352, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 1353, 611, 287, 288, 289, 290,
	291, 292, 1354, 1355, 0, 293, 612, 613, 614, 1356,
	294, 295, 615, 1357, 1286, 1358, 296, 297, 298, 299,
	300, 301, 302, 0, 1359, 304, 305, 306, 303, 307,
	1360, 308, 0, 309, 310, 311, 312, 313, 314, 1361,
	315, 316, 317, 1144, 318, 319, 1362, 1363, 1365, 1364,
	1366, 1367, 1368, 320, 321, 322, 323, 0, 324, 616,
	617, 1369, 328, 325, 326, 1370, 329, 327, 1371, 330,
	331, 332, 1372, 1373, 333, 334, 335, 1374, 336, 337,
	1375, 338, 339, 340, 1376, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 1377, 265, 1378, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 1379, 359, 1380, 1381,
	1145, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 1382, 371, 624, 1383, 625, 372,
	1384, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	1147, 378, 379, 1385, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 1386, 1146, 387, 629,
	630, 1387, 631, 1388, 389, 390, 1148, 632, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 1389, 401, 403, 402, 1390, 404, 633,
	1151, 405, 406, 1152, 1391, 407, 0, 0, 0, 408,
	409, 412, 1392, 1393, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1394, 267,
	1155, 451, 452, 1395, 634, 453, 635, 455, 456, 1396,
	0, 457, 0, 1397, 1398, 459, 460, 461, 1399, 1400,
	462, 463, 636, 1156, 464, 1157, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 1401, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 1402, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	1403, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	1404, 512, 513, 514, 1158, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 1405, 535, 536, 534, 537, 538, 539,
	1406, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 1407, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 1408, 565, 566, 0, 562, 554, 1409,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 1410,
	575, 647, 648, 649, 650, 1411, 584, 1412, 576, 577,
	578, 651, 579, 652, 1413, 580, 581, 582, 583, 0,
	585, 586, 1414, 1415, 587, 588, 589, 591, 592, 590,
	593, 1416, 594, 1417, 0, 595, 596, 597, 653, 654,
	655, 1418, 599, 598, 600, 656, 1419, 1420, 1421, 1422,
	601, 602, 657, 603, 604, 605, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3553, 268, 270, 269, 271, 272, 273,
	274, 275, 1344, 276, 277, 1345, 1346, 1347, 0, 1348,
	606, 1349, 1350, 1351, 1352, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	1353, 611, 287, 288, 289, 290, 291, 292, 1354, 1355,
	0, 293, 612, 613, 614, 1356, 294, 295, 615, 1357,
	1286, 1358, 296, 297, 298, 299, 300, 301, 302, 0,
	1359, 304, 305, 306, 303, 307, 1360, 308, 0, 309,
	310, 311, 312, 313, 314, 1361, 315, 316, 317, 1144,
	318, 319, 1362, 1363, 1365, 1364, 1366, 1367, 1368, 320,
	321, 322, 323, 0, 324, 616, 617, 1369, 328, 325,
	326, 1370, 329, 327, 1371, 330, 331, 332, 1372, 1373,
	333, 334, 335, 1374, 336, 337, 1375, 338, 339, 340,
	1376, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 1377, 265, 1378,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 1379, 359, 1380, 1381, 1145, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	1382, 371, 624, 1383, 625, 372, 1384, 373, 374, 375,
	376, 377, 626, 627, 628, 454, 1147, 378, 379, 1385,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 1386, 1146, 387, 629, 630, 1387, 631, 1388,
	389, 390, 1148, 632, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 1389,
	401, 403, 402, 1390, 404, 633, 1151, 405, 406, 1152,
	1391, 407, 0, 0, 0, 408, 409, 412, 1392, 1393,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1394, 267, 1155, 451, 452, 1395,
	634, 453, 635, 455, 456, 1396, 0, 457, 0, 1397,
	1398, 459, 460, 461, 1399, 1400, 462, 463, 636, 1156,
	464, 1157, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 1401, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	1402, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 1403, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 1404, 512, 513, 514,
	1158, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 1405,
	535, 536, 534, 537, 538, 539, 1406, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 1407, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 1408,
	565, 566, 0, 562, 554, 1409, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 1410, 575, 647, 648, 649,
	650, 1411, 584, 1412, 576, 577, 578, 651, 579, 652,
	1413, 580, 581, 582, 583, 0, 585, 586, 1414, 1415,
	587, 588, 589, 591, 592, 590, 593, 1416, 594, 1417,
	0, 595, 596, 597, 653, 654, 655, 1418, 599, 598,
	600, 656, 1419, 1420, 1421, 1422, 601, 602, 657, 603,
	604, 605, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3386,
	268, 270, 269, 271, 272, 273, 274, 275, 1344, 276,
	277, 1345, 1346, 1347, 0, 1348, 606, 1349, 1350, 1351,
	1352, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 1353, 611, 287, 288,
	289, 290, 291, 292, 1354, 1355, 0, 293, 612, 613,
	614, 1356, 294, 295, 615, 1357, 1286, 1358, 296, 297,
	298, 299, 300, 301, 302, 0, 1359, 304, 305, 306,
	303, 307, 1360, 308, 0, 309, 310, 311, 312, 313,
	314, 1361, 315, 316, 317, 1144, 318, 319, 1362, 1363,
	1365, 1364, 1366, 1367, 1368, 320, 321, 322, 323, 0,
	324, 616, 617, 1369, 328, 325, 326, 1370, 329, 327,
	1371, 330, 331, 332, 1372, 1373, 333, 334, 335, 1374,
	336, 337, 1375, 338, 339, 340, 1376, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 1377, 265, 1378, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 1379, 359,
	1380, 1381, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 1382, 371, 624, 1383,
	625, 372, 1384, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 1147, 378, 379, 1385, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 1386, 1146,
	387, 629, 630, 1387, 631, 1388, 389, 390, 1148, 632,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 1389, 401, 403, 402, 1390,
	404, 633, 1151, 405, 406, 1152, 1391, 407, 0, 0,
	0, 408, 409, 412, 1392, 1393, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1394, 267, 1155, 451, 452, 1395, 634, 453, 635, 455,
	456, 1396, 0, 457, 0, 1397, 1398, 459, 460, 461,
	1399, 1400, 462, 463, 636, 1156, 464, 1157, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	1401, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 1402, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 1403, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 1404, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 1405, 535, 536, 534, 537,
	538, 539, 1406, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 1407,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 1408, 565, 566, 0, 562,
	554, 1409, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 1410, 575, 647, 648, 649, 650, 1411, 584, 1412,
	576, 577, 578, 651, 579, 652, 1413, 580, 581, 582,
	583, 0, 585, 586, 1414, 1415, 587, 588, 589, 591,
	592, 590, 593, 1416, 594, 1417, 0, 595, 596, 597,
	653, 654, 655, 1418, 599, 598, 600, 656, 1419, 1420,
	1421, 1422, 601, 602, 657, 603, 604, 605, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2453, 268, 270, 269, 271,
	272, 273, 274, 275, 1344, 276, 277, 1345, 1346, 1347,
	0, 1348, 606, 1349, 1350, 1351, 1352, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 1353, 611, 287, 288, 289, 290, 291, 292,
	1354, 1355, 0, 293, 612, 613, 614, 1356, 294, 295,
	615, 1357, 1286, 1358, 296, 297, 298, 299, 300, 301,
	302, 0, 1359, 304, 305, 306, 303, 307, 1360, 308,
	0, 309, 310, 311, 312, 313, 314, 1361, 315, 316,
	317, 1144, 318, 319, 1362, 1363, 1365, 1364, 1366, 1367,
	1368, 320, 321, 322, 323, 0, 324, 616, 617, 1369,
	328, 325, 326, 1370, 329, 327, 1371, 330, 331, 332,
	1372, 1373, 333, 334, 335, 1374, 336, 337, 1375, 338,
	339, 340, 1376, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 1377,
	265, 1378, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 1379, 359, 1380, 1381, 1145, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 1382, 371, 624, 1383, 625, 372, 1384, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 1147, 378,
	379, 1385, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 1386, 1146, 387, 629, 630, 1387,
	631, 1388, 389, 390, 1148, 632, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 1389, 401, 403, 402, 1390, 404, 633, 1151, 405,
	406, 1152, 1391, 407, 0, 0, 0, 408, 409, 412,
	1392, 1393, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1394, 267, 1155, 451,
	452, 1395, 634, 453, 635, 455, 456, 1396, 0, 457,
	0, 1397, 1398, 459, 460, 461, 1399, 1400, 462, 463,
	636, 1156, 464, 1157, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 1401, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 1402, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 1403, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 1404, 512,
	513, 514, 1158, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 1405, 535, 536, 534, 537, 538, 539, 1406, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 1407, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 1408, 565, 566, 0, 562, 554, 1409, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 1410, 575, 647,
	648, 649, 650, 1411, 584, 1412, 576, 577, 578, 651,
	579, 652, 1413, 580, 581, 582, 583, 0, 585, 586,
	1414, 1415, 587, 588, 589, 591, 592, 590, 593, 1416,
	594, 1417, 0, 595, 596, 597, 653, 654, 655, 1418,
	599, 598, 600, 656, 1419, 1420, 1421, 1422, 601, 602,
	657, 603, 604, 605, 1434, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 1344, 276, 277, 1345, 1346, 1347, 0, 1348, 606,
	1349, 1350, 1351, 1352, 278, 279, 1143, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 1353,
	611, 287, 288, 289, 290, 291, 292, 1354, 1355, 0,
	293, 612, 613, 614, 1356, 294, 295, 615, 1357, 1286,
	1358, 296, 297, 298, 299, 300, 301, 302, 0, 1359,
	304, 305, 306, 303, 307, 1360, 308, 0, 309, 310,
	311, 312, 313, 314, 1361, 315, 316, 317, 1144, 318,
	319, 1362, 1363, 1365, 1364, 1366, 1367, 1368, 320, 321,
	322, 323, 0, 324, 616, 617, 1369, 328, 325, 326,
	1370, 329, 327, 1371, 330, 331, 332, 1372, 1373, 333,
	334, 335, 1374, 336, 337, 1375, 338, 339, 340, 1376,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 1377, 265, 1378, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 1379, 359, 1380, 1381, 1145, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 1382,
	371, 624, 1383, 625, 372, 1384, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 1147, 378, 379, 1385, 380,
	381, 382, 383, 0, 0, 0, 266, 384, 385, 386,
	388, 1386, 1146, 387, 629, 630, 1387, 631, 1388, 389,
	390, 1148, 632, 1149, 391, 392, 393, 1150, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 1389, 401,
	403, 402, 1390, 404, 633, 1151, 405, 406, 1152, 1391,
	407, 0, 0, 0, 408, 409, 412, 1392, 1393, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 1153, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 1154, 441, 1394, 267, 1155, 451, 452, 1395, 634,
	453, 635, 455, 456, 1396, 0, 457, 0, 1397, 1398,
	459, 460, 461, 1399, 1400, 462, 463, 636, 1156, 464,
	1157, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 1401, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 1402,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 1403, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 1404, 512, 513, 514, 1158,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 1405, 535,
	536, 534, 537, 538, 539, 1406, 540, 541, 524, 525,
	542, 543, 1159, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 1407, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 1408, 565,
	566, 0, 562, 554, 1409, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 1410, 575, 647, 648, 649, 650,
	1411, 584, 1412, 576, 577, 578, 651, 579, 652, 1413,
	580, 581, 582, 583, 0, 585, 586, 1414, 1415, 587,
	588, 589, 591, 592, 590, 593, 1416, 594, 1417, 0,
	595, 596, 597, 653, 654, 655, 1418, 599, 598, 600,
	656, 1419, 1420, 1421, 1422, 601, 602, 657, 603, 604,
	605, 1336, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1344, 276,
	277, 1345, 1346, 1347, 0, 1348, 606, 1349, 1350, 1351,
	1352, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 1353, 611, 287, 288,
	289, 290, 291, 292, 1354, 1355, 0, 293, 612, 613,
	614, 1356, 294, 295, 615, 1357, 1286, 1358, 296, 297,
	298, 299, 300, 301, 302, 0, 1359, 304, 305, 306,
	303, 307, 1360, 308, 0, 309, 310, 311, 312, 313,
	314, 1361, 315, 316, 317, 1144, 318, 319, 1362, 1363,
	1365, 1364, 1366, 1367, 1368, 320, 321, 322, 323, 0,
	324, 616, 617, 1369, 328, 325, 326, 1370, 329, 327,
	1371, 330, 331, 332, 1372, 1373, 333, 334, 335, 1374,
	336, 337, 1375, 338, 339, 340, 1376, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 1377, 265, 1378, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 1379, 359,
	1380, 1381, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 1382, 371, 624, 1383,
	625, 372, 1384, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 1147, 378, 379, 1385, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 1386, 1146,
	387, 629, 630, 1387, 631, 1388, 389, 390, 1148, 632,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 1389, 401, 403, 402, 1390,
	404, 633, 1151, 405, 406, 1152, 1391, 407, 0, 0,
	0, 408, 409, 412, 1392, 1393, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1394, 267, 1155, 451, 452, 1395, 634, 453, 635, 455,
	456, 1396, 0, 457, 0, 1397, 1398, 459, 460, 461,
	1399, 1400, 462, 463, 636, 1156, 464, 1157, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	1401, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 1402, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 1403, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 1404, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 1405, 535, 536, 534, 537,
	538, 539, 1406, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 1407,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 1408, 565, 566, 0, 562,
	554, 1409, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 1410, 575, 647, 648, 649, 650, 1411, 584, 1412,
	576, 577, 578, 651, 579, 652, 1413, 580, 581, 582,
	583, 0, 585, 586, 1414, 1415, 587, 588, 589, 591,
	592, 590, 593, 1416, 594, 1417, 0, 595, 596, 597,
	653, 654, 655, 1418, 599, 598, 600, 656, 1419, 1420,
	1421, 1422, 601, 602, 657, 603, 604, 605, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 1344, 276, 277, 1345, 1346, 1347, 0,
	1348, 606, 1349, 1350, 1351, 1352, 278, 279, 1143, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 1353, 611, 287, 288, 289, 290, 291, 292, 1354,
	1355, 0, 293, 612, 613, 614, 1356, 294, 295, 615,
	1357, 1286, 1358, 296, 297, 298, 299, 300, 301, 302,
	0, 1359, 304, 305, 306, 303, 307, 1360, 308, 0,
	309, 310, 311, 312, 313, 314, 1361, 315, 316, 317,
	1144, 318, 319, 1362, 1363, 1365, 1364, 1366, 1367, 1368,
	320, 321, 322, 323, 0, 324, 616, 617, 1369, 328,
	325, 326, 1370, 329, 327, 1371, 330, 331, 332, 1372,
	1373, 333, 334, 335, 1374, 336, 337, 1375, 338, 339,
	340, 1376, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 1377, 265,
	1378, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 1379, 359, 1380, 1381, 1145, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 1382, 371, 624, 1383, 625, 372, 1384, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 1147, 378, 379,
	1385, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 1386, 1146, 387, 629, 630, 1387, 631,
	1388, 389, 390, 1148, 632, 1149, 391, 392, 393, 1150,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	1389, 401, 403, 402, 1390, 404, 633, 1151, 405, 406,
	1152, 1391, 407, 0, 0, 0, 408, 409, 412, 1392,
	1393, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	1153, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 1154, 441, 1394, 267, 1155, 451, 452,
	1395, 634, 453, 635, 455, 456, 1396, 0, 457, 0,
	1397, 1398, 459, 460, 461, 1399, 1400, 462, 463, 636,
	1156, 464, 1157, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 1401, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 1402, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 1403, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 1404, 512, 513,
	514, 1158, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	1405, 535, 536, 534, 537, 538, 539, 1406, 540, 541,
	524, 525, 542, 543, 1159, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 1407, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	1408, 565, 566, 0, 562, 554, 1409, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 1410, 575, 647, 648,
	649, 650, 1411, 584, 1412, 576, 577, 578, 651, 579,
	652, 1413, 580, 581, 582, 583, 0, 585, 586, 1414,
	1415, 587, 588, 589, 591, 592, 590, 593, 1416, 594,
	1417, 0, 595, 596, 597, 653, 654, 655, 1418, 599,
	598, 600, 656, 1419, 1420, 1421, 1422, 601, 602, 657,
	603, 604, 605, 2428, 0, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	2425, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 2426, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 2424, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 2427, 0, 0,
	0, 0, 0, 0, 1063, 2423, 0, 1025, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 227, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 229, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 1552, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 221, 601, 602,
	657, 603, 604, 605, 1038, 0, 222, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 1795, 1793,
	0, 0, 1061, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 227, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 229,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 1552, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 221,
	601, 602, 657, 603, 604, 605, 1038, 0, 222, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	1795, 3028, 0, 0, 1061, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 227, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 229, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	1552, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 221, 601, 602, 657, 603, 604, 605, 1038, 0,
	222, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 1795, 1793, 0, 0, 1061, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 2556, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 2561, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 2557, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 2558, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 0, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 2473, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 0, 0, 0, 0, 0, 0, 0, 1063, 2471,
	0, 2470, 1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 0, 0, 0, 0, 0,
	0, 0, 1063, 2468, 0, 2467, 1061, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 0,
	0, 0, 0, 0, 0, 0, 1063, 2465, 0, 2464,
	1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 0, 0, 0, 0, 0, 0, 0,
	1063, 2462, 0, 1645, 1061, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	1644, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 0, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 1028, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 1042, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 1063, 0,
	0, 0, 1061, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 4414, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 1042, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	1063, 0, 0, 0, 1061, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 2342, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 2341, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 1063, 0, 0, 0, 1061, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 1042, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 1063, 0, 0, 0, 1061, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 4174, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 1042,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 1063, 0, 0, 0,
	1061, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 3803, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1863, 0, 0, 0, 0, 0, 0, 1063, 0,
	0, 0, 1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 3531, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 1063, 0, 0, 0, 1061, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 1863, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 0, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 2561, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 1063, 0,
	0, 0, 1061, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 0, 0, 0, 0, 0, 0, 0,
	1063, 1793, 0, 2566, 1061, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 0, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 2564, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 0, 0, 0, 0, 0, 0, 0, 1063, 0,
	0, 2552, 1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 0, 0, 0, 0, 0,
	0, 0, 1063, 0, 0, 2541, 1061, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 0,
	0, 0, 0, 0, 0, 0, 1063, 0, 0, 2539,
	1061, 2530, 2537, 1052, 1053, 1049, 1050, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 2533, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 2534, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 2535, 422, 2532, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 2536, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 2531, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 0, 0, 0, 0, 0, 0, 0,
	1063, 0, 0, 2527, 1061, 2530, 2537, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 2533, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 2534, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 2535,
	422, 2532, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 2536, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 2531, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 1063, 0, 0, 0, 1061, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 0,
	0, 0, 0, 0, 1801, 0, 1063, 0, 0, 0,
	1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 2321, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 0, 0, 0, 0, 0, 0, 0,
	1063, 0, 0, 1650, 1061, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 0, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 1582, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 0, 0, 0, 0, 0, 0, 0, 1063, 0,
	0, 1577, 1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 0, 0, 0, 0, 0,
	0, 0, 1063, 0, 0, 1568, 1061, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 0,
	0, 0, 0, 0, 0, 0, 1063, 0, 0, 1563,
	1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 0, 0, 0, 0, 0, 0, 0,
	1063, 0, 0, 1476, 1061, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1475, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 0, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 1470, 1061, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1469, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 0, 0, 0, 0, 0, 0, 0, 1063, 0,
	0, 1463, 1061, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 0, 0, 0, 0, 0,
	0, 0, 1063, 0, 0, 1288, 1061, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 1079,
	1051, 1052, 1053, 1049, 1050, 1062, 1063, 0, 0, 0,
	1061, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 1063, 0,
	0, 0, 1061, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 4459, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	4458, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 1032, 1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	1063, 0, 0, 0, 1061, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 4457,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 1036, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 4459, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 1040, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	1037, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 1035, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 4458, 586, 0, 1041, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1038, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 0,
	0, 0, 0, 1032, 1033, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 1063, 0, 0, 0, 1061, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 1036, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 4117, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 1040, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 4118, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 1037, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 4116, 1047, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	1035, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 1041, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	1038, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 1032, 1033, 1079, 1051, 1052,
	1053, 2995, 2996, 1062, 1063, 0, 0, 0, 1061, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 1148, 1106, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 1155, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 585, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1038, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 1032, 1033, 1079,
	1051, 1052, 1053, 2993, 2994, 1062, 1063, 0, 0, 0,
	1061, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1067, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 1116, 0, 285, 1123,
	286, 1122, 0, 1133, 287, 288, 289, 290, 291, 292,
	1069, 1102, 1036, 293, 1163, 1164, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 1126, 324, 1120, 1119, 1040,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 1111, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 1046, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 1058,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 1118,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 1131, 1132, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 1068, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 1113, 1114, 0,
	1074, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 1037, 267, 1155, 451,
	452, 1059, 1107, 453, 1121, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1117, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 1047, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 1115, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 1162, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 1035, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 1127,
	1128, 1129, 1130, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 1057, 580, 581, 582, 583, 0, 585, 586,
	0, 1041, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 1124, 1161, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1038, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 1032,
	1033, 1079, 1051, 1052, 1053, 1049, 1050, 1062, 1063, 0,
	0, 0, 1061, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 1103, 1067, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 1116, 0,
	285, 1123, 286, 1122, 0, 1133, 287, 288, 289, 290,
	291, 292, 1069, 1102, 1036, 293, 1163, 1164, 614, 0,
	294, 295, 1109, 0, 1090, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 1093, 1091, 1092, 1099,
	1095, 1094, 1098, 320, 321, 322, 323, 1126, 324, 1120,
	1119, 1040, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 1111, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 1046, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 1134, 1135,
	354, 1058, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 1118, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 1131, 1132, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 1141, 0, 1068, 372,
	0, 373, 374, 375, 376, 377, 1104, 1105, 1108, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 1146, 387, 1113,
	1114, 0, 1074, 0, 389, 390, 1148, 1106, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 1142,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 1097, 1096, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 1037, 267,
	1155, 451, 452, 1059, 1107, 453, 1121, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 1136, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 1137,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1117, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 1047,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	1100, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 1115, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 1162, 557, 558, 559, 560,
	1138, 563, 564, 0, 565, 566, 1035, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 1127, 1128, 1129, 1130, 0, 584, 0, 576, 577,
	578, 1139, 579, 1140, 1057, 580, 581, 582, 583, 0,
	585, 586, 0, 1041, 587, 588, 589, 591, 592, 590,
	593, 1101, 594, 0, 0, 595, 596, 597, 653, 1124,
	1161, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 2329, 2330, 1079, 1051, 1052, 1053, 1049, 1050, 1062,
	1063, 0, 0, 0, 1061, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1103, 1067, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	1116, 0, 285, 1123, 286, 1122, 0, 1133, 287, 288,
	289, 290, 291, 292, 1069, 1102, 0, 293, 1163, 1164,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 1126,
	324, 1120, 1119, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 1111, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 1046,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 1058, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 1118, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 1131, 1132, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	1068, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 1113, 1114, 0, 1074, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	0, 267, 1155, 451, 452, 1059, 1107, 453, 1121, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1117, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 1047, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 1115, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 1162, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 1127, 1128, 1129, 1130, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 1057, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 1124, 1161, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 2549, 0, 0, 0,
	0, 0, 0, 2547, 2548, 1079, 1051, 1052, 1053, 1049,
	1050, 1062, 1063, 0, 0, 0, 1061, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1103, 1067,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 1116, 0, 285, 1123, 286, 1122, 0, 1133,
	287, 288, 289, 290, 291, 292, 1069, 1102, 0, 293,
	1163, 1164, 614, 0, 294, 295, 1109, 0, 1090, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322,
	323, 1126, 324, 1120, 1119, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 1046, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 1134, 1135, 354, 1058, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 1118, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1131, 1132, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	1141, 0, 1068, 372, 0, 373, 374, 375, 376, 377,
	1104, 1105, 1108, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 1146, 387, 1113, 1114, 0, 1074, 0, 389, 390,
	1148, 1106, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 1142, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 1097, 1096, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 0, 267, 1155, 451, 452, 1059, 1107, 453,
	1121, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	1136, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 1137, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1117,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 2988, 2989, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1100, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1115, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1162,
	557, 558, 559, 560, 1138, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1127, 1128, 1129, 1130, 0,
	584, 0, 576, 577, 578, 1139, 579, 1140, 1057, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 1101, 594, 0, 0, 595,
	596, 597, 653, 1124, 1161, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 2042, 1079, 1051, 1052,
	1053, 1049, 1050, 1062, 1063, 0, 0, 0, 1061, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	1103, 1067, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 0, 1116, 0, 285, 1123, 286, 1122,
	0, 1133, 287, 288, 289, 290, 291, 292, 1069, 1102,
	1036, 293, 1163, 1164, 614, 0, 294, 295, 1109, 0,
	1090, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 4459, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320,
	321, 322, 323, 1126, 324, 1120, 1119, 1040, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 1111, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 1046, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 1134, 1135, 354, 1058, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 1118, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 1131,
	1132, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 1141, 0, 1068, 372, 0, 373, 374, 375,
	376, 377, 1104, 1105, 1108, 454, 0, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 1146, 387, 1113, 1114, 0, 1074, 0,
	389, 390, 0, 1106, 0, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 1142, 1151, 405, 406, 0,
	0, 407, 0, 0, 0, 408, 409, 412, 1097, 1096,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 1037, 267, 0, 451, 452, 1059,
	1107, 453, 1121, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 1136, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 1137, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1117, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 1047, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 1100, 540, 541, 524,
	525, 542, 543, 0, 544, 545, 546, 547, 548, 549,
	1115, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 1162, 557, 558, 559, 560, 1138, 563, 564, 0,
	565, 566, 1035, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 1127, 1128, 1129,
	1130, 0, 584, 0, 576, 577, 578, 1139, 579, 1140,
	1057, 580, 581, 582, 583, 0, 4458, 586, 0, 1041,
	587, 588, 589, 591, 592, 590, 593, 1101, 594, 0,
	0, 595, 596, 597, 653, 1124, 1161, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 1201, 0, 0, 1032, 1033, 0,
	0, 0, 0, 0, 0, 0, 1063, 0, 0, 0,
	1061, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 278, 279, 1143, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 1102, 0, 293, 612,
	613, 614, 0, 294, 295, 1109, 0, 1090, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 1144, 318, 319, 1093,
	1091, 1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 1134, 1135, 354, 0, 265, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 1145, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 1141,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 1104,
	1105, 1108, 454, 1147, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 266, 384, 385, 386, 388, 0,
	1146, 387, 629, 630, 0, 631, 0, 389, 390, 1148,
	1106, 1149, 391, 392, 393, 1150, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 1187, 401, 403, 402,
	0, 404, 1142, 1151, 405, 406, 1152, 0, 407, 0,
	0, 0, 408, 409, 412, 1097, 1096, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 1153, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 1154,
	441, 0, 267, 1155, 451, 452, 0, 1107, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 1193, 459, 460,
	461, 0, 0, 462, 463, 636, 1156, 464, 1157, 1136,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 1137, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 1158, 515, 516,
	517, 518, 643, 1195, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 227, 535, 536, 534,
	537, 538, 539, 1100, 540, 541, 524, 525, 542, 543,
	1159, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 1138, 563, 564, 0, 565, 566, 0,
	562, 554, 229, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 1139, 579, 1140, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 1101, 594, 0, 0, 595, 596,
	597, 1552, 654, 655, 0, 599, 598, 600, 656, 1201,
	0, 0, 221, 601, 602, 657, 603, 604, 605, 0,
	0, 222, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 1191, 1103, 1887, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 1102, 0, 293, 612, 613, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 0,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 629, 630, 0,
	631, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 1187, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 0, 267, 1155, 451,
	452, 0, 1107, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 1193, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 643, 1195, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 227, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 0, 562, 554, 229, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 1552, 654, 655, 0,
	599, 598, 600, 656, 3172, 0, 1201, 221, 601, 602,
	657, 603, 604, 605, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 1191, 0, 1887, 1103,
	0, 0, 0, 0, 278, 279, 1143, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 1102, 0,
	293, 612, 613, 614, 0, 294, 295, 1109, 0, 1090,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 1144, 318,
	319, 1093, 1091, 1092, 1099, 1095, 1094, 1098, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 1134, 1135, 354, 0, 265, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 1145, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 1141, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 1104, 1105, 1108, 454, 1147, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 266, 384, 385, 386,
	388, 0, 1146, 387, 629, 630, 0, 631, 0, 389,
	390, 1148, 1106, 1149, 391, 392, 393, 1150, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 1187, 401,
	403, 402, 0, 404, 1142, 1151, 405, 406, 1152, 0,
	407, 0, 0, 0, 408, 409, 412, 1097, 1096, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 1153, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 1154, 441, 0, 267, 1155, 451, 452, 0, 1107,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 1193,
	459, 460, 461, 0, 0, 462, 463, 636, 1156, 464,
	1157, 1136, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 1137, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 1158,
	515, 516, 517, 518, 643, 1195, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 1100, 540, 541, 524, 525,
	542, 543, 1159, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 1138, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 1139, 579, 1140, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 1101, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 1183, 0, 1201, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 1191, 0, 1189, 1103, 0, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 1102, 0, 293, 612, 613,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 0, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 629, 630, 0, 631, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 1187, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	0, 267, 1155, 451, 452, 0, 1107, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 1193, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 1195, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 1201, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	1191, 1103, 1189, 0, 0, 0, 278, 279, 1143, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	1102, 0, 293, 612, 613, 614, 0, 294, 295, 1109,
	0, 1090, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 1134, 1135, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 1145, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 1141, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 1104, 1105, 1108, 454, 1147, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 1146, 387, 629, 630, 0, 631,
	0, 389, 390, 1148, 1106, 1149, 391, 392, 393, 1150,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	1187, 401, 403, 402, 0, 404, 1142, 1151, 405, 406,
	1152, 0, 407, 0, 0, 0, 408, 409, 412, 1097,
	1096, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	1153, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 1154, 441, 0, 267, 1155, 451, 452,
	0, 1107, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 1193, 459, 460, 461, 0, 0, 462, 463, 636,
	1156, 464, 1157, 1136, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 1137, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 1158, 515, 516, 517, 518, 643, 1195, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 1100, 540, 541,
	524, 525, 542, 543, 1159, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 1138, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 1139, 579,
	1140, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 1101, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 1201, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 1191, 1103, 1189, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 1102, 0, 293, 612, 613,
	614, 0, 294, 295, 1109, 0, 1090, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 1093, 1091,
	1092, 1099, 1095, 1094, 1098, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	1134, 1135, 354, 0, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 1141, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 1104, 1105,
	1108, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 1146,
	387, 629, 630, 0, 631, 0, 389, 390, 1148, 1106,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 1142, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 1097, 1096, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	0, 267, 1155, 451, 452, 0, 1107, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 1136, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 1137, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 1100, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 1138, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 1139, 579, 1140, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 1101, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 1201, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1103, 3958, 0, 0, 0, 278, 279, 1143, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	1102, 0, 293, 612, 613, 614, 0, 294, 295, 1109,
	0, 1090, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094, 1098,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 1134, 1135, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 1145, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 1141, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 1104, 1105, 1108, 454, 1147, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 1146, 387, 629, 630, 0, 631,
	0, 389, 390, 1148, 1106, 1149, 391, 392, 393, 1150,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 1142, 1151, 405, 406,
	1152, 0, 407, 0, 0, 0, 408, 409, 412, 1097,
	1096, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	1153, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 1154, 441, 0, 267, 1155, 451, 452,
	0, 1107, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	1156, 464, 1157, 1136, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 1137, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 1158, 515, 516, 517, 518, 643, 1195, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 1100, 540, 541,
	524, 525, 542, 543, 1159, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 1138, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 1139, 579,
	1140, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 1101, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 1025, 0, 1281, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 1786, 606, 0,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 1286, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 1146, 387, 629, 630, 0, 631, 0, 389, 390,
	1148, 632, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 0, 0, 1155, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 227, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 229, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 1552, 654, 655, 0, 599, 598, 600, 656,
	1549, 0, 1281, 221, 601, 602, 657, 603, 604, 605,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 183, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 227, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	229, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 1552,
	654, 655, 0, 599, 598, 600, 656, 0, 0, 0,
	221, 601, 602, 657, 603, 604, 605, 0, 0, 222,
	0, 0, 0, 0, 0, 1281, 1280, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 1286, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 1146, 387, 629, 630, 0, 631, 0, 389, 390,
	1148, 632, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 0, 0, 1155, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1280,
	0, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 1143, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 1286, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	1144, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 1145, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 1147, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 1146, 387, 629, 630, 0, 631,
	0, 389, 390, 1148, 632, 1149, 391, 392, 393, 1150,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 1151, 405, 406,
	1152, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	1153, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 1154, 441, 0, 0, 1155, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	1156, 464, 1157, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 1158, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 1159, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 0, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 2137, 0, 0, 0, 0, 2138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3451, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 278,
	279, 1143, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 1286, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 1144, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	1145, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	1147, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 0, 384, 385, 386, 388, 0, 1146, 387, 629,
	630, 0, 631, 0, 389, 390, 1148, 632, 1149, 391,
	392, 393, 1150, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 2136, 403, 402, 0, 404, 633,
	1151, 405, 406, 1152, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 1153, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 1154, 441, 0, 0,
	1155, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 1156, 464, 1157, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 1158, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 1159, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 1280, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 1143, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 1286, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 1144, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 265, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 1145, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 626,
	627, 628, 454, 1147, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 0, 384, 385, 386, 388, 0,
	1146, 387, 629, 630, 0, 631, 0, 389, 390, 1148,
	632, 1149, 391, 392, 393, 1150, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 1151, 405, 406, 1152, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 1153, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 1154,
	441, 0, 0, 1155, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 0, 459, 460,
	461, 0, 0, 462, 463, 636, 1156, 464, 1157, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 1158, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 0, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	1159, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 0, 599, 598, 600, 656, 1201,
	0, 0, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 1103, 1558, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 1102, 0, 293, 612, 613, 614, 0, 294, 295,
	1109, 0, 1090, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 1093, 1091, 1092, 1099, 1095, 1094,
	1098, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 1134, 1135, 354, 0,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 1141, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 1104, 1105, 1108, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 1146, 387, 629, 630, 0,
	631, 0, 389, 390, 1148, 1106, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 1142, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	1097, 1096, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 0, 267, 1155, 451,
	452, 0, 1107, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 1136, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 1137, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 1100, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 1138, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 1139,
	579, 1140, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 1101,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 1025, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 227, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 229, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 1552, 654, 655, 0, 599, 598, 600,
	656, 262, 0, 0, 221, 601, 602, 657, 603, 604,
	605, 0, 0, 222, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 183, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 262, 2903, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	1901, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 262, 0, 0, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 4614, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 262, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 3402, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 262, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 1546, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 0, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 0, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 0,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 262, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	2891, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 262, 0, 0, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 3556, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 0, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 0, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 0,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 868, 0, 776, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	2213, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 783, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 866, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 267, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 781, 567, 568, 569,
	570, 571, 782, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 774, 0, 776, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	786, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 783,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 781, 567, 568, 569, 570, 571, 782,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 1938, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 786, 0, 0,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 0, 1944, 0, 285, 1934, 286, 1950, 0, 1957,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	1960, 1961, 0, 0, 294, 295, 0, 0, 1286, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 1126, 324, 1948, 1947, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 1111,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 0, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 1946, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 1955, 1956, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 0, 373, 374, 375, 376, 377,
	0, 0, 0, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 1146, 387, 1941, 1942, 0, 1937, 0, 389, 390,
	1148, 0, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 0, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 0, 0, 1155, 451, 452, 0, 0, 453,
	1949, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 0, 1156, 464, 1157,
	0, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 1931, 477, 478, 479, 1932,
	480, 481, 482, 0, 483, 0, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1945,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 0, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 1943, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 1959,
	557, 558, 559, 560, 0, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 1951, 1952, 1953, 1954, 0,
	584, 0, 576, 577, 578, 0, 579, 0, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 0, 1935, 1958, 0, 599, 598, 600, 0,
	0, 776, 0, 0, 601, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 1925, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 783, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 781,
	567, 568, 569, 570, 571, 782, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 776, 599, 598, 600, 656, 0, 0, 0, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 786, 606, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 783, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 626, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 2255, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 2256, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 781,
	567, 568, 569, 570, 571, 782, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 2257, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 2007, 0, 1281, 1974,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 786, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 1143, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 1286, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	1144, 318, 319, 0, 0, 0, 0, 0, 0, 1971,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 1145, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 1147, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 1146, 387, 629, 630, 0, 631,
	0, 389, 390, 1148, 632, 1149, 391, 392, 393, 1150,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 1151, 405, 406,
	1152, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	1153, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 1154, 441, 0, 0, 1155, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	1156, 464, 1157, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 1158, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 1972, 540, 541,
	524, 525, 542, 543, 1159, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 1968, 0, 1281, 1974, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 1143, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 1286, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 1144, 318, 319,
	0, 0, 0, 0, 0, 0, 1971, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 1145, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 1147, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 1146, 387, 629, 630, 0, 631, 0, 389, 390,
	1148, 632, 1149, 391, 392, 393, 1150, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 1151, 405, 406, 1152, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 1153, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	1154, 441, 0, 0, 1155, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 1156, 464, 1157,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 1158, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 1972, 540, 541, 524, 525, 542,
	543, 1159, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 776, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 783,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 1964, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 781, 567, 568, 569, 570, 571, 782,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 1963, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 776, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 786, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 783,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 1917, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 781, 567, 568, 569, 570, 571, 782,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 1916, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	0, 0, 1281, 1974, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 786, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 1971, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 1972, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 1281, 1280, 0,
	0, 0, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	1286, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 0, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 626, 627, 628, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 0, 384, 385,
	386, 388, 0, 1146, 387, 629, 630, 0, 631, 0,
	389, 390, 1148, 632, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 0, 0, 1155, 451, 452, 3746,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1281, 1280, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 3373, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 266, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	267, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 1602, 0, 1281,
	1280, 0, 0, 0, 0, 1278, 0, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 1143,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 614, 0, 294, 295,
	615, 0, 1286, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 1144, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	265, 0, 0, 0, 0, 0, 1601, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 1145, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 1147, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 0,
	384, 385, 386, 388, 0, 1146, 387, 629, 630, 0,
	631, 0, 389, 390, 1148, 632, 1149, 391, 392, 393,
	1150, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 1151, 405,
	406, 1152, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 1153, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 1154, 441, 0, 0, 1155, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 1156, 464, 1157, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 1600, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 1158, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 1599, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 0, 540,
	541, 524, 525, 542, 543, 1159, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 0, 0, 0, 0, 601, 602,
	657, 603, 604, 605, 1520, 0, 1281, 1280, 0, 0,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 1143, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 1286,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 1144, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 265, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 1145, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 1519, 627, 628, 454, 1147, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 1146, 387, 629, 630, 0, 631, 0, 389,
	390, 1148, 632, 1149, 391, 392, 393, 1150, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 1151, 405, 406, 1152, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 1153, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 1154, 441, 0, 0, 1155, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 1156, 464,
	1157, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 1158,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 1159, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 0, 0, 0, 0, 601, 602, 657, 603, 604,
	605, 1481, 0, 1281, 1280, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 1143, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 1286, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 1144, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 1145, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 1147, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 1146,
	387, 629, 630, 0, 631, 0, 389, 390, 1148, 632,
	1149, 391, 392, 393, 1150, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 1151, 405, 406, 1152, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 1153, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 1154, 441,
	0, 0, 1155, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 1156, 464, 1157, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 1158, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 1159,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1449, 0,
	1281, 1280, 0, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 278, 279,
	1143, 280, 281, 282, 283, 284, 607, 608, 0, 285,
	609, 286, 610, 0, 611, 287, 288, 289, 290, 291,
	292, 0, 0, 0, 293, 612, 613, 614, 0, 294,
	295, 615, 0, 1286, 0, 296, 297, 298, 299, 300,
	301, 302, 0, 0, 304, 305, 306, 303, 307, 0,
	308, 0, 309, 310, 311, 312, 313, 314, 0, 315,
	316, 317, 1144, 318, 319, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 323, 0, 324, 616, 617,
	0, 328, 325, 326, 0, 329, 327, 0, 330, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 618, 343, 344, 345,
	347, 349, 346, 350, 351, 352, 353, 619, 620, 354,
	0, 265, 0, 0, 0, 0, 0, 355, 356, 357,
	621, 0, 0, 0, 358, 0, 359, 0, 0, 1145,
	360, 361, 622, 623, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 624, 0, 625, 372, 0,
	373, 374, 375, 376, 377, 1448, 627, 628, 454, 1147,
	378, 379, 0, 380, 381, 382, 383, 0, 0, 0,
	0, 384, 385, 386, 388, 0, 1146, 387, 629, 630,
	0, 631, 0, 389, 390, 1148, 632, 1149, 391, 392,
	393, 1150, 394, 0, 0, 0, 395, 396, 397, 398,
	399, 400, 0, 401, 403, 402, 0, 404, 633, 1151,
	405, 406, 1152, 0, 407, 0, 0, 0, 408, 409,
	412, 0, 0, 410, 411, 413, 414, 0, 415, 416,
	418, 421, 417, 419, 420, 422, 435, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 437,
	0, 436, 1153, 438, 439, 440, 445, 447, 448, 443,
	444, 446, 449, 450, 442, 1154, 441, 0, 0, 1155,
	451, 452, 0, 634, 453, 635, 455, 456, 0, 0,
	457, 0, 0, 0, 459, 460, 461, 0, 0, 462,
	463, 636, 1156, 464, 1157, 637, 465, 466, 458, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 475, 476,
	638, 477, 478, 479, 639, 480, 481, 482, 640, 483,
	641, 484, 485, 0, 486, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 642, 495, 497, 496, 498, 0,
	499, 0, 500, 501, 502, 0, 0, 0, 0, 503,
	0, 505, 506, 507, 504, 508, 509, 510, 511, 0,
	512, 513, 514, 1158, 515, 516, 517, 518, 643, 519,
	0, 520, 521, 527, 528, 522, 523, 529, 530, 531,
	532, 533, 0, 535, 536, 534, 537, 538, 539, 0,
	540, 541, 524, 525, 542, 543, 1159, 544, 545, 546,
	547, 548, 549, 644, 0, 550, 0, 551, 552, 553,
	555, 526, 556, 561, 645, 557, 558, 559, 560, 646,
	563, 564, 0, 565, 566, 0, 562, 554, 0, 567,
	568, 569, 570, 571, 572, 573, 348, 574, 0, 575,
	647, 648, 649, 650, 0, 584, 0, 576, 577, 578,
	651, 579, 652, 0, 580, 581, 582, 583, 0, 585,
	586, 0, 0, 587, 588, 589, 591, 592, 590, 593,
	0, 594, 0, 0, 595, 596, 597, 653, 654, 655,
	0, 599, 598, 600, 656, 0, 0, 0, 0, 601,
	602, 657, 603, 604, 605, 1275, 0, 1281, 1280, 0,
	0, 0, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	1286, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 0, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 1274, 627, 628, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 0, 384, 385,
	386, 388, 0, 1146, 387, 629, 630, 0, 631, 0,
	389, 390, 1148, 632, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 0, 0, 1155, 451, 452, 0,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 0, 0, 0, 0, 601, 602, 657, 603,
	604, 605, 1281, 1280, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 1281, 1974, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 1143, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	1286, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 1144,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 2014, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 1145, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 626, 627, 628, 454, 1147, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 0, 384, 385,
	386, 388, 0, 1146, 387, 629, 630, 0, 631, 0,
	389, 390, 1148, 632, 1149, 391, 392, 393, 1150, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 1151, 405, 406, 1152,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 1153,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 1154, 441, 0, 0, 1155, 451, 452, 0,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 1156,
	464, 1157, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	1158, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 1159, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 1281, 1280, 0, 0, 601, 602, 657, 603,
	604, 605, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 1281, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 1143, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 1286, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 1144, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 1145, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 1147, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 1146, 387,
	629, 630, 0, 631, 0, 389, 390, 1148, 632, 1149,
	391, 392, 393, 1150, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 1151, 405, 406, 1152, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 1153, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 1154, 441, 0,
	0, 1155, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 1156, 464, 1157, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 1158, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 1159, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	2716, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 2713, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 2720, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 2916, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 2719,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 2913, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 2915, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 2912, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 2718, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 2914, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	2716, 294, 295, 615, 0, 0, 2710, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 2713, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 2720, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 2719,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 2709, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 2718, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 2717, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 1672, 0, 262,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 614, 0, 294, 295,
	615, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 0, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 0, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 0, 387, 629, 630, 0,
	631, 0, 389, 390, 0, 632, 0, 391, 392, 393,
	0, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 0, 405,
	406, 0, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 0, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 0, 441, 0, 267, 0, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 0, 464, 0, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 0, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 1675, 536, 534, 537, 538, 539, 0, 540,
	541, 524, 525, 542, 543, 0, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 1673, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	1674, 598, 600, 656, 1427, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 265, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 1429, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 266, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 267, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 1193,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 1424, 0, 262, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 1426, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 267, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 1193, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 1332, 0,
	262, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 607, 608, 0, 285,
	609, 286, 610, 0, 611, 287, 288, 289, 290, 291,
	292, 0, 0, 0, 293, 612, 613, 614, 0, 294,
	295, 615, 0, 0, 0, 296, 297, 298, 299, 300,
	301, 302, 0, 0, 304, 305, 306, 303, 307, 0,
	308, 0, 309, 310, 311, 312, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 323, 0, 324, 616, 617,
	0, 328, 325, 326, 0, 329, 327, 0, 330, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 618, 343, 344, 345,
	347, 349, 346, 350, 351, 352, 353, 619, 620, 354,
	0, 265, 0, 0, 0, 0, 0, 355, 356, 357,
	621, 0, 0, 0, 358, 0, 359, 0, 0, 0,
	360, 361, 622, 623, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 624, 0, 625, 372, 0,
	373, 374, 375, 376, 377, 1334, 627, 628, 454, 0,
	378, 379, 0, 380, 381, 382, 383, 0, 0, 0,
	266, 384, 385, 386, 388, 0, 0, 387, 629, 630,
	0, 631, 0, 389, 390, 0, 632, 0, 391, 392,
	393, 0, 394, 0, 0, 0, 395, 396, 397, 398,
	399, 400, 0, 401, 403, 402, 0, 404, 633, 0,
	405, 406, 0, 0, 407, 0, 0, 0, 408, 409,
	412, 0, 0, 410, 411, 413, 414, 0, 415, 416,
	418, 421, 417, 419, 420, 422, 435, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 437,
	0, 436, 0, 438, 439, 440, 445, 447, 448, 443,
	444, 446, 449, 450, 442, 0, 441, 0, 267, 0,
	451, 452, 0, 634, 453, 635, 455, 456, 0, 0,
	457, 0, 0, 1193, 459, 460, 461, 0, 0, 462,
	463, 636, 0, 464, 0, 637, 465, 466, 458, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 475, 476,
	638, 477, 478, 479, 639, 480, 481, 482, 640, 483,
	641, 484, 485, 0, 486, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 642, 495, 497, 496, 498, 0,
	499, 0, 500, 501, 502, 0, 0, 0, 0, 503,
	0, 505, 506, 507, 504, 508, 509, 510, 511, 0,
	512, 513, 514, 0, 515, 516, 517, 518, 643, 519,
	0, 520, 521, 527, 528, 522, 523, 529, 530, 531,
	532, 533, 0, 535, 536, 534, 537, 538, 539, 0,
	540, 541, 524, 525, 542, 543, 0, 544, 545, 546,
	547, 548, 549, 644, 0, 550, 0, 551, 552, 553,
	555, 526, 556, 561, 645, 557, 558, 559, 560, 646,
	563, 564, 0, 565, 566, 0, 562, 554, 0, 567,
	568, 569, 570, 571, 572, 573, 348, 574, 0, 575,
	647, 648, 649, 650, 0, 584, 0, 576, 577, 578,
	651, 579, 652, 0, 580, 581, 582, 583, 0, 585,
	586, 0, 0, 587, 588, 589, 591, 592, 590, 593,
	0, 594, 0, 0, 595, 596, 597, 653, 654, 655,
	0, 599, 598, 600, 656, 689, 0, 262, 0, 601,
	602, 657, 603, 604, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 688, 273,
	274, 275, 678, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	0, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 681, 315, 316, 317, 0,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 0, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 0, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 0, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	682, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 626, 627, 628, 454, 0, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 0, 384, 385,
	386, 388, 0, 0, 387, 629, 630, 0, 631, 0,
	389, 390, 0, 632, 0, 391, 392, 393, 0, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 0, 405, 406, 0,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 0,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 0, 441, 0, 0, 0, 451, 452, 0,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 0,
	464, 0, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	0, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 683,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 0, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 677, 0, 262, 0, 601, 602, 657, 603,
	604, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 678,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 681, 315, 316, 317, 0, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 0, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 682, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 626,
	627, 628, 454, 0, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 0, 384, 385, 386, 388, 0,
	0, 387, 629, 630, 0, 631, 0, 389, 390, 0,
	632, 0, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 0, 405, 406, 0, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 0, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 0,
	441, 0, 0, 0, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 0, 459, 460,
	461, 0, 0, 462, 463, 636, 0, 464, 0, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 683, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	0, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 262, 599, 598, 600, 656, 0,
	0, 0, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 265, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 0, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 626,
	627, 628, 454, 0, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 266, 384, 385, 386, 388, 0,
	0, 387, 629, 630, 0, 631, 0, 389, 390, 0,
	632, 0, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 0, 405, 406, 0, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 0, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 0,
	441, 0, 267, 0, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 1193, 459, 460,
	461, 0, 0, 462, 463, 636, 0, 464, 0, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 0, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	0, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 262, 599, 598, 600, 656, 0,
	0, 0, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 265, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 0, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 626,
	627, 628, 454, 0, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 266, 384, 385, 386, 388, 0,
	0, 387, 629, 630, 0, 631, 0, 389, 390, 0,
	632, 0, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 0, 405, 406, 0, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 0, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 3328,
	441, 0, 267, 0, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 0, 459, 460,
	461, 0, 0, 462, 463, 636, 0, 464, 0, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 0, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	0, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 0, 599, 598, 600, 656, 2861,
	0, 262, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 2860, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 2227, 0, 262, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 267, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 262, 599,
	598, 600, 656, 0, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 267, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 2170, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 2176, 0, 262, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	2175, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	2163, 0, 262, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 2165, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 266, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	267, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 265, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 2133, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 266, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	267, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 1193, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 1524, 0, 262,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 614, 0, 294, 295,
	615, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	265, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 0, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 1523, 627, 628, 454, 0, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 266,
	384, 385, 386, 388, 0, 0, 387, 629, 630, 0,
	631, 0, 389, 390, 0, 632, 0, 391, 392, 393,
	0, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 0, 405,
	406, 0, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 0, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 0, 441, 0, 267, 0, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 0, 464, 0, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 0, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 0, 540,
	541, 524, 525, 542, 543, 0, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 1444, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 265, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 266, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 267, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 1437, 0, 262, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 265, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 1439, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 266, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 267, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 1265, 0,
	262, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 607, 608, 0, 285,
	609, 286, 610, 0, 611, 287, 288, 289, 290, 291,
	292, 0, 0, 0, 293, 612, 613, 614, 0, 294,
	295, 615, 0, 0, 0, 296, 297, 298, 299, 300,
	301, 302, 0, 0, 304, 305, 306, 303, 307, 0,
	308, 0, 309, 310, 311, 312, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 323, 0, 324, 616, 617,
	0, 328, 325, 326, 0, 329, 327, 0, 330, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 618, 343, 344, 345,
	347, 349, 346, 350, 351, 352, 353, 619, 620, 354,
	0, 265, 0, 0, 0, 0, 0, 355, 356, 357,
	621, 0, 0, 0, 358, 0, 359, 0, 0, 0,
	360, 361, 622, 623, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 624, 0, 625, 372, 0,
	373, 374, 375, 376, 377, 1264, 627, 628, 454, 0,
	378, 379, 0, 380, 381, 382, 383, 0, 0, 0,
	266, 384, 385, 386, 388, 0, 0, 387, 629, 630,
	0, 631, 0, 389, 390, 0, 632, 0, 391, 392,
	393, 0, 394, 0, 0, 0, 395, 396, 397, 398,
	399, 400, 0, 401, 403, 402, 0, 404, 633, 0,
	405, 406, 0, 0, 407, 0, 0, 0, 408, 409,
	412, 0, 0, 410, 411, 413, 414, 0, 415, 416,
	418, 421, 417, 419, 420, 422, 435, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 437,
	0, 436, 0, 438, 439, 440, 445, 447, 448, 443,
	444, 446, 449, 450, 442, 0, 441, 0, 267, 0,
	451, 452, 0, 634, 453, 635, 455, 456, 0, 0,
	457, 0, 0, 0, 459, 460, 461, 0, 0, 462,
	463, 636, 0, 464, 0, 637, 465, 466, 458, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 475, 476,
	638, 477, 478, 479, 639, 480, 481, 482, 640, 483,
	641, 484, 485, 0, 486, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 642, 495, 497, 496, 498, 0,
	499, 0, 500, 501, 502, 0, 0, 0, 0, 503,
	0, 505, 506, 507, 504, 508, 509, 510, 511, 0,
	512, 513, 514, 0, 515, 516, 517, 518, 643, 519,
	0, 520, 521, 527, 528, 522, 523, 529, 530, 531,
	532, 533, 0, 535, 536, 534, 537, 538, 539, 0,
	540, 541, 524, 525, 542, 543, 0, 544, 545, 546,
	547, 548, 549, 644, 0, 550, 0, 551, 552, 553,
	555, 526, 556, 561, 645, 557, 558, 559, 560, 646,
	563, 564, 0, 565, 566, 0, 562, 554, 0, 567,
	568, 569, 570, 571, 572, 573, 348, 574, 0, 575,
	647, 648, 649, 650, 0, 584, 0, 576, 577, 578,
	651, 579, 652, 0, 580, 581, 582, 583, 0, 585,
	586, 0, 0, 587, 588, 589, 591, 592, 590, 593,
	0, 594, 0, 0, 595, 596, 597, 653, 654, 655,
	0, 599, 598, 600, 656, 1255, 0, 262, 0, 601,
	602, 657, 603, 604, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	0, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 0, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 265, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 0, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 1254, 627, 628, 454, 0, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 266, 384, 385,
	386, 388, 0, 0, 387, 629, 630, 0, 631, 0,
	389, 390, 0, 632, 0, 391, 392, 393, 0, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 0, 405, 406, 0,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 0,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 0, 441, 0, 267, 0, 451, 452, 0,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 0,
	464, 0, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	0, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 0, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 1252, 0, 262, 0, 601, 602, 657, 603,
	604, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 265, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 0, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 1251,
	627, 628, 454, 0, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 266, 384, 385, 386, 388, 0,
	0, 387, 629, 630, 0, 631, 0, 389, 390, 0,
	632, 0, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 0, 405, 406, 0, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 0, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 0,
	441, 0, 267, 0, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 0, 459, 460,
	461, 0, 0, 462, 463, 636, 0, 464, 0, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 0, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	0, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 0, 599, 598, 600, 656, 1247,
	0, 262, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 265, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 1246, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 266, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 267,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 659, 0, 262, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 265,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 266, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 267, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 253, 0, 262, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 3673, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	3674, 441, 0, 0, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 3676, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 3677, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 3672,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 681, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 682, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 0, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 683, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 2264,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 2262,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 2260,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	2182, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	1993, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 262, 599, 598, 600, 656,
	0, 0, 0, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 265, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	1987, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 266, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 267, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	855, 0, 262, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 854, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	853, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 2916, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 4022, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 262, 599, 598, 600, 656, 0, 0, 0,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 3928, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 3930, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 746, 0, 262,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 1302,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 1300, 0, 294, 295,
	615, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	0, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 0, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 0, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 0,
	384, 385, 386, 388, 0, 0, 387, 629, 630, 0,
	631, 0, 389, 390, 0, 632, 0, 391, 392, 393,
	0, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 0, 405,
	406, 0, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	747, 0, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 0, 441, 0, 0, 0, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 0, 464, 0, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 0, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 743, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 1303, 539, 0, 540,
	541, 524, 525, 542, 543, 0, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 742,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 746, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 1302, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 1300, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 747, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 743, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 1303, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 742, 648, 649, 650,
	0, 584, 0, 576, 1301, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 668, 0, 262, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 667, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 666, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 262, 2903,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 262, 4032, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 4290, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 4285, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 3715, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 2601, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 262, 2903,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 2900, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 262, 599,
	598, 600, 656, 0, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 2237, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 2225, 0, 262, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 295, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 308, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 409, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 436, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 0, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 643, 519, 0, 520, 521, 527, 528,
	522, 523, 529, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 538, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 647, 648, 649, 650, 0,
	584, 0, 576, 577, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	746, 0, 262, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 736, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 747, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 527, 528, 522, 523, 743,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 1557,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 742, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 1530, 0, 262,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 614, 0, 294, 295,
	615, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	0, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 0, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 1529, 627, 628, 454, 0, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 0,
	384, 385, 386, 388, 0, 0, 387, 629, 630, 0,
	631, 0, 389, 390, 0, 632, 0, 391, 392, 393,
	0, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 0, 405,
	406, 0, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 0, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 0, 441, 0, 0, 0, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 0, 464, 0, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 0, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 0, 540,
	541, 524, 525, 542, 543, 0, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 1514, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 1512, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 1508, 0, 262, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 1485, 0,
	262, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 607, 608, 0, 285,
	609, 286, 610, 0, 611, 287, 288, 289, 290, 291,
	292, 0, 0, 0, 293, 612, 613, 614, 0, 294,
	295, 615, 0, 0, 0, 296, 297, 298, 299, 300,
	301, 302, 0, 0, 304, 305, 306, 303, 307, 0,
	308, 0, 309, 310, 311, 312, 313, 314, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 323, 0, 324, 616, 617,
	0, 328, 325, 326, 0, 329, 327, 0, 330, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 618, 343, 344, 345,
	347, 349, 346, 350, 351, 352, 353, 619, 620, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	621, 0, 0, 0, 358, 0, 359, 0, 0, 0,
	360, 361, 622, 623, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 624, 0, 625, 372, 0,
	373, 374, 375, 376, 377, 1483, 627, 628, 454, 0,
	378, 379, 0, 380, 381, 382, 383, 0, 0, 0,
	0, 384, 385, 386, 388, 0, 0, 387, 629, 630,
	0, 631, 0, 389, 390, 0, 632, 0, 391, 392,
	393, 0, 394, 0, 0, 0, 395, 396, 397, 398,
	399, 400, 0, 401, 403, 402, 0, 404, 633, 0,
	405, 406, 0, 0, 407, 0, 0, 0, 408, 409,
	412, 0, 0, 410, 411, 413, 414, 0, 415, 416,
	418, 421, 417, 419, 420, 422, 435, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 437,
	0, 436, 0, 438, 439, 440, 445, 447, 448, 443,
	444, 446, 449, 450, 442, 0, 441, 0, 0, 0,
	451, 452, 0, 634, 453, 635, 455, 456, 0, 0,
	457, 0, 0, 0, 459, 460, 461, 0, 0, 462,
	463, 636, 0, 464, 0, 637, 465, 466, 458, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 475, 476,
	638, 477, 478, 479, 639, 480, 481, 482, 640, 483,
	641, 484, 485, 0, 486, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 642, 495, 497, 496, 498, 0,
	499, 0, 500, 501, 502, 0, 0, 0, 0, 503,
	0, 505, 506, 507, 504, 508, 509, 510, 511, 0,
	512, 513, 514, 0, 515, 516, 517, 518, 643, 519,
	0, 520, 521, 527, 528, 522, 523, 529, 530, 531,
	532, 533, 0, 535, 536, 534, 537, 538, 539, 0,
	540, 541, 524, 525, 542, 543, 0, 544, 545, 546,
	547, 548, 549, 644, 0, 550, 0, 551, 552, 553,
	555, 526, 556, 561, 645, 557, 558, 559, 560, 646,
	563, 564, 0, 565, 566, 0, 562, 554, 0, 567,
	568, 569, 570, 571, 572, 573, 348, 574, 0, 575,
	647, 648, 649, 650, 0, 584, 0, 576, 577, 578,
	651, 579, 652, 0, 580, 581, 582, 583, 0, 585,
	586, 0, 0, 587, 588, 589, 591, 592, 590, 593,
	0, 594, 0, 0, 595, 596, 597, 653, 654, 655,
	0, 599, 598, 600, 656, 1446, 0, 262, 0, 601,
	602, 657, 603, 604, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 607, 608, 0, 285, 609, 286, 610,
	0, 611, 287, 288, 289, 290, 291, 292, 0, 0,
	0, 293, 612, 613, 614, 0, 294, 295, 615, 0,
	0, 0, 296, 297, 298, 299, 300, 301, 302, 0,
	0, 304, 305, 306, 303, 307, 0, 308, 0, 309,
	310, 311, 312, 313, 314, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 323, 0, 324, 616, 617, 0, 328, 325,
	326, 0, 329, 327, 0, 330, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 618, 343, 344, 345, 347, 349, 346,
	350, 351, 352, 353, 619, 620, 354, 0, 0, 0,
	0, 0, 0, 0, 355, 356, 357, 621, 0, 0,
	0, 358, 0, 359, 0, 0, 0, 360, 361, 622,
	623, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 624, 0, 625, 372, 0, 373, 374, 375,
	376, 377, 626, 627, 628, 454, 0, 378, 379, 0,
	380, 381, 382, 383, 0, 0, 0, 0, 384, 385,
	386, 388, 0, 0, 387, 629, 630, 0, 631, 0,
	389, 390, 0, 632, 0, 391, 392, 393, 0, 394,
	0, 0, 0, 395, 396, 397, 398, 399, 400, 0,
	401, 403, 402, 0, 404, 633, 0, 405, 406, 0,
	0, 407, 0, 0, 0, 408, 409, 412, 0, 0,
	410, 411, 413, 414, 0, 415, 416, 418, 421, 417,
	419, 420, 422, 435, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 437, 0, 436, 0,
	438, 439, 440, 445, 447, 448, 443, 444, 446, 449,
	450, 442, 0, 441, 0, 0, 0, 451, 452, 0,
	634, 453, 635, 455, 456, 0, 0, 457, 0, 0,
	0, 459, 460, 461, 0, 0, 462, 463, 636, 0,
	464, 0, 637, 465, 466, 458, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 475, 476, 638, 477, 478,
	479, 639, 480, 481, 482, 640, 483, 641, 484, 485,
	0, 486, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 642, 495, 497, 496, 498, 0, 499, 0, 500,
	501, 502, 0, 0, 0, 0, 503, 0, 505, 506,
	507, 504, 508, 509, 510, 511, 0, 512, 513, 514,
	0, 515, 516, 517, 518, 643, 519, 0, 520, 521,
	527, 528, 522, 523, 529, 530, 531, 532, 533, 0,
	535, 536, 534, 537, 538, 539, 0, 540, 541, 524,
	525, 542, 543, 0, 544, 545, 546, 547, 548, 549,
	644, 0, 550, 0, 551, 552, 553, 555, 526, 556,
	561, 645, 557, 558, 559, 560, 646, 563, 564, 0,
	565, 566, 0, 562, 554, 0, 567, 568, 569, 570,
	571, 572, 573, 348, 574, 0, 575, 647, 648, 649,
	650, 0, 584, 0, 576, 577, 578, 651, 579, 652,
	0, 580, 581, 582, 583, 0, 585, 586, 0, 0,
	587, 588, 589, 591, 592, 590, 593, 0, 594, 0,
	0, 595, 596, 597, 653, 654, 655, 0, 599, 598,
	600, 656, 1432, 0, 262, 0, 601, 602, 657, 603,
	604, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	607, 608, 0, 285, 609, 286, 610, 0, 611, 287,
	288, 289, 290, 291, 292, 0, 0, 0, 293, 612,
	613, 614, 0, 294, 295, 615, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 302, 0, 0, 304, 305,
	306, 303, 307, 0, 308, 0, 309, 310, 311, 312,
	313, 314, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 323,
	0, 324, 616, 617, 0, 328, 325, 326, 0, 329,
	327, 0, 330, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	618, 343, 344, 345, 347, 349, 346, 350, 351, 352,
	353, 619, 620, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 621, 0, 0, 0, 358, 0,
	359, 0, 0, 0, 360, 361, 622, 623, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 624,
	0, 625, 372, 0, 373, 374, 375, 376, 377, 626,
	627, 628, 454, 0, 378, 379, 0, 380, 381, 382,
	383, 0, 0, 0, 0, 384, 385, 386, 388, 0,
	0, 387, 629, 630, 0, 631, 0, 389, 390, 0,
	632, 0, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 396, 397, 398, 399, 400, 0, 401, 403, 402,
	0, 404, 633, 0, 405, 406, 0, 0, 407, 0,
	0, 0, 408, 409, 412, 0, 0, 410, 411, 413,
	414, 0, 415, 416, 418, 421, 417, 419, 420, 422,
	435, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 437, 0, 436, 0, 438, 439, 440,
	445, 447, 448, 443, 444, 446, 449, 450, 442, 0,
	441, 0, 0, 0, 451, 452, 0, 634, 453, 635,
	455, 456, 0, 0, 457, 0, 0, 0, 459, 460,
	461, 0, 0, 462, 463, 636, 0, 464, 0, 637,
	465, 466, 458, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 475, 476, 638, 477, 478, 479, 639, 480,
	481, 482, 640, 483, 641, 484, 485, 0, 486, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 642, 495,
	497, 496, 498, 0, 499, 0, 500, 501, 502, 0,
	0, 0, 0, 503, 0, 505, 506, 507, 504, 508,
	509, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 518, 643, 519, 0, 520, 521, 527, 528, 522,
	523, 529, 530, 531, 532, 533, 0, 535, 536, 534,
	537, 538, 539, 0, 540, 541, 524, 525, 542, 543,
	0, 544, 545, 546, 547, 548, 549, 644, 0, 550,
	0, 551, 552, 553, 555, 526, 556, 561, 645, 557,
	558, 559, 560, 646, 563, 564, 0, 565, 566, 0,
	562, 554, 0, 567, 568, 569, 570, 571, 572, 573,
	348, 574, 0, 575, 647, 648, 649, 650, 0, 584,
	0, 576, 577, 578, 651, 579, 652, 0, 580, 581,
	582, 583, 0, 585, 586, 0, 0, 587, 588, 589,
	591, 592, 590, 593, 0, 594, 0, 0, 595, 596,
	597, 653, 654, 655, 0, 599, 598, 600, 656, 1270,
	0, 262, 0, 601, 602, 657, 603, 604, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 607, 608, 0,
	285, 609, 286, 610, 0, 611, 287, 288, 289, 290,
	291, 292, 0, 0, 0, 293, 612, 613, 614, 0,
	294, 295, 615, 0, 0, 0, 296, 297, 298, 299,
	300, 301, 302, 0, 0, 304, 305, 306, 303, 307,
	0, 308, 0, 309, 310, 311, 312, 313, 314, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 320, 321, 322, 323, 0, 324, 616,
	617, 0, 328, 325, 326, 0, 329, 327, 0, 330,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 618, 343, 344,
	345, 347, 349, 346, 350, 351, 352, 353, 619, 620,
	354, 0, 0, 0, 0, 0, 0, 0, 355, 356,
	357, 621, 0, 0, 0, 358, 0, 359, 0, 0,
	0, 360, 361, 622, 623, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 624, 0, 625, 372,
	0, 373, 374, 375, 376, 377, 1269, 627, 628, 454,
	0, 378, 379, 0, 380, 381, 382, 383, 0, 0,
	0, 0, 384, 385, 386, 388, 0, 0, 387, 629,
	630, 0, 631, 0, 389, 390, 0, 632, 0, 391,
	392, 393, 0, 394, 0, 0, 0, 395, 396, 397,
	398, 399, 400, 0, 401, 403, 402, 0, 404, 633,
	0, 405, 406, 0, 0, 407, 0, 0, 0, 408,
	409, 412, 0, 0, 410, 411, 413, 414, 0, 415,
	416, 418, 421, 417, 419, 420, 422, 435, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	437, 0, 436, 0, 438, 439, 440, 445, 447, 448,
	443, 444, 446, 449, 450, 442, 0, 441, 0, 0,
	0, 451, 452, 0, 634, 453, 635, 455, 456, 0,
	0, 457, 0, 0, 0, 459, 460, 461, 0, 0,
	462, 463, 636, 0, 464, 0, 637, 465, 466, 458,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 475,
	476, 638, 477, 478, 479, 639, 480, 481, 482, 640,
	483, 641, 484, 485, 0, 486, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 642, 495, 497, 496, 498,
	0, 499, 0, 500, 501, 502, 0, 0, 0, 0,
	503, 0, 505, 506, 507, 504, 508, 509, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 518, 643,
	519, 0, 520, 521, 527, 528, 522, 523, 529, 530,
	531, 532, 533, 0, 535, 536, 534, 537, 538, 539,
	0, 540, 541, 524, 525, 542, 543, 0, 544, 545,
	546, 547, 548, 549, 644, 0, 550, 0, 551, 552,
	553, 555, 526, 556, 561, 645, 557, 558, 559, 560,
	646, 563, 564, 0, 565, 566, 0, 562, 554, 0,
	567, 568, 569, 570, 571, 572, 573, 348, 574, 0,
	575, 647, 648, 649, 650, 0, 584, 0, 576, 577,
	578, 651, 579, 652, 0, 580, 581, 582, 583, 0,
	585, 586, 0, 0, 587, 588, 589, 591, 592, 590,
	593, 0, 594, 0, 0, 595, 596, 597, 653, 654,
	655, 0, 599, 598, 600, 656, 1261, 0, 262, 0,
	601, 602, 657, 603, 604, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 1260, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 262, 599,
	598, 600, 656, 0, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 1214, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 262, 599,
	598, 600, 656, 0, 0, 0, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 752, 276, 277, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 607, 608, 0, 285, 609, 286,
	610, 0, 611, 287, 288, 289, 290, 291, 292, 0,
	0, 0, 293, 612, 613, 614, 0, 294, 295, 615,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	0, 0, 304, 305, 306, 303, 307, 0, 308, 0,
	309, 310, 311, 312, 313, 314, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 0, 0, 0, 0, 0,
	320, 321, 322, 323, 0, 324, 616, 617, 0, 328,
	325, 326, 0, 329, 327, 0, 330, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 618, 343, 344, 345, 347, 349,
	346, 350, 351, 352, 353, 619, 620, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 621, 0,
	0, 0, 358, 0, 359, 0, 0, 0, 360, 361,
	622, 623, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 624, 0, 625, 372, 0, 373, 374,
	375, 376, 377, 626, 627, 628, 454, 0, 378, 379,
	0, 380, 381, 382, 383, 0, 0, 0, 0, 384,
	385, 386, 388, 0, 0, 387, 629, 630, 0, 631,
	0, 389, 390, 0, 632, 0, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 396, 397, 398, 399, 400,
	0, 401, 403, 402, 0, 404, 633, 0, 405, 406,
	0, 0, 407, 0, 0, 0, 408, 409, 412, 0,
	0, 410, 411, 413, 414, 0, 415, 416, 418, 421,
	417, 419, 420, 422, 435, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 437, 0, 436,
	0, 438, 439, 440, 445, 447, 448, 443, 444, 446,
	449, 450, 442, 0, 441, 0, 0, 0, 451, 452,
	0, 634, 453, 635, 455, 456, 0, 0, 457, 0,
	0, 0, 459, 460, 461, 0, 0, 462, 463, 636,
	0, 464, 0, 637, 465, 466, 458, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 475, 476, 638, 477,
	478, 479, 639, 480, 481, 482, 640, 483, 641, 484,
	485, 0, 486, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 642, 495, 497, 496, 498, 0, 499, 0,
	500, 501, 502, 0, 0, 0, 0, 503, 0, 505,
	506, 507, 504, 508, 509, 510, 511, 0, 512, 513,
	514, 0, 515, 516, 517, 518, 643, 519, 0, 520,
	521, 527, 528, 522, 523, 529, 530, 531, 532, 533,
	0, 535, 536, 534, 537, 538, 539, 0, 540, 541,
	524, 525, 542, 543, 0, 544, 545, 546, 547, 548,
	549, 644, 0, 550, 0, 551, 552, 553, 555, 526,
	556, 561, 645, 557, 558, 559, 560, 646, 563, 564,
	0, 565, 566, 0, 562, 554, 0, 567, 568, 569,
	570, 571, 572, 573, 348, 574, 0, 575, 647, 648,
	649, 650, 0, 584, 0, 576, 577, 578, 651, 579,
	652, 0, 580, 581, 582, 583, 0, 585, 586, 0,
	0, 587, 588, 589, 591, 592, 590, 593, 0, 594,
	0, 0, 595, 596, 597, 653, 654, 655, 0, 599,
	598, 600, 656, 746, 0, 262, 0, 601, 602, 657,
	603, 604, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 607, 608, 0, 285, 609, 286, 610, 0, 611,
	287, 288, 289, 290, 291, 292, 0, 0, 0, 293,
	612, 613, 614, 0, 294, 736, 615, 0, 0, 0,
	296, 297, 298, 299, 300, 301, 302, 0, 0, 304,
	305, 306, 303, 307, 0, 734, 0, 309, 310, 311,
	312, 313, 314, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 0, 0, 0, 0, 0, 320, 321, 322,
	323, 0, 324, 616, 617, 0, 328, 325, 326, 0,
	329, 327, 0, 330, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 618, 343, 344, 345, 347, 349, 346, 350, 351,
	352, 353, 619, 620, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 621, 0, 0, 0, 358,
	0, 359, 0, 0, 0, 360, 361, 622, 623, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	624, 0, 625, 372, 0, 373, 374, 375, 376, 377,
	626, 627, 628, 454, 0, 378, 379, 0, 380, 381,
	382, 383, 0, 0, 0, 0, 384, 385, 386, 388,
	0, 0, 387, 629, 630, 0, 631, 0, 389, 390,
	0, 632, 0, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 396, 397, 398, 399, 400, 0, 401, 403,
	402, 0, 404, 633, 0, 405, 406, 0, 0, 407,
	0, 0, 0, 408, 735, 412, 0, 0, 410, 411,
	413, 414, 0, 415, 416, 418, 421, 417, 419, 420,
	422, 435, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 437, 0, 747, 0, 438, 439,
	440, 445, 447, 448, 443, 444, 446, 449, 450, 442,
	0, 441, 0, 0, 0, 451, 452, 0, 634, 453,
	635, 455, 456, 0, 0, 457, 0, 0, 0, 459,
	460, 461, 0, 0, 462, 463, 636, 0, 464, 0,
	637, 465, 466, 458, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 475, 476, 638, 477, 478, 479, 639,
	480, 481, 482, 640, 483, 641, 484, 485, 0, 486,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 642,
	495, 497, 496, 498, 0, 499, 0, 500, 501, 502,
	0, 0, 0, 0, 503, 0, 505, 506, 507, 504,
	508, 509, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 518, 737, 519, 0, 520, 521, 527, 528,
	522, 523, 743, 530, 531, 532, 533, 0, 535, 536,
	534, 537, 738, 539, 0, 540, 541, 524, 525, 542,
	543, 0, 544, 545, 546, 547, 548, 549, 644, 0,
	550, 0, 551, 552, 553, 555, 526, 556, 561, 645,
	557, 558, 559, 560, 646, 563, 564, 0, 565, 566,
	0, 562, 554, 0, 567, 568, 569, 570, 571, 572,
	573, 348, 574, 0, 575, 742, 648, 649, 650, 0,
	584, 0, 576, 740, 578, 651, 579, 652, 0, 580,
	581, 582, 583, 0, 585, 586, 0, 0, 587, 588,
	589, 591, 592, 590, 593, 0, 594, 0, 0, 595,
	596, 597, 653, 654, 655, 0, 599, 598, 600, 656,
	728, 0, 262, 0, 601, 602, 657, 603, 604, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 607, 608,
	0, 285, 609, 286, 610, 0, 611, 287, 288, 289,
	290, 291, 292, 0, 0, 0, 293, 612, 613, 614,
	0, 294, 295, 615, 0, 0, 0, 296, 297, 298,
	299, 300, 301, 302, 0, 0, 304, 305, 306, 303,
	307, 0, 308, 0, 309, 310, 311, 312, 313, 314,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 323, 0, 324,
	616, 617, 0, 328, 325, 326, 0, 329, 327, 0,
	330, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 618, 343,
	344, 345, 347, 349, 346, 350, 351, 352, 353, 619,
	620, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 621, 0, 0, 0, 358, 0, 359, 0,
	0, 0, 360, 361, 622, 623, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 624, 0, 625,
	372, 0, 373, 374, 375, 376, 377, 626, 627, 628,
	454, 0, 378, 379, 0, 380, 381, 382, 383, 0,
	0, 0, 0, 384, 385, 386, 388, 0, 0, 387,
	629, 630, 0, 631, 0, 389, 390, 0, 632, 0,
	391, 392, 393, 0, 394, 0, 0, 0, 395, 396,
	397, 398, 399, 400, 0, 401, 403, 402, 0, 404,
	633, 0, 405, 406, 0, 0, 407, 0, 0, 0,
	408, 409, 412, 0, 0, 410, 411, 413, 414, 0,
	415, 416, 418, 421, 417, 419, 420, 422, 435, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 437, 0, 436, 0, 438, 439, 440, 445, 447,
	448, 443, 444, 446, 449, 450, 442, 0, 441, 0,
	0, 0, 451, 452, 0, 634, 453, 635, 455, 456,
	0, 0, 457, 0, 0, 0, 459, 460, 461, 0,
	0, 462, 463, 636, 0, 464, 0, 637, 465, 466,
	458, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	475, 476, 638, 477, 478, 479, 639, 480, 481, 482,
	640, 483, 641, 484, 485, 0, 486, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 642, 495, 497, 496,
	498, 0, 499, 0, 500, 501, 502, 0, 0, 0,
	0, 503, 0, 505, 506, 507, 504, 508, 509, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 518,
	643, 519, 0, 520, 521, 729, 528, 522, 523, 529,
	530, 531, 532, 533, 0, 535, 536, 534, 537, 538,
	539, 0, 540, 541, 524, 525, 542, 543, 0, 544,
	545, 546, 547, 548, 549, 644, 0, 550, 0, 551,
	552, 553, 555, 526, 556, 561, 645, 557, 558, 559,
	560, 646, 563, 564, 0, 565, 566, 0, 562, 554,
	0, 567, 568, 569, 570, 571, 572, 573, 348, 574,
	0, 575, 647, 648, 649, 650, 0, 584, 0, 576,
	577, 578, 651, 579, 652, 0, 580, 581, 582, 583,
	0, 585, 586, 0, 0, 587, 588, 589, 591, 592,
	590, 593, 0, 594, 0, 0, 595, 596, 597, 653,
	654, 655, 0, 599, 598, 600, 656, 691, 0, 262,
	0, 601, 602, 657, 603, 604, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 607, 608, 0, 285, 609,
	286, 610, 0, 611, 287, 288, 289, 290, 291, 292,
	0, 0, 0, 293, 612, 613, 614, 0, 294, 295,
	615, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 0, 0, 304, 305, 306, 303, 307, 0, 308,
	0, 309, 310, 311, 312, 313, 314, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 0, 0, 0, 0,
	0, 320, 321, 322, 323, 0, 324, 616, 617, 0,
	328, 325, 326, 0, 329, 327, 0, 330, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 618, 343, 344, 345, 347,
	349, 346, 350, 351, 352, 353, 619, 620, 354, 0,
	0, 0, 0, 0, 0, 0, 355, 356, 357, 621,
	0, 0, 0, 358, 0, 359, 0, 0, 0, 360,
	361, 622, 623, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 624, 0, 625, 372, 0, 373,
	374, 375, 376, 377, 626, 627, 628, 454, 0, 378,
	379, 0, 380, 381, 382, 383, 0, 0, 0, 0,
	384, 385, 386, 388, 0, 0, 387, 629, 630, 0,
	631, 0, 389, 390, 0, 632, 0, 391, 392, 393,
	0, 394, 0, 0, 0, 395, 396, 397, 398, 399,
	400, 0, 401, 403, 402, 0, 404, 633, 0, 405,
	406, 0, 0, 407, 0, 0, 0, 408, 409, 412,
	0, 0, 410, 411, 413, 414, 0, 415, 416, 418,
	421, 417, 419, 420, 422, 435, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 437, 0,
	436, 0, 438, 439, 440, 445, 447, 448, 443, 444,
	446, 449, 450, 442, 0, 441, 0, 0, 0, 451,
	452, 0, 634, 453, 635, 455, 456, 0, 0, 457,
	0, 0, 0, 459, 460, 461, 0, 0, 462, 463,
	636, 0, 464, 0, 637, 465, 466, 458, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 475, 476, 638,
	477, 478, 479, 639, 480, 481, 482, 640, 483, 641,
	484, 485, 0, 486, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 642, 495, 497, 496, 498, 0, 499,
	0, 500, 501, 502, 0, 0, 0, 0, 503, 0,
	505, 506, 507, 504, 508, 509, 510, 511, 0, 512,
	513, 514, 0, 515, 516, 517, 518, 643, 519, 0,
	520, 521, 527, 528, 522, 523, 529, 530, 531, 532,
	533, 0, 535, 536, 534, 537, 538, 539, 0, 540,
	541, 524, 525, 542, 543, 0, 544, 545, 546, 547,
	548, 549, 644, 0, 550, 0, 551, 552, 553, 555,
	526, 556, 561, 645, 557, 558, 559, 560, 646, 563,
	564, 0, 565, 566, 0, 562, 554, 0, 567, 568,
	569, 570, 571, 572, 573, 348, 574, 0, 575, 647,
	648, 649, 650, 0, 584, 0, 576, 577, 578, 651,
	579, 652, 0, 580, 581, 582, 583, 0, 585, 586,
	0, 0, 587, 588, 589, 591, 592, 590, 593, 0,
	594, 0, 0, 595, 596, 597, 653, 654, 655, 0,
	599, 598, 600, 656, 685, 0, 262, 0, 601, 602,
	657, 603, 604, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 607, 608, 0, 285, 609, 286, 610, 0,
	611, 287, 288, 289, 290, 291, 292, 0, 0, 0,
	293, 612, 613, 614, 0, 294, 295, 615, 0, 0,
	0, 296, 297, 298, 299, 300, 301, 302, 0, 0,
	304, 305, 306, 303, 307, 0, 308, 0, 309, 310,
	311, 312, 313, 314, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 0, 0, 0, 0, 0, 320, 321,
	322, 323, 0, 324, 616, 617, 0, 328, 325, 326,
	0, 329, 327, 0, 330, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 618, 343, 344, 345, 347, 349, 346, 350,
	351, 352, 353, 619, 620, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 621, 0, 0, 0,
	358, 0, 359, 0, 0, 0, 360, 361, 622, 623,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 624, 0, 625, 372, 0, 373, 374, 375, 376,
	377, 626, 627, 628, 454, 0, 378, 379, 0, 380,
	381, 382, 383, 0, 0, 0, 0, 384, 385, 386,
	388, 0, 0, 387, 629, 630, 0, 631, 0, 389,
	390, 0, 632, 0, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 0, 401,
	403, 402, 0, 404, 633, 0, 405, 406, 0, 0,
	407, 0, 0, 0, 408, 409, 412, 0, 0, 410,
	411, 413, 414, 0, 415, 416, 418, 421, 417, 419,
	420, 422, 435, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 437, 0, 436, 0, 438,
	439, 440, 445, 447, 448, 443, 444, 446, 449, 450,
	442, 0, 441, 0, 0, 0, 451, 452, 0, 634,
	453, 635, 455, 456, 0, 0, 457, 0, 0, 0,
	459, 460, 461, 0, 0, 462, 463, 636, 0, 464,
	0, 637, 465, 466, 458, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 475, 476, 638, 477, 478, 479,
	639, 480, 481, 482, 640, 483, 641, 484, 485, 0,
	486, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	642, 495, 497, 496, 498, 0, 499, 0, 500, 501,
	502, 0, 0, 0, 0, 503, 0, 505, 506, 507,
	504, 508, 509, 510, 511, 0, 512, 513, 514, 0,
	515, 516, 517, 518, 643, 519, 0, 520, 521, 527,
	528, 522, 523, 529, 530, 531, 532, 533, 0, 535,
	536, 534, 537, 538, 539, 0, 540, 541, 524, 525,
	542, 543, 0, 544, 545, 546, 547, 548, 549, 644,
	0, 550, 0, 551, 552, 553, 555, 526, 556, 561,
	645, 557, 558, 559, 560, 646, 563, 564, 0, 565,
	566, 0, 562, 554, 0, 567, 568, 569, 570, 571,
	572, 573, 348, 574, 0, 575, 647, 648, 649, 650,
	0, 584, 0, 576, 577, 578, 651, 579, 652, 0,
	580, 581, 582, 583, 0, 585, 586, 0, 0, 587,
	588, 589, 591, 592, 590, 593, 0, 594, 0, 0,
	595, 596, 597, 653, 654, 655, 0, 599, 598, 600,
	656, 663, 0, 262, 0, 601, 602, 657, 603, 604,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 3421, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 3367, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 3295, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 3293, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 3278, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 2871, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 729, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 2200, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 0, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 1232, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 372, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 642, 495, 1166,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 519, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 262, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 607,
	608, 0, 285, 609, 286, 610, 0, 611, 287, 288,
	289, 290, 291, 292, 0, 0, 0, 293, 612, 613,
	614, 0, 294, 295, 615, 0, 0, 0, 296, 297,
	298, 299, 300, 301, 302, 0, 0, 304, 305, 306,
	303, 307, 0, 308, 0, 309, 310, 311, 312, 313,
	314, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 323, 0,
	324, 616, 617, 0, 328, 325, 326, 0, 329, 327,
	0, 330, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 618,
	343, 344, 345, 347, 349, 346, 350, 351, 352, 353,
	619, 620, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 621, 0, 0, 0, 358, 0, 359,
	0, 0, 0, 360, 361, 622, 623, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 624, 0,
	625, 0, 0, 373, 374, 375, 376, 377, 626, 627,
	628, 454, 0, 378, 379, 0, 380, 381, 382, 383,
	0, 0, 0, 0, 384, 385, 386, 388, 0, 0,
	387, 629, 630, 0, 631, 0, 389, 390, 0, 632,
	0, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	396, 397, 398, 399, 400, 0, 401, 403, 402, 0,
	404, 633, 0, 405, 406, 0, 0, 407, 0, 0,
	0, 408, 409, 412, 0, 0, 410, 411, 413, 414,
	0, 415, 416, 418, 421, 417, 419, 420, 422, 435,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 437, 0, 436, 0, 438, 439, 440, 445,
	447, 448, 443, 444, 446, 449, 450, 442, 0, 441,
	0, 0, 0, 451, 452, 0, 634, 453, 635, 455,
	456, 0, 0, 457, 0, 0, 0, 459, 460, 461,
	0, 0, 462, 463, 636, 0, 464, 0, 637, 465,
	466, 458, 467, 468, 0, 470, 471, 472, 473, 474,
	0, 475, 476, 638, 477, 478, 479, 639, 480, 481,
	482, 640, 483, 641, 484, 485, 0, 486, 487, 0,
	488, 489, 490, 491, 0, 493, 494, 642, 495, 497,
	496, 498, 0, 499, 0, 500, 501, 502, 0, 0,
	0, 0, 503, 0, 505, 506, 507, 504, 508, 509,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	518, 643, 0, 0, 520, 521, 527, 528, 522, 523,
	529, 530, 531, 532, 533, 0, 535, 536, 534, 537,
	538, 539, 0, 540, 541, 524, 525, 542, 543, 0,
	544, 545, 546, 547, 548, 549, 644, 0, 550, 0,
	551, 552, 553, 555, 526, 556, 561, 645, 557, 558,
	559, 560, 646, 563, 564, 0, 565, 566, 0, 562,
	554, 0, 567, 568, 569, 570, 571, 572, 573, 348,
	574, 0, 575, 647, 648, 649, 650, 0, 584, 0,
	576, 577, 578, 651, 579, 652, 0, 580, 581, 582,
	583, 0, 585, 586, 0, 0, 587, 588, 589, 591,
	592, 590, 593, 0, 594, 0, 0, 595, 596, 597,
	653, 654, 655, 0, 599, 598, 600, 656, 0, 0,
	0, 0, 601, 602, 657, 603, 604, 605, 1720, 1721,
	0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1751, 0, 0, 0, 0, 1720, 1721, 1723,
	1753, 1754, 1755, 1763, 1764, 1765, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1751, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 1722, 1720, 1721, 1769, 1753, 1754, 1755,
	1763, 1764, 1765, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 1756, 1751, 0,
	0, 0, 1722, 1720, 1721, 1723, 1753, 1754, 1755, 1763,
	1764, 1765, 1742, 1769, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 1756, 1751, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 1722,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 1745, 1746, 1747, 1748, 1722, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 1745, 1746, 1747, 1748, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 1770, 0, 0, 0, 0, 0, 1750,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 0, 0, 1766, 0, 1767, 1760,
	1728, 0, 1770, 0, 0, 1737, 1738, 0, 1750, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 1747, 1748, 1758, 0, 1766, 0, 1767, 0, 1728,
	0, 0, 0, 0, 1737, 1738, 1760, 0, 1743, 1770,
	0, 0, 0, 0, 0, 1750, 1752, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 1767, 1760, 0, 1743, 1770, 0,
	0, 1737, 1738, 0, 1750, 1752, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 1766, 0, 1767, 0, 0, 0, 0, 1757, 0,
	1737, 1738, 0, 0, 1743, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 1759, 0, 0, 0,
	0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 4311, 0, 0, 0, 1759, 0, 0, 0, 0,
	1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732,
	1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0, 0,
	4271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 0, 0, 0, 0, 4270, 0, 0,
	0, 1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762,
	1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727,
	1729, 1730, 0, 0, 1720, 1721, 4101, 1753, 1754, 1755,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 1751, 0,
	0, 0, 0, 1720, 1721, 1723, 1753, 1754, 1755, 1763,
	1764, 1765, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 1751, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 1722,
	1720, 1721, 1769, 1753, 1754, 1755, 1763, 1764, 1765, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 1756, 1751, 0, 0, 0, 1722, 1720,
	1721, 1723, 1753, 1754, 1755, 1763, 1764, 1765, 1742, 1769,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 1756, 1751, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 1722, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 1722, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 1745,
	1746, 1747, 1748, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 1770,
	0, 0, 0, 0, 0, 1750, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 1747, 1748,
	0, 0, 1766, 0, 1767, 1760, 1728, 0, 1770, 0,
	0, 1737, 1738, 0, 1750, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1746, 1747, 1748, 1758,
	0, 1766, 0, 1767, 0, 1728, 0, 0, 0, 0,
	1737, 1738, 1760, 0, 1743, 1770, 0, 0, 0, 0,
	0, 1750, 1752, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	1767, 1760, 0, 1743, 1770, 0, 0, 1737, 1738, 0,
	1750, 1752, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 1766, 0, 1767,
	0, 0, 0, 0, 1757, 0, 1737, 1738, 0, 0,
	1743, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 0, 0, 0, 0, 3954, 0, 0,
	0, 1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762,
	1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727,
	1729, 1730, 0, 0, 0, 0, 3887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 0, 3886, 0, 0, 0, 1759, 0, 0,
	0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733,
	1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0,
	1720, 1721, 3885, 1753, 1754, 1755, 1763, 1764, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 1751, 0, 0, 0, 0, 1720,
	1721, 1723, 1753, 1754, 1755, 1763, 1764, 1765, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1751, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 1722, 1720, 1721, 1769, 1753,
	1754, 1755, 1763, 1764, 1765, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 1756,
	1751, 0, 0, 0, 1722, 1720, 1721, 1723, 1753, 1754,
	1755, 1763, 1764, 1765, 1742, 1769, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1756, 1751,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 1722, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 1745, 1746, 1747, 1748,
	1722, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 1745, 1746, 1747, 1748, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1770, 0, 0, 0, 0,
	0, 1750, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 1746, 1747, 1748, 0, 0, 1766, 0,
	1767, 1760, 1728, 0, 1770, 0, 0, 1737, 1738, 0,
	1750, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1746, 1747, 1748, 1758, 0, 1766, 0, 1767,
	0, 1728, 0, 0, 0, 0, 1737, 1738, 1760, 0,
	1743, 1770, 0, 0, 0, 0, 0, 1750, 1752, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 1767, 1760, 0, 1743,
	1770, 0, 0, 1737, 1738, 0, 1750, 1752, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 1766, 0, 1767, 0, 0, 0, 0,
	1757, 0, 1737, 1738, 0, 0, 1743, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 1759, 0,
	0, 0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 0, 3561, 0, 0, 0, 1759, 0, 0,
	0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733,
	1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0,
	0, 0, 3068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 1734,
	1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732, 1724,
	1725, 1726, 1727, 1729, 1730, 0, 0, 0, 0, 3067,
	0, 0, 0, 1759, 0, 0, 0, 0, 1734, 1735,
	1741, 1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725,
	1726, 1727, 1729, 1730, 0, 0, 1720, 1721, 3066, 1753,
	1754, 1755, 1763, 1764, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	1751, 0, 0, 0, 0, 1720, 1721, 1723, 1753, 1754,
	1755, 1763, 1764, 1765, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 1751,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 1722, 1720, 1721, 1769, 1753, 1754, 1755, 1763, 1764,
	1765, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 1756, 1751, 0, 0, 0,
	1722, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	1742, 1769, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 1745, 1746, 1747, 1748, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1746, 1747, 1748, 0, 0, 0, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 1770, 0, 0, 0, 0, 0, 1750, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	1747, 1748, 0, 0, 1766, 0, 1767, 1760, 1728, 4529,
	1770, 0, 0, 1737, 1738, 0, 1750, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 1766, 0, 1767, 0, 0, 0, 0,
	0, 0, 1737, 1738, 1760, 0, 1743, 1770, 0, 0,
	0, 0, 0, 1750, 1752, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 1767, 0, 0, 1743, 0, 0, 0, 1737,
	1738, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 4528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	1720, 1721, 0, 1753, 1754, 1755, 1763, 1764, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 1756, 1751, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 1734,
	1735, 1741, 1762, 1740, 1736, 1722, 1733, 1731, 1732, 1724,
	1725, 1726, 1727, 1729, 1730, 1742, 0, 0, 0, 3065,
	0, 0, 0, 1759, 1739, 0, 0, 0, 1734, 1735,
	1741, 1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725,
	1726, 1727, 1729, 1730, 0, 0, 3032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 1747, 1748,
	0, 0, 0, 0, 0, 0, 1728, 0, 3152, 0,
	0, 3151, 0, 0, 0, 0, 0, 1720, 1721, 0,
	1753, 1754, 1755, 1763, 1764, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1751, 1760, 0, 0, 1770, 3003, 0, 1723, 0,
	0, 1750, 1752, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	1767, 0, 0, 0, 0, 0, 0, 1737, 1738, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 1758, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 2574, 0, 0, 0, 0,
	1743, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1751, 3004, 0, 0,
	2573, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 1769, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1745, 1746, 1747, 1748, 1722, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 1770, 0, 0, 0, 0, 0, 1750, 1752,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 1767, 0, 0,
	0, 0, 0, 1744, 1737, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	1747, 1748, 1758, 0, 0, 0, 0, 0, 1728, 1761,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 1720,
	1721, 0, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1751, 1760, 0, 0, 1770, 0, 0,
	1723, 0, 0, 1750, 1752, 0, 0, 0, 1769, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 1767, 0, 0, 0, 0, 1757, 0, 1737,
	1738, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1758, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1759, 0,
	0, 0, 1743, 1734, 1735, 1741, 1762, 1740, 1736, 0,
	1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 1745, 1746, 1747, 1748, 0,
	0, 0, 0, 0, 0, 1728, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 1770, 0, 0, 0, 0, 0,
	1750, 1752, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 1767,
	0, 0, 0, 0, 0, 1744, 1737, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 1759, 0, 0, 0, 1743,
	1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731, 1732,
	1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763, 1764,
	1765, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1751, 0, 0, 0,
	0, 0, 1744, 1723, 0, 0, 0, 0, 0, 1720,
	1721, 1769, 1753, 1754, 1755, 1763, 1764, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 1756, 1751, 0, 0, 0, 1722, 1720, 1721,
	1723, 1753, 1754, 1755, 1763, 1764, 1765, 1742, 1769, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 1756, 1751, 0, 0, 0, 3153, 0, 0, 1723,
	0, 0, 0, 0, 1722, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 1759, 1745, 1746,
	1747, 1748, 1734, 1735, 1741, 1762, 1740, 1736, 1728, 1733,
	1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1746, 1747, 1748, 0,
	0, 0, 0, 0, 1760, 1728, 0, 1770, 0, 0,
	3158, 0, 0, 1750, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 1747, 1748, 0, 0,
	1766, 0, 1767, 0, 1728, 0, 0, 0, 0, 1737,
	1738, 1760, 0, 0, 1770, 0, 0, 0, 0, 0,
	1750, 1752, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 1767,
	1760, 0, 1743, 1770, 0, 0, 1737, 1738, 0, 1750,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 1766, 0, 1767, 0,
	0, 0, 0, 0, 0, 1737, 1738, 0, 0, 1743,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763,
	1764, 1765, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 1756, 1751, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 1761, 0,
	0, 1744, 1769, 3542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733,
	1731, 1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 1745,
	1746, 1747, 1748, 0, 0, 0, 1759, 0, 0, 1728,
	0, 1734, 1735, 1741, 1762, 1740, 1736, 0, 1733, 1731,
	1732, 1724, 1725, 1726, 1727, 1729, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 1770, 0,
	0, 0, 0, 0, 1750, 1752, 0, 0, 0, 0,
	0, 0, 1720, 1721, 0, 1753, 1754, 1755, 1763, 1764,
	1765, 1766, 0, 1767, 0, 0, 0, 0, 0, 0,
	1737, 1738, 0, 0, 0, 1756, 1751, 0, 0, 0,
	3069, 0, 0, 1723, 0, 0, 0, 0, 1758, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	1747, 1748, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 1721, 1744, 1753, 1754, 1755,
	1763, 1764, 1765, 0, 1760, 0, 0, 1770, 0, 0,
	0, 0, 0, 1750, 1752, 0, 0, 1756, 1751, 0,
	0, 0, 1761, 0, 0, 1723, 0, 0, 0, 0,
	1766, 0, 1767, 1769, 0, 0, 0, 0, 0, 1737,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1743, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762,
	1740, 1736, 1757, 1733, 1731, 1732, 1724, 1725, 1726, 1727,
	1729, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 1747, 1748, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 913, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1760, 0, 0, 1770,
	0, 921, 0, 0, 0, 1750, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 935, 919, 918,
	0, 0, 1766, 0, 1767, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 920, 0, 0, 1758,
	0, 923, 0, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 0, 0, 1743, 932, 933, 0, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 926, 0, 0,
	0, 0, 0, 0, 1757, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1734, 1735, 1741, 1762, 1740,
	1736, 0, 1733, 1731, 1732, 1724, 1725, 1726, 1727, 1729,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 930, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 937, 936, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 964, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 924, 0,
	0, 966, 1759, 0, 0, 0, 0, 1734, 1735, 1741,
	1762, 1740, 1736, 0, 1733, 1731, 1732, 1724, 1725, 1726,
	1727, 1729, 1730, 922, 0, 0, 0, 953, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 0, 0, 0, 0, 965, 947,
	0, 940, 938, 0, 943, 0, 0, 0, 0, 0,
	944, 0, 0, 915, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 955, 0, 945,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	952,
}

var sqlPact = [...]int{
	8128, -1000, -1000, -1000, -1000, 197, -1000, -1000, 195, 190,
	189, 187, 186, 185, 183, 182, 181, 180, 179, -1000,
	-1000, -1000, -1000, -1000, -1000, 176, -1000, -1000, 175, -1000,
	171, 170, 169, -1000, -1000, 167, -1000, 166, -1000, -1000,
	-1000, -1000, 165, 164, 163, 87141, 86604, 87671, 2243, 108489,
	95119, 1874, 78040, 107952, 77503, 107415, 2063, 9321, 106878, 2658,
	162, -1000, 106341, 161, 160, 159, -1000, 105804, -1000, 1885,
	-1000, 158, 5103, 62991, 157, 156, 155, 2279, 154, -1000,
	151, 149, 148, -1000, 11900, 1457, -1000, 146, 142, -1000,
	6031, 92448, 140, 139, 2367, 138, 136, 62454, 135, 134,
	2342, 2739, -1000, -1000, 1974, -1000, -1000, 133, 132, 131,
	129, 127, 124, 123, 122, 116, 115, 114, -1000, 111,
	109, 107, 106, 105, -1000, 104, 102, 100, -1000, 98,
	-1000, 92, 91, 90, 89, 82, 81, 79, 78, 74,
	72, 71, 70, 69, -1000, 119712, -1000, 1892, 1627, 1625,
	1623, 1620, 1619, 975, 68, 67, 66, 65, 64, 62,
	61, 60, 53, -1000, 50, 45, 44, 36, 34, 33,
	32, 31, 153, 30, 29, 28, 21, 20, 19, 17,
	2535, -1000, 1459, 979, 29605, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 114319, 109019, 16, -159, 15, -1000, 3187, 985, 52219,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 289, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	499, 1910, 757, -1000, -1000, -1000, 105274, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2240, -41, -1000, 1896, -1000,
	-1000, -1000, -1000, -1000, 747, -1000, 2235, 191, 2137, -1000,
	-1000, -1000, 3249, 2369, 3658, 3657, 3656, 3654, 3653, 113789,
	1795, 3651, 2431, 3650, 3649, 3648, 3647, 3644, 3643, 3642,
	-1000, 86067, 1032, 85530, 84993, 3254, 104744, 84456, 104207, 71613,
	44433, 944, 3248, -1000, -1000, -1000, -1000, -1000, -1000, 109019,
	-1000, 1031, -1000, -1000, 3641, 3640, 2006, 743, 94582, -1000,
	1862, -1000, 924, 31291, -1000, 1212, -1000, 31291, 284, -1000,
	-1000, -1000, -1000, -1000, -1000, 3639, 3637, 3636, 3635, 3633,
	-1000, -1000, 76966, 22809, 76429, 75892, 103670, 22262, 83919, 83382,
	103133, 71066, 1028, 1432, -1000, -1000, -1000, -1000, -1000, -1000,
	-4, 68878, 3405, 109019, -1000, 283, -1000, -1000, -1000, -1000,
	-1000, -1000, 43859, 715, 43285, 670, 42711, 651, -1000, -1000,
	-1000, -1000, 70519, -1000, 102596, 2368, 3632, 3630, 1115, 3628,
	3136, 1765, 3627, 1737, 1186, 3624, 3623, 3622, 3621, 3619,
	3618, 3616, 1431, 102059, 2867, 101522, 1634, 69972, 1025, 82845,
	87671, 2513, 100985, 1388, 1382, -1000, -1000, -1000, -1000, 3015,
	2737, 2731, 1316, -1000, -1000, -1000, -1000, 54898, 7073, 7015,
	9461, 100448, 57110, 87671, 87671, -1000, -1000, -1000, -1000, -1000,
	42137, 687, 41563, 883, -1000, -1000, 55451, 2817, -1000, -1000,
	-1000, -1000, 40989, 498, 40415, 717, 109019, -1000, 2866, 1899,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1687, 1594, 3422, 2650, 69425,
	1962, 1392, 3202, 3008, 3002, 1496, 2998, 3615, 2524, 2996,
	2990, 2985, 2983, 2980, 1585, 2478, 411, 29031, 2854, 1628,
	39841, 1525, 1494, 2979, 2933, 3441, 1852, 1963, 1958, 75355,
	3614, 3613, 3162, 2929, 2922, 2696, 2899, -1000, 2809, -1000,
	-1000, -1000, -1000, 1465, -1000, -1000, -1000, -1000, 78570, -1000,
	-1000, 1337, -1000, -1000, 1337, -1000, -1000, -1000, -1000, -1000,
	1361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1459, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1656, -1000, 2005, -1000, -1000, 2469, 3163,
	3163, 3163, 3247, 456, 453, -1000, 153, -1000, -1000, 119523,
	-1000, -1000, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 2069,
	-1000, 742, -1000, -1000, 795, -1000, 741, 611, -1000, -1000,
	-1000, -1000, -1000, -1000, 739, -1000, -1000, -1000, -1000, -1000,
	-1000, 3405, -1000, 25599, -1000, -1000, -1000, 446, 737, 44995,
	-1000, -1000, 3458, 3457, 980, -1000, 267, 954, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2865, 736, 734, -1000, 731, 728, 727, 725, 724, -1000,
	-1000, -1000, 722, 721, 720, 714, 713, 712, 711, 709,
	-1000, 1905, -1000, -1000, -1000, -1000, -1000, -1000, 652, 647,
	647, 647, -1000, 1015, -1000, -1000, -1000, 301, 646, 299,
	644, 642, 641, -1000, 702, 699, 698, 697, 696, 692,
	690, 688, 683, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1014, -1000, -1000, -1000, -1000, -10, 109019, -1000, 499, -10,
	-1000, -1000, 667, -1000, 33551, 33551, 33551, -1000, -1000, 2234,
	44995, -1000, 2360, -1000, 1, 1, 889, 53824, -1000, 51145,
	889, 413, 805, 58717, -1000, 2804, -1000, -1000, 666, 265,
	-1000, -1000, -1000, -1000, 23354, 2802, 109019, 109019, 87671, 87671,
	87671, 3059, 44995, -1000, -1000, 66721, 109019, 88731, -1000, -1000,
	3337, 63521, 66191, 109019, 2859, 65661, 3611, -1000, -1000, -1000,
	-1000, -1000, 3026, 3610, 3608, 3606, -1000, 109019, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 212, 3025, -1000, -1000, 91911,
	212, 3024, -1000, 212, 3023, -1000, 91381, -1000, -1000, 2143,
	3019, -1000, -1000, 216, 3018, -1000, -1000, -1000, 214, 3013,
	-1000, -1000, 251, -46, 3010, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 119523, -1000, -1000,
	-1000, 65124, -1000, 3170, -1000, -1000, 109019, -1000, 44995, -1000,
	3335, 1589, 72693, 3285, -28, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2414, 2445, 1137, 2268, -1000, 3077, 1658, -1000,
	31291, 3125, -1000, -1000, -1000, 240, 23354, -1000, -1000, -1000,
	-1000, -1000, -1000, 2744, 3006, 1343, -1000, 2263, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2151, 3001, -1000, 1804, 3000,
	2096, -1000, -1000, 2408, -1000, 3156, -1000, -1000, 1771, 2968,
	2, -1000, -1000, 2463, -1000, 1796, -1000, 972, 2966, -1000,
	82308, 56557, 55451, 68878, -18, -1000, -1000, -1000, -1000, -204,
	-1000, 21715, 119523, -1000, -1000, -1000, -1000, 1667, 119523, 907,
	-1000, -1000, 2960, -1000, 119523, 882, -1000, -1000, 2959, -1000,
	2857, -1000, -1000, 2326, -1000, -1000, 3605, -1000, -1000, 3602,
	-1000, 3601, 3600, 3599, -1000, 1693, 1865, 3598, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 81778, 2233, -1000, -1000,
	80704, -1000, 2324, 3284, -1000, 81241, 1021, -1000, 972, 2320,
	-1000, 90851, 992, 2316, -1000, 3597, 3253, 2607, 972, 2311,
	-1000, -1000, -1000, -1000, -1000, 1018, -1000, 60317, -1000, 60317,
	-1000, 1553, -1000, 113259, 1, 87671, 3405, -1000, -43, -1000,
	-1000, -1000, 985, -1000, 54361, -1000, 54361, 94045, 72158, 957,
	723, 61917, 119523, -1000, -1000, -1000, -1000, 119523, -1000, -1000,
	-1000, -163, 2643, -1000, 72158, 55451, 119523, -1000, -1000, -1000,
	-1000, 119523, -1000, -1000, -1000, 72158, 80704, -1000, 99911, 80174,
	-1000, -1000, 1425, 2468, -1000, -1000, -1000, 72158, 1287, 72158,
	72158, 72158, -1000, 99374, -1000, -1000, 1989, 1403, 3165, 1987,
	87671, -1000, 1867, -1000, -1000, -1000, 3167, 109019, -1000, -1000,
	2856, -1000, 64587, 90321, -1000, 89791, -1000, 89261, -1000, 87671,
	-1000, 87671, -1000, 3593, 3591, 3589, -1000, -1000, 3588, -1000,
	3587, 3183, -1000, 119523, 3177, -1000, 3586, 3279, 2854, 119523,
	-1000, 2911, 1636, 1630, 109019, -1000, -1000, 109019, -1000, 109019,
	-1000, -1000, -1000, 1499, -1000, -1000, 2412, -1000, -1000, -1000,
	-1000, 87671, -1000, -1000, -1000, -1000, -1000, -1000, 2717, -1000,
	1684, -1000, 1772, -1000, 2795, 3195, -1000, 1415, -1000, -1000,
	223, -1000, -1000, -28, -1000, 112729, -1000, 2469, -1000, 109019,
	-1000, 2430, 2839, 2845, 1736, 2252, 2512, -1000, 39267, 2481,
	48367, 2261, 153, -1000, -1000, 153, 153, 30729, -1000, -1000,
	63521, 63521, 23354, 1347, 44995, 44995, 44995, 44995, 44995, 44995,
	44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995,
	44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995,
	44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, 2088,
	44995, 1348, 44995, 44995, 44995, 44995, 1952, -1000, -1000, 1925,
	556, 1946, -1000, 3392, 3392, 3392, 552, 552, 9167, 9167,
	606, 3585, 795, -1000, 44995, -1000, 88, 44995, 23901, -1000,
	453, 8476, 2422, -1000, 452, 24475, -1000, -1000, -1000, 25599,
	611, 38693, 44995, 1010, 119523, -1000, -1000, 1364, 3414, 21169,
	2875, 2686, 664, 844, 842, 28457, 27883, 27309, 26735, 809,
	44995, 44995, 44995, 44995, 44995, 44995, 44995, 44995, -1000, -1000,
	3429, -1000, 3414, -1000, -1000, -1000, -1000, 3414, 1319, 1190,
	3414, -1000, 3414, 3414, 8593, 8593, 38131, 37557, 36983, 48929,
	36409, 44995, 26161, 35835, 35261, -1000, 109019, -10, 3334, 44995,
	128, -1000, 118111, -1000, 128, 128, 663, -48, 119523, 2494,
	2494, 52754, 2266, 2094, 2094, 2094, -1000, 889, 16772, 889,
	98309, 2112, 889, 889, 234, 236, 449, 50610, 2360, 98309,
	782, 661, 10, 9, 8, -1000, -1000, 7, 6, -1000,
	-1000, 87671, 660, 23901, 23354, 232, 1477, -49, 2496, 2495,
	2485, -1000, 2484, 1677, -62, 1346, 87671, 109019, -56, -1000,
	5314, -65, -1000, 1315, 230, 3414, -1000, -1000, -1000, -1000,
	-1000, 3584, 3583, -1000, 1004, 659, 655, 1001, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 652, 647, 647, 647,
	-1000, 301, 646, 299, 644, 642, 641, -1000, -1000, -1000,
	-1000, -1000, 2792, 87671, 109019, -204, 88731, -70, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 109019, -1000, -1000, -1000,
	3582, -1000, 87671, -1000, -1000, 87671, 212, 2958, -1000, 87671,
	-1000, 87671, 211, 2957, -1000, -1000, 109019, -1000, 87671, 87671,
	-1000, 109019, 109019, 109019, 72158, 72158, 222, -1000, 87671, 879,
	-67, 1122, -28, -1000, -1000, -1000, 1337, -1000, 1776, -1000,
	-1000, -1000, -1000, -1000, -1000, 1407, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 980, -1000, -1000, -1000, -1000, -1000,
	-1000, 3424, 3420, -12, -1000, -1000, 23354, -1000, -29, 1608,
	2144, 1341, -1000, 74818, 2267, 3160, 3580, 2596, 3147, 1549,
	-1000, 1488, -1000, 3251, 78570, 3295, 3307, 619, -1000, 2790,
	-1000, -1000, 923, 1678, 1618, 1339, 1338, 78570, 1804, -1000,
	63521, -1000, 2558, 3246, 1384, 1394, 1384, 1384, 1405, -1000,
	78570, 1617, 1332, 1317, 1309, 1828, 1825, -1000, -1000, -1000,
	1308, 1297, 818, 1822, -1000, -30, 3293, 3302, 120, -1000,
	2786, 1285, -1000, -1000, -1000, 3243, 87671, 23354, 1530, 1527,
	1613, 1282, -17, -1000, 3291, 3290, 1221, 1216, -1000, 2167,
	-1000, 72158, 2092, 2956, 2640, 886, 2639, -1000, -1000, -1000,
	886, -18, 68878, 109019, 229, -1000, 88, 44995, 44995, 88,
	44995, 88, 3277, 2955, -1000, -1000, -1000, -1000, -1000, 3575,
	1841, 2427, -1000, -1000, 638, 2310, 2773, 109019, 2518, -19,
	87671, -1000, 2953, 67258, 1804, 2308, -1000, -1000, 79637, -1000,
	2952, 499, 2307, -1000, 668, 3573, 2951, -1000, 112199, -1000,
	3170, 1377, 2950, 1066, 525, 3333, -1000, 525, 60847, -1000,
	109019, -1000, 1, 6188, 73758, -72, -73, 448, -1000, 98844,
	109019, 1064, 74288, 109019, 3115, 970, 55451, -1000, 55451, -79,
	-163, 2634, 957, 957, 886, -1000, 886, -1000, 87671, 2842,
	-1000, -1000, 72158, 957, 957, 957, -1000, -1000, -1000, -1000,
	3563, 3562, 3561, -1000, -1000, -1000, 971, 87671, 109019, 87671,
	-1000, 221, -1000, 109019, -1000, 109019, 109019, 87671, -1000, 971,
	109019, 971, 109019, 971, 109019, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88, 44995, -1000, -1000, 3559, 1573, -1000, 2841,
	-1000, 2840, -1000, 38, -1000, -1000, -1000, -1000, -1000, 1883,
	-1000, -1000, 87671, 87671, 87671, 87671, 109019, 3097, -1000, 109019,
	3094, 87671, -1000, 78570, -1000, 2430, 2839, -1000, -1000, -1000,
	-1000, -1000, -1000, 1363, 2184, -1000, 2461, -1000, 1523, -1000,
	-1000, -1000, 119523, 49491, -1000, -1000, 119523, 1692, -1000, 47805,
	47243, -1000, -1000, 1706, 87671, 2526, -1000, 2526, -181, -1000,
	118016, 2459, 87671, -1000, -1000, -1000, -1000, -1000, 922, 1387,
	1387, 1266, 1266, 1266, 1266, 3272, 527, 576, 479, 4733,
	4733, 5092, 5092, 5092, 5092, 5092, 4733, 270, 552, 552,
	270, 270, 270, 270, 270, 552, 552, 552, 4733, 4733,
	4733, 9167, 6443, 6687, 44995, 44995, 1214, 1903, 556, 6259,
	44995, 5587, 5587, 5587, 5587, -1000, 2008, -1000, -1000, -1000,
	-1000, 2770, 637, 48929, 48929, -1000, -1000, -1000, -1000, 25037,
	44995, -1000, -1000, -1000, -1000, 34687, -1000, -1000, 117384, -316,
	444, -138, -50, -1000, 44995, 44995, 44995, 424, -1000, 208,
	44995, 109019, -1000, 16061, 779, -270, -1000, -90, 1395, -1000,
	44995, -1000, -1000, 1210, -1000, 1209, 1208, 1207, -1000, 636,
	419, -1000, 205, -1000, 2074, 634, 630, 44995, -1000, -1000,
	-1000, -1000, -1000, 117355, -1000, -1000, 116794, -1000, -1000, 116765,
	-1000, -1000, 116728, -1000, -1000, -1000, 119331, 15703, 15431, 15343,
	7859, 14975, 14717, -91, 418, -98, 417, 921, 901, 402,
	399, 398, -103, -1000, 3554, 3553, 3546, -1000, 3545, 3544,
	3539, -1000, 3538, 3537, 3536, -1000, 3535, 3534, 3533, -1000,
	3532, 3525, 3522, -1000, 3515, 3514, 3511, -1000, 3510, 3506,
	3501, -1000, 3497, 3495, 3491, -105, 397, -1000, 2769, -138,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 395, -1000,
	392, -1000, 119112, -138, 391, 7837, -1000, 48929, 48929, 48929,
	-1000, 389, -1000, 117839, -1000, 118737, 34125, 34125, 34125, 386,
	118708, 44995, -138, -106, -1000, -118, -1000, -1000, 508, -123,
	982, 33551, 51682, 23354, -1000, 982, 982, 44995, -1000, 44995,
	2474, -1000, -1000, -1000, -1000, 2472, 1774, 2494, 52754, -1000,
	-1000, -1000, -1000, 98309, -1000, 3405, 2678, -1000, 98309, -1000,
	-1000, 109019, 499, -1000, 98309, 98309, 23354, 889, -1000, 889,
	98309, 656, -1000, -1000, -1000, -1000, -1000, 385, 57645, -50,
	204, 23354, 972, -1000, 2589, 2589, 2589, 2589, -1000, -1000,
	109019, 1205, -25, -80, 3363, -1000, 1895, -1000, 63521, -1000,
	793, 1141, 23354, -1000, -1000, -1000, 625, -1000, 3414, 3414,
	-1000, 3414, 109019, 2765, 119, 97, 67258, 67258, 3490, -1000,
	-1000, 212, -1000, 87671, 212, 212, -1000, 87671, 87671, 2143,
	-1000, 216, -1000, 214, -1000, -1000, -46, -1000, 986, 31291,
	-1000, 1337, -1000, -1000, 1521, -1000, 1847, -1000, 1165, -1000,
	-1000, -1000, -1000, 31291, -1000, 2163, 109019, 109019, 87671, -1000,
	109019, -1000, 1975, 3361, 1797, 2411, 2410, 67258, -1000, 2300,
	111669, 2295, 63521, 109019, -1000, -1000, 623, 935, 2457, 2456,
	1058, 109019, 109019, 2452, 111139, 110609, -1000, 3489, 109019, 1945,
	44995, 3235, 2048, 2283, 88, 88, -1000, -1000, 88, 622,
	1286, 87671, 87671, 109019, 67258, 87671, 2084, -1000, -1000, -1000,
	-1000, -1000, 79100, -1000, -1000, 3428, 3427, -1000, 1384, -1000,
	-1000, -1000, 1384, 1804, 2068, 109019, 67258, 87671, 67258, 109019,
	109019, 1612, 109019, 1061, -1000, 818, 1928, 88, 88, -1000,
	-1000, 88, 618, 23354, 1888, -1000, 2869, 109019, 3456, 109019,
	109019, 109019, 67258, 3153, 110079, 109019, 109019, 67258, 2167, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	68348, 1071, 972, 1603, 1204, 1202, 78570, 55451, 969, 55451,
	2612, -1000, -1000, 20623, -1000, 119523, 119523, -1000, 119523, -1000,
	64057, 109019, -1000, 1019, 109019, 74288, 940, 2947, 59787, -204,
	957, 72158, 87671, -19, 109019, -1000, -1000, 1804, 2944, 499,
	2299, -1000, 72158, 3330, 2942, 616, 3488, 3487, -1000, 87671,
	2229, 2297, -1000, -1000, 109549, 3005, 818, 109019, 982, 52754,
	1803, -1000, 58182, 1041, 109019, 1727, 95, -1000, -1000, -1000,
	25, 109019, -1000, 804, -1000, -1000, 6188, 6188, 957, -221,
	614, -1000, 868, 866, 56004, 72158, -124, -1000, -1000, -1000,
	-1000, 2295, 87671, 109019, 1254, 2600, 109019, -125, -1000, 203,
	612, -1000, 2509, -1000, -163, -1000, 970, 55451, 2764, -1000,
	-1000, 984, -1000, 1409, 957, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 0, 109019, -204, -204, -24,
	-25, -1000, 971, -1000, 971, -1000, 971, -1000, 119523, -1000,
	-1000, 1568, 1561, 109019, -1000, 23354, 109019, 87671, 23354, 87671,
	2826, 2822, -1000, -1000, -1000, 109019, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1079, -1000, 1692, 2176, -1000, 611, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2391, -1000,
	-26, 30729, 909, -1000, -1000, 87671, -1, 44995, 44995, 5804,
	5539, 44995, 48929, 48929, -1000, 44995, 350, -1000, -1000, -1000,
	-1000, -1000, 2763, 610, 44995, 63521, 8348, 7213, -1000, 384,
	13698, 270, -1000, 44995, -1000, 383, 32989, -1000, 118288, -68,
	-126, -1000, 17331, -138, -136, -1000, -1000, 791, -1000, 2936,
	-1000, 44995, 118671, 2359, 2003, 1763, 1587, 3414, 3455, 20077,
	-1000, 61382, 993, 2118, 116699, -1000, -1000, -1000, -1000, 63521,
	63521, 44995, 44995, -1000, 44995, 44995, 44995, -1000, -1000, -1000,
	3414, 899, -1000, -1000, -1000, 899, -1000, -1000, 1384, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1384, -1000, 44995, -1000, -1000, 2762,
	44995, -1000, 63521, 63521, 48929, 48929, 48929, 48929, 48929, 48929,
	48929, 48929, 48929, 48929, 48929, 48929, 48929, 48929, 48929, 48929,
	48929, 48929, 48929, 2490, 48929, 3379, 3379, 3379, -1000, 2732,
	2762, 44995, 44995, 63521, 380, 378, 375, -1000, 44995, -138,
	-1000, -1000, 6188, 607, -1000, 2381, -1000, 2681, -1000, 44995,
	-1000, -132, -1000, 2360, -1000, -1000, 2681, 2681, -137, 119523,
	52754, 52754, -1000, 601, 44995, 2458, -1000, -1000, 778, -309,
	-1000, 865, -1000, -1000, -1000, -1000, -1000, 499, -1000, -1000,
	-1000, 202, 98309, 98309, 776, -1000, -139, -1000, -1000, -144,
	-1000, 3329, 371, 23354, -1000, 982, 3143, -1000, -1000, -1000,
	-1000, -1000, -1000, -204, 109019, 109019, 2132, 3454, -1000, 3426,
	788, 774, 201, 3414, 369, 366, 365, -204, 109019, 109019,
	109019, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000, 211,
	-1000, -1000, -1000, -1000, 2544, -1000, -28, -1000, -1000, -1000,
	44995, -1000, -1000, 3159, 1200, 1199, -1000, -1000, -1000, -1000,
	3231, 88201, 3360, 1778, 1770, -1000, 2935, -1000, 2294, -1000,
	1049, -1000, 1802, -1000, 44995, 600, 2599, 599, 595, 3486,
	1891, 3484, 1059, 2934, 2143, 2930, 2143, -1000, -1000, -1000,
	930, -1000, 119523, 2048, -1000, 594, 593, -1000, -29, 1577,
	2032, 1194, 981, -1000, -1000, 44995, 44995, 97779, -1000, 475,
	3156, -2, -1000, -1000, -1000, 1602, 1189, 1184, -1000, -1000,
	-1000, -1000, 1804, 1601, 1183, 1180, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 976, -1000, 2887, 2886, 109019, -1000, 974,
	-1000, -1000, 44995, -1000, -30, 1175, 3294, 2292, 87671, 1171,
	-1000, 1166, -1000, -1000, -1000, 3287, 2143, 2924, 1161, -1000,
	-1000, -1000, -1000, -1000, 67803, -1000, 109019, 67258, 87671, 1938,
	886, -1000, 2464, 886, 969, 2752, -1000, 2517, -1000, 87671,
	3483, 359, -145, -31, 63521, 3327, -1000, 2249, 598, 87671,
	885, -1000, 3405, -1000, -1000, -1000, -1000, 3282, 87671, 3326,
	2917, 972, 88, 87671, 3442, -1000, -1000, 3324, 87671, 2915,
	2227, 2291, 2425, 818, 73228, 972, 2115, -44, -1000, 1727,
	32415, 3152, -147, -1000, -1000, -1000, 982, 60847, 52754, 44995,
	3481, -162, -1000, -1000, -1000, -1000, -1000, 95654, 95654, 72158,
	72158, 72158, 957, 109019, 109019, 74288, -1000, -1000, 591, 109019,
	109019, 590, -1000, 109019, 109019, 3479, 72158, -32, 589, -1000,
	861, 839, 835, -1000, -1000, -1000, -1000, -1000, 970, -1000,
	-163, 88, -1000, 2128, 87671, -1000, 19531, -1000, -1000, -1000,
	-1000, -1000, -1000, 971, -1000, -1000, 1950, 2257, 1950, 1711,
	1695, -1000, -1000, 2148, -1000, -1000, -1000, -1000, 2537, 3158,
	23354, 3288, 5587, 44995, 44995, 255, 6364, 4712, 5587, 44995,
	44995, 63521, 9525, -164, 44995, 44995, -1000, 44995, 773, 119523,
	3452, 44995, 357, 356, -1000, -1000, -1000, 3409, -1000, -1000,
	-1000, 119523, 44995, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	355, -1000, 200, -1000, -1000, -1000, 114849, -1000, 44995, 354,
	3227, -1000, 351, 347, 10379, 447, 116138, 116109, 116072, 336,
	-1000, -1000, 330, 328, 119523, 2732, 119523, -1000, -1000, 1067,
	1067, 1349, 1349, 1349, 1349, 3379, 925, 977, 1077, 546,
	546, 546, 843, 1050, 1050, 546, 546, 546, 2750, 2453,
	587, 8442, -1000, -1000, 119523, 119523, 327, -1000, -1000, -1000,
	-138, 326, 6188, -1000, 2673, 3222, 119523, -1000, 52754, 2673,
	2673, -1000, -1000, 1774, 109019, 119523, 52754, -1000, 2678, -1000,
	17888, -1000, 23354, -1000, -1000, -1000, -1000, 3405, -1000, 57645,
	-1000, 586, -1000, 26, -1000, 3143, -1000, 833, -1000, -204,
	-204, -1000, -1000, 772, 3476, 786, 23354, 325, -1000, -1000,
	-1000, -204, -204, -204, -1000, -1000, -1000, 3112, 119523, 109019,
	109019, 1517, 93508, 1689, -1000, -1000, 1818, 2407, -1000, 3357,
	3355, 109019, 2912, -1000, 2000, -1000, 1058, 116043, 53289, -1000,
	53289, 109019, -1000, -1000, 1856, 2516, 1100, -1000, 3193, 109019,
	-1000, 109019, -1000, -1000, -1000, 109019, 109019, 87671, 109019, -1000,
	67258, 2897, -167, 119523, -33, -1000, 832, -1000, 1366, -1000,
	18985, 109019, 67258, 87671, 109019, 67258, 87671, 2030, -1000, -1000,
	-1000, 2894, -169, 23354, -1000, 3451, 3449, 2908, 3198, 3448,
	109019, -1000, 109019, 87671, 3111, -1000, -1000, -1000, -1000, -1000,
	1598, 1163, 1159, 969, -35, 585, -1000, 830, -1000, -1000,
	829, 969, -1000, 72158, 55451, 499, -1000, 2569, -1000, 92978,
	2150, 88, -1000, 3474, 96189, 584, -1000, 2127, -1000, 769,
	67258, 1804, 88, 87671, -1000, -1000, 499, 324, -37, -1000,
	2939, 1055, 23354, 87671, 2907, 2415, 818, 73228, -1000, 1377,
	2512, -1000, -38, -1000, 631, 88, 2115, -1000, -44, 119523,
	-1000, 828, -1000, -170, -1000, -1000, 318, -1000, 3108, 3105,
	-1000, 2690, 53289, 583, 582, 109019, 3102, -1000, -1000, -172,
	2633, 2633, 72158, 55451, 72158, -1000, 970, -1000, 2264, -1000,
	-1000, -1000, -1000, -1000, 23354, 1654, -1000, 575, 574, -1000,
	-1000, -1000, -1000, 3158, 5587, 5587, 44995, 44995, 44995, 5587,
	9525, -175, -1000, 5587, 5587, -138, -1000, -1000, 118288, -1000,
	-1000, -1000, 119523, -1000, 18439, 1953, -1000, 115482, -1000, 30729,
	-1000, -1000, 44995, 44995, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48929, 2727, 573, 63521, -1000, -1000, 307, 991,
	44995, 46681, 2360, 991, 991, -1000, -178, -1000, -1000, -1000,
	3405, 26, -1000, -1000, 3473, 23354, -1000, 72158, 785, -1000,
	3472, -1000, -1000, -1000, -1000, -1000, 2629, 3323, -1000, -1000,
	1817, 2406, -1000, 3322, 1150, 3321, -1000, 109019, -1000, 109019,
	-1000, 23354, 109019, 2729, 2275, -1000, 935, 2440, 566, 48929,
	87671, 887, -1000, 3348, 2648, -183, -1000, 109019, 44995, 109019,
	-184, -190, 2274, -1000, -1000, 2273, 44995, -1000, 63521, 563,
	2143, 2143, -191, -192, -1000, -1000, -1000, 44995, 1149, 109019,
	31853, -1000, 3471, 3156, -1000, -1000, -1000, -1000, -1000, -1000,
	109019, 44995, 1132, -1000, -1000, -1000, 3444, 2143, 23354, -1000,
	2143, 2143, 3198, 1098, 109019, 67258, 87671, -1000, 2375, 2375,
	72158, 55451, -1000, -46, 969, 3320, 2559, 3470, -1000, -1000,
	-1000, -1000, 2439, -1000, -1000, 109019, 2437, 958, -1000, -198,
	-1000, 826, 825, 74288, 940, 929, -1000, -1000, -1000, -1000,
	499, 3319, -1000, 3443, 562, 561, 109019, 2225, 559, 23354,
	3150, 818, 73228, -1000, 3005, 1727, -1000, 2282, 109019, 3146,
	-1000, 2512, 556, -1000, 957, 555, 554, 3142, 3142, -199,
	53289, 53289, -206, 553, 957, -1000, -207, -1000, -1000, -1000,
	-1000, -63, -1000, 859, 858, -1000, -1000, 87671, 87671, 44995,
	44995, -1000, 5587, 5587, 5587, -1000, 304, -1000, -1000, 2115,
	3221, -1000, -84, 115453, 115416, 770, 48929, 63521, -208, -1000,
	-1000, 109019, 119523, -93, -1000, 119523, 532, 531, 451, -1000,
	-1000, -1000, 768, -1000, -1000, 3469, -1000, 97249, 109019, -1000,
	3318, 109019, 96719, 109019, -1000, 1742, -1000, -1000, -1000, 109019,
	2287, -1000, -1000, 1057, 44995, 8442, 526, 44995, -1000, 3317,
	-1000, 2552, 2746, 1878, 53289, -1000, 3158, -1000, 115387, -1000,
	1054, 1799, -1000, -1000, 119523, 3198, 53289, -1000, -1000, 524,
	513, 119523, 512, 822, 2720, -1000, -1000, -1000, -1000, 119523,
	511, 3294, -1000, -1000, -1000, -1000, 2143, 87671, -1000, -1000,
	-1000, -1000, -209, -1000, -1000, 1837, 88, 1944, 2622, -1000,
	2150, 507, -1000, -1000, 2197, 2542, -1000, 96189, 31291, 31291,
	303, 3313, 929, -1000, 3389, -1000, 3312, 88, -1000, 3442,
	53289, -1000, 87671, 53289, 2216, 1869, 2403, 73228, -1000, 2425,
	-1000, -1000, -214, 109019, 1727, -1000, -1000, 72158, 72158, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1054, -215, -220, -1000, 72158, -1000, -1000, 2264, -1000, 109019,
	-1000, 109019, -1000, -1000, -223, -226, -1000, 2039, 44995, 30729,
	-1000, -1000, 770, -229, -1000, -108, -1000, 3299, 46681, 3468,
	3467, 3466, -1000, -1000, -1000, 1812, -1000, 109019, -1000, -1000,
	1807, -1000, -1000, -1000, 2905, 2668, 12966, 2385, 109019, 7147,
	-1000, 2740, -1000, -1000, 2559, 501, -1000, -1000, -1000, -1000,
	909, 109019, 2559, 2667, 87671, 1056, -231, 1950, 1950, 44995,
	30167, 1993, 44995, -1000, -1000, 3198, -1000, 2710, 3402, -1000,
	940, -1000, 1972, 109019, -1000, 3189, -1000, 3101, -1000, -1000,
	-1000, 2569, 88, -1000, -1000, 88, -1000, 302, -234, 1055,
	-239, 87671, 1831, -1000, 818, -1000, 2415, 982, -1000, -1000,
	-240, -242, 1878, 1054, 941, -248, -1000, -249, -250, -1000,
	-1000, 296, 46119, 46119, 46119, -138, -181, -1000, 109019, 500,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2883, 966, -1000,
	2199, 1979, 291, 1065, -1000, -1000, 1928, 109019, -1000, -1000,
	-1000, 965, 499, -1000, 44995, 1054, -251, -1000, 1038, -256,
	-1000, 1037, -257, -1000, 2715, -1000, -258, 2143, 963, 3274,
	-1000, -1000, -1000, 2197, 87671, -259, -1000, -1000, 2158, -1000,
	2559, 958, -1000, -1000, 1054, 496, 1878, 495, 1440, 818,
	-1000, -1000, 1384, 3150, 3050, 957, 957, 2559, 1878, 982,
	493, 957, -1000, -1000, -1000, 2913, -1000, 50053, 2169, 1686,
	117421, 2913, 2913, -1000, -1000, 109019, 3257, -1000, 2210, 2209,
	1467, -1000, -1000, -1000, -1000, -1000, -1000, 2648, -1000, -265,
	3255, 2385, 119523, 2559, -1000, 1950, 2619, -1000, 1950, 2713,
	-1000, 1970, -1000, -1000, -1000, 1624, 3375, 2078, 487, -1000,
	109019, 1669, 1644, 3462, 1944, 2197, 1878, 53289, 2559, 53289,
	-1000, -1000, 109019, -1000, 1869, 1273, -1000, -1000, 1928, 2559,
	-1000, -1000, -1000, 1773, 3343, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 817, -1000, 3069, -1000, 1074, 2133, 2133,
	982, -1000, 816, 2199, -1000, -1000, 486, -1000, 485, -1000,
	2124, -1000, -1000, -1000, -1000, 109019, -1000, -1000, 3408, -1000,
	940, -1000, 2559, -267, 1928, -274, -1000, -204, 1831, -1000,
	1537, 941, 1928, 1679, -1000, -1000, 2106, 45557, 44995, -1000,
	3366, -1000, -1000, 2493, -1000, -1000, 44995, 2648, 44995, 44995,
	59252, -275, -1000, 2197, 1928, 1054, 941, 1878, 1440, 60847,
	982, 941, -1000, -1000, -1000, 119523, -1000, -1000, -1000, 119523,
	-1000, -280, -283, -221, 95654, 2140, 2078, 941, 1878, 982,
	2559, -1000, -272, -1000, 982, 1928, 1128, -289, -1000, -1000,
	-1000, -1000, 982, 2559, -1000, 1928, -1000, -1000, -1000, -1000,
	477, -1000, -1000, 1928, 941, 44995, 941, 982, -290, 982,
	-1000, 1928, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4306, 4305, 4304, 4301, 4297, 4293, 4292, 4289, 4285,
	4282, 4281, 4277, 4276, 4275, 4272, 4271, 4266, 4264, 4262,
	4261, 4260, 4259, 4258, 4254, 4251, 4250, 4247, 4246, 4244,
	4243, 4241, 4240, 4236, 4235, 4233, 4232, 4231, 4229, 4225,
	4219, 4217, 4215, 4213, 4211, 4206, 4204, 4202, 4197, 4196,
	4193, 4192, 4191, 4190, 4189, 4187, 4186, 4185, 4184, 4183,
	4182, 4181, 51, 4175, 4174, 4173, 4171, 4166, 4165, 4163,
	4162, 4157, 4156, 4154, 4153, 4152, 4150, 4149, 4144, 4143,
	4142, 4136, 50, 4131, 254, 4129, 4127, 4125, 4124, 4123,
	4121, 4118, 4110, 4104, 4102, 4099, 4096, 253, 4095, 133,
	4089, 4084, 4082, 4081, 4080, 252, 4078, 4077, 4075, 4073,
	263, 4069, 4068, 4067, 4066, 4062, 4059, 4057, 4052, 4051,
	4048, 4047, 86, 184, 4045, 4044, 201, 4043, 4042, 4041,
	4040, 4038, 4037, 4036, 4034, 4033, 4032, 229, 4029, 250,
	4027, 4025, 4024, 4023, 4022, 4021, 4020, 4019, 4018, 4017,
	4015, 4010, 4009, 4004, 4002, 4001, 4000, 3995, 3994, 3991,
	3990, 3989, 3988, 3987, 3983, 3982, 3980, 3979, 3976, 3975,
	3972, 3968, 3965, 3963, 3962, 3961, 226, 262, 180, 3960,
	3958, 249, 247, 3957, 3955, 3953, 3952, 3951, 118, 6,
	296, 3948, 3947, 99, 78, 73, 100, 101, 96, 3945,
	109, 3944, 117, 65, 3943, 19, 2, 283, 225, 10885,
	220, 3940, 3938, 3936, 231, 183, 3935, 222, 3934, 3931,
	3930, 3929, 57, 45, 168, 164, 162, 157, 255, 3927,
	147, 97, 77, 53, 44, 16, 75, 241, 17, 3926,
	240, 10, 134, 1, 35, 3923, 3922, 3919, 3917, 3346,
	122, 3915, 246, 228, 160, 3914, 3913, 3912, 337, 3910,
	3909, 46, 3908, 115, 83, 114, 66, 113, 3906, 138,
	29, 3905, 155, 76, 3904, 148, 94, 89, 9221, 7626,
	3900, 121, 60, 119, 3155, 174, 153, 188, 81, 151,
	152, 187, 197, 196, 165, 63, 3899, 232, 3898, 3324,
	72, 167, 3895, 3894, 3892, 85, 189, 105, 3891, 3889,
	71, 11, 3, 4, 9, 137, 23, 22, 18, 3882,
	30, 110, 41, 32, 3879, 26, 3877, 3874, 3871, 3870,
	3868, 62, 149, 3867, 261, 3866, 80, 49, 21, 3865,
	38, 202, 3863, 208, 131, 3862, 3860, 236, 191, 169,
	3856, 68, 214, 3855, 3854, 3852, 3847, 3846, 129, 7,
	120, 3842, 3841, 141, 3840, 47, 223, 186, 3838, 64,
	3837, 3832, 159, 106, 132, 258, 111, 210, 108, 211,
	170, 213, 3831, 3830, 3829, 171, 3827, 3826, 204, 146,
	3825, 3824, 193, 264, 88, 43, 84, 221, 79, 182,
	158, 3822, 190, 3821, 3819, 260, 166, 203, 14, 13,
	92, 124, 3818, 5, 215, 145, 217, 104, 3816, 6239,
	1898, 1925, 3815, 3813, 139, 116, 59, 140, 143, 243,
	70, 3811, 3810, 2603, 3805, 3802, 3801, 3800, 175, 3799,
	3797, 3796, 136, 150, 172, 3795, 91, 61, 48, 24,
	112, 239, 259, 107, 206, 161, 234, 3794, 3792, 3791,
	176, 3789, 128, 173, 3787, 192, 237, 54, 3786, 87,
	3785, 142, 474, 55, 144, 3784, 207, 3782, 3780, 3779,
	3777, 3773, 3772, 3771, 356, 218, 3770, 3769, 3768, 33,
	181, 3767, 242, 177, 198, 103, 58, 3762, 90, 3206,
	3743, 178, 1994, 52, 244, 990, 245, 3740, 3907, 56,
	3729, 0, 12552, 7391, 10576, 11063, 3728, 3808, 3727, 3725,
	3724, 199, 135, 3722, 3720, 3719, 102, 3718, 82, 3717,
	3716, 69, 3715, 27, 15, 20, 31, 28, 314, 123,
	3713, 3710, 67, 127, 125, 3709, 256, 212, 3708, 3706,
	3705, 3704, 93, 3702, 39, 3701, 37, 3699, 3697, 40,
	8, 34, 3696, 3695, 235, 3694, 200, 233, 3693, 156,
	3688, 3315, 130, 3687, 3686, 238, 95, 3685, 273, 3684,
	3270, 3681, 3680, 25, 3679, 3678, 219, 163, 195, 3677,
	3676, 154, 3675, 3674, 3673, 270, 3672, 3670, 3669, 36,
	3668, 12, 3666, 3665, 194, 3056, 3664, 3662, 42, 3661,
	179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 16, 16,
	36, 36, 17, 17, 38, 38, 18, 18, 39, 39,
	575, 575, 21, 41, 22, 42, 15, 576, 576, 576,
	576, 34, 23, 43, 27, 27, 27, 27, 27, 191,
	191, 191, 191, 20, 20, 37, 37, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 574, 574, 227, 227, 226, 221, 221,
	577, 577, 228, 228, 228, 230, 230, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 473, 473, 473, 506,
	506, 505, 505, 505, 504, 504, 590, 590, 591, 591,
	591, 591, 591, 125, 125, 371, 371, 371, 51, 51,
	51, 51, 51, 569, 569, 193, 193, 193, 195, 195,
	194, 194, 194, 194, 73, 73, 582, 582, 583, 583,
	581, 584, 584, 584, 192, 192, 192, 121, 121, 121,
	121, 121, 122, 122, 123, 123, 196, 196, 196, 198,
	198, 197, 197, 197, 197, 197, 197, 197, 197, 202,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 101,
	101, 508, 508, 509, 509, 187, 187, 188, 188, 188,
	188, 189, 189, 190, 190, 190, 65, 199, 199, 201,
	201, 200, 200, 53, 53, 53, 53, 53, 53, 53,
	54, 54, 54, 54, 54, 55, 55, 55, 55, 55,
	55, 56, 56, 56, 56, 56, 56, 63, 63, 63,
	63, 178, 178, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 70, 70, 70, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 593, 593, 594, 594,
	595, 595, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 79,
	79, 333, 333, 298, 298, 80, 80, 80, 81, 81,
	82, 82, 67, 67, 567, 567, 348, 348, 464, 464,
	84, 84, 370, 370, 85, 85, 85, 85, 85, 85,
	86, 86, 86, 86, 86, 86, 86, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 94, 94, 94, 94, 94, 95, 95, 95, 92,
	92, 92, 89, 89, 89, 88, 88, 88, 93, 93,
	93, 566, 287, 287, 91, 91, 91, 90, 90, 90,
	349, 349, 96, 96, 96, 96, 299, 97, 97, 97,
	97, 97, 97, 97, 97, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 466, 466,
	98, 98, 98, 431, 431, 102, 102, 102, 386, 386,
	103, 103, 103, 103, 103, 104, 104, 104, 104, 104,
	104, 124, 124, 124, 124, 124, 124, 571, 571, 341,
	341, 252, 252, 252, 252, 114, 114, 114, 114, 115,
	115, 115, 116, 116, 183, 183, 131, 131, 131, 131,
	131, 130, 130, 130, 130, 130, 130, 57, 57, 57,
	58, 58, 59, 59, 60, 60, 61, 61, 62, 62,
	62, 62, 62, 133, 133, 587, 587, 135, 132, 132,
	132, 134, 134, 134, 134, 136, 137, 137, 137, 137,
	137, 137, 137, 137, 138, 138, 498, 498, 357, 357,
	496, 496, 518, 518, 497, 497, 303, 303, 303, 303,
	303, 304, 304, 304, 507, 507, 507, 507, 507, 507,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 184, 184, 185,
	186, 186, 186, 186, 186, 162, 162, 162, 177, 177,
	177, 177, 177, 177, 177, 165, 165, 165, 149, 149,
	140, 140, 140, 140, 140, 140, 140, 144, 144, 144,
	144, 144, 144, 144, 144, 141, 141, 151, 151, 151,
	151, 151, 145, 145, 146, 146, 146, 146, 172, 172,
	148, 148, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 142, 142, 142, 142, 153, 153, 153, 153, 393,
	393, 393, 176, 176, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 175, 175, 175, 175, 175,
	175, 585, 585, 586, 586, 169, 169, 169, 169, 169,
	169, 445, 445, 163, 163, 163, 163, 168, 168, 168,
	168, 171, 171, 171, 171, 376, 376, 160, 160, 160,
	161, 161, 161, 166, 166, 167, 164, 164, 170, 170,
	170, 170, 143, 143, 143, 597, 597, 597, 173, 173,
	159, 159, 174, 174, 174, 174, 174, 174, 174, 174,
	598, 598, 155, 155, 155, 154, 154, 154, 154, 157,
	157, 158, 158, 158, 158, 158, 158, 156, 147, 568,
	568, 564, 564, 564, 564, 564, 564, 564, 564, 565,
	565, 565, 565, 570, 570, 107, 107, 107, 107, 107,
	117, 117, 117, 117, 117, 108, 108, 108, 108, 108,
	110, 110, 109, 109, 109, 109, 74, 74, 74, 74,
	74, 14, 14, 14, 75, 75, 243, 243, 205, 205,
	205, 322, 322, 206, 206, 311, 311, 311, 311, 203,
	203, 204, 204, 76, 76, 599, 599, 599, 578, 578,
	578, 579, 579, 579, 579, 579, 579, 305, 305, 306,
	306, 411, 411, 411, 411, 411, 309, 309, 309, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 312, 312,
	229, 229, 229, 320, 321, 321, 313, 313, 319, 318,
	318, 317, 317, 316, 316, 314, 315, 315, 315, 324,
	324, 323, 326, 326, 325, 410, 527, 527, 529, 529,
	529, 529, 529, 529, 529, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 394, 394, 600, 600,
	525, 525, 525, 526, 521, 521, 522, 522, 522, 522,
	522, 307, 307, 308, 308, 308, 308, 523, 524, 339,
	339, 449, 528, 528, 530, 530, 532, 601, 601, 601,
	601, 601, 601, 602, 602, 602, 409, 409, 408, 408,
	331, 331, 533, 533, 533, 533, 534, 534, 534, 534,
	534, 537, 536, 535, 535, 535, 535, 535, 78, 78,
	78, 373, 373, 372, 372, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	180, 180, 255, 255, 72, 72, 72, 12, 12, 12,
	580, 580, 580, 77, 77, 77, 77, 77, 77, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 573,
	573, 572, 572, 256, 256, 604, 604, 83, 83, 83,
	83, 83, 83, 83, 83, 467, 467, 468, 468, 71,
	71, 71, 71, 71, 395, 395, 392, 392, 391, 391,
	338, 338, 447, 447, 447, 448, 260, 260, 261, 261,
	222, 222, 222, 29, 28, 19, 19, 24, 24, 25,
	25, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 26, 26, 45, 45, 45, 45, 46, 46,
	46, 46, 49, 49, 50, 50, 44, 44, 44, 44,
	47, 47, 40, 40, 588, 588, 589, 589, 113, 113,
	118, 118, 118, 118, 118, 119, 119, 119, 119, 120,
	120, 120, 120, 129, 129, 179, 179, 179, 179, 179,
	179, 179, 52, 52, 52, 52, 64, 64, 64, 64,
	127, 606, 606, 606, 128, 128, 128, 605, 605, 253,
	253, 405, 405, 406, 406, 607, 607, 407, 407, 407,
	407, 407, 246, 245, 247, 247, 248, 248, 69, 69,
	69, 238, 238, 237, 235, 235, 510, 510, 240, 240,
	241, 241, 231, 231, 232, 232, 233, 233, 234, 234,
	244, 244, 608, 608, 105, 105, 105, 182, 182, 297,
	297, 297, 402, 402, 402, 332, 332, 267, 267, 404,
	404, 404, 404, 369, 369, 369, 181, 181, 346, 346,
	359, 359, 360, 360, 461, 461, 361, 111, 111, 112,
	112, 126, 126, 209, 209, 207, 207, 207, 207, 207,
	207, 207, 207, 214, 214, 215, 215, 216, 216, 217,
	218, 218, 218, 218, 350, 350, 219, 219, 219, 208,
	208, 208, 210, 210, 210, 210, 210, 210, 210, 213,
	213, 213, 213, 220, 220, 220, 212, 212, 544, 544,
	544, 546, 546, 548, 548, 547, 547, 543, 543, 545,
	545, 603, 603, 375, 375, 375, 329, 330, 327, 327,
	328, 328, 336, 336, 334, 335, 335, 337, 337, 446,
	446, 446, 223, 223, 223, 366, 366, 366, 366, 367,
	367, 398, 398, 396, 396, 396, 396, 397, 397, 399,
	399, 399, 400, 400, 401, 401, 363, 363, 364, 364,
	365, 365, 365, 365, 427, 427, 211, 211, 211, 343,
	343, 343, 344, 344, 417, 417, 417, 417, 417, 417,
	418, 418, 416, 416, 416, 416, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 451, 452, 452, 345, 345,
	453, 403, 403, 562, 562, 562, 563, 563, 444, 444,
	454, 454, 454, 454, 454, 454, 442, 442, 443, 443,
	462, 463, 463, 379, 379, 379, 379, 377, 377, 380,
	380, 380, 380, 380, 378, 378, 455, 455, 455, 455,
	368, 368, 456, 456, 456, 456, 457, 458, 458, 459,
	459, 412, 413, 413, 469, 469, 469, 469, 471, 342,
	342, 342, 342, 342, 520, 519, 519, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 486, 486,
	486, 486, 486, 486, 486, 472, 472, 472, 472, 472,
	476, 476, 476, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 477, 477, 482, 482, 483, 483,
	483, 478, 479, 484, 484, 484, 484, 609, 609, 488,
	488, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	474, 474, 474, 481, 481, 481, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 387,
	387, 389, 389, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	421, 421, 421, 421, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 538,
	538, 538, 538, 538, 538, 538, 538, 423, 423, 541,
	541, 542, 542, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 549, 549, 550, 550, 552, 552, 553, 553,
	554, 555, 555, 555, 556, 557, 557, 551, 551, 558,
	558, 558, 558, 559, 559, 560, 560, 560, 560, 560,
	561, 561, 561, 561, 561, 433, 433, 434, 434, 440,
	440, 440, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 257, 257,
	257, 257, 257, 355, 355, 353, 353, 353, 356, 356,
	354, 354, 352, 352, 351, 351, 430, 430, 428, 428,
	432, 432, 381, 381, 487, 487, 487, 487, 487, 487,
	487, 487, 382, 382, 382, 390, 383, 383, 384, 384,
	384, 384, 384, 424, 425, 385, 385, 385, 426, 426,
	435, 439, 439, 438, 437, 437, 436, 436, 414, 414,
	415, 415, 362, 362, 610, 610, 358, 358, 460, 460,
	460, 460, 301, 301, 347, 347, 300, 300, 292, 292,
	293, 293, 293, 293, 340, 340, 441, 441, 489, 489,
	490, 490, 491, 491, 492, 492, 493, 494, 495, 429,
	429, 277, 276, 264, 265, 275, 274, 273, 263, 266,
	270, 271, 272, 268, 269, 283, 282, 281, 236, 239,
	288, 289, 289, 291, 291, 290, 290, 279, 280, 465,
	262, 294, 294, 295, 295, 295, 296, 296, 296, 296,
	258, 258, 259, 259, 284, 284, 285, 286, 286, 278,
	278, 278, 249, 249, 249, 250, 250, 251, 251, 503,
	503, 500, 500, 500, 501, 501, 501, 502, 502, 502,
	502, 499, 499, 499, 499, 499, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 512, 512, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 514, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 12, 3, 1, 0, 1, 1,
	2, 3, 3, 0, 4, 6, 0, 5, 7, 6,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 2, 0, 1,
	2, 3, 1, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 6, 3, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	2, 6, 4, 7, 7, 7, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 2,
	6, 3, 3, 4, 4, 3, 1, 3, 2, 3,
	3, 1, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 8,
	4, 2, 5, 5, 5, 2, 2, 0, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 6, 4, 4, 5,
	5, 7, 3, 3, 4, 4, 6, 3, 6, 7,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 576, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-134, -135, 444, -52, -64, -128, -127, 73, 127, 403,
	-4, -12, 30, 46, -54, -55, -56, 62, -72, -68,
	-79, -73, -70, -592, 102, -545, -87, -90, -120, -596,
	158, 215, -108, -109, 358, -115, -116, 410, -118, -119,
	412, 159, -59, -58, 153, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 449, -167, 508, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	409, -210, -208, 573, 523, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 542, 551, -213, -211, -212, -220, 436, 531, 482,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 165, 224, 322, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 53, 55, 59, 60, 61,
	62, 63, 64, 68, 73, 74, 79, 80, 81, 82,
	83, 84, 85, 91, 88, 89, 90, 92, 94, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 107, 108,
	116, 117, 118, 119, 121, 126, 127, 130, 125, 129,
	132, 133, 134, 137, 138, 139, 141, 142, 144, 145,
	146, 148, 149, 151, 152, 153, 156, 154, 490, 155,
	157, 158, 159, 160, 163, 171, 172, 173, 178, 180,
	184, 185, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 198, 202, 204, 205, 206, 207, 208, 214, 215,
	217, 218, 219, 220, 225, 226, 227, 231, 228, 237,
	238, 242, 243, 244, 246, 250, 251, 252, 253, 254,
	255, 257, 259, 258, 261, 264, 265, 268, 272, 273,
	277, 278, 274, 279, 280, 282, 283, 286, 284, 287,
	288, 285, 289, 291, 292, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 290, 305, 303, 307, 308,
	309, 320, 318, 313, 314, 310, 315, 311, 312, 316,
	317, 324, 325, 328, 212, 330, 331, 334, 352, 338,
	339, 340, 343, 344, 347, 350, 351, 353, 354, 355,
	356, 357, 358, 359, 360, 362, 363, 365, 366, 367,
	369, 370, 371, 373, 375, 376, 378, 379, 381, 382,
	383, 384, 385, 386, 387, 389, 391, 390, 392, 394,
	396, 397, 398, 403, 408, 405, 406, 407, 409, 410,
	411, 412, 414, 415, 416, 418, 419, 420, 421, 423,
	425, 426, 429, 430, 446, 447, 465, 427, 428, 431,
	432, 433, 434, 435, 439, 437, 438, 440, 441, 442,
	444, 445, 448, 449, 451, 452, 453, 454, 455, 456,
	459, 461, 462, 463, 481, 464, 466, 469, 470, 471,
	472, 467, 480, 474, 475, 477, 478, 483, 484, 485,
	486, 487, 488, 489, 491, 493, 501, 502, 503, 505,
	508, 509, 510, 511, 499, 513, 514, 517, 518, 519,
	522, 520, 521, 523, 525, 528, 529, 530, 536, 535,
	537, 543, 544, 546, 547, 548, 37, 50, 51, 54,
	56, 58, 69, 70, 71, 75, 122, 123, 150, 161,
	162, 174, 186, 187, 199, 201, 209, 210, 211, 232,
	233, 235, 240, 262, 327, 329, 345, 349, 364, 368,
	372, 374, 388, 422, 457, 468, 473, 494, 495, 496,
	497, 504, 506, 531, 532, 533, 538, 545, -299, 2,
	-279, 336, -272, 2, -249, -249, 375, 29, 2, 29,
	363, 438, 485, 487, 2, -571, -341, 2, 29, -252,
	-249, 102, 197, 436, -272, 2, -571, -341, 25, 2,
	-249, 2, 350, 22, 28, 66, 77, 98, 137, 160,
	181, 184, -595, 352, 382, 425, 440, 480, 491, 505,
	2, 535, 283, 437, 482, 224, 118, 510, 431, -580,
	429, 430, 350, 380, 418, 200, 524, -253, 2, 427,
	-249, 283, 2, 576, 94, 273, 74, 422, 441, -137,
	502, -136, 494, 431, -138, -498, 2, 305, -249, 576,
	576, 576, 29, -262, -249, 482, 224, 431, 118, 478,
	576, 2, 482, 355, 535, 437, 118, 385, 224, 510,
	431, -580, 283, -569, 2, -564, 4, -515, -511, -293,
	-292, 482, 488, 118, -286, -278, 566, -285, 576, 576,
	576, 2, 243, 244, 384, 383, 441, 442, 576, 576,
	576, 576, 429, 2, 160, 22, 28, 66, 93, 98,
	124, 181, 184, 341, -593, 352, 382, 440, 480, 484,
	491, 505, -579, 464, 68, 431, -578, -580, 283, 510,
	137, -391, 118, 273, 195, 518, 487, 485, 516, 130,
	231, 521, 520, 576, 576, -99, 2, 573, 33, 32,
	139, 444, -202, 482, 236, 2, -249, 576, 576, 2,
	243, 244, 429, 430, 576, 576, 182, -564, 2, 576,
	576, 2, 243, 244, 429, 430, 236, 2, 68, 433,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 2, -177, 441, 464, 206, 47, 46,
	74, 29, 381, 79, 356, 119, 145, 511, 198, 224,
	225, 251, 93, 94, -393, 45, 244, 243, 430, -585,
	429, -445, 483, 432, 438, 477, 255, 427, 502, 102,
	525, 419, 548, 385, 386, 475, 398, 274, 154, 4,
	118, 305, 443, 494, 273, 426, 359, 84, -603, 2,
	482, -605, 2, 502, 502, 2, -605, 2, -605, 2,
	-605, 2, -606, 502, 545, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, -208, -210, -209, 576, 576, 576, 576, 576,
	576, 576, -177, 441, 2, 74, 29, -334, -336, 515,
	234, 147, 342, -207, -209, 2, -544, -496, 2, -419,
	-518, -421, 564, 565, 557, 479, 67, 321, 549, -433,
	124, 516, 336, -517, -422, -435, 150, 422, -356, 8,
	9, 5, 6, 7, -258, -423, -429, 507, 164, 326,
	-296, 577, 10, 573, -541, -209, -434, 38, 201, 65,
	-500, -295, -259, -472, 235, -294, -278, -538, -539, 4,
	-511, -512, -501, -475, -483, -479, -480, -486, -249, -514,
	77, 110, 111, 109, 114, 113, 276, 275, 115, 112,
	443, 524, 66, 37, 209, 210, 240, 327, 211, 75,
	-540, 138, -513, 232, 233, 457, 51, 388, 174, 123,
	122, 329, 56, 54, 532, -484, 120, 494, 495, 496,
	497, 186, 187, 58, 161, 162, 349, 372, 473, 504,
	506, 199, 262, 44, 106, 183, 230, 213, 239, 241,
	245, 263, 266, 306, 319, 323, 346, 348, 417, 450,
	-609, 533, 468, 69, 70, -546, 390, -547, -272, -546,
	576, 576, 578, 576, -327, -329, -330, 2, 29, 135,
	573, 2, -450, 2, -451, -455, -209, 256, -454, 573,
	-452, 571, -279, 337, -542, 423, -538, -539, -258, -278,
	-295, 4, -511, -513, 575, -331, 573, 118, 482, 78,
	224, -386, 573, -249, 29, 336, 498, 578, -328, 379,
	-431, 573, 336, 182, 339, 60, 287, 2, 2, 2,
	2, 2, 209, -249, 482, 117, 2, 254, 2, 2,
	2, 2, 2, 2, 2, -349, 209, 2, -279, 535,
	-349, 209, 2, -349, 209, 2, -392, 2, 87, -263,
	209, 2, -249, -287, 209, 2, -282, -284, -291, 209,
	2, -289, -249, -509, 209, 2, -508, -503, 10, -502,
	5, 4, -511, -515, -512, -514, 77, -419, 2, -126,
	2, 60, -249, 535, 2, 2, 446, 2, 573, -137,
	71, 502, 44, 441, -406, 2, -407, -245, -246, -247,
	-462, -248, 242, 378, 387, 552, 128, 321, 548, -496,
	-587, 182, 556, 498, -496, -357, 575, 2, 2, 2,
	2, 2, 2, -455, 209, -279, 2, -276, -499, 4,
	-511, -515, -512, -516, 29, 32, 33, 34, 36, 38,
	39, 40, 41, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 109, 110, 112, 111, 113, 114, 115, 124,
	128, 131, 135, 136, 140, 143, 147, 164, 166, 179,
	181, 182, 197, 200, 203, 216, 229, 234, 236, 256,
	260, 267, 275, 276, 321, 326, 332, 336, 337, 341,
	342, 361, 377, 393, 413, 436, 443, 460, 476, 482,
	492, 498, 500, 507, 515, 516, 524, 526, 534, 539,
	540, 541, 542, -517, 2, -455, 209, 2, -281, 209,
	-455, -284, 2, -263, 2, -275, -499, 2, -300, 209,
	-279, -280, -284, -282, 2, -289, 2, -508, 209, 2,
	535, 236, 498, 578, -347, -292, -293, -495, 8, -340,
	-249, 575, -419, 2, -126, -110, 2, 179, -419, 209,
	2, -126, 209, 2, -419, 209, 2, -126, 209, 2,
	-582, 2, -508, 209, -249, 2, 287, 2, 2, 505,
	2, 98, 482, 117, 2, 407, -594, 425, 509, 2,
	2, 2, 2, 2, 2, 2, 482, -268, 2, -249,
	179, -289, 209, -290, 2, 437, -604, 390, -508, 209,
	2, 535, -282, 209, 2, -282, 224, 238, -263, 209,
	2, 487, 485, 487, 485, 182, 2, 236, 2, 236,
	2, -456, 2, -457, -451, -458, 571, 337, -466, 2,
	-465, -502, 531, -99, 573, -99, 573, 441, 573, -508,
	-279, -279, -419, 2, -126, -110, 2, -419, 2, -126,
	2, -123, -508, -122, 573, 182, -419, 2, -126, -110,
	2, -419, 2, -126, 2, -202, 179, 2, 118, 482,
	-177, 2, 179, 526, 2, 8, 2, 216, -508, 432,
	386, 171, 2, 446, 2, 447, 74, -393, 548, 74,
	182, 2, 182, 2, -376, 2, 542, 182, 2, 2,
	-568, 2, 336, 182, 2, 182, 2, 182, 2, 182,
	2, 182, 2, -176, 442, 503, 481, 383, 244, 2,
	-126, 539, -110, -419, 539, 2, -586, 179, 430, -419,
	2, 501, 253, 155, 182, -376, 2, 182, 2, 182,
	2, 5, 2, 384, 465, 2, 242, 378, 465, 2,
	-279, -597, 2, 482, 535, 437, 2, 2, 88, 89,
	182, 2, 182, 2, 196, 182, 2, 182, 548, 2,
	-368, -455, -405, -406, -405, 498, -334, -336, -177, 446,
	2, -214, -366, -216, 179, -396, -397, -217, 267, 166,
	332, -218, -375, 29, 135, -375, -375, 60, 574, 574,
	11, 12, 76, 42, 564, 565, 566, 567, 177, 568,
	569, 562, 563, 561, 554, 555, 559, 248, 249, 95,
	558, 556, 86, 281, 424, 167, 168, 169, 170, 404,
	222, 35, 223, 14, 15, 16, 34, 341, 266, 549,
	213, 450, 557, 17, 18, 19, 239, 241, 323, 50,
	216, -257, -302, -419, -419, -419, -419, -419, -419, -419,
	348, 573, -362, -414, 571, -209, 573, 573, 573, -495,
	-209, -419, -433, 574, -354, 573, -209, -433, -428, 573,
	422, 571, 573, -436, -419, 5, 5, 5, 573, 575,
	-549, 543, 179, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 374, -477,
	573, -476, 573, -476, -476, 536, -474, 573, 551, 544,
	573, -474, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 536, 578, -546, -331, 573,
	-358, -460, -419, 566, -358, -358, 336, -351, -419, 106,
	-379, 245, 306, 183, 263, 417, 230, -416, 577, -416,
	-444, 551, -209, -452, -278, -209, -454, 573, -450, -444,
	-100, -495, -84, -97, -105, -126, -139, -181, -182, 566,
	-279, 573, 182, 573, 575, -499, 182, -340, -263, -279,
	-294, -295, -300, 134, -351, -564, 510, 431, -340, -252,
	39, -430, -469, -470, -520, 577, -519, -472, -482, -478,
	-481, 364, 368, -501, 54, 532, -484, 235, 4, -511,
	-513, 232, 233, 457, 51, 388, 174, 123, 122, 329,
	56, 494, 495, 496, 497, 186, 187, 58, 533, 468,
	69, 70, -564, 510, 431, -340, 179, -506, 2, -505,
	-504, 115, 443, -502, 5, 2, 150, 2, 2, 2,
	-249, -228, 578, 64, 411, 150, -349, 209, -228, 150,
	-228, 150, -301, 209, -300, -228, 150, -228, 578, 150,
	-228, 578, 150, 575, 578, 150, -506, 2, -392, -498,
	-351, 39, -406, 2, 124, -504, -607, 578, 265, -304,
	280, 320, 205, 337, 546, 330, 128, -507, 5, 4,
	-429, -441, 124, 273, 235, -489, -491, 8, -490, 9,
	-492, 564, 565, -497, -496, 108, 575, -499, -225, 405,
	444, 351, -224, 24, 30, 139, 226, 309, 529, 156,
	-317, 227, -314, 355, 150, 461, 519, -575, -576, 428,
	489, 490, 90, 330, 444, 351, 405, 150, -372, -374,
	39, 116, 309, 350, 61, 219, 285, 286, 463, 538,
	150, 444, 351, 405, 351, 24, 139, -240, -237, -576,
	99, 405, 474, 377, -576, -227, 461, 519, -575, -576,
	428, 405, -226, -319, -314, 355, 150, 577, 24, 405,
	444, 351, -590, -591, 139, 30, 405, 351, -572, -543,
	542, 150, -455, 209, -583, -122, 257, 5, 10, -508,
	-122, -347, 578, 578, -499, 566, 430, 429, 150, 150,
	150, 150, 179, 321, 2, 2, 2, 2, 2, 184,
	-578, -595, 2, 2, -279, 209, -333, 336, -567, -348,
	482, -279, 321, 44, -281, 209, 2, -284, 535, -572,
	321, -283, 209, -279, 39, 573, 321, 2, -392, 2,
	224, -543, 321, -456, -297, -279, -451, -297, 444, -272,
	39, -416, -279, 574, 578, -466, -466, -508, -190, 542,
	182, 102, 573, 573, -202, -463, 578, -462, 216, -509,
	-123, -508, -508, -567, -263, 2, -279, 2, 482, 246,
	-508, -190, 216, -508, -508, -508, -498, 29, 447, 2,
	-176, 442, 503, 89, 447, 2, -279, 482, 118, 224,
	80, -249, -570, 179, -565, 418, 431, 510, -564, -279,
	118, -279, 118, -279, 118, -279, -279, 2, 2, 2,
	2, 2, 85, 85, 2, 46, -586, 179, 2, 501,
	2, 501, 2, -249, -249, -249, 464, 265, -279, -598,
	179, 182, 482, 224, 482, 224, 118, 182, 74, 118,
	29, 482, -228, 578, -253, -214, -366, -498, -367, -366,
	-215, -214, -217, 179, 387, 520, 309, 448, 250, -397,
	-396, 29, -419, -401, 173, 308, -419, -399, -421, 564,
	565, -490, -492, -350, 330, -208, -208, -208, -337, -446,
	-419, 377, 224, -471, -469, -469, -277, -499, 494, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, 266, 213, 450, 50, 216, -419,
	498, -419, -419, -419, -419, 303, 321, 326, 507, 164,
	517, 135, 330, -610, 476, 41, -426, -209, -355, 573,
	-440, 36, 460, 29, -433, 573, 2, -414, -419, -415,
	-352, -351, -351, 574, 534, 29, 135, 566, 2, 574,
	578, 39, 574, -419, -352, -432, -428, -351, -439, -438,
	539, -387, -388, 547, 290, 121, 207, 288, -389, 435,
	-493, 8, -499, 566, -550, 172, 200, 573, 574, 2,
	574, 2, 574, -419, 2, 574, -419, 2, 574, -419,
	2, 574, -419, 2, 574, 2, -419, -419, -419, -419,
	-419, -419, -419, -351, 8, -493, -493, 494, 494, -493,
	-493, -493, -485, 364, 365, 366, 367, 268, 269, 270,
	271, 368, 369, 370, 371, 295, 296, 297, 298, 291,
	292, 293, 294, 299, 300, 301, 302, 191, 192, 193,
	194, 187, 188, 189, 190, -485, -381, 2, -487, -351,
	4, 547, 290, 121, 207, 288, 435, 5, -381, 2,
	-382, 2, -419, -351, -383, -420, -421, 564, 565, 557,
	-433, -384, 2, -419, -352, -419, 57, 260, 500, -385,
	-419, 182, -351, -351, 2, -351, 2, -547, 39, -351,
	-343, 578, 182, 39, 4, -343, -343, 573, 574, 578,
	-380, 204, 284, 279, 238, -380, -450, -379, 245, -377,
	346, -377, -377, -444, -264, 571, 579, -499, -444, -443,
	-442, 39, -272, 343, -444, -444, 575, 574, -443, 572,
	-562, 573, 576, 576, 576, 576, 576, -279, 573, -351,
	-499, 575, 466, 574, 239, 239, 239, 239, 423, 574,
	498, -566, -287, -291, 542, -99, 338, 574, 578, -342,
	38, 571, 575, -493, 2, 2, -488, 536, 573, 573,
	-388, 573, 182, -566, -291, -341, 578, 498, -249, 2,
	-279, -349, -228, 150, -349, -349, -228, 578, 150, -263,
	-282, -287, -289, -291, -249, -508, -509, -228, -283, -587,
	574, 502, -407, -303, 387, 459, 406, 439, 478, 8,
	9, 8, 9, 578, -499, 578, -588, 93, 498, 78,
	431, -242, 274, 397, 309, 482, 422, 498, -410, 209,
	78, -521, -266, 93, -522, -249, 72, 516, 377, 181,
	148, -588, 93, 377, -588, 93, 2, 226, 93, 444,
	464, 29, 60, -455, 42, 42, 29, -126, 261, 182,
	548, 482, 224, 431, 498, 498, -455, -374, -469, 116,
	285, 286, 60, -494, -489, 564, 565, -494, 60, -494,
	-494, -494, 542, -281, -455, 431, 498, 498, 498, 396,
	396, 498, 498, -608, 556, 396, 578, 42, 42, 29,
	-126, 261, 182, 498, -300, -264, 530, 43, 530, 498,
	43, 431, 498, 578, 43, 43, 498, 498, -573, -254,
	105, 315, 278, 316, 97, 312, 96, 311, 103, 313,
	104, 314, 537, 324, 63, 310, 289, 317, -255, -256,
	357, 528, -508, 444, 351, 405, 150, 216, -463, 216,
	-463, -292, -249, 575, -126, -419, -419, -126, -419, -126,
	46, 150, 2, -604, 254, 573, -307, 321, 182, -340,
	-464, 236, 578, -348, 150, -505, -373, -372, 321, -283,
	209, 2, 150, -331, 321, 144, 573, 385, 2, 150,
	-265, 209, -250, -249, -392, -231, 486, 150, -370, 526,
	-402, -126, 573, 124, 39, -402, -359, -360, -461, -361,
	-266, 573, -272, -416, -99, -465, 574, 574, 574, -189,
	340, -188, -249, 5, -202, 526, -306, -411, -410, -525,
	-526, -521, 266, 224, 516, 238, 165, -332, -267, -266,
	117, -196, 542, -122, -123, 574, -463, 216, -190, -190,
	-463, -463, -279, 179, -508, -190, -190, -190, 2, 2,
	2, -376, -279, -263, -300, -279, 575, -340, -340, -291,
	-287, -376, -263, -376, -263, -376, -263, -126, -419, 2,
	441, 179, 179, 575, -376, 385, 118, 482, 355, 224,
	-279, -300, -279, -300, -263, 118, -263, 119, -279, -455,
	-367, -215, 337, 250, 448, -399, -400, -421, 422, 423,
	-400, 422, 423, 8, 9, 8, 9, -219, 452, 325,
	-349, 578, -222, 40, 131, 250, -279, 548, 146, -419,
	-419, 498, -610, 476, -426, 146, -419, 303, 326, 507,
	164, 517, 135, 330, 182, 573, -420, -420, 574, -353,
	-419, -419, 572, 581, 574, -336, 578, -334, -419, -351,
	-351, 574, 575, -351, -340, 572, 572, 578, 574, -437,
	-438, 140, -419, 498, 498, 498, 498, 573, 574, 575,
	-555, 347, 573, 573, -419, 574, 574, 574, 574, 39,
	578, 578, 578, 574, 578, 578, 578, 574, 574, 574,
	578, 574, 548, 548, 574, 574, 574, 574, 578, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 574, 578, 574, 182, 574, 574, -390,
	361, 574, 11, 12, 564, 565, 566, 567, 177, 568,
	569, 562, 563, 561, 554, 555, 556, 86, 281, 424,
	14, 15, 16, 239, 216, -420, -420, -420, 574, -424,
	-425, 182, 179, 39, -385, -385, -385, 574, 182, -351,
	574, 574, 573, -548, 283, 321, 574, -413, -412, 540,
	-460, -344, 2, -450, -274, -499, -413, -413, -351, -419,
	245, 245, -378, 526, 336, -380, -450, -443, -495, -418,
	-417, 180, 40, 131, 318, 212, -443, -272, -331, -443,
	-443, -499, -444, -444, -442, 574, -563, -495, 574, -345,
	-453, -542, -336, 575, -499, -199, -543, -178, 5, 326,
	-178, -178, -178, -340, 498, 498, 25, 362, -469, 571,
	572, 8, -499, 573, -493, -493, -493, -340, 182, 182,
	182, -505, -505, 2, -228, -349, -228, -228, -300, -301,
	-228, -228, -228, -371, 542, -496, -406, 514, 83, 387,
	494, -496, -224, 405, -266, -266, -279, -288, -249, 195,
	397, 26, 397, 265, 265, -505, 321, -410, 209, -230,
	321, -469, -273, -249, 573, -394, 544, 250, 250, 526,
	-266, -273, 250, 209, -266, 209, -273, 2, -273, -574,
	387, 331, -419, 60, -315, 272, 385, 322, -225, 405,
	444, 351, -126, -126, -126, 573, -587, 526, 134, -279,
	-300, -279, -288, -505, -283, 444, 351, 405, 319, -294,
	-494, -494, -372, 444, 351, 405, -288, -505, -281, -505,
	-236, -249, -236, 431, -263, 396, 548, -608, -226, -126,
	-126, -126, 573, -264, -227, 405, 5, 209, -266, 5,
	-249, -266, -288, -505, -591, 24, -266, 209, -266, -288,
	-505, -254, -508, 326, 522, -572, 431, 498, 498, -455,
	-122, -193, 542, -122, -187, 220, 566, -569, -249, 535,
	-249, -305, -308, -306, -266, -205, -206, 544, 542, 150,
	-298, -279, 571, -190, -508, -279, -289, -290, 150, -331,
	321, -508, 39, 150, 573, 2, 2, -282, 336, 321,
	-265, 209, -232, 141, -608, -263, -413, -344, -369, -404,
	413, 336, -332, 531, -272, -369, -346, 578, 182, 556,
	575, -332, -459, 566, -99, -99, -190, 578, 573, 556,
	556, 573, -508, -508, 574, 578, -230, -279, -265, 224,
	224, -271, -250, 574, 578, 575, 573, -198, 340, -197,
	142, 252, 237, 453, 454, 455, 456, 133, -463, -196,
	-123, 182, -60, 542, 482, -190, 577, -249, -376, -376,
	-376, 441, 441, -249, -275, -263, -279, -276, -300, 179,
	179, -263, 520, -400, 337, 277, -446, -223, 550, -279,
	577, -419, -419, 146, 146, -419, -420, -420, -419, 146,
	182, 573, -419, -430, 34, 34, 574, 578, -415, -419,
	574, 534, -336, -336, 574, 566, -499, 577, 574, -428,
	143, -419, 492, 290, 207, 288, -389, 288, -389, -389,
	-493, 5, -499, 566, -556, -269, 573, -249, 540, -335,
	342, 574, -471, -469, -419, -419, -419, -419, -419, -493,
	-474, -474, -489, -489, -419, -424, -419, -471, -469, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, 135, 321,
	330, -420, -425, -424, -419, -419, -469, 574, 574, 574,
	-351, -99, 573, 283, -363, 200, -419, -463, 578, -363,
	-363, 574, -450, -450, 573, -419, 245, 572, 578, 580,
	556, -331, 575, -442, -443, 572, 574, 578, 574, 578,
	-403, 39, 574, -499, -413, -201, -200, 132, 53, -340,
	-340, 339, 5, 8, 571, 572, 575, -493, 574, 574,
	574, -340, -340, -340, -228, -228, 117, 309, -419, 498,
	498, 60, 498, 42, 319, -236, 377, 422, 26, 397,
	397, 150, 321, 528, -527, -522, 148, -419, 573, 224,
	573, 573, 2, -221, 139, 444, -589, 2, 526, 150,
	-228, 150, -228, 546, -315, 573, 573, 498, 431, -242,
	498, 542, -351, -419, -191, 124, -498, -576, 577, -576,
	577, 431, 498, 498, 431, 498, 498, 542, 163, 163,
	-236, 542, -351, 498, -473, 48, 27, 321, -282, 498,
	498, -228, 150, 510, 444, -508, 326, -288, -505, -283,
	444, 351, 405, -463, -195, 340, -194, 142, 415, 133,
	252, -463, -193, 182, 236, -283, 2, 574, 574, 578,
	-528, 39, 334, 334, 573, -279, -80, 542, -462, -495,
	44, -281, 39, 150, -572, -126, -283, -467, -468, 5,
	39, -279, 150, 336, 321, -233, 259, -608, -503, -543,
	-336, -369, -358, 322, 91, 574, -413, -360, -344, -419,
	2, 574, -188, -189, -508, -508, -508, -190, -202, -202,
	-411, -309, 573, -265, -250, 573, -202, -267, 2, -509,
	578, 573, 556, 556, 556, -196, -463, -126, 340, -279,
	566, -376, -321, -320, 355, 330, -321, 422, 422, 337,
	173, 255, -222, -264, -419, -419, 146, 34, 34, -419,
	-419, -430, 574, -419, -419, -351, 572, 5, -419, 574,
	574, 8, -419, 574, 575, -557, -249, -419, 574, 60,
	574, 574, 578, 578, 574, 574, 574, 574, 574, 574,
	574, -425, 182, 135, 330, 573, 574, 574, -99, -427,
	203, 60, -450, -427, -427, -378, -340, -450, -417, -264,
	571, -499, -495, -453, 573, 575, -200, 556, 572, 2,
	571, -499, 574, 117, -266, -266, 482, 422, 319, -236,
	377, 422, 396, 265, 26, 26, -410, 150, -529, 93,
	-531, 76, 165, 102, 321, 326, 516, 377, 72, 124,
	393, -600, 39, 553, 574, -338, -447, -542, 573, -249,
	-338, -340, 321, 471, 124, 321, 124, 117, 510, 79,
	-266, -273, -340, -340, -279, -288, -505, 157, 574, 578,
	556, 2, 566, 566, -288, -505, -283, -288, -505, -281,
	353, 157, 574, -264, 5, 5, 150, -261, 76, 5,
	-266, -266, -282, 117, 431, 498, 498, -193, 578, 573,
	556, 556, -193, -509, -122, -331, -322, 226, -266, -526,
	-523, -524, 377, -530, -532, 165, 377, -126, 2, -204,
	-203, -249, 5, 573, -307, 340, 572, -505, -373, -126,
	-283, -331, 574, 578, 144, -395, 526, -264, -279, 150,
	-234, 258, -608, -503, -231, -398, -396, 136, 573, 336,
	-126, -336, 556, 574, 574, 117, 117, 218, 149, -338,
	573, 573, -340, 117, 574, -197, -198, -508, -122, -508,
	-196, -61, -62, 224, 93, 360, -276, 482, 224, 573,
	573, -222, -419, -419, -419, 574, -336, -499, 566, -551,
	355, 574, -446, -419, -419, -420, 182, 573, -430, 574,
	-552, 541, -419, -364, -365, -419, 421, 107, 201, -552,
	-552, 574, -495, 2, -508, 571, 2, 216, 39, 396,
	265, 39, 498, 39, -410, -273, -277, -270, -249, 165,
	209, 326, -394, 250, 573, -420, -279, 573, 2, 31,
	-601, 128, 229, 574, 578, -448, -260, -249, -419, -448,
	574, 574, 326, 326, -419, -469, 573, -228, -228, 574,
	574, -419, 498, -498, 100, -496, 2, -576, -263, -419,
	498, 5, -228, -277, -228, -228, -261, 510, -288, -505,
	-283, -194, -195, -508, -122, -193, 39, -312, 228, 2,
	-528, 250, -270, 250, -599, 542, 574, 578, 556, 556,
	-305, -205, -81, -82, 499, -462, -331, 39, 5, 573,
	573, -249, 336, 573, -264, -244, 92, -608, -503, -232,
	-369, 322, -340, 93, -398, -426, -190, 573, 573, -310,
	81, 94, 125, 208, 185, 225, 464, 469, 29, -310,
	574, -338, -338, 574, 573, -190, 574, 578, 29, 573,
	29, 573, -279, -300, -351, -351, 574, -336, 60, 578,
	574, 574, -420, -430, 574, -553, -554, -269, 578, 573,
	573, 445, 572, 2, -236, 377, -249, 39, -249, -236,
	377, -249, -531, -270, 321, 526, -419, -251, 573, -419,
	39, 229, 129, 214, -409, -602, 101, 472, 217, -447,
	-222, 574, -408, 526, 393, -261, -338, 573, 573, 573,
	556, 182, 573, -473, -228, -282, 574, -581, 391, -126,
	-316, -317, 216, 573, -311, 336, 117, 309, -203, -496,
	-496, 574, 39, -82, 9, 39, -126, -467, -338, -279,
	-338, 336, -238, -237, 267, -503, -233, 574, -273, -369,
	-509, -509, -408, 574, 574, -509, -62, -340, -340, 574,
	574, -558, 385, 423, 202, -351, -337, 574, 578, 39,
	-365, 2, 2, 2, 396, -249, 396, 150, 204, 574,
	-533, 282, -249, 574, 129, 214, -312, 573, -223, -448,
	-312, 204, -279, -577, 526, 574, -324, -323, -320, -326,
	-325, -320, -351, -496, 100, 353, -351, -261, -584, 183,
	-583, 5, 10, -205, 353, -339, -449, -266, 82, 117,
	-322, -126, -126, 574, 574, -395, 574, -279, -235, -510,
	396, 398, -608, -234, -413, 574, 574, -409, -408, -206,
	542, 574, 574, 574, 574, -559, -560, 50, 513, 108,
	-419, -559, -559, -554, -556, 165, 542, -534, -537, -536,
	336, 451, 183, 354, 574, 471, 538, -318, -314, -340,
	542, -331, -419, -408, 574, 578, 531, 574, 578, 531,
	574, 182, 574, -228, -192, 542, 46, -311, -279, 574,
	578, 376, 130, 139, -312, -599, -408, 573, -409, 573,
	-241, -240, -608, -489, -244, 136, -190, -190, -312, -409,
	-413, -190, -561, 148, -560, 373, 178, 422, 373, 178,
	-561, -561, -270, 55, -536, 336, -537, 336, 520, 130,
	-601, 574, 55, -533, -312, -323, 216, -325, 182, 353,
	429, -583, 31, -243, -242, 573, -449, 423, 423, 2,
	-316, -311, -409, -338, -312, -338, -239, -340, -238, 322,
	520, -318, -312, 108, 200, 493, 309, 34, 556, -535,
	309, 411, 64, 444, -535, -413, 556, -534, 573, 573,
	340, -340, 2, -205, -312, 574, -318, 574, -235, 444,
	-206, -318, 422, 344, -560, -419, 23, 326, 124, -419,
	-601, -351, -351, -189, 573, 574, -311, -318, -408, -206,
	-409, -241, -359, -413, -206, 574, 574, -189, -229, 64,
	411, -243, -206, -409, -413, -312, -413, -413, -313, -314,
	498, 574, -413, -312, -318, 573, -318, -206, -351, -206,
	-413, 574, -413, -313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 505, 506, 508, 509, 510, 512,
	513, 515, 517, 519, 520, 521, 523, 524, 526, 527,
	528, 529, 530, 532, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	596, 598, 0, 1295, 1297, 1299, 1301, 0, 739, 0,
	36, 37, 0, -2, 303, 305, 307, 0, 333, 335,
	336, 338, 340, 342, -2, 0, 440, 441, 443, 445,
	-2, 0, 925, 927, 0, 585, 587, 0, 930, 932,
	0, 0, 607, 608, 0, 1401, -2, 601, 603, 605,
	670, 672, 674, 676, 678, 680, 682, 684, 686, 687,
	689, 691, 693, 695, 697, 698, 700, 702, 704, 705,
	707, 708, 710, 712, 714, 716, 718, 720, 722, 724,
	726, 728, 730, 732, 734, -2, 736, -2, -2, 0,
	-2, -2, -2, 1313, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 391, 392, 394, 396, 398, 400, 403,
	405, 407, 1459, 447, 449, 451, 453, 455, 457, 459,
	0, -2, 1473, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 99, 100, 101, 102,
	103, 104, 105, 106, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 97,
	70, 0, 0, 1432, 1434, 1436, 1438, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 507, 511, 514, 516, 518, 522, 525, 531,
	533, 535, 492, 493, 496, 2137, 2154, 2155, 2156, 2159,
	2160, 2161, 2162, 2163, 2164, 2596, 2677, 2678, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 494, 495,
	1101, 0, 559, 557, 2122, 560, 2402, 562, 564, 434,
	435, 436, 437, 438, 439, 0, 578, 570, 1471, 579,
	581, 582, 583, 584, 554, 552, 0, 578, 2190, 576,
	1293, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 370, 1150, 1151, 1152, 1278, 1279, 2445,
	1320, 0, 214, 597, -2, -2, -2, 2561, -2, 629,
	-2, 636, 2565, 2447, 641, 0, 643, -2, 646, 1296,
	1298, 1300, 737, 738, 2140, 0, 0, 0, 0, 0,
	38, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 224, -2, -2, -2, -2,
	0, 0, 2490, 2240, 2090, 2156, 2093, 2088, 304, 306,
	308, 309, 0, 0, 0, 0, 0, 0, 334, 337,
	339, 341, -2, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 978, 979, 1208, 0,
	0, 0, -2, 442, 444, 497, 498, 0, 1460, 1460,
	-2, 0, 0, 0, 0, 278, 269, 926, 928, 929,
	0, 0, 0, 0, 586, 588, 0, 0, 251, 931,
	933, 934, 0, 0, 0, 0, 0, 280, 0, 0,
	602, 604, 606, 671, 673, 675, 677, 679, 681, 683,
	685, 688, 690, 692, 694, 696, 699, 701, 703, 706,
	709, 711, 713, 715, 717, 719, 721, 723, 725, 727,
	729, 731, 733, 735, 745, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 833, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 907, 0, 748,
	750, 751, 752, 0, 811, 831, 832, 841, 0, 1141,
	1461, 1322, 1303, 1317, 1322, 1305, 1306, 1307, 1308, 1309,
	1314, 1316, 1310, 1311, 1312, 41, 43, 45, 47, 49,
	51, 53, 55, 57, 393, 395, 397, 399, 401, 404,
	406, 408, -2, 1430, 1431, 448, 450, 452, 454, 456,
	458, 460, 589, 0, 591, 0, 749, -2, 0, 1465,
	1465, 1465, 0, 0, 1431, 1429, 0, 594, 595, 650,
	651, 1733, 0, 0, 0, 0, 0, 0, 0, 1987,
	1819, 0, 652, -2, 1850, 1852, 2536, 2561, 1986, 1854,
	1855, 1856, 1857, 1858, 0, 1860, 1861, 1862, 1863, 1864,
	1865, 0, 1867, 0, 1872, 1873, 1874, 0, 2543, 2067,
	2150, -2, 0, 0, 2549, 2146, 0, 1953, 1890, -2,
	-2, 2173, 2152, 1665, 1666, 1667, 1668, 1669, -2, -2,
	2579, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 0, 2524, 2544, 2545, 2550, 2552, 2546, 2533,
	1915, 2252, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1692, 1701, -2, -2, -2,
	-2, -2, -2, -2, 2537, 2538, 2555, 2558, 2564, 2569,
	2570, 2542, 2551, 2578, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	1693, -2, -2, -2, -2, 1448, 2415, 1451, 1101, 1449,
	1433, 1435, 0, 1437, 0, 0, 0, 1442, 1468, 1466,
	0, 1517, 1446, 1447, 1535, 1535, 1559, 0, 1540, 0,
	1559, 1460, 1586, 0, 1546, 2437, 1891, 1892, 0, 2156,
	2151, -2, -2, 2576, 0, 0, 0, 0, 0, 0,
	0, 555, 0, 561, 563, 0, 0, 0, 577, 1470,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	376, 377, 2544, 0, 0, 0, 382, 0, 384, 385,
	386, 387, 388, 389, 390, 184, 2544, 465, 490, 0,
	184, 2544, 468, 184, 2544, 471, 0, 474, 1206, 184,
	2544, 477, 2118, 184, 2544, 480, 482, 2126, 184, 2544,
	486, 2133, 2131, 487, 2544, 489, 283, 281, 282, 2169,
	2170, 2177, 2178, 2179, 2180, 2577, 2579, 1289, 1290, 1291,
	1292, 0, 1319, 1207, 599, 600, 0, 624, 0, 628,
	2532, -2, 0, 2456, -2, 632, 1323, 1327, 1328, 1329,
	1330, 1331, 0, 0, 0, 0, 1336, 0, 0, 638,
	0, 0, 625, 626, 644, 647, 0, 740, 741, 742,
	743, 744, 69, 0, 2544, 1586, 71, 0, 2112, 2181,
	2182, 2183, 2184, 2185, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 75, 0, 2544, 80, 0, 2544,
	0, -2, 91, 0, 98, 0, 2115, 107, 0, 2544,
	0, 2087, -2, 0, 195, 0, 953, -2, 2544, 1149,
	0, 0, 0, 0, 916, 2084, 2089, 917, 2108, 918,
	2094, 0, 310, 311, 312, 313, 314, 0, 315, 2544,
	317, 318, 0, 320, 321, 2544, 323, 324, 0, 326,
	0, 235, 236, 2544, 345, 346, 0, 348, 349, 0,
	351, 0, 0, 0, 355, -2, 371, 0, 368, 358,
	359, 361, 362, 363, 364, 365, 0, 412, 410, 2123,
	0, -2, 2544, 0, 950, 0, 0, 1186, -2, 2544,
	1146, 0, 1193, 2544, 1189, 0, -2, 0, 1458, 2544,
	1340, 982, 983, 984, 985, 1598, 431, 0, 1366, 0,
	1368, 0, 1387, 1592, 1535, 0, 0, 1597, 0, -2,
	548, 2139, -2, 500, 0, 501, 0, -2, 0, 295,
	0, 0, 935, 936, 937, 938, 939, 942, 943, 944,
	945, 1572, 252, 254, 0, 0, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 0, 0, 609, 0, 0,
	746, 747, 0, 0, 757, 758, 759, 0, 295, 2448,
	2411, 2273, 766, 0, 769, 772, -2, 0, 0, 0,
	0, 776, 0, 781, 782, 783, 0, 0, 787, 789,
	924, 791, 0, 0, 793, 0, 797, 0, 800, 0,
	802, 0, 804, -2, -2, -2, 812, 813, -2, 817,
	-2, 0, 820, 822, 0, 824, -2, 0, 833, 829,
	830, 0, 0, 0, 0, 849, 850, 0, 859, 0,
	862, 863, 864, 0, 866, 867, 0, 869, 870, 871,
	872, 0, 874, 875, -2, -2, 879, 881, 0, 888,
	0, 894, 0, 898, 0, 0, 906, 0, 753, 754,
	184, 1590, 1302, -2, 1304, 0, -2, 0, 590, 0,
	593, 1490, 1416, 1413, 0, 1487, 1488, 1417, 0, 0,
	0, 1424, 0, 1463, 1464, 0, 0, 0, 1403, 1404,
	0, 0, 0, 0, 1992, 1993, 1994, 1995, 1996, 1997,
	2000, 2001, 1998, 1999, 2002, 2003, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 2006, 2007, 0, 0, 2009, 0,
	2011, 0, 0, 0, 0, 0, 0, 1798, 1800, 2075,
	0, 0, 2008, 1738, 1739, 1740, 1741, 1742, 1777, 1778,
	0, 0, 1851, 2072, 2071, 1853, 0, 2023, 0, 1866,
	-2, 0, 1987, 2018, 0, 0, 1875, 1876, 1877, 0,
	0, 2023, 0, 0, 2066, 1887, 1888, 1730, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 1678,
	0, 1680, 0, 1681, 1682, 1689, 1702, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 2047,
	-2, 0, 0, 0, 0, 1694, 0, 1450, 0, 0,
	1521, 2076, 2080, 2081, 1521, 1521, 0, 0, 2024, 1583,
	1583, 0, 0, 1578, 1578, 1578, 1576, 1559, 0, 1559,
	1569, 0, 1559, 1559, 0, -2, 1540, 0, 0, 1569,
	0, 1553, 536, 538, 540, 542, 543, 544, 546, 1587,
	1588, 0, 0, 0, 0, 2157, 0, 0, 0, 0,
	0, 2142, 0, 0, 0, 0, 2500, 2447, 566, 580,
	1460, 0, 2026, 1613, 1617, 0, 1619, 1620, 1621, 1622,
	1623, 0, 0, 1614, -2, 1690, 1692, 1713, 2174, 2175,
	2176, 1673, 1674, 1675, 1676, 1677, 1685, 1672, 1672, 1672,
	1683, 1712, 1704, 1712, 1708, 1658, 1659, 1660, 1695, 1696,
	1697, 1698, 0, 2500, 2447, 572, 0, 0, 1398, 199,
	201, 202, 203, 204, 205, 372, 0, 379, 380, 381,
	0, 461, 0, 182, 183, 0, 184, 2544, 466, 0,
	469, 0, 184, 2544, 2082, 475, 0, 478, 0, 0,
	484, 0, 0, 0, 0, 0, 184, 1400, 0, 0,
	0, 0, -2, 634, 639, 640, 0, 1325, 0, 1332,
	661, 662, 663, 1334, 1335, 0, 1337, 637, 664, 665,
	666, 667, 668, 669, 0, 2096, 2097, 2098, 2099, 2102,
	2103, 0, 0, 635, 654, 642, 0, 648, 108, 1275,
	0, 0, 147, 0, 1275, 1275, 0, 0, 0, 0,
	171, 0, 1021, 0, 0, 0, 0, 0, 132, 143,
	120, 121, 0, 0, 0, 0, 0, 0, 81, 1123,
	0, 1126, 0, 0, 0, 0, 0, 0, 0, 1139,
	0, 0, 0, 0, 0, 0, 0, 95, 96, 131,
	0, 0, 1363, 0, 126, 110, 0, 0, 0, 133,
	145, 0, 175, 177, 1018, 0, 0, 0, 0, 0,
	0, 0, 194, 206, 0, 0, 0, 0, 1147, 0,
	1457, 0, 0, 2544, 0, 1572, 2319, -2, -2, 252,
	1572, 915, 0, 0, 2157, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 350, 352, 353, 354, 0,
	1185, 0, 360, 402, 1072, 2544, 0, 0, 429, 424,
	0, 426, 0, 0, 1122, 2544, 1120, 2127, 0, 1144,
	0, 1101, 2544, 2125, 0, 0, 0, 1194, 2166, 1203,
	1207, 1353, 0, 433, 0, 1369, 1371, 0, 0, 1593,
	0, 1595, 1535, 1460, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 258, 0, 1571, 0, 0,
	1572, 252, 295, 295, 1572, 611, 1572, 613, 0, 0,
	760, 761, 0, 295, 295, 295, 767, 768, 770, 771,
	-2, -2, -2, 889, 773, 774, 856, 0, 0, 0,
	855, 786, 790, 0, 909, 2433, 2447, 2500, 922, 856,
	2240, 856, 2240, 856, 2240, 801, 803, 806, 844, 852,
	816, 821, 0, 0, 826, 834, -2, 0, 836, 0,
	838, 0, 840, 856, 857, 860, 865, 868, 873, 0,
	890, 891, 0, 0, 0, 0, 0, 0, 901, 902,
	0, 0, 1140, 0, 1315, 1490, 1416, 592, 1407, 1489,
	1408, 1415, 1418, 0, 0, 1420, 0, 1422, 0, 1485,
	1486, 1493, 1494, 0, 1504, 1505, 1497, 0, -2, 0,
	0, 1500, 1501, 1426, 0, 1443, 1444, 1445, 1474, 1477,
	1222, 0, 2677, 1734, 1608, 1735, 1736, 2111, 0, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, -2,
	-2, -2, -2, -2, -2, -2, -2, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, -2, -2,
	-2, 1775, 1776, -2, 2010, 2012, 0, 2075, 0, -2,
	0, -2, -2, -2, -2, 1795, 0, 1797, 1802, 1804,
	1806, 0, 0, 0, 0, 2074, 1816, 2058, 2059, 0,
	0, 1989, 1990, 1991, 1801, 0, 1820, 2073, 2070, 0,
	0, 2022, 1473, 1879, 0, 0, 0, 0, 1886, 1871,
	2020, 0, 2019, 0, 0, 0, 2030, 0, 2065, 2061,
	0, 2109, 1729, 1716, 1717, 1718, 1719, 1720, 1721, 1731,
	0, 2106, 2143, 2149, 1963, 0, 0, 0, 1916, 1917,
	1918, 1919, 1920, 0, 1922, 1923, 0, 1925, 1926, 0,
	1928, 1929, 0, 1931, 1932, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 1630, 0, 0,
	0, 1634, 0, 0, 0, 1638, 0, 0, 0, 1642,
	0, 0, 0, 1646, 0, 0, 0, 1650, 0, 0,
	0, 1654, 0, 0, 0, 0, 0, 1935, 0, 2033,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1937,
	0, 1939, 2024, 2044, 0, 0, 1821, 0, 0, 0,
	1987, 0, 1942, 2024, 2052, 0, 0, 0, 0, 0,
	2024, 0, 2057, 0, 1949, 0, 1951, 1452, 0, 0,
	1603, 0, 0, 0, 2079, 1603, 1603, 0, 1516, 0,
	0, 1579, 1580, 1581, 1582, 0, 0, 1583, 0, 1573,
	1577, 1574, 1575, 1569, 1532, 0, 0, 2113, 1569, 1538,
	1568, 0, 1101, 1558, 1569, 1569, 0, -2, 1542, 1559,
	0, 0, 537, 539, 541, 545, 547, 0, 0, 1473,
	-2, 0, -2, 1100, 0, 0, 0, 0, 556, 558,
	0, 0, 481, 0, 0, 550, 0, 553, 0, 1604,
	1607, 0, 0, 1618, 1624, 1625, 0, -2, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	491, 184, 463, 0, 184, 184, 472, 0, 0, 184,
	483, 184, 2134, 184, 2132, 284, 488, 1399, 217, 0,
	627, 0, 1324, 1333, 0, 658, 0, 660, 0, 2100,
	2104, 2101, 2105, 0, 649, 0, 0, 0, 0, 1274,
	0, 1229, 0, 0, 0, 0, 0, 0, 151, 2544,
	0, 186, 0, 0, 1065, 2119, 0, 1057, 0, 0,
	2259, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 122, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 1125, 1127,
	1134, 1136, 0, 1130, 2107, 0, 0, 1131, 0, 1133,
	1135, 1137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 1363, 0, 0, 0, 119,
	123, 0, 0, 0, 0, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1181, 1179,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	0, 0, -2, 0, 0, 0, 0, 0, 227, 0,
	286, 2085, 2095, 0, 940, 941, 316, 319, 322, 325,
	223, 0, 356, 0, 0, 988, 963, 0, 0, 411,
	295, 0, 0, 425, 2136, 948, 1118, 1121, 0, 1101,
	2544, 1158, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 2544, 2114, 2165, 2166, 1355, 1363, 0, 1603, 0,
	1385, 1372, 0, 0, 0, 1385, 1389, 1390, 1392, 1393,
	0, 0, 1594, 1600, 499, 549, 1460, 1460, 295, 293,
	2379, 291, 288, 290, 0, 0, 0, 989, 991, 992,
	993, 186, 0, 2166, 1057, 2308, 2166, 0, 1375, 1377,
	0, 247, 0, 255, 1572, 253, 258, 0, 0, 423,
	610, 615, 755, 0, 295, 763, 764, 765, 808, 846,
	854, 775, 777, 778, 779, 0, 0, 923, 919, 920,
	921, 792, 856, 795, 856, 798, 856, 819, 823, 828,
	835, 0, 0, 0, 848, 0, 0, 0, 0, 0,
	0, 0, 895, 896, 897, 899, 904, 903, 908, 1591,
	1411, 1412, 1414, 0, 1423, 0, 0, 1499, -2, -2,
	1498, 1502, 1503, -2, -2, -2, -2, 1419, 0, 1428,
	1425, 0, 1484, 1220, 1221, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1817, 0, -2, 1796, 1799, 1803,
	1805, 1807, 0, 0, 0, 0, 0, 0, 2013, 0,
	2015, 1818, 2068, 2071, 1985, 0, 0, 1472, 1473, 1473,
	0, 1885, 0, 2021, 0, 2028, 2029, 0, 1878, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 1921, 1924, 1927, 1930, 0,
	0, 0, 0, 1910, 0, 0, 0, 1914, 1684, 1670,
	0, 1712, 1710, 1711, 1705, 1712, 1709, 1662, 0, 1627,
	1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1640,
	1641, 1643, 1644, 1645, 1647, 1648, 1649, 1651, 1652, 1653,
	1655, 1656, 1657, 1661, 0, 1934, 0, 1936, 1938, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1826, 1941, 2050,
	2051, 0, 0, 0, 0, 0, 0, 1947, 0, 2056,
	1948, 1950, 1460, 0, 1453, 0, 1518, 1507, 1602, 0,
	2077, 1572, 1520, 1522, 2078, 2116, 1507, 1507, 0, 2025,
	0, 0, 1563, 0, 0, 0, 1565, 1536, 0, 0,
	1530, 0, 1526, 1527, 1528, 1529, 1537, 1101, 1567, 1539,
	1543, 2143, 0, 1569, 0, 1554, 0, 1556, 1589, 0,
	1548, 1551, 0, 0, 2158, 1603, 0, 327, 331, 332,
	328, 329, 330, 565, 0, 0, 0, 0, 2027, 0,
	1609, 0, 1615, 0, 0, 0, 0, 571, 0, 0,
	0, 200, 1397, 378, 462, 184, 467, 470, 2083, 184,
	476, 479, 485, 213, 0, 623, -2, 656, 657, 659,
	0, 655, 148, 1275, 0, 0, 1225, 1227, 2130, 1231,
	0, 0, 0, 0, 0, 1252, 0, 153, 2544, 162,
	0, 1037, 0, 2117, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 2544, 184, 2544, 184, 165, 167, 170,
	0, 174, 172, 0, 1025, 0, 0, 1028, 109, 1275,
	0, 0, 112, 116, 124, 0, 0, 0, 130, 0,
	0, 0, 1254, 1258, 1266, 0, 0, 0, 1128, 1129,
	1132, 1138, 82, 0, 0, 0, 1262, 1264, 1270, 92,
	93, 2128, 94, 0, 1224, 0, 0, 0, 176, 114,
	118, 125, 0, 1272, 111, 0, 198, 0, 0, 0,
	190, 0, 191, 192, 207, 0, 184, 2544, 0, 951,
	952, 1180, 1142, 1143, 0, 1148, 0, 0, 0, 0,
	1572, 219, 0, 1572, 227, 0, 2091, 0, 344, 0,
	0, 0, 0, 987, 1083, 0, 958, 0, 0, 0,
	417, 413, 0, 422, 428, 427, -2, 0, 0, 0,
	0, -2, 0, 0, 1196, 1190, 1191, 0, 0, 0,
	0, 2544, 1357, 1363, 0, 1458, 1473, 432, 1364, 1385,
	0, 0, 0, 1374, 1370, 1367, 1603, 0, 0, 0,
	0, 0, 1596, 1599, 502, 503, 270, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 994, 998, 0, 2166,
	2166, 0, 2121, 0, 0, 0, 0, 256, 0, 259,
	0, 0, 0, 264, 265, 266, 267, 268, 258, 249,
	1572, 0, 612, 0, 0, 762, 0, 785, 794, 796,
	799, 837, 839, 856, 882, 883, 1015, 0, 1015, 0,
	0, 900, 1421, 0, 1496, 1427, 1478, 1479, 0, 1222,
	0, 1737, 1780, 0, 0, -2, 0, 0, 1784, 0,
	0, 0, -2, 0, 0, 0, 2014, 2016, 0, 2070,
	1880, 0, 0, 0, 1884, 1868, 1869, 0, 1988, 2031,
	2060, 2064, 0, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	0, 2110, 2144, 2148, 1961, 1962, 1966, 2124, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 1707, 0, 0, 2032, 2043, 2045, 1822, 1823, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, -2,
	-2, -2, 1840, 1841, 1842, -2, -2, -2, 0, 0,
	0, 2046, 2048, 2049, 2053, 2054, 0, 1944, 1945, 1946,
	2055, 0, 1460, 1454, 1515, 0, 1601, 1519, 0, 1515,
	1515, 1467, 1561, 0, 0, 1585, 0, 1533, 0, 1534,
	0, 1566, 0, 1541, 1544, 1545, 1555, 0, 1547, 0,
	1550, 0, 1880, -2, 296, 297, 299, 0, 302, 568,
	569, 567, 551, 0, 0, 1611, 0, 0, 1687, 1691,
	1715, 574, 575, 573, 464, 473, 215, 0, 1570, 0,
	0, 0, 0, 2196, 1242, 1243, 0, 2561, 1247, 0,
	0, 0, 0, 185, 1035, 1064, 0, 0, 0, 1056,
	0, 0, 1070, 155, 0, 0, 0, 163, 0, 0,
	160, 0, 169, 173, 1022, 0, 0, 0, 0, 1230,
	0, 0, 0, 127, 128, 129, 0, 134, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 1349,
	1343, 0, 0, 0, 187, 0, 0, 0, 1219, 0,
	0, 209, 0, 0, 0, 1183, 1184, 1255, 1259, 1267,
	0, 0, 0, 227, 225, 0, 228, 0, 231, 232,
	0, 227, 221, 0, 0, 1101, 357, 961, 1071, 0,
	1073, 0, 959, 0, 0, 1072, 409, 0, 416, 0,
	0, 1122, 0, 0, 1145, 1156, 1101, 0, 1195, 1197,
	0, 1205, 0, 0, 0, 1359, 1363, 0, 1352, 1353,
	1492, 1365, 1383, -2, 0, 0, 1473, 1391, 1388, 1394,
	1395, 0, 292, 0, 287, 289, 0, 273, 0, 0,
	990, 995, 0, 0, 0, 0, 0, 1376, 1378, 0,
	0, 0, 0, 0, 0, 248, 258, 279, 0, 756,
	780, 847, 884, 1014, 0, 0, 886, 0, 0, 1495,
	1482, 1483, 1480, 1222, 1782, 1786, 0, 0, 0, 1788,
	-2, 0, 1810, -2, -2, 2017, 2069, 1859, 1473, 1881,
	1883, 1870, 2063, 1732, 0, 1968, 1965, 0, 1952, 0,
	1905, 1906, 0, 0, 1909, 1911, 1912, 1913, 1671, 1664,
	1663, 2042, 0, 0, 0, 0, 1943, 1455, 0, 1957,
	0, 0, 1523, 1957, 1957, 1562, 0, 1564, 1531, 1524,
	0, 2144, 1557, 1549, 0, 0, 300, 0, 1605, 1610,
	0, 1616, 1686, 216, 149, 150, 1234, 1235, 1237, 1238,
	0, 0, 1244, 1245, 0, 1250, 152, 0, 1036, 0,
	1039, 0, 0, 0, 0, 1046, 1057, 0, 0, 0,
	0, 0, 1058, 0, 1087, 0, 1210, 1217, 0, -2,
	0, 0, 0, 157, 179, 0, 0, 1276, 0, 0,
	184, 184, 0, 0, 1226, 1228, 1253, 0, 0, 0,
	0, 137, 0, 0, 1256, 1260, 1268, 1263, 1265, 1271,
	0, 0, 0, 1273, 196, 197, 0, 184, 0, 189,
	184, 184, 1219, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 220, 285, 227, 0, 1009, 0, 1083, 1075,
	1076, 1077, 0, 1082, 1084, 0, 0, 975, 960, 0,
	971, 0, 0, 988, 963, 0, 414, 949, 1119, 1153,
	1101, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	1361, 1363, 0, 1354, 1355, 1385, 1491, 0, 0, 0,
	1373, 1492, 0, 294, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 260, 0, 261, 262, 263,
	250, 614, 616, 0, 0, 622, 1013, 0, 0, 0,
	0, 1481, 1790, -2, -2, 1811, 0, 2145, 2147, 1473,
	0, 1954, 1475, 0, 0, -2, 0, 0, 0, 1456,
	1439, 0, 1514, 1506, 1508, 1510, 2436, 2236, 2543, 1440,
	1441, 1584, 0, 1552, 301, 0, 1612, 0, 0, 1239,
	1240, 0, 0, 0, 154, 0, 1040, 1041, 2120, 1043,
	0, 1045, 1047, 1048, 0, 1051, 2168, 0, 1055, 0,
	1066, 1088, 0, 1097, 0, 1212, 1222, 1216, 0, 1214,
	1099, 0, 156, 158, 178, 1219, 0, 159, 168, 0,
	0, 113, 0, 0, 2231, 140, 138, 136, 1223, 115,
	0, 198, 208, 1218, 193, 210, 184, 0, 1257, 1261,
	1269, 229, 0, 230, 233, 0, 0, 1024, 0, 962,
	1074, 0, 1085, 1086, 965, 0, 964, 0, 0, 0,
	0, 0, 415, 418, 0, 421, 0, 0, 1198, 1196,
	0, 1204, 0, 0, 0, 1342, 0, 0, 1356, 1357,
	430, 1379, 0, 0, 1385, 1396, 272, 0, 0, 996,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 997,
	1099, 0, 0, 1063, 0, 277, 257, 0, 618, 0,
	620, 0, 885, 887, 0, 0, 1882, 1972, 0, 0,
	1907, 1908, -2, 0, 1848, 1956, 1958, 0, 0, 0,
	0, 0, 1525, 1606, 1232, 0, 1236, 0, 1246, 1248,
	0, 1251, 1038, 1042, 0, 0, 0, 1105, 0, 0,
	1059, 0, 1091, 1092, 1009, 0, 1093, 1094, 1095, 1211,
	1484, 1217, 1009, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 188, 211, 1219, 226, 243, 0, 1154,
	963, 1023, 0, 0, 973, 0, 976, 0, 972, 969,
	970, 961, 0, 419, 420, 0, 1157, 0, 0, 1205,
	0, 0, 1345, 1341, 1363, 1358, 1359, 1603, 1382, 1386,
	0, 0, 1097, 1099, 963, 0, 617, 0, 0, 892,
	893, 0, 0, 0, 0, 1967, 1476, 1849, 0, 0,
	1509, 1511, 1512, 1513, 1233, 1241, 1249, 0, 0, 1050,
	1110, 0, 0, 0, 1089, 1090, 1020, 0, 1215, 1213,
	1068, 0, 1101, 161, 0, 1099, 0, 1029, 0, 0,
	1032, 0, 0, 141, 2231, 139, 0, 184, 246, 0,
	240, 238, 239, 965, 0, 0, 1079, 1081, 0, 977,
	1009, 975, 1155, 1188, 1099, 0, 1097, 0, 1351, 1363,
	1346, 1347, 0, 1361, 0, 295, 295, 1009, 1097, 1603,
	0, 295, 619, 621, 1964, 1984, 1973, -2, 2503, 2237,
	0, 1984, 1984, 1959, 1960, 0, 0, 1052, 1106, 1107,
	0, 1102, 1103, 1104, 2167, 1053, 1054, 1087, 1019, 0,
	0, 1105, 180, 1009, 1026, 0, 0, 1027, 0, 0,
	144, 0, 146, 212, 234, 0, 0, 957, 0, 1078,
	0, 0, 0, 0, 1024, 965, 1097, 0, 1009, 0,
	1338, 1350, 0, 1360, 1342, 0, 274, 275, 1020, 1009,
	1062, 276, 1969, 0, 0, 1975, 1976, 1977, 1978, 1979,
	1970, 1971, 1044, 0, 1108, 0, 1109, 0, 0, 0,
	1603, 1096, 0, 1110, 166, 1030, 0, 1033, 0, 142,
	0, 241, 242, 954, 956, 0, 1080, 966, 0, 968,
	963, 974, 1009, 0, 1020, 0, 1344, 2129, 1345, 1380,
	0, 963, 1020, 0, 1981, 1982, 0, 0, 0, 1111,
	0, 1114, 1115, 0, 1112, 1067, 0, 1087, 0, 0,
	0, 0, 967, 965, 1020, 1099, 963, 1097, 1351, 0,
	1603, 963, 1980, 1983, 1974, 1049, 1113, 1116, 1117, 1098,
	1069, 0, 0, 244, 0, 1012, 957, 963, 1097, 1603,
	1009, 1339, 1603, 1060, 1603, 1017, 0, 0, 1008, 1010,
	1011, 955, 1603, 1009, 1201, 1020, 1381, 1061, 1031, 1016,
	0, 245, 1199, 1020, 963, 0, 963, 1603, 0, 1603,
	1202, 1017, 1200, 1034,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 562, 3, 568, 563, 3,
	573, 574, 566, 564, 578, 565, 575, 567, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 581, 3,
	554, 556, 555, 559, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 571, 3, 572, 569, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 579, 561, 580, 557,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 558, 57897, 560, 57898, 570, 57899, 576,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2168
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2172
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2210
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2222
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2261
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = nil
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2615
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2739
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2748
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2764
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2769
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2774
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2805
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = nil
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2881
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3045
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3064
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3083
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3086
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CREATE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3103
		{
			return unimplemented(sqllex, "create access method")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "create cast")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplemented(sqllex, "create operator")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "create publication")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "create rule")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "create server")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3125
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3129
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplemented(sqllex, "drop server")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3274
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3309
		{

			sqlVAL.union.val = nil
		}
	case 430:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "DELETE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3337
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3563
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3653
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "DELETE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "INSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "DELETE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "INSERT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3738
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3771
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "GRANT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "RESET")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "RESET")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "USE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3989
		{
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "USE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			return unimplemented(sqllex, "set from current")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.Low
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.Normal
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = tree.High
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SHOW")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4409
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.str = "client_encoding"
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.str = "timezone"
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4478
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4541
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4550
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = true
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = true
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = false
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4895
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = true
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = false
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = true
		}
	case 856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = false
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5012
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5033
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5059
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5102
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5110
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5151
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5174
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5255
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "RESUME")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5612
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5679
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5695
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{

			sqlVAL.union.val = nil
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.str = ""
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = nil
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5763
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5767
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 973:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5793
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5807
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5822
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5824
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5879
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5905
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5916
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5922
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5923
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5929
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.str = ""
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6189
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = true
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = false
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6325
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6363
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6444
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6446
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6447
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6520
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6604
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6613
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6621
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6700
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = true
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{

			sqlVAL.union.val = true
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = false
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6740
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6754
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6766
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6778
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6788
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6798
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = nil
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6908
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6909
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6936
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6938
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6940
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6944
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6982
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7000
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7019
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7036
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = false
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = true
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = false
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = true
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = false
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7117
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7123
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.str = ""
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.str = ""
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7190
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7196
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7498
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7504
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7516
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7522
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7536
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7542
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7560
		{
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7563
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7564
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7593
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7623
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7660
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7676
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7701
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7719
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7729
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7730
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7747
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7750
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7751
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7794
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.str = ""
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7911
		{

		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.str = ""
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.str = ""
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.str = ""
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.str = ""
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7975
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7989
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8040
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8125
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8129
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8235
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8477
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = true
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = nil
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8605
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = true
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = false
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = false
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = true
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8635
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8639
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8701
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8706
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8768
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8933
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8985
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9024
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9034
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9080
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9110
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9143
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = nil
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = true
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = false
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.str = tree.AstFull
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.str = tree.AstRight
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.str = tree.AstInner
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9262
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9263
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.str = tree.AstHash
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.str = ""
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9377
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = true
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = false
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9426
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9439
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9447
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9448
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9466
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9476
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9496
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9568
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9587
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = types.Geography
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9607
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9615
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9649
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = nil
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = types.Int2
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = types.Int
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = types.Float4
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = types.Float
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9700
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9708
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = types.Bool
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = types.Float
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9747
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9769
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = types.String
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = true
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = false
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = types.Date
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9818
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9826
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9857
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = false
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = false
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = types.Interval
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9898
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = nil
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10405
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10626
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10652
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10676
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10706
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10717
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10718
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10742
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10808
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11004
		{
			return unimplemented(sqllex, "treat")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.str = ""
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11179
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11276
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.Any
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = tree.Some
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = tree.All
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = tree.Div
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = tree.LT
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = tree.GT
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = tree.LE
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.GE
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = tree.NE
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.Like
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11638
		{
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11710
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11791
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11807
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11856
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12082
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12089
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.str = ""
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
