// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}

//line sql-gen.y:858
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13360

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1531,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 400,
	-2, 0,
	-1, 74,
	242, 238,
	510, 238,
	-2, 0,
	-1, 87,
	230, 1273,
	244, 1273,
	260, 396,
	387, 396,
	397, 1043,
	434, 396,
	447, 1043,
	494, 1043,
	521, 396,
	547, 1043,
	-2, 0,
	-1, 93,
	132, 1531,
	237, 1531,
	532, 1531,
	533, 1531,
	-2, 0,
	-1, 109,
	150, 1502,
	169, 1502,
	182, 1502,
	240, 1502,
	273, 1502,
	339, 1502,
	349, 1502,
	527, 1502,
	-2, 1473,
	-1, 149,
	158, 894,
	259, 894,
	390, 856,
	452, 856,
	493, 856,
	513, 894,
	515, 856,
	-2, 0,
	-1, 152,
	4, 1533,
	21, 1533,
	22, 1533,
	23, 1533,
	24, 1533,
	25, 1533,
	26, 1533,
	27, 1533,
	29, 1533,
	30, 1533,
	36, 1533,
	41, 1533,
	42, 1533,
	44, 1533,
	45, 1533,
	46, 1533,
	47, 1533,
	48, 1533,
	49, 1533,
	50, 1533,
	51, 1533,
	53, 1533,
	54, 1533,
	55, 1533,
	56, 1533,
	58, 1533,
	59, 1533,
	60, 1533,
	61, 1533,
	62, 1533,
	63, 1533,
	64, 1533,
	68, 1533,
	69, 1533,
	70, 1533,
	71, 1533,
	73, 1533,
	74, 1533,
	75, 1533,
	79, 1533,
	80, 1533,
	81, 1533,
	82, 1533,
	83, 1533,
	84, 1533,
	85, 1533,
	88, 1533,
	89, 1533,
	90, 1533,
	91, 1533,
	92, 1533,
	94, 1533,
	96, 1533,
	97, 1533,
	98, 1533,
	99, 1533,
	100, 1533,
	101, 1533,
	103, 1533,
	104, 1533,
	105, 1533,
	107, 1533,
	108, 1533,
	109, 1533,
	117, 1533,
	118, 1533,
	119, 1533,
	120, 1533,
	121, 1533,
	123, 1533,
	124, 1533,
	125, 1533,
	127, 1533,
	128, 1533,
	129, 1533,
	131, 1533,
	132, 1533,
	133, 1533,
	135, 1533,
	136, 1533,
	137, 1533,
	140, 1533,
	141, 1533,
	142, 1533,
	144, 1533,
	145, 1533,
	147, 1533,
	148, 1533,
	149, 1533,
	151, 1533,
	152, 1533,
	153, 1533,
	154, 1533,
	155, 1533,
	156, 1533,
	157, 1533,
	158, 1533,
	159, 1533,
	160, 1533,
	161, 1533,
	162, 1533,
	163, 1533,
	164, 1533,
	165, 1533,
	166, 1533,
	168, 1533,
	174, 1533,
	175, 1533,
	176, 1533,
	177, 1533,
	181, 1533,
	183, 1533,
	184, 1533,
	188, 1533,
	189, 1533,
	190, 1533,
	191, 1533,
	192, 1533,
	193, 1533,
	194, 1533,
	195, 1533,
	196, 1533,
	197, 1533,
	198, 1533,
	199, 1533,
	200, 1533,
	201, 1533,
	203, 1533,
	204, 1533,
	206, 1533,
	207, 1533,
	209, 1533,
	210, 1533,
	211, 1533,
	212, 1533,
	213, 1533,
	214, 1533,
	215, 1533,
	216, 1533,
	217, 1533,
	219, 1533,
	220, 1533,
	222, 1533,
	223, 1533,
	224, 1533,
	225, 1533,
	226, 1533,
	230, 1533,
	231, 1533,
	232, 1533,
	233, 1533,
	234, 1533,
	237, 1533,
	238, 1533,
	239, 1533,
	241, 1533,
	243, 1533,
	244, 1533,
	246, 1533,
	248, 1533,
	249, 1533,
	250, 1533,
	252, 1533,
	256, 1533,
	257, 1533,
	258, 1533,
	259, 1533,
	260, 1533,
	261, 1533,
	263, 1533,
	264, 1533,
	265, 1533,
	267, 1533,
	268, 1533,
	270, 1533,
	271, 1533,
	274, 1533,
	278, 1533,
	279, 1533,
	280, 1533,
	283, 1533,
	284, 1533,
	285, 1533,
	286, 1533,
	288, 1533,
	289, 1533,
	290, 1533,
	291, 1533,
	292, 1533,
	293, 1533,
	294, 1533,
	295, 1533,
	296, 1533,
	297, 1533,
	298, 1533,
	299, 1533,
	300, 1533,
	301, 1533,
	302, 1533,
	303, 1533,
	304, 1533,
	305, 1533,
	306, 1533,
	307, 1533,
	308, 1533,
	309, 1533,
	311, 1533,
	313, 1533,
	314, 1533,
	315, 1533,
	316, 1533,
	317, 1533,
	318, 1533,
	319, 1533,
	320, 1533,
	321, 1533,
	322, 1533,
	323, 1533,
	324, 1533,
	326, 1533,
	327, 1533,
	329, 1533,
	331, 1533,
	332, 1533,
	334, 1533,
	335, 1533,
	336, 1533,
	337, 1533,
	338, 1533,
	341, 1533,
	344, 1533,
	345, 1533,
	346, 1533,
	347, 1533,
	350, 1533,
	351, 1533,
	352, 1533,
	354, 1533,
	356, 1533,
	357, 1533,
	358, 1533,
	359, 1533,
	360, 1533,
	361, 1533,
	362, 1533,
	363, 1533,
	364, 1533,
	365, 1533,
	366, 1533,
	367, 1533,
	369, 1533,
	370, 1533,
	371, 1533,
	372, 1533,
	373, 1533,
	374, 1533,
	375, 1533,
	376, 1533,
	377, 1533,
	378, 1533,
	379, 1533,
	380, 1533,
	381, 1533,
	382, 1533,
	383, 1533,
	385, 1533,
	386, 1533,
	388, 1533,
	389, 1533,
	390, 1533,
	391, 1533,
	392, 1533,
	393, 1533,
	394, 1533,
	395, 1533,
	396, 1533,
	397, 1533,
	398, 1533,
	399, 1533,
	401, 1533,
	403, 1533,
	404, 1533,
	405, 1533,
	410, 1533,
	412, 1533,
	413, 1533,
	414, 1533,
	415, 1533,
	416, 1533,
	417, 1533,
	418, 1533,
	419, 1533,
	420, 1533,
	422, 1533,
	423, 1533,
	424, 1533,
	426, 1533,
	427, 1533,
	428, 1533,
	429, 1533,
	430, 1533,
	431, 1533,
	432, 1533,
	434, 1533,
	435, 1533,
	436, 1533,
	437, 1533,
	438, 1533,
	439, 1533,
	440, 1533,
	441, 1533,
	442, 1533,
	443, 1533,
	444, 1533,
	445, 1533,
	447, 1533,
	448, 1533,
	449, 1533,
	450, 1533,
	451, 1533,
	452, 1533,
	454, 1533,
	455, 1533,
	456, 1533,
	457, 1533,
	458, 1533,
	459, 1533,
	461, 1533,
	462, 1533,
	463, 1533,
	464, 1533,
	465, 1533,
	466, 1533,
	467, 1533,
	468, 1533,
	470, 1533,
	472, 1533,
	473, 1533,
	474, 1533,
	475, 1533,
	476, 1533,
	477, 1533,
	478, 1533,
	479, 1533,
	480, 1533,
	481, 1533,
	482, 1533,
	483, 1533,
	484, 1533,
	485, 1533,
	486, 1533,
	487, 1533,
	489, 1533,
	490, 1533,
	492, 1533,
	493, 1533,
	495, 1533,
	496, 1533,
	497, 1533,
	498, 1533,
	499, 1533,
	500, 1533,
	501, 1533,
	502, 1533,
	503, 1533,
	505, 1533,
	506, 1533,
	507, 1533,
	508, 1533,
	509, 1533,
	511, 1533,
	513, 1533,
	514, 1533,
	515, 1533,
	516, 1533,
	517, 1533,
	518, 1533,
	520, 1533,
	521, 1533,
	522, 1533,
	523, 1533,
	525, 1533,
	526, 1533,
	529, 1533,
	530, 1533,
	531, 1533,
	532, 1533,
	533, 1533,
	534, 1533,
	535, 1533,
	537, 1533,
	540, 1533,
	541, 1533,
	542, 1533,
	543, 1533,
	544, 1533,
	545, 1533,
	547, 1533,
	548, 1533,
	549, 1533,
	550, 1533,
	552, 1533,
	557, 1533,
	558, 1533,
	559, 1533,
	560, 1533,
	561, 1533,
	562, 1533,
	-2, 0,
	-1, 153,
	1, 1388,
	130, 1388,
	248, 1388,
	328, 1388,
	385, 1388,
	394, 1388,
	566, 1388,
	590, 1388,
	-2, 0,
	-1, 155,
	1, 1388,
	590, 1388,
	-2, 0,
	-1, 156,
	1, 1388,
	590, 1388,
	-2, 0,
	-1, 157,
	1, 1388,
	510, 1388,
	590, 1388,
	-2, 0,
	-1, 186,
	150, 1501,
	169, 1501,
	182, 1501,
	240, 1501,
	273, 1501,
	339, 1501,
	349, 1501,
	527, 1501,
	-2, 1476,
	-1, 232,
	4, 1540,
	5, 1540,
	6, 1540,
	7, 1540,
	8, 1540,
	9, 1540,
	10, 1540,
	21, 1540,
	22, 1540,
	23, 1540,
	24, 1540,
	25, 1540,
	26, 1540,
	27, 1540,
	29, 1540,
	30, 1540,
	36, 1540,
	37, 1540,
	41, 1540,
	42, 1540,
	43, 1540,
	44, 1540,
	45, 1540,
	46, 1540,
	47, 1540,
	48, 1540,
	49, 1540,
	50, 1540,
	51, 1540,
	53, 1540,
	54, 1540,
	55, 1540,
	56, 1540,
	58, 1540,
	59, 1540,
	60, 1540,
	61, 1540,
	62, 1540,
	63, 1540,
	64, 1540,
	65, 1540,
	66, 1540,
	67, 1540,
	68, 1540,
	69, 1540,
	70, 1540,
	71, 1540,
	73, 1540,
	74, 1540,
	75, 1540,
	77, 1540,
	79, 1540,
	80, 1540,
	81, 1540,
	82, 1540,
	83, 1540,
	84, 1540,
	85, 1540,
	88, 1540,
	89, 1540,
	90, 1540,
	91, 1540,
	92, 1540,
	94, 1540,
	96, 1540,
	97, 1540,
	98, 1540,
	99, 1540,
	100, 1540,
	101, 1540,
	103, 1540,
	104, 1540,
	105, 1540,
	106, 1540,
	107, 1540,
	108, 1540,
	109, 1540,
	110, 1540,
	111, 1540,
	112, 1540,
	113, 1540,
	114, 1540,
	115, 1540,
	116, 1540,
	117, 1540,
	118, 1540,
	119, 1540,
	120, 1540,
	121, 1540,
	122, 1540,
	123, 1540,
	124, 1540,
	125, 1540,
	126, 1540,
	127, 1540,
	128, 1540,
	129, 1540,
	131, 1540,
	132, 1540,
	133, 1540,
	135, 1540,
	136, 1540,
	137, 1540,
	140, 1540,
	141, 1540,
	142, 1540,
	144, 1540,
	145, 1540,
	147, 1540,
	148, 1540,
	149, 1540,
	151, 1540,
	152, 1540,
	153, 1540,
	154, 1540,
	155, 1540,
	156, 1540,
	157, 1540,
	158, 1540,
	159, 1540,
	160, 1540,
	161, 1540,
	162, 1540,
	163, 1540,
	164, 1540,
	165, 1540,
	166, 1540,
	167, 1540,
	168, 1540,
	174, 1540,
	175, 1540,
	176, 1540,
	177, 1540,
	181, 1540,
	183, 1540,
	184, 1540,
	187, 1540,
	188, 1540,
	189, 1540,
	190, 1540,
	191, 1540,
	192, 1540,
	193, 1540,
	194, 1540,
	195, 1540,
	196, 1540,
	197, 1540,
	198, 1540,
	199, 1540,
	200, 1540,
	201, 1540,
	203, 1540,
	204, 1540,
	206, 1540,
	207, 1540,
	209, 1540,
	210, 1540,
	211, 1540,
	212, 1540,
	213, 1540,
	214, 1540,
	215, 1540,
	216, 1540,
	217, 1540,
	218, 1540,
	219, 1540,
	220, 1540,
	222, 1540,
	223, 1540,
	224, 1540,
	225, 1540,
	226, 1540,
	230, 1540,
	231, 1540,
	232, 1540,
	233, 1540,
	234, 1540,
	236, 1540,
	237, 1540,
	238, 1540,
	239, 1540,
	241, 1540,
	243, 1540,
	244, 1540,
	245, 1540,
	246, 1540,
	247, 1540,
	248, 1540,
	249, 1540,
	250, 1540,
	251, 1540,
	252, 1540,
	256, 1540,
	257, 1540,
	258, 1540,
	259, 1540,
	260, 1540,
	261, 1540,
	263, 1540,
	264, 1540,
	265, 1540,
	267, 1540,
	268, 1540,
	269, 1540,
	270, 1540,
	271, 1540,
	272, 1540,
	274, 1540,
	278, 1540,
	279, 1540,
	280, 1540,
	281, 1540,
	282, 1540,
	283, 1540,
	284, 1540,
	285, 1540,
	286, 1540,
	288, 1540,
	289, 1540,
	290, 1540,
	291, 1540,
	292, 1540,
	293, 1540,
	294, 1540,
	295, 1540,
	296, 1540,
	297, 1540,
	298, 1540,
	299, 1540,
	300, 1540,
	301, 1540,
	302, 1540,
	303, 1540,
	304, 1540,
	305, 1540,
	306, 1540,
	307, 1540,
	308, 1540,
	309, 1540,
	311, 1540,
	312, 1540,
	313, 1540,
	314, 1540,
	315, 1540,
	316, 1540,
	317, 1540,
	318, 1540,
	319, 1540,
	320, 1540,
	321, 1540,
	322, 1540,
	323, 1540,
	324, 1540,
	325, 1540,
	326, 1540,
	327, 1540,
	328, 1540,
	329, 1540,
	330, 1540,
	331, 1540,
	332, 1540,
	333, 1540,
	334, 1540,
	335, 1540,
	336, 1540,
	337, 1540,
	338, 1540,
	341, 1540,
	345, 1540,
	346, 1540,
	347, 1540,
	350, 1540,
	351, 1540,
	352, 1540,
	353, 1540,
	354, 1540,
	355, 1540,
	356, 1540,
	357, 1540,
	358, 1540,
	359, 1540,
	360, 1540,
	361, 1540,
	362, 1540,
	363, 1540,
	364, 1540,
	365, 1540,
	366, 1540,
	367, 1540,
	369, 1540,
	370, 1540,
	371, 1540,
	372, 1540,
	373, 1540,
	374, 1540,
	375, 1540,
	376, 1540,
	377, 1540,
	378, 1540,
	379, 1540,
	380, 1540,
	381, 1540,
	382, 1540,
	383, 1540,
	385, 1540,
	386, 1540,
	388, 1540,
	389, 1540,
	390, 1540,
	391, 1540,
	392, 1540,
	393, 1540,
	394, 1540,
	395, 1540,
	396, 1540,
	397, 1540,
	398, 1540,
	399, 1540,
	401, 1540,
	403, 1540,
	404, 1540,
	405, 1540,
	410, 1540,
	412, 1540,
	413, 1540,
	414, 1540,
	415, 1540,
	416, 1540,
	417, 1540,
	418, 1540,
	419, 1540,
	420, 1540,
	422, 1540,
	423, 1540,
	424, 1540,
	425, 1540,
	426, 1540,
	427, 1540,
	428, 1540,
	429, 1540,
	430, 1540,
	431, 1540,
	432, 1540,
	434, 1540,
	435, 1540,
	436, 1540,
	437, 1540,
	438, 1540,
	439, 1540,
	440, 1540,
	441, 1540,
	442, 1540,
	443, 1540,
	444, 1540,
	445, 1540,
	447, 1540,
	448, 1540,
	449, 1540,
	450, 1540,
	451, 1540,
	452, 1540,
	453, 1540,
	454, 1540,
	455, 1540,
	456, 1540,
	457, 1540,
	458, 1540,
	459, 1540,
	460, 1540,
	461, 1540,
	462, 1540,
	463, 1540,
	464, 1540,
	465, 1540,
	466, 1540,
	467, 1540,
	468, 1540,
	470, 1540,
	472, 1540,
	473, 1540,
	474, 1540,
	475, 1540,
	476, 1540,
	477, 1540,
	478, 1540,
	479, 1540,
	480, 1540,
	481, 1540,
	482, 1540,
	483, 1540,
	484, 1540,
	485, 1540,
	486, 1540,
	487, 1540,
	489, 1540,
	490, 1540,
	491, 1540,
	492, 1540,
	493, 1540,
	495, 1540,
	496, 1540,
	497, 1540,
	498, 1540,
	499, 1540,
	500, 1540,
	501, 1540,
	502, 1540,
	503, 1540,
	505, 1540,
	506, 1540,
	507, 1540,
	508, 1540,
	509, 1540,
	511, 1540,
	513, 1540,
	514, 1540,
	515, 1540,
	516, 1540,
	517, 1540,
	518, 1540,
	519, 1540,
	520, 1540,
	521, 1540,
	522, 1540,
	523, 1540,
	525, 1540,
	526, 1540,
	528, 1540,
	529, 1540,
	530, 1540,
	531, 1540,
	532, 1540,
	533, 1540,
	534, 1540,
	535, 1540,
	536, 1540,
	537, 1540,
	540, 1540,
	541, 1540,
	542, 1540,
	543, 1540,
	544, 1540,
	545, 1540,
	547, 1540,
	548, 1540,
	549, 1540,
	550, 1540,
	552, 1540,
	557, 1540,
	558, 1540,
	559, 1540,
	560, 1540,
	561, 1540,
	562, 1540,
	563, 1540,
	571, 1540,
	578, 1540,
	579, 1540,
	580, 1540,
	587, 1540,
	591, 1540,
	-2, 0,
	-1, 733,
	4, 1271,
	21, 1271,
	22, 1271,
	23, 1271,
	24, 1271,
	25, 1271,
	26, 1271,
	27, 1271,
	29, 1271,
	30, 1271,
	36, 1271,
	41, 1271,
	42, 1271,
	44, 1271,
	45, 1271,
	46, 1271,
	47, 1271,
	48, 1271,
	49, 1271,
	50, 1271,
	51, 1271,
	53, 1271,
	54, 1271,
	55, 1271,
	56, 1271,
	58, 1271,
	59, 1271,
	60, 1271,
	61, 1271,
	62, 1271,
	63, 1271,
	64, 1271,
	68, 1271,
	69, 1271,
	70, 1271,
	71, 1271,
	73, 1271,
	74, 1271,
	75, 1271,
	79, 1271,
	80, 1271,
	81, 1271,
	82, 1271,
	83, 1271,
	84, 1271,
	85, 1271,
	88, 1271,
	89, 1271,
	90, 1271,
	91, 1271,
	92, 1271,
	94, 1271,
	96, 1271,
	97, 1271,
	98, 1271,
	99, 1271,
	100, 1271,
	101, 1271,
	103, 1271,
	104, 1271,
	105, 1271,
	107, 1271,
	108, 1271,
	109, 1271,
	117, 1271,
	118, 1271,
	119, 1271,
	120, 1271,
	121, 1271,
	123, 1271,
	124, 1271,
	125, 1271,
	127, 1271,
	128, 1271,
	129, 1271,
	131, 1271,
	132, 1271,
	133, 1271,
	135, 1271,
	136, 1271,
	137, 1271,
	140, 1271,
	141, 1271,
	142, 1271,
	144, 1271,
	145, 1271,
	147, 1271,
	148, 1271,
	149, 1271,
	151, 1271,
	152, 1271,
	153, 1271,
	154, 1271,
	155, 1271,
	156, 1271,
	157, 1271,
	158, 1271,
	159, 1271,
	160, 1271,
	161, 1271,
	162, 1271,
	163, 1271,
	164, 1271,
	165, 1271,
	166, 1271,
	168, 1271,
	174, 1271,
	175, 1271,
	176, 1271,
	177, 1271,
	181, 1271,
	183, 1271,
	184, 1271,
	188, 1271,
	189, 1271,
	190, 1271,
	191, 1271,
	192, 1271,
	193, 1271,
	194, 1271,
	195, 1271,
	196, 1271,
	197, 1271,
	198, 1271,
	199, 1271,
	200, 1271,
	201, 1271,
	203, 1271,
	204, 1271,
	206, 1271,
	207, 1271,
	209, 1271,
	210, 1271,
	211, 1271,
	212, 1271,
	213, 1271,
	214, 1271,
	215, 1271,
	216, 1271,
	217, 1271,
	219, 1271,
	220, 1271,
	222, 1271,
	223, 1271,
	224, 1271,
	225, 1271,
	226, 1271,
	230, 1271,
	231, 1271,
	232, 1271,
	233, 1271,
	234, 1271,
	237, 1271,
	238, 1271,
	239, 1271,
	241, 1271,
	243, 1271,
	244, 1271,
	246, 1271,
	248, 1271,
	249, 1271,
	250, 1271,
	252, 1271,
	256, 1271,
	257, 1271,
	258, 1271,
	259, 1271,
	260, 1271,
	261, 1271,
	263, 1271,
	264, 1271,
	265, 1271,
	267, 1271,
	268, 1271,
	270, 1271,
	271, 1271,
	274, 1271,
	278, 1271,
	279, 1271,
	280, 1271,
	283, 1271,
	284, 1271,
	285, 1271,
	286, 1271,
	288, 1271,
	289, 1271,
	290, 1271,
	291, 1271,
	292, 1271,
	293, 1271,
	294, 1271,
	295, 1271,
	296, 1271,
	297, 1271,
	298, 1271,
	299, 1271,
	300, 1271,
	301, 1271,
	302, 1271,
	303, 1271,
	304, 1271,
	305, 1271,
	306, 1271,
	307, 1271,
	308, 1271,
	309, 1271,
	311, 1271,
	313, 1271,
	314, 1271,
	315, 1271,
	316, 1271,
	317, 1271,
	318, 1271,
	319, 1271,
	320, 1271,
	321, 1271,
	322, 1271,
	323, 1271,
	324, 1271,
	326, 1271,
	327, 1271,
	329, 1271,
	331, 1271,
	332, 1271,
	334, 1271,
	335, 1271,
	336, 1271,
	337, 1271,
	338, 1271,
	341, 1271,
	345, 1271,
	346, 1271,
	347, 1271,
	350, 1271,
	351, 1271,
	352, 1271,
	354, 1271,
	356, 1271,
	357, 1271,
	358, 1271,
	359, 1271,
	360, 1271,
	361, 1271,
	362, 1271,
	363, 1271,
	364, 1271,
	365, 1271,
	366, 1271,
	367, 1271,
	369, 1271,
	370, 1271,
	371, 1271,
	372, 1271,
	373, 1271,
	374, 1271,
	375, 1271,
	376, 1271,
	377, 1271,
	378, 1271,
	379, 1271,
	380, 1271,
	381, 1271,
	382, 1271,
	383, 1271,
	385, 1271,
	386, 1271,
	388, 1271,
	389, 1271,
	390, 1271,
	391, 1271,
	392, 1271,
	393, 1271,
	394, 1271,
	395, 1271,
	396, 1271,
	397, 1271,
	398, 1271,
	399, 1271,
	401, 1271,
	403, 1271,
	404, 1271,
	405, 1271,
	410, 1271,
	412, 1271,
	413, 1271,
	414, 1271,
	415, 1271,
	416, 1271,
	417, 1271,
	418, 1271,
	419, 1271,
	420, 1271,
	422, 1271,
	423, 1271,
	424, 1271,
	426, 1271,
	427, 1271,
	428, 1271,
	429, 1271,
	430, 1271,
	431, 1271,
	432, 1271,
	434, 1271,
	435, 1271,
	436, 1271,
	437, 1271,
	438, 1271,
	439, 1271,
	440, 1271,
	441, 1271,
	442, 1271,
	443, 1271,
	444, 1271,
	445, 1271,
	447, 1271,
	448, 1271,
	449, 1271,
	450, 1271,
	451, 1271,
	452, 1271,
	454, 1271,
	455, 1271,
	456, 1271,
	457, 1271,
	458, 1271,
	459, 1271,
	461, 1271,
	462, 1271,
	463, 1271,
	464, 1271,
	465, 1271,
	466, 1271,
	467, 1271,
	468, 1271,
	470, 1271,
	472, 1271,
	473, 1271,
	474, 1271,
	475, 1271,
	476, 1271,
	477, 1271,
	478, 1271,
	479, 1271,
	480, 1271,
	481, 1271,
	482, 1271,
	483, 1271,
	484, 1271,
	485, 1271,
	486, 1271,
	487, 1271,
	489, 1271,
	490, 1271,
	492, 1271,
	493, 1271,
	495, 1271,
	496, 1271,
	497, 1271,
	498, 1271,
	499, 1271,
	500, 1271,
	501, 1271,
	502, 1271,
	503, 1271,
	505, 1271,
	506, 1271,
	507, 1271,
	508, 1271,
	509, 1271,
	511, 1271,
	513, 1271,
	514, 1271,
	515, 1271,
	516, 1271,
	517, 1271,
	518, 1271,
	520, 1271,
	521, 1271,
	522, 1271,
	523, 1271,
	525, 1271,
	526, 1271,
	529, 1271,
	530, 1271,
	531, 1271,
	532, 1271,
	533, 1271,
	534, 1271,
	535, 1271,
	537, 1271,
	540, 1271,
	541, 1271,
	542, 1271,
	543, 1271,
	544, 1271,
	545, 1271,
	547, 1271,
	548, 1271,
	549, 1271,
	550, 1271,
	552, 1271,
	557, 1271,
	558, 1271,
	559, 1271,
	560, 1271,
	561, 1271,
	562, 1271,
	-2, 0,
	-1, 752,
	186, 2325,
	510, 2325,
	570, 2325,
	589, 2325,
	-2, 0,
	-1, 753,
	186, 2432,
	510, 2432,
	570, 2432,
	589, 2432,
	-2, 0,
	-1, 754,
	186, 2312,
	510, 2312,
	570, 2312,
	589, 2312,
	-2, 0,
	-1, 756,
	186, 2565,
	510, 2565,
	570, 2565,
	589, 2565,
	-2, 0,
	-1, 758,
	186, 2606,
	510, 2606,
	570, 2606,
	589, 2606,
	-2, 0,
	-1, 765,
	186, 2459,
	510, 2459,
	570, 2459,
	589, 2459,
	-2, 688,
	-1, 798,
	589, 2261,
	592, 2261,
	-2, 974,
	-1, 799,
	589, 2263,
	592, 2263,
	-2, 975,
	-1, 800,
	589, 2262,
	592, 2262,
	-2, 976,
	-1, 801,
	592, 2187,
	-2, 977,
	-1, 824,
	182, 253,
	-2, 0,
	-1, 848,
	43, 2234,
	-2, 0,
	-1, 849,
	547, 1249,
	-2, 1044,
	-1, 865,
	4, 1669,
	21, 1669,
	22, 1669,
	23, 1669,
	24, 1669,
	25, 1669,
	26, 1669,
	27, 1669,
	29, 1669,
	30, 1669,
	36, 1669,
	41, 1669,
	42, 1669,
	44, 1669,
	45, 1669,
	46, 1669,
	47, 1669,
	48, 1669,
	49, 1669,
	50, 1669,
	51, 1669,
	53, 1669,
	54, 1669,
	55, 1669,
	56, 1669,
	58, 1669,
	59, 1669,
	60, 1669,
	61, 1669,
	62, 1669,
	63, 1669,
	64, 1669,
	68, 1669,
	69, 1669,
	70, 1669,
	71, 1669,
	73, 1669,
	74, 1669,
	75, 1669,
	79, 1669,
	80, 1669,
	81, 1669,
	82, 1669,
	83, 1669,
	84, 1669,
	85, 1669,
	88, 1669,
	89, 1669,
	90, 1669,
	91, 1669,
	92, 1669,
	94, 1669,
	96, 1669,
	97, 1669,
	98, 1669,
	99, 1669,
	100, 1669,
	101, 1669,
	103, 1669,
	104, 1669,
	105, 1669,
	107, 1669,
	108, 1669,
	109, 1669,
	117, 1669,
	118, 1669,
	119, 1669,
	120, 1669,
	121, 1669,
	123, 1669,
	124, 1669,
	125, 1669,
	127, 1669,
	128, 1669,
	129, 1669,
	131, 1669,
	132, 1669,
	133, 1669,
	135, 1669,
	136, 1669,
	137, 1669,
	140, 1669,
	141, 1669,
	142, 1669,
	144, 1669,
	145, 1669,
	147, 1669,
	148, 1669,
	149, 1669,
	151, 1669,
	152, 1669,
	153, 1669,
	154, 1669,
	155, 1669,
	156, 1669,
	157, 1669,
	158, 1669,
	159, 1669,
	160, 1669,
	161, 1669,
	162, 1669,
	163, 1669,
	164, 1669,
	165, 1669,
	166, 1669,
	168, 1669,
	174, 1669,
	175, 1669,
	176, 1669,
	177, 1669,
	181, 1669,
	183, 1669,
	184, 1669,
	188, 1669,
	189, 1669,
	190, 1669,
	191, 1669,
	192, 1669,
	193, 1669,
	194, 1669,
	195, 1669,
	196, 1669,
	197, 1669,
	198, 1669,
	199, 1669,
	200, 1669,
	201, 1669,
	203, 1669,
	204, 1669,
	206, 1669,
	207, 1669,
	209, 1669,
	210, 1669,
	211, 1669,
	212, 1669,
	213, 1669,
	214, 1669,
	215, 1669,
	216, 1669,
	217, 1669,
	219, 1669,
	220, 1669,
	222, 1669,
	223, 1669,
	224, 1669,
	225, 1669,
	226, 1669,
	230, 1669,
	231, 1669,
	232, 1669,
	233, 1669,
	234, 1669,
	237, 1669,
	238, 1669,
	239, 1669,
	241, 1669,
	243, 1669,
	244, 1669,
	246, 1669,
	248, 1669,
	249, 1669,
	250, 1669,
	252, 1669,
	256, 1669,
	257, 1669,
	258, 1669,
	259, 1669,
	260, 1669,
	261, 1669,
	263, 1669,
	264, 1669,
	265, 1669,
	267, 1669,
	268, 1669,
	270, 1669,
	271, 1669,
	274, 1669,
	278, 1669,
	279, 1669,
	280, 1669,
	283, 1669,
	284, 1669,
	285, 1669,
	286, 1669,
	288, 1669,
	289, 1669,
	290, 1669,
	291, 1669,
	292, 1669,
	293, 1669,
	294, 1669,
	295, 1669,
	296, 1669,
	297, 1669,
	298, 1669,
	299, 1669,
	300, 1669,
	301, 1669,
	302, 1669,
	303, 1669,
	304, 1669,
	305, 1669,
	306, 1669,
	307, 1669,
	308, 1669,
	309, 1669,
	311, 1669,
	313, 1669,
	314, 1669,
	315, 1669,
	316, 1669,
	317, 1669,
	318, 1669,
	319, 1669,
	320, 1669,
	321, 1669,
	322, 1669,
	323, 1669,
	324, 1669,
	326, 1669,
	327, 1669,
	329, 1669,
	331, 1669,
	332, 1669,
	334, 1669,
	335, 1669,
	336, 1669,
	337, 1669,
	338, 1669,
	341, 1669,
	345, 1669,
	346, 1669,
	347, 1669,
	350, 1669,
	351, 1669,
	352, 1669,
	354, 1669,
	356, 1669,
	357, 1669,
	358, 1669,
	359, 1669,
	360, 1669,
	361, 1669,
	362, 1669,
	363, 1669,
	364, 1669,
	365, 1669,
	366, 1669,
	367, 1669,
	369, 1669,
	370, 1669,
	371, 1669,
	372, 1669,
	373, 1669,
	374, 1669,
	375, 1669,
	376, 1669,
	377, 1669,
	378, 1669,
	379, 1669,
	380, 1669,
	381, 1669,
	382, 1669,
	383, 1669,
	385, 1669,
	386, 1669,
	388, 1669,
	389, 1669,
	390, 1669,
	391, 1669,
	392, 1669,
	393, 1669,
	394, 1669,
	395, 1669,
	396, 1669,
	397, 1669,
	398, 1669,
	399, 1669,
	401, 1669,
	403, 1669,
	404, 1669,
	405, 1669,
	410, 1669,
	412, 1669,
	413, 1669,
	414, 1669,
	415, 1669,
	416, 1669,
	417, 1669,
	418, 1669,
	419, 1669,
	420, 1669,
	422, 1669,
	423, 1669,
	424, 1669,
	426, 1669,
	427, 1669,
	428, 1669,
	429, 1669,
	430, 1669,
	431, 1669,
	432, 1669,
	434, 1669,
	435, 1669,
	436, 1669,
	437, 1669,
	438, 1669,
	439, 1669,
	440, 1669,
	441, 1669,
	442, 1669,
	443, 1669,
	444, 1669,
	445, 1669,
	447, 1669,
	448, 1669,
	449, 1669,
	450, 1669,
	451, 1669,
	452, 1669,
	454, 1669,
	455, 1669,
	456, 1669,
	457, 1669,
	458, 1669,
	459, 1669,
	461, 1669,
	462, 1669,
	463, 1669,
	464, 1669,
	465, 1669,
	466, 1669,
	467, 1669,
	468, 1669,
	470, 1669,
	472, 1669,
	473, 1669,
	474, 1669,
	475, 1669,
	476, 1669,
	477, 1669,
	478, 1669,
	479, 1669,
	480, 1669,
	481, 1669,
	482, 1669,
	483, 1669,
	484, 1669,
	485, 1669,
	486, 1669,
	487, 1669,
	489, 1669,
	490, 1669,
	492, 1669,
	493, 1669,
	495, 1669,
	496, 1669,
	497, 1669,
	498, 1669,
	499, 1669,
	500, 1669,
	501, 1669,
	502, 1669,
	503, 1669,
	505, 1669,
	506, 1669,
	507, 1669,
	508, 1669,
	509, 1669,
	511, 1669,
	513, 1669,
	514, 1669,
	515, 1669,
	516, 1669,
	517, 1669,
	518, 1669,
	520, 1669,
	521, 1669,
	522, 1669,
	523, 1669,
	525, 1669,
	526, 1669,
	529, 1669,
	530, 1669,
	531, 1669,
	532, 1669,
	533, 1669,
	534, 1669,
	535, 1669,
	537, 1669,
	540, 1669,
	541, 1669,
	542, 1669,
	543, 1669,
	544, 1669,
	545, 1669,
	547, 1669,
	548, 1669,
	549, 1669,
	550, 1669,
	552, 1669,
	557, 1669,
	558, 1669,
	559, 1669,
	560, 1669,
	561, 1669,
	562, 1669,
	-2, 0,
	-1, 875,
	260, 400,
	-2, 0,
	-1, 947,
	390, 857,
	452, 857,
	493, 857,
	515, 857,
	-2, 0,
	-1, 948,
	390, 856,
	452, 856,
	493, 856,
	515, 856,
	-2, 796,
	-1, 952,
	1, 908,
	586, 908,
	588, 908,
	590, 908,
	-2, 0,
	-1, 953,
	1, 831,
	586, 831,
	588, 831,
	590, 831,
	-2, 0,
	-1, 954,
	1, 835,
	586, 835,
	588, 835,
	590, 835,
	-2, 0,
	-1, 955,
	1, 973,
	182, 973,
	586, 973,
	588, 973,
	590, 973,
	-2, 0,
	-1, 963,
	1, 862,
	586, 862,
	588, 862,
	590, 862,
	-2, 0,
	-1, 970,
	1, 908,
	586, 908,
	588, 908,
	590, 908,
	-2, 0,
	-1, 971,
	1, 910,
	586, 910,
	588, 910,
	590, 910,
	-2, 0,
	-1, 972,
	1, 913,
	586, 913,
	588, 913,
	590, 913,
	-2, 0,
	-1, 978,
	1, 937,
	586, 937,
	588, 937,
	590, 937,
	-2, 0,
	-1, 979,
	1, 939,
	586, 939,
	588, 939,
	590, 939,
	-2, 0,
	-1, 984,
	1, 967,
	586, 967,
	588, 967,
	590, 967,
	-2, 0,
	-1, 1032,
	169, 1544,
	182, 1544,
	273, 1544,
	339, 1544,
	-2, 1480,
	-1, 1047,
	169, 1543,
	182, 1543,
	273, 1543,
	339, 1543,
	-2, 1477,
	-1, 1074,
	589, 2260,
	-2, 696,
	-1, 1103,
	5, 2252,
	587, 2250,
	-2, 2241,
	-1, 1111,
	5, 2273,
	587, 2270,
	-2, 2261,
	-1, 1112,
	5, 2274,
	587, 2271,
	-2, 2262,
	-1, 1120,
	589, 2258,
	-2, 2240,
	-1, 1121,
	587, 2689,
	-2, 2259,
	-1, 1144,
	587, 2688,
	-2, 2275,
	-1, 1145,
	5, 1744,
	-2, 2659,
	-1, 1146,
	5, 1745,
	-2, 2660,
	-1, 1147,
	5, 1746,
	-2, 2674,
	-1, 1148,
	5, 1747,
	-2, 2638,
	-1, 1149,
	5, 1748,
	-2, 2672,
	-1, 1150,
	5, 1756,
	-2, 2651,
	-1, 1151,
	5, 1743,
	-2, 2647,
	-1, 1152,
	5, 1743,
	-2, 2646,
	-1, 1153,
	5, 1743,
	-2, 2665,
	-1, 1154,
	5, 1754,
	-2, 2640,
	-1, 1155,
	5, 1759,
	-2, 2639,
	-1, 1156,
	5, 1761,
	-2, 2684,
	-1, 1159,
	5, 1783,
	-2, 2677,
	-1, 1160,
	5, 1775,
	-2, 2678,
	-1, 1161,
	5, 1783,
	-2, 2679,
	-1, 1162,
	5, 1779,
	-2, 2680,
	-1, 1163,
	5, 1729,
	-2, 2652,
	-1, 1164,
	5, 1730,
	-2, 2653,
	-1, 1165,
	5, 1731,
	-2, 2641,
	-1, 1193,
	5, 1766,
	-2, 2685,
	-1, 1194,
	5, 1767,
	-2, 2675,
	-1, 1195,
	5, 1768,
	548, 1768,
	-2, 2642,
	-1, 1196,
	5, 1769,
	548, 1769,
	-2, 2643,
	-1, 1233,
	587, 2270,
	-2, 2261,
	-1, 1234,
	587, 2271,
	-2, 2262,
	-1, 1334,
	186, 2606,
	510, 2606,
	570, 2606,
	589, 2606,
	-2, 0,
	-1, 1337,
	1, 674,
	590, 674,
	-2, 1396,
	-1, 1465,
	358, 2235,
	412, 2235,
	454, 2235,
	580, 2235,
	-2, 2225,
	-1, 1476,
	591, 2235,
	-2, 2237,
	-1, 1484,
	1, 1246,
	586, 1246,
	588, 1246,
	590, 1246,
	-2, 1529,
	-1, 1488,
	202, 1341,
	221, 1341,
	424, 1341,
	-2, 0,
	-1, 1533,
	397, 1043,
	547, 1043,
	-2, 395,
	-1, 1550,
	43, 2233,
	-2, 1009,
	-1, 1557,
	1, 1246,
	586, 1246,
	588, 1246,
	590, 1246,
	-2, 1529,
	-1, 1565,
	4, 1271,
	21, 1271,
	22, 1271,
	23, 1271,
	24, 1271,
	25, 1271,
	26, 1271,
	27, 1271,
	29, 1271,
	30, 1271,
	36, 1271,
	41, 1271,
	42, 1271,
	44, 1271,
	45, 1271,
	46, 1271,
	47, 1271,
	48, 1271,
	49, 1271,
	50, 1271,
	51, 1271,
	53, 1271,
	54, 1271,
	55, 1271,
	56, 1271,
	58, 1271,
	59, 1271,
	60, 1271,
	61, 1271,
	62, 1271,
	63, 1271,
	64, 1271,
	68, 1271,
	69, 1271,
	70, 1271,
	71, 1271,
	73, 1271,
	74, 1271,
	75, 1271,
	79, 1271,
	80, 1271,
	81, 1271,
	82, 1271,
	83, 1271,
	84, 1271,
	85, 1271,
	88, 1271,
	89, 1271,
	90, 1271,
	91, 1271,
	92, 1271,
	94, 1271,
	96, 1271,
	97, 1271,
	98, 1271,
	99, 1271,
	100, 1271,
	101, 1271,
	103, 1271,
	104, 1271,
	105, 1271,
	107, 1271,
	108, 1271,
	109, 1271,
	117, 1271,
	118, 1271,
	119, 1271,
	120, 1271,
	121, 1271,
	123, 1271,
	124, 1271,
	125, 1271,
	127, 1271,
	128, 1271,
	129, 1271,
	131, 1271,
	132, 1271,
	133, 1271,
	135, 1271,
	136, 1271,
	137, 1271,
	140, 1271,
	141, 1271,
	142, 1271,
	144, 1271,
	145, 1271,
	147, 1271,
	148, 1271,
	149, 1271,
	151, 1271,
	152, 1271,
	153, 1271,
	154, 1271,
	155, 1271,
	156, 1271,
	157, 1271,
	158, 1271,
	159, 1271,
	160, 1271,
	161, 1271,
	162, 1271,
	163, 1271,
	164, 1271,
	165, 1271,
	166, 1271,
	174, 1271,
	175, 1271,
	176, 1271,
	177, 1271,
	181, 1271,
	183, 1271,
	184, 1271,
	188, 1271,
	189, 1271,
	190, 1271,
	191, 1271,
	192, 1271,
	193, 1271,
	194, 1271,
	195, 1271,
	196, 1271,
	197, 1271,
	198, 1271,
	199, 1271,
	200, 1271,
	201, 1271,
	203, 1271,
	204, 1271,
	206, 1271,
	207, 1271,
	209, 1271,
	210, 1271,
	211, 1271,
	212, 1271,
	213, 1271,
	214, 1271,
	215, 1271,
	216, 1271,
	217, 1271,
	219, 1271,
	220, 1271,
	222, 1271,
	223, 1271,
	224, 1271,
	225, 1271,
	226, 1271,
	231, 1271,
	232, 1271,
	233, 1271,
	234, 1271,
	237, 1271,
	238, 1271,
	239, 1271,
	241, 1271,
	243, 1271,
	244, 1271,
	246, 1271,
	248, 1271,
	249, 1271,
	250, 1271,
	252, 1271,
	256, 1271,
	257, 1271,
	258, 1271,
	259, 1271,
	260, 1271,
	261, 1271,
	263, 1271,
	264, 1271,
	265, 1271,
	267, 1271,
	268, 1271,
	270, 1271,
	271, 1271,
	274, 1271,
	278, 1271,
	279, 1271,
	280, 1271,
	283, 1271,
	284, 1271,
	285, 1271,
	286, 1271,
	288, 1271,
	289, 1271,
	290, 1271,
	291, 1271,
	292, 1271,
	293, 1271,
	294, 1271,
	295, 1271,
	296, 1271,
	297, 1271,
	298, 1271,
	299, 1271,
	300, 1271,
	301, 1271,
	302, 1271,
	303, 1271,
	304, 1271,
	305, 1271,
	306, 1271,
	307, 1271,
	308, 1271,
	309, 1271,
	311, 1271,
	313, 1271,
	314, 1271,
	315, 1271,
	316, 1271,
	317, 1271,
	318, 1271,
	319, 1271,
	320, 1271,
	321, 1271,
	322, 1271,
	323, 1271,
	324, 1271,
	326, 1271,
	327, 1271,
	331, 1271,
	332, 1271,
	334, 1271,
	335, 1271,
	336, 1271,
	337, 1271,
	338, 1271,
	341, 1271,
	343, 1271,
	345, 1271,
	346, 1271,
	347, 1271,
	350, 1271,
	351, 1271,
	352, 1271,
	354, 1271,
	356, 1271,
	357, 1271,
	358, 1271,
	359, 1271,
	360, 1271,
	361, 1271,
	362, 1271,
	363, 1271,
	364, 1271,
	365, 1271,
	366, 1271,
	367, 1271,
	369, 1271,
	370, 1271,
	371, 1271,
	372, 1271,
	373, 1271,
	374, 1271,
	375, 1271,
	376, 1271,
	377, 1271,
	378, 1271,
	379, 1271,
	380, 1271,
	381, 1271,
	382, 1271,
	383, 1271,
	385, 1271,
	386, 1271,
	388, 1271,
	389, 1271,
	390, 1271,
	391, 1271,
	392, 1271,
	393, 1271,
	394, 1271,
	395, 1271,
	396, 1271,
	397, 1271,
	398, 1271,
	399, 1271,
	401, 1271,
	403, 1271,
	404, 1271,
	405, 1271,
	410, 1271,
	412, 1271,
	413, 1271,
	414, 1271,
	415, 1271,
	416, 1271,
	417, 1271,
	418, 1271,
	419, 1271,
	420, 1271,
	422, 1271,
	423, 1271,
	424, 1271,
	426, 1271,
	427, 1271,
	428, 1271,
	429, 1271,
	430, 1271,
	431, 1271,
	432, 1271,
	434, 1271,
	435, 1271,
	436, 1271,
	437, 1271,
	438, 1271,
	439, 1271,
	440, 1271,
	441, 1271,
	442, 1271,
	443, 1271,
	444, 1271,
	445, 1271,
	447, 1271,
	448, 1271,
	449, 1271,
	450, 1271,
	451, 1271,
	452, 1271,
	454, 1271,
	455, 1271,
	456, 1271,
	457, 1271,
	458, 1271,
	459, 1271,
	461, 1271,
	462, 1271,
	463, 1271,
	464, 1271,
	465, 1271,
	466, 1271,
	467, 1271,
	468, 1271,
	470, 1271,
	472, 1271,
	473, 1271,
	474, 1271,
	475, 1271,
	476, 1271,
	477, 1271,
	478, 1271,
	479, 1271,
	480, 1271,
	481, 1271,
	482, 1271,
	483, 1271,
	484, 1271,
	485, 1271,
	486, 1271,
	487, 1271,
	489, 1271,
	490, 1271,
	492, 1271,
	493, 1271,
	495, 1271,
	496, 1271,
	497, 1271,
	498, 1271,
	499, 1271,
	500, 1271,
	501, 1271,
	502, 1271,
	503, 1271,
	505, 1271,
	506, 1271,
	507, 1271,
	508, 1271,
	509, 1271,
	511, 1271,
	513, 1271,
	514, 1271,
	515, 1271,
	516, 1271,
	517, 1271,
	518, 1271,
	520, 1271,
	521, 1271,
	522, 1271,
	523, 1271,
	525, 1271,
	526, 1271,
	529, 1271,
	530, 1271,
	531, 1271,
	532, 1271,
	533, 1271,
	534, 1271,
	535, 1271,
	537, 1271,
	540, 1271,
	541, 1271,
	542, 1271,
	543, 1271,
	544, 1271,
	545, 1271,
	547, 1271,
	548, 1271,
	549, 1271,
	550, 1271,
	552, 1271,
	557, 1271,
	558, 1271,
	559, 1271,
	560, 1271,
	561, 1271,
	562, 1271,
	-2, 0,
	-1, 1588,
	1, 540,
	586, 540,
	588, 540,
	590, 540,
	-2, 1500,
	-1, 1591,
	4, 2683,
	11, 2683,
	12, 2683,
	14, 2683,
	15, 2683,
	16, 2683,
	17, 2683,
	18, 2683,
	19, 2683,
	21, 2683,
	22, 2683,
	23, 2683,
	24, 2683,
	25, 2683,
	26, 2683,
	27, 2683,
	29, 2683,
	30, 2683,
	33, 2683,
	34, 2683,
	36, 2683,
	38, 2683,
	41, 2683,
	42, 2683,
	44, 2683,
	45, 2683,
	46, 2683,
	47, 2683,
	48, 2683,
	49, 2683,
	50, 2683,
	51, 2683,
	53, 2683,
	54, 2683,
	55, 2683,
	56, 2683,
	58, 2683,
	59, 2683,
	60, 2683,
	61, 2683,
	62, 2683,
	63, 2683,
	64, 2683,
	67, 2683,
	68, 2683,
	69, 2683,
	70, 2683,
	71, 2683,
	73, 2683,
	74, 2683,
	75, 2683,
	76, 2683,
	79, 2683,
	80, 2683,
	81, 2683,
	82, 2683,
	83, 2683,
	84, 2683,
	85, 2683,
	86, 2683,
	88, 2683,
	89, 2683,
	90, 2683,
	91, 2683,
	92, 2683,
	94, 2683,
	95, 2683,
	96, 2683,
	97, 2683,
	98, 2683,
	99, 2683,
	100, 2683,
	101, 2683,
	103, 2683,
	104, 2683,
	105, 2683,
	106, 2683,
	107, 2683,
	108, 2683,
	109, 2683,
	117, 2683,
	118, 2683,
	119, 2683,
	120, 2683,
	121, 2683,
	123, 2683,
	124, 2683,
	125, 2683,
	127, 2683,
	128, 2683,
	129, 2683,
	131, 2683,
	132, 2683,
	133, 2683,
	135, 2683,
	136, 2683,
	137, 2683,
	140, 2683,
	141, 2683,
	142, 2683,
	144, 2683,
	145, 2683,
	147, 2683,
	148, 2683,
	149, 2683,
	151, 2683,
	152, 2683,
	153, 2683,
	154, 2683,
	155, 2683,
	156, 2683,
	157, 2683,
	158, 2683,
	159, 2683,
	160, 2683,
	161, 2683,
	162, 2683,
	163, 2683,
	164, 2683,
	165, 2683,
	166, 2683,
	170, 2683,
	171, 2683,
	172, 2683,
	173, 2683,
	174, 2683,
	175, 2683,
	176, 2683,
	177, 2683,
	180, 2683,
	181, 2683,
	183, 2683,
	184, 2683,
	187, 2683,
	188, 2683,
	189, 2683,
	190, 2683,
	191, 2683,
	192, 2683,
	193, 2683,
	194, 2683,
	195, 2683,
	196, 2683,
	197, 2683,
	198, 2683,
	199, 2683,
	200, 2683,
	201, 2683,
	203, 2683,
	204, 2683,
	206, 2683,
	207, 2683,
	209, 2683,
	210, 2683,
	211, 2683,
	212, 2683,
	213, 2683,
	214, 2683,
	215, 2683,
	216, 2683,
	217, 2683,
	218, 2683,
	219, 2683,
	220, 2683,
	221, 2683,
	222, 2683,
	223, 2683,
	224, 2683,
	225, 2683,
	226, 2683,
	228, 2683,
	229, 2683,
	231, 2683,
	232, 2683,
	233, 2683,
	234, 2683,
	236, 2683,
	237, 2683,
	238, 2683,
	239, 2683,
	241, 2683,
	243, 2683,
	244, 2683,
	245, 2683,
	246, 2683,
	247, 2683,
	248, 2683,
	249, 2683,
	250, 2683,
	251, 2683,
	252, 2683,
	254, 2683,
	255, 2683,
	256, 2683,
	257, 2683,
	258, 2683,
	259, 2683,
	260, 2683,
	261, 2683,
	263, 2683,
	264, 2683,
	265, 2683,
	267, 2683,
	268, 2683,
	269, 2683,
	270, 2683,
	271, 2683,
	272, 2683,
	274, 2683,
	278, 2683,
	279, 2683,
	280, 2683,
	283, 2683,
	284, 2683,
	285, 2683,
	286, 2683,
	287, 2683,
	288, 2683,
	289, 2683,
	290, 2683,
	291, 2683,
	292, 2683,
	293, 2683,
	294, 2683,
	295, 2683,
	296, 2683,
	297, 2683,
	298, 2683,
	299, 2683,
	300, 2683,
	301, 2683,
	302, 2683,
	303, 2683,
	304, 2683,
	305, 2683,
	306, 2683,
	307, 2683,
	308, 2683,
	309, 2683,
	311, 2683,
	312, 2683,
	313, 2683,
	314, 2683,
	315, 2683,
	316, 2683,
	317, 2683,
	318, 2683,
	319, 2683,
	320, 2683,
	321, 2683,
	322, 2683,
	323, 2683,
	324, 2683,
	326, 2683,
	327, 2683,
	330, 2683,
	331, 2683,
	332, 2683,
	334, 2683,
	335, 2683,
	336, 2683,
	337, 2683,
	338, 2683,
	341, 2683,
	345, 2683,
	346, 2683,
	347, 2683,
	348, 2683,
	350, 2683,
	351, 2683,
	352, 2683,
	354, 2683,
	356, 2683,
	357, 2683,
	358, 2683,
	359, 2683,
	360, 2683,
	361, 2683,
	362, 2683,
	363, 2683,
	364, 2683,
	365, 2683,
	366, 2683,
	367, 2683,
	369, 2683,
	370, 2683,
	371, 2683,
	372, 2683,
	373, 2683,
	374, 2683,
	375, 2683,
	376, 2683,
	377, 2683,
	378, 2683,
	379, 2683,
	380, 2683,
	381, 2683,
	382, 2683,
	383, 2683,
	385, 2683,
	386, 2683,
	388, 2683,
	389, 2683,
	390, 2683,
	391, 2683,
	392, 2683,
	393, 2683,
	394, 2683,
	395, 2683,
	396, 2683,
	397, 2683,
	398, 2683,
	399, 2683,
	401, 2683,
	403, 2683,
	404, 2683,
	405, 2683,
	410, 2683,
	411, 2683,
	412, 2683,
	413, 2683,
	414, 2683,
	415, 2683,
	416, 2683,
	417, 2683,
	418, 2683,
	419, 2683,
	420, 2683,
	422, 2683,
	423, 2683,
	424, 2683,
	425, 2683,
	426, 2683,
	427, 2683,
	428, 2683,
	429, 2683,
	430, 2683,
	431, 2683,
	432, 2683,
	433, 2683,
	434, 2683,
	435, 2683,
	436, 2683,
	437, 2683,
	438, 2683,
	439, 2683,
	440, 2683,
	441, 2683,
	442, 2683,
	443, 2683,
	444, 2683,
	445, 2683,
	447, 2683,
	448, 2683,
	449, 2683,
	450, 2683,
	451, 2683,
	452, 2683,
	454, 2683,
	455, 2683,
	456, 2683,
	457, 2683,
	458, 2683,
	459, 2683,
	460, 2683,
	461, 2683,
	462, 2683,
	463, 2683,
	464, 2683,
	465, 2683,
	466, 2683,
	467, 2683,
	468, 2683,
	470, 2683,
	472, 2683,
	473, 2683,
	474, 2683,
	475, 2683,
	476, 2683,
	477, 2683,
	478, 2683,
	479, 2683,
	480, 2683,
	481, 2683,
	482, 2683,
	483, 2683,
	484, 2683,
	485, 2683,
	486, 2683,
	487, 2683,
	489, 2683,
	490, 2683,
	491, 2683,
	492, 2683,
	493, 2683,
	495, 2683,
	496, 2683,
	497, 2683,
	498, 2683,
	499, 2683,
	500, 2683,
	501, 2683,
	502, 2683,
	503, 2683,
	505, 2683,
	506, 2683,
	507, 2683,
	508, 2683,
	509, 2683,
	511, 2683,
	513, 2683,
	514, 2683,
	515, 2683,
	516, 2683,
	517, 2683,
	518, 2683,
	520, 2683,
	521, 2683,
	522, 2683,
	523, 2683,
	525, 2683,
	526, 2683,
	529, 2683,
	530, 2683,
	531, 2683,
	532, 2683,
	533, 2683,
	534, 2683,
	535, 2683,
	537, 2683,
	540, 2683,
	541, 2683,
	542, 2683,
	543, 2683,
	544, 2683,
	545, 2683,
	547, 2683,
	548, 2683,
	549, 2683,
	550, 2683,
	552, 2683,
	557, 2683,
	558, 2683,
	559, 2683,
	560, 2683,
	561, 2683,
	562, 2683,
	563, 2683,
	565, 2683,
	568, 2683,
	569, 2683,
	570, 2683,
	571, 2683,
	572, 2683,
	573, 2683,
	575, 2683,
	576, 2683,
	577, 2683,
	578, 2683,
	579, 2683,
	580, 2683,
	581, 2683,
	582, 2683,
	583, 2683,
	585, 2683,
	588, 2683,
	589, 2683,
	591, 2683,
	592, 2683,
	-2, 0,
	-1, 1596,
	186, 2565,
	510, 2565,
	570, 2565,
	589, 2565,
	-2, 0,
	-1, 1645,
	390, 857,
	452, 857,
	493, 857,
	515, 857,
	-2, 0,
	-1, 1672,
	1, 852,
	586, 852,
	588, 852,
	590, 852,
	-2, 0,
	-1, 1673,
	1, 895,
	586, 895,
	588, 895,
	590, 895,
	-2, 0,
	-1, 1674,
	1, 903,
	586, 903,
	588, 903,
	590, 903,
	-2, 0,
	-1, 1677,
	1, 861,
	586, 861,
	588, 861,
	590, 861,
	-2, 0,
	-1, 1679,
	1, 867,
	586, 867,
	588, 867,
	590, 867,
	-2, 0,
	-1, 1682,
	1, 863,
	586, 863,
	588, 863,
	590, 863,
	-2, 0,
	-1, 1687,
	1, 877,
	586, 877,
	588, 877,
	590, 877,
	-2, 0,
	-1, 1718,
	1, 2548,
	586, 2548,
	588, 2548,
	589, 2548,
	590, 2548,
	-2, 0,
	-1, 1722,
	1, 948,
	586, 948,
	588, 948,
	590, 948,
	-2, 0,
	-1, 1737,
	1, 1391,
	590, 1391,
	-2, 1396,
	-1, 1740,
	169, 1543,
	182, 1543,
	273, 1543,
	339, 1543,
	-2, 1481,
	-1, 1840,
	150, 1502,
	169, 1502,
	182, 1502,
	240, 1502,
	273, 1502,
	339, 1502,
	349, 1502,
	527, 1502,
	-2, 1948,
	-1, 1900,
	588, 2121,
	-2, 0,
	-1, 1935,
	150, 1502,
	169, 1502,
	182, 1502,
	240, 1502,
	273, 1502,
	339, 1502,
	349, 1502,
	527, 1502,
	-2, 1630,
	-1, 1970,
	510, 2562,
	589, 2562,
	592, 2562,
	-2, 0,
	-1, 1987,
	587, 1771,
	-2, 1759,
	-1, 2019,
	186, 2562,
	589, 2562,
	592, 2562,
	-2, 0,
	-1, 2067,
	1, 676,
	590, 676,
	-2, 1396,
	-1, 2196,
	221, 254,
	-2, 2269,
	-1, 2197,
	221, 255,
	-2, 303,
	-1, 2301,
	1, 854,
	586, 854,
	588, 854,
	590, 854,
	-2, 0,
	-1, 2302,
	1, 897,
	586, 897,
	588, 897,
	590, 897,
	-2, 0,
	-1, 2303,
	1, 905,
	586, 905,
	588, 905,
	590, 905,
	-2, 0,
	-1, 2304,
	1, 950,
	586, 950,
	588, 950,
	590, 950,
	-2, 0,
	-1, 2341,
	1, 879,
	586, 879,
	588, 879,
	590, 879,
	-2, 0,
	-1, 2359,
	1, 933,
	586, 933,
	588, 933,
	590, 933,
	-2, 0,
	-1, 2404,
	431, 1570,
	432, 1570,
	-2, 1804,
	-1, 2435,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1824,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1825,
	-1, 2437,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1826,
	-1, 2438,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1827,
	-1, 2439,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1828,
	-1, 2440,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1829,
	-1, 2441,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1830,
	-1, 2442,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1831,
	-1, 2454,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1843,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1844,
	-1, 2456,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1845,
	-1, 2460,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1852,
	-1, 2466,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1856,
	-1, 2468,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1864,
	-1, 2469,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1865,
	-1, 2470,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1866,
	-1, 2471,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1867,
	-1, 2643,
	5, 2273,
	186, 2132,
	587, 2270,
	-2, 2261,
	-1, 2644,
	186, 2133,
	-2, 2634,
	-1, 2645,
	186, 2134,
	-2, 2458,
	-1, 2646,
	186, 2135,
	-2, 2343,
	-1, 2647,
	186, 2136,
	-2, 2398,
	-1, 2648,
	186, 2137,
	-2, 2443,
	-1, 2649,
	186, 2138,
	-2, 2560,
	-1, 2650,
	186, 2139,
	-2, 1931,
	-1, 2721,
	1, 1631,
	2, 1631,
	106, 1631,
	150, 1631,
	169, 1631,
	182, 1631,
	187, 1631,
	205, 1631,
	208, 1631,
	236, 1631,
	240, 1631,
	251, 1631,
	269, 1631,
	273, 1631,
	312, 1631,
	339, 1631,
	343, 1631,
	349, 1631,
	421, 1631,
	425, 1631,
	527, 1631,
	538, 1631,
	554, 1631,
	555, 1631,
	556, 1631,
	566, 1631,
	586, 1631,
	588, 1631,
	590, 1631,
	592, 1631,
	-2, 1630,
	-1, 2734,
	587, 2242,
	-2, 2256,
	-1, 2736,
	1, 320,
	554, 320,
	-2, 1529,
	-1, 2764,
	587, 1770,
	-2, 1760,
	-1, 2942,
	1, 1246,
	586, 1246,
	588, 1246,
	590, 1246,
	-2, 1529,
	-1, 3117,
	344, 1573,
	-2, 2673,
	-1, 3118,
	344, 1574,
	-2, 2545,
	-1, 3122,
	431, 2198,
	432, 2198,
	-2, 1929,
	-1, 3123,
	431, 2202,
	432, 2202,
	-2, 1930,
	-1, 3124,
	431, 2199,
	432, 2199,
	-2, 1929,
	-1, 3125,
	431, 2203,
	432, 2203,
	-2, 1930,
	-1, 3138,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1854,
	-1, 3139,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1858,
	-1, 3145,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1860,
	-1, 3367,
	1, 673,
	586, 673,
	588, 673,
	590, 673,
	-2, 1396,
	-1, 3529,
	43, 2233,
	-2, 1010,
	-1, 3534,
	1, 1246,
	586, 1246,
	588, 1246,
	590, 1246,
	-2, 1529,
	-1, 3641,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1862,
	-1, 3648,
	245, 0,
	247, 0,
	330, 0,
	-2, 1881,
	-1, 3716,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1910,
	-1, 3717,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1911,
	-1, 3718,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1912,
	-1, 3722,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1916,
	-1, 3723,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1917,
	-1, 3724,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1918,
	-1, 3771,
	587, 2243,
	-2, 2257,
	-1, 3942,
	589, 2791,
	-2, 1455,
	-1, 4000,
	245, 0,
	247, 0,
	330, 0,
	-2, 1882,
	-1, 4003,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1885,
	-1, 4004,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1887,
	-1, 4098,
	589, 2258,
	-2, 1281,
	-1, 4247,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1886,
	-1, 4248,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1888,
	-1, 4259,
	245, 0,
	-2, 1921,
	-1, 4440,
	245, 0,
	-2, 1922,
	-1, 4632,
	50, 0,
	218, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 2637,
}

const sqlPrivate = 57344

const sqlLast = 129196

var sqlAct = [...]int{
	268, 4823, 3518, 2036, 4469, 4734, 3010, 3276, 4688, 4625,
	3023, 4504, 4304, 4613, 4477, 2827, 3517, 4761, 4631, 4642,
	4362, 4500, 4624, 4600, 4525, 2115, 2193, 4578, 4094, 4561,
	3983, 4643, 2268, 4581, 4290, 4644, 4701, 2871, 4393, 4369,
	4347, 2891, 3681, 4203, 4444, 4198, 3633, 4164, 4268, 1237,
	4630, 2414, 4309, 1306, 4236, 3389, 3934, 3926, 4141, 3864,
	1103, 4185, 4378, 4178, 4187, 693, 1310, 1057, 3551, 3131,
	4079, 1299, 2277, 2676, 4095, 800, 4407, 2049, 4208, 2483,
	2904, 1749, 3545, 3513, 3907, 3449, 3891, 3392, 4264, 2123,
	2422, 3889, 2415, 3045, 1370, 1612, 3590, 2969, 3378, 1048,
	1292, 800, 3032, 1462, 3592, 763, 2980, 2999, 3774, 1941,
	1226, 3319, 3034, 3299, 3291, 877, 1974, 3982, 3259, 4039,
	704, 3042, 1301, 2275, 873, 4, 3025, 1975, 3031, 2994,
	1653, 1056, 177, 3011, 1910, 2185, 2996, 2134, 2184, 4735,
	3258, 3411, 1110, 2714, 3280, 2829, 3503, 4445, 3282, 3742,
	2241, 2561, 1886, 2419, 1848, 1818, 2496, 3115, 3386, 1469,
	2716, 1304, 2180, 868, 3041, 795, 2919, 2161, 1552, 2713,
	2981, 2973, 2168, 1107, 1497, 2103, 1217, 1353, 1109, 2107,
	1278, 2047, 2480, 2694, 1737, 1930, 2552, 2093, 1911, 2403,
	1112, 3326, 2870, 2386, 3515, 2384, 262, 261, 2747, 1589,
	3004, 797, 2228, 1555, 1610, 2852, 4526, 3884, 1339, 2815,
	680, 2746, 801, 1881, 702, 802, 3035, 1220, 2555, 2673,
	737, 1114, 108, 1927, 2703, 177, 2684, 1199, 1920, 2533,
	2639, 2605, 1751, 745, 1832, 1234, 186, 1687, 1750, 1289,
	1672, 1587, 187, 2385, 2227, 757, 1216, 2254, 2387, 1580,
	1492, 2122, 4689, 2408, 1088, 2025, 2022, 697, 1222, 44,
	694, 43, 705, 41, 32, 30, 1197, 941, 28, 1736,
	1756, 806, 809, 3168, 1503, 961, 3756, 720, 3757, 1086,
	849, 3162, 2038, 4836, 4826, 2038, 2038, 2693, 3570, 3278,
	2038, 4283, 4669, 3570, 792, 1232, 2038, 806, 809, 1052,
	2038, 4811, 892, 2024, 1496, 2693, 2038, 4810, 850, 4800,
	4781, 2693, 4779, 2202, 4308, 4720, 4308, 4677, 4666, 2202,
	4664, 4678, 2693, 4280, 2693, 4661, 4658, 3560, 2202, 4662,
	4659, 73, 4628, 4627, 4626, 4621, 2202, 2202, 2059, 2059,
	4620, 4611, 4609, 4606, 2059, 4308, 4308, 4381, 74, 4576,
	4550, 3229, 3230, 4308, 2755, 4543, 1052, 2202, 4542, 2693,
	1764, 1765, 2693, 4537, 78, 4536, 4530, 4308, 4496, 4308,
	2202, 4442, 4155, 4060, 4424, 2755, 4421, 1229, 3969, 3130,
	2202, 4418, 4371, 1214, 1348, 4308, 4372, 1200, 1200, 4325,
	1767, 4324, 4315, 2202, 4314, 2202, 2202, 4307, 4308, 4275,
	3561, 4308, 4249, 2202, 87, 2056, 2755, 3334, 2693, 2202,
	2276, 1053, 2563, 1228, 1033, 4227, 4551, 4216, 4136, 2059,
	1032, 3570, 2693, 2751, 4119, 1766, 1764, 1765, 2693, 1797,
	1798, 1799, 1808, 1809, 1810, 4002, 3950, 3944, 3905, 2755,
	3587, 3587, 3906, 3766, 875, 1348, 3764, 3767, 1801, 1795,
	3765, 3749, 2776, 1042, 3351, 2693, 1767, 93, 107, 2202,
	3349, 1047, 3665, 93, 104, 1814, 2202, 2686, 3661, 1249,
	1256, 3746, 2693, 3229, 3230, 3586, 3247, 3248, 3249, 3587,
	3577, 3275, 1820, 3270, 3578, 2693, 3269, 2693, 3220, 2056,
	2693, 1766, 3221, 3218, 1201, 3998, 3210, 3219, 3208, 3179,
	3211, 1786, 2693, 2693, 3049, 3177, 4446, 4437, 2059, 3021,
	1783, 3178, 4425, 2264, 1230, 3229, 3230, 3020, 4381, 2799,
	3235, 2264, 94, 2693, 2754, 2558, 2744, 2738, 2755, 1772,
	2693, 2202, 2059, 3746, 2775, 2692, 3229, 3230, 2685, 2693,
	2263, 1203, 2693, 1204, 2264, 4196, 4155, 2056, 3244, 1250,
	4120, 1250, 3969, 3578, 1764, 1765, 2894, 2814, 2127, 2072,
	2037, 2053, 2975, 2201, 2914, 2812, 1906, 1491, 3847, 232,
	3636, 3611, 1928, 2173, 3562, 1655, 2730, 1795, 2729, 2728,
	2727, 2726, 1205, 1202, 1767, 1789, 1790, 1791, 1792, 1041,
	3244, 1040, 1039, 3563, 4055, 1772, 1038, 4649, 1037, 3167,
	1036, 2509, 2510, 2511, 2528, 2529, 2530, 1035, 3089, 4014,
	1820, 1031, 1030, 1029, 2559, 1028, 1027, 234, 1026, 1766,
	1025, 2531, 1024, 1023, 232, 3229, 3230, 3245, 1022, 1786,
	1021, 1157, 1020, 1805, 1019, 1018, 1815, 2039, 1783, 1017,
	2039, 2039, 3235, 1794, 1796, 2039, 1016, 2753, 1015, 1014,
	939, 2039, 938, 937, 1820, 2039, 936, 935, 934, 933,
	1811, 2039, 1812, 932, 931, 930, 233, 97, 929, 1781,
	1782, 928, 234, 2521, 927, 926, 925, 924, 923, 226,
	922, 921, 2517, 920, 3235, 1678, 919, 1803, 227, 918,
	1619, 1517, 3996, 917, 916, 4210, 2560, 2056, 2557, 1817,
	915, 914, 1787, 913, 912, 3235, 2334, 3251, 1817, 911,
	188, 910, 909, 1789, 1790, 1791, 1792, 908, 907, 185,
	100, 233, 103, 1772, 906, 905, 895, 894, 890, 889,
	883, 1605, 882, 867, 866, 823, 822, 821, 1315, 1112,
	820, 812, 232, 811, 810, 1813, 778, 769, 232, 3245,
	768, 767, 751, 256, 255, 149, 876, 2522, 2523, 2524,
	2525, 149, 1112, 1802, 254, 188, 1112, 2516, 4428, 253,
	252, 1794, 1796, 3246, 1817, 251, 250, 249, 248, 247,
	3229, 3230, 1373, 3247, 3248, 3249, 1373, 1105, 246, 245,
	234, 3245, 244, 1315, 3235, 243, 234, 1781, 1782, 242,
	241, 240, 3997, 239, 1496, 238, 3560, 237, 2588, 236,
	2202, 2574, 3245, 2786, 2037, 1112, 3788, 1112, 2056, 1112,
	235, 1817, 152, 3760, 2053, 1315, 1793, 3588, 2775, 1352,
	1787, 1343, 3322, 1357, 2379, 3190, 3173, 189, 3273, 233,
	3164, 2526, 2527, 3072, 2989, 233, 2956, 2562, 1788, 2759,
	2735, 1315, 226, 2720, 2572, 3244, 3229, 3230, 226, 1477,
	1250, 227, 2101, 1817, 1472, 1505, 2056, 227, 1931, 1504,
	1505, 1315, 2058, 2685, 2519, 1806, 1250, 3274, 1315, 1511,
	1889, 1954, 1859, 188, 1817, 1467, 1112, 1888, 1112, 188,
	2271, 1763, 1315, 1499, 1850, 3246, 1359, 1889, 1112, 4212,
	1112, 3245, 1817, 1516, 1888, 1236, 1819, 4629, 4608, 1892,
	4426, 1505, 1283, 1286, 1495, 3240, 3238, 3239, 3231, 3232,
	3233, 3234, 3236, 3237, 1561, 1564, 1887, 1768, 1769, 1770,
	1771, 1773, 1774, 4511, 1296, 4434, 4302, 3246, 4263, 4449,
	1764, 1765, 4217, 1337, 4195, 4066, 4037, 1315, 4036, 3235,
	4030, 4029, 4028, 1482, 1793, 4021, 1567, 1366, 3246, 1459,
	1464, 4020, 4018, 2556, 3229, 3230, 1112, 4013, 4010, 1112,
	1767, 4009, 3910, 1817, 2270, 1623, 1788, 3904, 1804, 3792,
	3791, 3790, 3770, 1778, 1779, 1785, 1807, 1784, 1780, 2768,
	1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 3737,
	806, 809, 1332, 177, 177, 1766, 3736, 4022, 3735, 3657,
	1550, 3652, 3317, 3266, 3251, 1609, 1494, 1624, 3257, 1493,
	2520, 3228, 3225, 3224, 3222, 3235, 1323, 3217, 3216, 3215,
	3241, 3242, 3243, 3212, 1819, 1592, 1594, 3240, 3238, 3239,
	3231, 3232, 3233, 3234, 3236, 3237, 3209, 3246, 1851, 1505,
	1849, 1213, 3189, 3172, 3007, 3165, 3245, 3163, 1055, 3845,
	3022, 2721, 1857, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1852, 1850, 1343, 2545, 1763, 1343, 2244, 1819, 3240,
	3238, 3239, 3231, 3232, 3233, 3234, 3236, 3237, 2209, 2991,
	2207, 1510, 4830, 1053, 1762, 4771, 1112, 4770, 3911, 4736,
	4687, 1696, 1112, 3231, 3232, 3233, 3234, 3236, 3237, 1772,
	3229, 3230, 1583, 4685, 1238, 1784, 1780, 3683, 1777, 1775,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 4568, 1817, 232,
	3341, 4503, 1741, 3235, 232, 232, 3271, 4487, 4484, 4483,
	4482, 4463, 4448, 4211, 4447, 4422, 4406, 4405, 2486, 4391,
	232, 4388, 4387, 4382, 4321, 2506, 2507, 2508, 2532, 2518,
	2512, 1604, 2514, 2515, 2513, 2500, 2501, 2502, 2503, 2504,
	2505, 4298, 4261, 1618, 1735, 232, 4244, 234, 4243, 4224,
	4223, 4181, 234, 234, 4156, 4054, 4035, 3970, 3964, 3961,
	3238, 3239, 3231, 3232, 3233, 3234, 3236, 3237, 234, 3833,
	3832, 4450, 3246, 1839, 3816, 3815, 3813, 1112, 1112, 1112,
	1629, 3752, 3740, 1112, 3647, 1837, 3589, 3571, 3911, 3537,
	1234, 3466, 1234, 234, 1646, 3424, 233, 3391, 2492, 3343,
	3194, 233, 233, 3193, 3188, 3154, 1680, 1373, 1681, 226,
	3245, 2968, 1895, 1894, 226, 226, 1112, 233, 227, 800,
	1908, 1893, 1890, 227, 227, 1992, 800, 1882, 1880, 1315,
	226, 2766, 2765, 2732, 2725, 2691, 2570, 1836, 1953, 227,
	188, 1909, 233, 1738, 1904, 188, 188, 1903, 1902, 3235,
	1232, 1901, 1232, 1900, 2990, 226, 1917, 2043, 1899, 1898,
	2045, 188, 1746, 1033, 227, 1897, 2050, 1745, 1896, 1032,
	2052, 1877, 1961, 1876, 1875, 2055, 1740, 1874, 1873, 1872,
	1871, 1742, 1817, 232, 1891, 1870, 188, 1869, 1053, 1965,
	1962, 1759, 1760, 232, 1868, 1315, 1867, 4429, 1866, 1865,
	1864, 1863, 1112, 1852, 1838, 1835, 1315, 3241, 3242, 3243,
	1958, 1830, 1914, 1915, 3240, 3238, 3239, 3231, 3232, 3233,
	3234, 3236, 3237, 1581, 1112, 177, 1586, 1331, 1254, 1200,
	1373, 234, 1229, 1245, 1229, 4184, 1883, 1884, 4062, 4006,
	1938, 234, 1764, 1765, 232, 2272, 2117, 3787, 3763, 3755,
	3176, 2723, 2757, 4281, 3314, 4064, 3246, 3229, 3230, 2090,
	3786, 3566, 1851, 3339, 2587, 1833, 1949, 2573, 1228, 4768,
	1228, 1356, 1767, 4122, 4760, 2065, 2892, 1343, 1939, 4485,
	233, 4383, 4374, 1957, 4373, 1960, 4215, 4158, 4157, 232,
	233, 2099, 234, 226, 1971, 3233, 3234, 3236, 3237, 4121,
	2092, 2020, 227, 226, 2092, 2064, 4057, 1766, 3973, 1936,
	2571, 1929, 227, 2092, 1053, 806, 809, 3427, 3972, 3971,
	1966, 3758, 806, 809, 188, 3573, 3572, 2015, 1817, 232,
	1348, 1355, 4379, 2041, 188, 1907, 1889, 234, 1931, 4427,
	232, 233, 3458, 1888, 3634, 3859, 1986, 3214, 1933, 2127,
	3213, 1733, 2170, 1948, 226, 1947, 2875, 1946, 1944, 1943,
	1315, 1315, 1942, 227, 3914, 1349, 2078, 1012, 1354, 1230,
	1373, 1230, 232, 3136, 1348, 2857, 1645, 234, 1972, 1770,
	1771, 1773, 1774, 3582, 2558, 3006, 233, 1348, 234, 2067,
	1351, 4301, 1872, 3830, 1872, 3520, 3393, 3519, 1861, 226,
	3239, 3231, 3232, 3233, 3234, 3236, 3237, 4699, 227, 1697,
	1654, 2269, 1013, 4370, 2293, 4673, 4654, 4641, 3504, 3046,
	234, 1655, 2186, 3918, 3901, 3861, 233, 2155, 3856, 2160,
	188, 3838, 2165, 3608, 3365, 4265, 2063, 233, 3278, 226,
	3685, 2553, 2900, 2764, 1905, 4650, 1885, 3511, 227, 2238,
	226, 2061, 1560, 1487, 1326, 2194, 2199, 1282, 4663, 227,
	4660, 2070, 2908, 3556, 1315, 4317, 1315, 1585, 1315, 233,
	188, 3182, 3808, 2559, 2854, 2095, 2085, 4478, 2911, 4199,
	4294, 188, 226, 1345, 1315, 1315, 4575, 2906, 4460, 2084,
	2083, 227, 4107, 2092, 2094, 1315, 2245, 3396, 3825, 4105,
	862, 2899, 3029, 2133, 3003, 1633, 1212, 1315, 2394, 1315,
	1315, 1315, 4651, 188, 1858, 3490, 4718, 4717, 4750, 3628,
	3874, 4343, 3369, 4109, 1527, 1051, 2800, 1535, 2234, 4825,
	1694, 1010, 800, 2853, 2188, 1008, 4091, 2279, 2347, 1006,
	2292, 1004, 1001, 1489, 2153, 2345, 4491, 3231, 3232, 3233,
	3234, 3236, 3237, 4336, 1112, 2560, 743, 2557, 806, 809,
	2818, 4327, 4150, 1350, 2818, 1586, 2239, 2392, 4149, 3872,
	4087, 3871, 3863, 2251, 1494, 2816, 3000, 1493, 3340, 2816,
	3853, 993, 2079, 3852, 3850, 3849, 2274, 3837, 3873, 1112,
	2152, 3803, 3802, 1695, 2164, 3494, 3493, 3333, 2285, 3187,
	3186, 3185, 3184, 4755, 3140, 863, 2917, 2916, 2378, 2913,
	2902, 2087, 2200, 2259, 1536, 1050, 2890, 2889, 2297, 2885,
	1346, 2884, 2883, 1112, 4088, 1112, 2862, 2861, 2822, 1347,
	2745, 1693, 1112, 2467, 1739, 1992, 1992, 1373, 2218, 1112,
	1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1112, 2248, 1112, 2261, 1112, 1112,
	1112, 1112, 2220, 4318, 2219, 1631, 1053, 3371, 1053, 2280,
	1356, 1583, 1356, 2256, 2253, 2256, 2257, 2124, 4295, 4756,
	3456, 4104, 2396, 2601, 1112, 2265, 2562, 2266, 1112, 1112,
	2393, 3393, 1332, 1241, 2600, 2424, 1112, 2772, 3426, 2383,
	1112, 4751, 1112, 1112, 1052, 2749, 2089, 2855, 806, 809,
	1373, 2120, 1531, 2319, 3609, 1268, 1112, 1112, 1112, 1112,
	2284, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 2269,
	1355, 1573, 1355, 1572, 2376, 1239, 1989, 2301, 2394, 2855,
	2125, 2126, 2420, 2421, 2088, 2359, 2289, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1112, 1112, 1571, 742, 1570, 2371,
	1112, 2534, 2535, 2309, 2391, 1731, 998, 4352, 4242, 3095,
	2121, 2068, 1234, 2859, 1544, 2534, 2550, 2341, 1243, 1373,
	2758, 1348, 2807, 2127, 2368, 2158, 1585, 2482, 1234, 4758,
	3052, 1490, 2407, 2737, 1774, 1626, 2831, 2392, 1549, 2845,
	2358, 2596, 2556, 4072, 1112, 1373, 4083, 2482, 2351, 3237,
	1338, 4084, 3229, 3230, 3113, 3247, 3248, 3249, 4471, 1949,
	2642, 2642, 2656, 2380, 2534, 1706, 1744, 2677, 2679, 2198,
	2388, 4123, 1232, 2683, 3651, 2382, 1986, 1986, 2395, 3457,
	2381, 2879, 2498, 1033, 1647, 1242, 1033, 1033, 1232, 2411,
	2872, 2873, 2412, 2413, 2872, 2873, 2549, 3128, 692, 2708,
	4103, 2553, 4086, 2872, 2873, 1692, 4071, 744, 4647, 2370,
	1676, 4783, 2844, 2310, 1330, 3811, 2390, 2733, 4089, 3098,
	865, 864, 1049, 2258, 687, 3229, 3230, 3244, 3247, 3248,
	3249, 1732, 1980, 3617, 1676, 2781, 4717, 1643, 3616, 1349,
	3822, 2785, 3086, 2562, 4106, 1764, 1765, 3650, 1053, 2834,
	1315, 1315, 1710, 1627, 1229, 2796, 2494, 1200, 1053, 4091,
	2700, 1556, 1053, 2206, 2205, 903, 2910, 860, 1795, 859,
	1229, 2547, 2302, 4148, 3851, 1767, 1938, 3848, 1349, 4473,
	2393, 2748, 2907, 1655, 1655, 3368, 3795, 3782, 2752, 2821,
	1228, 3500, 1373, 4087, 2699, 177, 1673, 4080, 2909, 2722,
	3244, 1820, 2306, 2707, 2795, 2712, 1228, 2905, 2718, 2719,
	1766, 1554, 3834, 1675, 4078, 2789, 2817, 2638, 2651, 4757,
	2668, 3235, 2490, 4082, 2681, 2300, 1992, 3127, 776, 2488,
	2771, 2689, 2690, 3492, 1343, 2303, 3674, 1675, 3881, 2705,
	2706, 2701, 2788, 2821, 3454, 1936, 4085, 4088, 4353, 1891,
	1053, 3097, 2912, 2882, 2391, 3443, 988, 1345, 3820, 1674,
	4351, 1632, 3435, 1002, 1373, 2860, 4349, 1002, 2803, 2346,
	2792, 1002, 4241, 1003, 1002, 1689, 2344, 2858, 1315, 4731,
	1046, 3094, 4648, 2096, 2097, 4092, 3251, 2805, 2367, 4081,
	2377, 1230, 3882, 4739, 3235, 2171, 1345, 1112, 1112, 2767,
	1112, 2823, 4101, 4738, 2797, 1883, 1884, 1230, 2791, 3444,
	2743, 2780, 4786, 4348, 1772, 2783, 3436, 2784, 2770, 2774,
	2174, 4706, 800, 2806, 1315, 2181, 2944, 1530, 3245, 2658,
	1267, 4764, 2798, 3988, 3880, 2820, 3987, 1350, 774, 2880,
	2903, 4350, 3554, 2790, 2804, 2167, 3553, 2108, 2833, 1240,
	3835, 3442, 2109, 2865, 3671, 1315, 3092, 896, 3434, 3251,
	2147, 2864, 1794, 1796, 3014, 3120, 3121, 1315, 3498, 1315,
	2801, 2166, 989, 2369, 1533, 4547, 1350, 2308, 2183, 3043,
	2945, 2987, 4646, 3096, 1315, 2598, 2848, 2562, 4814, 2038,
	2599, 4557, 4286, 2602, 1346, 2603, 2604, 3380, 1707, 2863,
	1817, 3245, 3600, 1347, 2819, 2162, 3053, 3054, 2951, 2836,
	2839, 3593, 2881, 2953, 2148, 2826, 2893, 3060, 3061, 3062,
	3553, 1787, 2943, 2874, 2876, 2877, 2878, 2887, 2464, 1112,
	2130, 2886, 2182, 1346, 2125, 2126, 3672, 4615, 2175, 4616,
	4479, 4472, 1347, 4498, 3600, 2135, 1630, 1986, 988, 4083,
	1556, 2888, 2171, 3593, 4084, 3370, 2146, 4102, 1704, 1488,
	2898, 741, 3047, 1252, 2163, 2110, 688, 2159, 2139, 4705,
	1878, 4173, 1046, 1817, 3246, 3142, 3028, 3151, 3070, 2983,
	3412, 2760, 2114, 4728, 2131, 177, 1989, 1989, 806, 809,
	1112, 2972, 2832, 1817, 3050, 2481, 1112, 1112, 999, 3055,
	3069, 3056, 3469, 2949, 1494, 4086, 3149, 2954, 2736, 3595,
	3337, 3016, 3078, 2966, 3080, 2171, 3082, 3018, 806, 809,
	1743, 4089, 2976, 2977, 3594, 2136, 2129, 1628, 3067, 3408,
	3075, 3414, 4238, 2118, 3984, 1708, 3100, 4254, 3102, 1705,
	904, 3077, 813, 3079, 689, 3081, 1061, 3246, 3009, 775,
	884, 3595, 1112, 1112, 3019, 2111, 2116, 3030, 1112, 2818,
	4545, 4598, 3103, 990, 989, 3105, 3594, 1788, 1329, 3090,
	3821, 1112, 1112, 3048, 2837, 1348, 3017, 1112, 1112, 3073,
	2998, 3074, 4762, 1112, 4586, 3407, 1044, 2562, 988, 4133,
	3499, 1642, 1644, 690, 3413, 691, 2462, 1919, 777, 2465,
	4546, 3381, 773, 710, 897, 898, 1829, 3076, 3192, 3241,
	3242, 3243, 1046, 3591, 1348, 2544, 3240, 3238, 3239, 3231,
	3232, 3233, 3234, 3236, 3237, 1819, 1709, 2979, 1112, 1112,
	1112, 2704, 2140, 4787, 1112, 3143, 3229, 3230, 2112, 3247,
	3248, 3249, 1980, 1980, 1112, 2478, 3108, 2717, 3146, 4085,
	2461, 3119, 4774, 4680, 2178, 260, 1052, 2305, 1045, 3687,
	4183, 1112, 3978, 4681, 4772, 2489, 3110, 3109, 4704, 4237,
	3989, 4505, 3147, 4153, 2476, 3783, 3152, 2407, 1923, 3114,
	2299, 3129, 3241, 3242, 3243, 2118, 4763, 4174, 4092, 3240,
	3238, 3239, 3231, 3232, 3233, 3234, 3236, 3237, 2141, 2142,
	1919, 3630, 3170, 3171, 989, 991, 1257, 3174, 2176, 3894,
	3111, 3244, 1768, 1769, 1770, 1771, 1773, 1774, 3892, 4188,
	1660, 4765, 2137, 4645, 4716, 3166, 4416, 1926, 4714, 3601,
	3596, 3597, 3598, 3599, 4591, 3374, 4524, 3141, 4189, 4390,
	4152, 4151, 1921, 4815, 2039, 3932, 3541, 2226, 1916, 1255,
	2177, 1112, 1112, 1112, 1112, 990, 1248, 679, 992, 3909,
	1924, 1112, 1112, 1112, 2138, 1070, 1112, 1753, 1754, 1923,
	3726, 3601, 3596, 3597, 3598, 3599, 1112, 1234, 1373, 4408,
	1748, 1923, 1112, 1753, 1112, 3985, 4033, 3285, 3286, 814,
	815, 2410, 4409, 1234, 899, 900, 3896, 885, 886, 1053,
	2128, 2080, 4792, 1922, 3894, 3235, 4239, 1309, 4316, 3175,
	4459, 1373, 3327, 3892, 4399, 3933, 2472, 2077, 1926, 3776,
	3867, 3854, 3807, 1234, 1312, 4410, 1373, 3387, 3181, 3542,
	1926, 3895, 3533, 2702, 3293, 2473, 3383, 1232, 2463, 3268,
	2474, 2988, 2982, 2970, 2479, 1921, 1992, 2252, 2246, 3670,
	1373, 1924, 2240, 1232, 2232, 3287, 3307, 1989, 3148, 2212,
	2400, 4506, 1484, 1924, 2113, 2838, 1315, 1315, 3150, 1524,
	3251, 1752, 39, 3777, 3355, 3741, 1259, 3357, 3358, 750,
	3799, 2143, 3361, 1232, 3362, 4562, 3363, 1752, 4412, 1112,
	2821, 3896, 3631, 2075, 1520, 990, 2866, 991, 1753, 3778,
	4527, 3775, 2352, 1112, 4679, 3301, 1922, 2073, 3935, 3297,
	4204, 4411, 3245, 1315, 2117, 2967, 1925, 1270, 1992, 1229,
	1557, 3375, 3376, 3321, 3754, 3316, 3895, 4368, 4366, 4413,
	817, 816, 1829, 3320, 2076, 1229, 1112, 1754, 4297, 3399,
	3290, 3295, 3397, 3990, 3395, 3401, 3394, 1598, 2117, 4186,
	992, 3134, 1315, 1754, 3359, 1228, 3366, 2144, 3313, 3112,
	3727, 1611, 3325, 1343, 3279, 1229, 3306, 3296, 2290, 3728,
	3372, 1228, 3305, 3338, 1315, 3294, 1315, 3289, 3308, 3309,
	3263, 3264, 3265, 3398, 1817, 4034, 3403, 887, 888, 3405,
	1677, 818, 819, 1373, 2170, 2742, 3893, 3311, 2401, 3312,
	3302, 1228, 1752, 2170, 1315, 1683, 1682, 1925, 1315, 4791,
	3332, 2695, 3472, 1980, 3474, 3890, 1637, 3478, 3384, 1925,
	1961, 3484, 3329, 3330, 3331, 3459, 2475, 3429, 3991, 3292,
	2741, 1315, 2740, 2739, 3347, 1043, 2477, 991, 2150, 3900,
	1579, 1315, 2974, 1315, 1050, 3388, 2698, 1373, 1565, 3431,
	3300, 4466, 4165, 3356, 800, 4305, 1230, 4507, 3246, 3360,
	1577, 1661, 1566, 3452, 902, 1315, 4363, 1986, 2842, 2867,
	2868, 3445, 1230, 3467, 3516, 3367, 3800, 1315, 3447, 3814,
	3583, 3455, 2250, 3304, 3373, 3507, 3804, 2697, 4725, 4502,
	992, 3893, 2696, 4221, 1234, 4284, 3525, 3350, 4565, 3779,
	3549, 3479, 1230, 3433, 2127, 3485, 3335, 3051, 2952, 2950,
	2948, 2278, 3043, 2156, 3415, 1636, 4572, 4292, 4559, 1315,
	1315, 3043, 4467, 3532, 4040, 3425, 3743, 2569, 4729, 1727,
	4593, 1729, 3547, 3438, 4730, 4355, 3502, 4727, 3505, 1986,
	3328, 3441, 1315, 4665, 4494, 3569, 3470, 4486, 4260, 4032,
	3899, 3260, 3646, 3261, 1232, 3540, 2151, 3460, 3439, 3606,
	4306, 3468, 3440, 4293, 1726, 4220, 749, 3481, 3558, 3352,
	3353, 3491, 1724, 4414, 3605, 3487, 3348, 3626, 3223, 4415,
	1701, 1699, 3610, 2363, 1671, 1373, 4566, 1669, 1373, 3153,
	3303, 1667, 3548, 3241, 3242, 3243, 2971, 2901, 1665, 1663,
	3240, 3238, 3239, 3231, 3232, 3233, 3234, 3236, 3237, 2864,
	4468, 1657, 1652, 3495, 3501, 1650, 3382, 1575, 3543, 3509,
	2856, 1112, 2769, 2372, 2343, 1956, 1952, 1112, 1112, 1730,
	3529, 1112, 1112, 1112, 3603, 1112, 1229, 3530, 3550, 3528,
	1614, 2191, 177, 177, 1112, 1992, 3625, 3805, 1748, 3088,
	806, 809, 3087, 1112, 3058, 3432, 2389, 3581, 1112, 3557,
	1688, 3555, 3602, 2314, 1373, 2231, 3624, 3585, 3344, 3345,
	3564, 3346, 1228, 1112, 3567, 3568, 2211, 3446, 2021, 3448,
	1578, 1373, 3623, 1862, 3579, 1625, 3621, 1548, 2568, 4640,
	4134, 1992, 1992, 1112, 1112, 3627, 1112, 1112, 1112, 3613,
	1576, 3614, 3858, 3615, 901, 3857, 4135, 3480, 4118, 4558,
	4202, 3486, 4140, 3632, 1112, 1728, 4131, 4076, 1112, 1053,
	1992, 1992, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 4702, 1112, 3620, 1000, 3604, 3699, 1725, 3700,
	4197, 1112, 1112, 1992, 3931, 3471, 1723, 3619, 1112, 3659,
	3660, 3649, 3629, 2365, 1700, 1698, 3667, 2364, 1670, 1112,
	3922, 1668, 2149, 1230, 3870, 1666, 3855, 3828, 3826, 3806,
	1234, 1234, 1664, 1662, 1112, 3536, 3531, 3521, 3001, 2993,
	2986, 1300, 3546, 2978, 2964, 1656, 1651, 2946, 2159, 1649,
	2787, 1574, 2782, 2210, 2342, 2208, 2187, 2172, 2145, 3654,
	3656, 2132, 2119, 1373, 2060, 2057, 2054, 2051, 2420, 3690,
	2046, 2192, 3772, 3666, 2044, 2040, 2157, 3673, 3675, 3676,
	3682, 3738, 2031, 3482, 1209, 4693, 1757, 4188, 2181, 1465,
	1232, 1232, 1476, 1300, 3689, 1964, 3759, 2420, 3705, 3132,
	3797, 4718, 2081, 3106, 3798, 3697, 4189, 3702, 2375, 3698,
	1210, 3104, 1112, 4603, 4226, 4219, 1986, 3730, 2154, 4218,
	4147, 4068, 3044, 3704, 2100, 1529, 2818, 1989, 4401, 2843,
	3734, 2818, 1112, 4394, 3943, 2127, 3739, 1721, 1722, 2304,
	3731, 2816, 2249, 177, 3745, 3827, 2840, 3829, 1290, 1291,
	2158, 1005, 1007, 1009, 2373, 2338, 2333, 4602, 1300, 1300,
	4142, 2311, 1986, 1986, 4110, 1112, 1112, 1764, 1765, 1648,
	1764, 1765, 1229, 1229, 4436, 3747, 3748, 4041, 3750, 3751,
	2846, 4019, 3410, 2847, 2869, 1761, 2711, 1324, 1258, 4721,
	4712, 1986, 1986, 3866, 3133, 3761, 1758, 1767, 257, 1989,
	2374, 3483, 2895, 4674, 2963, 3919, 2340, 1112, 1228, 1228,
	2849, 2233, 2847, 1335, 2908, 3865, 2906, 2915, 3869, 4552,
	1211, 4518, 3762, 1120, 1986, 4512, 2897, 1291, 2851, 4465,
	4385, 1315, 1766, 1291, 1315, 1766, 4759, 4361, 3839, 2896,
	4285, 2850, 3929, 3921, 3908, 676, 3769, 3535, 3780, 3781,
	3008, 2682, 2066, 1973, 4303, 3336, 4595, 1992, 3844, 3846,
	4790, 4596, 1322, 3793, 3794, 1496, 3796, 3229, 3230, 264,
	264, 264, 3843, 682, 683, 3810, 698, 682, 698, 708,
	3862, 4733, 748, 1980, 3868, 3860, 766, 4011, 1315, 1764,
	1765, 772, 3831, 4514, 1112, 4595, 2564, 3836, 264, 3785,
	4596, 2810, 1234, 1112, 3883, 3885, 2808, 3945, 2597, 1230,
	1230, 2810, 2811, 1315, 1315, 1315, 3014, 2267, 881, 2864,
	2808, 2809, 3952, 1635, 264, 3928, 4776, 4386, 3936, 1634,
	1315, 3877, 4337, 1309, 2281, 3915, 1703, 4144, 1502, 1702,
	1509, 3677, 1515, 3043, 2283, 1590, 1315, 4139, 3956, 4138,
	4007, 3784, 1373, 3678, 3937, 1980, 2291, 3476, 2294, 2295,
	2296, 3940, 1232, 3887, 3696, 3473, 3888, 1856, 1855, 3897,
	4740, 4556, 4555, 4554, 3916, 3920, 4493, 1373, 4492, 4452,
	1112, 1112, 4364, 3968, 3388, 3879, 1112, 1112, 1992, 3939,
	4331, 1112, 1112, 3898, 1112, 4282, 4279, 4277, 4176, 1112,
	4162, 4108, 3902, 4063, 3967, 3949, 3903, 3824, 3817, 1603,
	1112, 1608, 3539, 3923, 3538, 3404, 3354, 3093, 3085, 3066,
	3065, 1617, 3064, 1622, 3938, 3063, 1112, 3925, 3941, 2992,
	2965, 2841, 3957, 3958, 3946, 2778, 3974, 3951, 2773, 2762,
	2761, 3976, 3965, 2750, 1229, 3992, 3947, 3959, 2493, 3966,
	682, 682, 3962, 2366, 2339, 2332, 2331, 3993, 264, 2330,
	3963, 2329, 2328, 2247, 2221, 2217, 2216, 4005, 3975, 2215,
	2214, 2213, 2034, 2033, 2032, 2030, 1963, 1720, 1986, 1719,
	1228, 1658, 3986, 1543, 1542, 1541, 1679, 1234, 1540, 3981,
	1539, 1538, 1537, 1532, 1528, 1234, 3789, 1526, 1525, 1373,
	1481, 1373, 1480, 1479, 4001, 1364, 1363, 1362, 1234, 1361,
	1360, 1842, 1328, 1327, 1277, 1847, 1276, 1275, 1274, 1315,
	1315, 1273, 1272, 1271, 1269, 1264, 1989, 1263, 1262, 1373,
	1261, 1260, 874, 8, 1192, 2071, 1011, 3878, 997, 4470,
	4090, 2362, 92, 1534, 836, 86, 2179, 1232, 1476, 3823,
	2947, 2190, 4668, 3497, 1234, 1232, 1234, 3496, 4069, 4070,
	967, 4031, 4592, 1518, 4497, 844, 4574, 3917, 1232, 3406,
	2918, 2313, 1989, 1989, 1659, 2315, 3315, 2724, 1315, 4049,
	4544, 1230, 4111, 4015, 4099, 3191, 4443, 4253, 1373, 2567,
	1315, 1860, 3272, 1315, 88, 1476, 1096, 1142, 4172, 4171,
	4077, 1989, 1989, 3809, 1373, 4038, 4045, 4043, 4044, 1986,
	4048, 3033, 177, 4169, 1232, 4052, 1232, 4168, 3320, 4053,
	1977, 1979, 4056, 1060, 4112, 1376, 4143, 4614, 4145, 1229,
	2082, 4073, 1102, 2098, 1989, 4042, 2091, 1229, 2763, 2641,
	1315, 1315, 1119, 4047, 1116, 4061, 1981, 1983, 1118, 4075,
	1229, 1117, 1982, 1879, 1115, 1976, 3927, 3012, 4067, 3565,
	1315, 1584, 4166, 1582, 4096, 1228, 4096, 4046, 969, 2086,
	2487, 2551, 1373, 1228, 4116, 3180, 1853, 1315, 1076, 1098,
	2548, 4132, 1980, 1253, 4137, 4146, 1228, 4125, 1087, 1075,
	4128, 3298, 4163, 4160, 3277, 3552, 1229, 4130, 1229, 3768,
	2399, 854, 1234, 3226, 2554, 1244, 2665, 2657, 2653, 3364,
	3002, 1734, 1315, 1315, 1315, 4194, 4267, 4205, 1831, 3013,
	1358, 1080, 2485, 1844, 3158, 1373, 2409, 3559, 1980, 1980,
	4222, 4100, 1228, 2028, 1228, 3318, 4161, 1112, 1112, 1112,
	2756, 4127, 4599, 4206, 3686, 3091, 1945, 4113, 4114, 2225,
	4182, 1208, 4200, 1207, 1251, 1373, 1206, 1980, 1980, 4167,
	1112, 4209, 1232, 1112, 1112, 4580, 1230, 4191, 4577, 2169,
	3960, 3514, 2074, 1112, 1230, 4154, 1992, 2802, 2497, 2794,
	1309, 1112, 1112, 3522, 4159, 4214, 4207, 1230, 1092, 1475,
	1980, 2356, 3283, 3584, 1545, 771, 1373, 4310, 1315, 2028,
	1104, 1816, 2939, 4245, 2938, 4462, 1344, 4229, 4231, 4233,
	2028, 1342, 4096, 4193, 4228, 1341, 1340, 4747, 4813, 4240,
	3819, 1373, 3818, 231, 3126, 1755, 1747, 228, 230, 1112,
	229, 4177, 3773, 1230, 3324, 1230, 4672, 3841, 1112, 3506,
	4234, 23, 22, 21, 1229, 112, 1112, 42, 4250, 20,
	1992, 151, 4256, 129, 148, 4322, 4323, 147, 121, 1112,
	2237, 146, 1112, 145, 144, 143, 150, 142, 141, 136,
	140, 139, 4273, 4274, 4288, 138, 1112, 137, 135, 4225,
	1228, 4117, 133, 1373, 134, 4338, 128, 4340, 1989, 4341,
	1315, 4313, 4262, 4126, 132, 131, 4129, 130, 1315, 1315,
	4276, 127, 126, 125, 124, 123, 122, 2942, 1246, 120,
	119, 4289, 118, 4296, 117, 116, 115, 114, 113, 4287,
	762, 759, 61, 60, 111, 110, 19, 40, 14, 4330,
	65, 66, 18, 4354, 13, 35, 91, 3516, 102, 4376,
	101, 1266, 36, 1373, 99, 4342, 1315, 98, 4367, 34,
	17, 2404, 16, 264, 4332, 264, 264, 4333, 1295, 264,
	1305, 15, 96, 4190, 1234, 1234, 4328, 95, 1371, 33,
	31, 1325, 1470, 4339, 4334, 11, 9, 4320, 37, 1940,
	766, 1230, 4356, 4384, 1112, 1112, 4395, 4344, 4357, 12,
	4404, 4365, 4419, 4420, 4359, 5, 4380, 1986, 182, 181,
	4423, 1112, 1992, 184, 264, 4375, 264, 264, 1295, 180,
	264, 264, 4396, 3059, 183, 1305, 90, 4398, 179, 1989,
	178, 2357, 89, 4392, 1232, 1232, 29, 264, 10, 1498,
	4397, 174, 4377, 4402, 3913, 4403, 4209, 81, 4417, 1112,
	176, 4346, 1112, 175, 1980, 173, 172, 171, 4360, 1234,
	1522, 82, 79, 170, 85, 169, 80, 4432, 4433, 84,
	4431, 83, 1234, 27, 6, 64, 7, 4458, 1590, 1547,
	1590, 1986, 1305, 4235, 4096, 4096, 264, 264, 3607, 1295,
	105, 106, 38, 77, 76, 75, 4489, 26, 63, 25,
	4481, 168, 215, 4435, 214, 213, 2659, 212, 211, 4457,
	766, 210, 264, 264, 209, 208, 1229, 1229, 203, 1232,
	4454, 202, 2117, 207, 1112, 1112, 205, 204, 4441, 4480,
	4475, 206, 1232, 4474, 1112, 881, 4400, 201, 4501, 1234,
	218, 217, 1234, 223, 222, 221, 1315, 4488, 220, 219,
	216, 225, 1228, 1228, 200, 199, 1315, 1315, 198, 196,
	192, 191, 195, 197, 194, 4490, 193, 4521, 190, 4096,
	4523, 4495, 224, 1315, 72, 166, 167, 71, 165, 164,
	163, 162, 4096, 4535, 161, 1980, 4508, 1112, 1112, 160,
	4513, 4509, 4510, 159, 4516, 4520, 4515, 1112, 70, 1232,
	4380, 1229, 1232, 4345, 4529, 4451, 24, 4531, 4453, 4533,
	4534, 264, 4528, 2, 1229, 2335, 1, 0, 0, 0,
	0, 4532, 0, 0, 0, 0, 4538, 0, 0, 0,
	4539, 264, 0, 1986, 0, 1112, 1112, 1228, 1112, 4549,
	4567, 0, 0, 0, 0, 4553, 0, 0, 4571, 4096,
	1228, 0, 4096, 1230, 1230, 2491, 0, 0, 0, 0,
	4548, 0, 0, 4579, 4582, 0, 0, 4597, 0, 4601,
	0, 1842, 4569, 0, 0, 4594, 0, 0, 0, 4570,
	0, 1229, 0, 1300, 1229, 0, 0, 0, 4619, 0,
	4622, 0, 0, 0, 0, 0, 1112, 1112, 1112, 4588,
	0, 4623, 0, 4584, 0, 0, 0, 0, 4583, 4604,
	0, 4587, 0, 0, 0, 0, 0, 1228, 4610, 4617,
	1228, 0, 0, 4618, 0, 2664, 1112, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 0, 1230, 0,
	4652, 4657, 4667, 0, 4670, 4639, 4638, 4636, 4637, 0,
	0, 1230, 4540, 0, 4541, 0, 0, 0, 0, 4675,
	0, 0, 0, 0, 0, 0, 4686, 0, 0, 1300,
	1300, 0, 0, 4655, 4684, 4682, 0, 4698, 4697, 0,
	0, 0, 4671, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4696, 0, 4683, 0, 0, 0, 0,
	0, 4703, 0, 4694, 4695, 4691, 4690, 4692, 0, 4700,
	0, 0, 0, 0, 0, 4719, 4589, 1989, 1230, 4590,
	0, 1230, 0, 4709, 4710, 4711, 4715, 0, 4723, 4713,
	0, 0, 682, 1955, 0, 4722, 1234, 4724, 1234, 4743,
	4579, 0, 2117, 4582, 4601, 4742, 4726, 0, 0, 0,
	0, 4732, 4737, 264, 4741, 264, 4754, 4745, 4501, 264,
	0, 1465, 0, 0, 4744, 0, 4746, 4749, 4753, 4752,
	3155, 3156, 1498, 1295, 264, 0, 264, 4767, 0, 0,
	0, 0, 264, 1498, 698, 0, 4766, 0, 1476, 264,
	1498, 1989, 4769, 4653, 1764, 1765, 1232, 0, 1232, 0,
	0, 0, 0, 0, 2035, 4784, 0, 0, 4777, 0,
	1112, 1112, 0, 4782, 4778, 0, 264, 1795, 4780, 1112,
	0, 1112, 1112, 264, 1767, 0, 4785, 4797, 4788, 0,
	0, 0, 4794, 4804, 0, 4798, 4805, 0, 4809, 4801,
	4807, 4806, 4808, 0, 4803, 0, 4096, 0, 4096, 3014,
	1820, 4802, 0, 0, 0, 4817, 2102, 4816, 4818, 1766,
	4812, 0, 4819, 766, 0, 4821, 0, 4822, 0, 0,
	4824, 0, 0, 1980, 0, 4827, 4820, 0, 1229, 0,
	1229, 1112, 4832, 0, 4834, 0, 0, 0, 4838, 4828,
	4835, 0, 4837, 4829, 4795, 4796, 4824, 0, 0, 0,
	0, 4831, 0, 0, 0, 0, 3116, 0, 0, 0,
	0, 0, 0, 0, 1228, 4748, 1228, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 1476, 0, 0, 73,
	0, 46, 45, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 74, 1980, 0, 153,
	3253, 3254, 3255, 3256, 4833, 4773, 0, 0, 0, 0,
	0, 4775, 78, 1772, 0, 0, 0, 0, 0, 0,
	3488, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	48, 0, 155, 0, 1476, 0, 1476, 2659, 2659, 0,
	0, 0, 0, 0, 0, 0, 2203, 0, 0, 0,
	47, 0, 87, 0, 3526, 0, 0, 0, 0, 0,
	0, 1794, 1796, 0, 0, 1230, 3534, 1230, 2028, 0,
	0, 264, 0, 0, 0, 264, 0, 0, 50, 68,
	0, 0, 0, 0, 0, 0, 0, 51, 2957, 0,
	0, 2960, 57, 2962, 0, 0, 156, 0, 0, 1590,
	0, 0, 0, 0, 49, 0, 107, 0, 3575, 3576,
	0, 93, 104, 0, 0, 0, 1764, 1765, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 264, 0, 0, 0, 0, 3005, 264, 1795,
	3005, 0, 0, 0, 264, 0, 1767, 0, 0, 1980,
	0, 0, 52, 0, 0, 0, 0, 0, 266, 0,
	264, 0, 264, 0, 0, 0, 682, 0, 264, 0,
	94, 0, 1820, 0, 2108, 2664, 0, 0, 0, 2109,
	766, 1766, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 1786, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 1295, 264, 0, 0, 0, 3083, 2659, 2659, 2659,
	2659, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	2312, 0, 0, 0, 0, 264, 264, 0, 264, 0,
	264, 0, 264, 0, 264, 0, 2664, 2664, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 1791, 1792, 2348,
	0, 0, 2349, 0, 2350, 1772, 0, 0, 0, 0,
	0, 0, 2110, 0, 0, 0, 264, 264, 264, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2114,
	0, 0, 0, 2423, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 748, 1819, 0, 0, 766, 0, 0,
	0, 0, 53, 1794, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 1074, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 58, 185, 100, 0,
	103, 0, 0, 0, 54, 0, 0, 0, 157, 0,
	0, 0, 2111, 2116, 0, 0, 55, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 62, 0, 2565, 0, 0, 149,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0,
	2499, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2664, 2664, 2664, 2664,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 1476, 1476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 2112, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3642, 3643, 0, 0, 189, 0, 0, 0, 0,
	682, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 2734, 0, 0, 0, 264, 226, 0, 3418, 0,
	0, 0, 2118, 0, 682, 227, 1793, 0, 0, 0,
	0, 264, 0, 682, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 188, 1788, 0,
	3, 0, 0, 3229, 3230, 0, 3247, 3248, 3249, 0,
	2237, 264, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3416, 0, 0, 0, 0, 0, 0, 0,
	3875, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714,
	3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724,
	3725, 0, 3729, 0, 0, 0, 1819, 0, 0, 0,
	264, 1305, 0, 0, 3417, 698, 0, 0, 0, 0,
	2028, 2028, 0, 0, 0, 2777, 0, 0, 3244, 0,
	0, 264, 0, 0, 264, 0, 0, 0, 264, 0,
	264, 0, 0, 0, 0, 1295, 0, 264, 264, 0,
	1305, 1305, 2793, 0, 0, 0, 0, 264, 2813, 0,
	0, 0, 3953, 3954, 3955, 0, 0, 2028, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0,
	0, 2113, 2830, 0, 0, 0, 2028, 0, 2659, 2659,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 3235, 0, 0, 0, 264, 0, 2028, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 3419, 3420, 0, 3421, 3422, 3423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 2028, 3252, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3251, 3461, 3462,
	0, 3463, 3464, 3465, 0, 264, 2955, 0, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 0, 2659,
	1498, 0, 0, 264, 0, 264, 0, 0, 0, 3245,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2830, 0, 682, 0, 0, 0, 0, 779,
	0, 0, 0, 3026, 881, 0, 2830, 2830, 4058, 4059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 264, 1295, 264, 0, 0, 0, 1498, 0,
	1498, 1305, 264, 0, 0, 1295, 0, 1295, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 2664, 2664, 0,
	1074, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 0, 0, 0, 1457, 0, 0, 0, 0, 0,
	0, 264, 264, 264, 264, 1295, 0, 0, 1295, 0,
	264, 0, 1067, 264, 0, 3246, 0, 784, 0, 0,
	0, 0, 0, 794, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 264, 0, 2934, 0, 0, 0,
	0, 0, 264, 0, 1764, 1765, 0, 2664, 2664, 2664,
	2664, 2664, 2664, 2664, 2664, 2664, 2664, 2664, 2664, 2664,
	2664, 2664, 2664, 2664, 2664, 2664, 2664, 1795, 2664, 2926,
	2924, 0, 0, 0, 1767, 788, 2928, 2930, 2920, 0,
	0, 1764, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 4230, 743, 4232, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 1795, 0, 0, 0, 0, 1766,
	0, 1767, 0, 0, 0, 0, 0, 786, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	3241, 3242, 3243, 0, 0, 0, 1766, 3240, 3238, 3239,
	3231, 3232, 3233, 3234, 3236, 3237, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 793, 4278, 1300, 0,
	0, 0, 3645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 1791, 1792, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 3640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2237, 0, 0,
	1789, 1790, 1791, 1792, 0, 0, 0, 0, 0, 781,
	1772, 0, 0, 0, 0, 0, 0, 2922, 0, 0,
	0, 1794, 1796, 0, 0, 0, 0, 0, 2936, 0,
	0, 0, 0, 0, 3284, 0, 0, 4358, 0, 785,
	0, 0, 0, 0, 0, 0, 0, 1781, 1782, 2935,
	2927, 2925, 2929, 2931, 2921, 2923, 2937, 0, 1794, 1796,
	0, 0, 0, 0, 2933, 0, 0, 3310, 0, 0,
	264, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	1787, 0, 3323, 0, 1781, 1782, 264, 0, 791, 0,
	0, 682, 0, 0, 783, 0, 682, 2940, 0, 682,
	0, 0, 682, 682, 0, 0, 3342, 0, 682, 0,
	0, 0, 0, 0, 0, 0, 264, 1787, 0, 1764,
	1765, 0, 0, 73, 0, 0, 0, 0, 2028, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 780, 1795, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 1817, 1498, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 787,
	264, 264, 4259, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 744, 1766, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 782, 1457, 87, 0, 0, 2830,
	2830, 264, 0, 3379, 1793, 0, 0, 0, 0, 2830,
	0, 0, 3390, 0, 0, 0, 0, 0, 3924, 0,
	2830, 3390, 0, 2830, 3390, 0, 1788, 3390, 4299, 0,
	0, 0, 0, 0, 0, 0, 875, 0, 0, 0,
	0, 1793, 264, 264, 3379, 0, 264, 0, 49, 0,
	107, 0, 0, 0, 0, 93, 104, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 3379, 0, 264, 0,
	3451, 3451, 0, 2941, 1295, 0, 0, 0, 0, 0,
	0, 0, 2932, 0, 1819, 1309, 1309, 0, 1772, 3977,
	2830, 0, 2830, 0, 3477, 2830, 3379, 0, 0, 2830,
	3379, 0, 1309, 3323, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 94, 0, 0, 0, 1457, 2237,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 1498, 0, 0, 1794, 1796, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 264, 3510, 0,
	0, 3512, 2830, 0, 0, 264, 0, 0, 0, 264,
	0, 0, 1305, 0, 0, 1784, 1780, 0, 1777, 1775,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 264, 0, 0,
	0, 0, 2997, 0, 0, 1295, 2108, 264, 0, 2659,
	2830, 2109, 682, 0, 0, 1787, 0, 0, 0, 2830,
	4440, 0, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 0, 0,
	264, 2997, 0, 0, 2997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 0, 1371, 2659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3612, 0, 1457, 97,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 2028, 3618, 0, 0, 1498, 0, 0, 1295,
	264, 0, 264, 0, 2028, 0, 869, 2028, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2110, 0, 0, 0, 0, 0,
	0, 185, 100, 73, 103, 872, 871, 0, 264, 0,
	3663, 2114, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 3679, 0, 0,
	232, 1788, 0, 0, 0, 0, 78, 0, 876, 0,
	1764, 1765, 0, 149, 2028, 0, 1808, 1809, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 3684, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 87, 0, 234, 1814,
	0, 4175, 0, 0, 2111, 2116, 0, 0, 0, 1819,
	0, 0, 0, 0, 4192, 0, 1820, 0, 2664, 0,
	0, 0, 0, 0, 152, 1766, 0, 2659, 0, 0,
	0, 0, 0, 0, 0, 1786, 875, 4213, 0, 189,
	0, 0, 0, 0, 1783, 0, 0, 233, 49, 0,
	107, 0, 0, 0, 0, 93, 104, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 2664, 0, 0, 0, 0, 3771,
	0, 0, 0, 264, 264, 0, 0, 2112, 0, 0,
	0, 188, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 682, 682, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 1476, 1789,
	1790, 1791, 1792, 0, 0, 0, 0, 1498, 1498, 1772,
	2106, 0, 0, 0, 2118, 1457, 0, 0, 0, 0,
	0, 0, 1498, 1498, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 1805, 1764, 1765,
	1815, 0, 0, 0, 0, 0, 0, 1794, 1796, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 2028, 0, 0, 0, 1767, 0,
	0, 0, 0, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	766, 1803, 0, 0, 1820, 0, 2105, 0, 1457, 0,
	0, 0, 1800, 1766, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2664, 0, 0, 0,
	0, 0, 0, 3451, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3379, 0, 264, 73,
	0, 0, 698, 698, 1305, 0, 0, 1457, 0, 0,
	73, 0, 0, 0, 0, 264, 74, 0, 1817, 0,
	0, 185, 100, 2113, 103, 264, 0, 74, 0, 0,
	0, 0, 78, 1457, 0, 264, 0, 0, 0, 0,
	264, 0, 0, 78, 0, 264, 0, 1772, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 876, 0,
	0, 0, 0, 149, 2830, 264, 1059, 0, 0, 0,
	1793, 0, 87, 0, 3026, 3026, 0, 0, 0, 0,
	881, 881, 2830, 87, 0, 73, 2997, 2997, 0, 0,
	881, 2830, 1788, 0, 0, 1794, 1796, 0, 234, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 875, 264, 0, 0, 0, 0, 78, 1806,
	0, 0, 0, 875, 152, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 49, 0, 107, 0, 189,
	0, 0, 93, 104, 0, 0, 0, 233, 0, 0,
	1819, 0, 0, 0, 1787, 0, 0, 0, 87, 0,
	226, 0, 0, 0, 4499, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 0, 0, 0, 0, 0, 0, 4016, 4519, 0,
	94, 870, 0, 0, 0, 0, 0, 0, 875, 0,
	0, 94, 0, 1800, 0, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 1804, 0, 0, 0, 1817, 4051, 0, 0,
	1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770,
	1771, 1773, 1774, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 1457, 0, 0, 4065, 1498, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	1788, 0, 0, 0, 0, 0, 2830, 2830, 0, 3451,
	2830, 0, 0, 0, 0, 4605, 0, 4098, 0, 4098,
	1498, 4607, 0, 0, 0, 0, 0, 0, 0, 0,
	2830, 0, 3390, 0, 0, 97, 1498, 1498, 264, 3379,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 3379, 0, 264, 3379, 0, 264, 1819, 3451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2830, 0, 2830, 264, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 185, 100, 1800,
	103, 0, 0, 0, 0, 1800, 0, 0, 185, 100,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	2830, 0, 0, 0, 0, 4179, 232, 0, 0, 0,
	0, 97, 0, 0, 876, 0, 264, 232, 0, 149,
	0, 0, 0, 0, 0, 876, 264, 0, 0, 0,
	149, 0, 0, 1775, 1776, 1768, 1769, 1770, 1771, 1773,
	1774, 1371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 4098, 0, 0, 1498, 0,
	0, 0, 0, 185, 100, 234, 103, 0, 0, 0,
	0, 4251, 0, 0, 1800, 0, 0, 0, 0, 1800,
	152, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 152, 232, 1800, 0, 189, 0, 0, 0, 0,
	876, 0, 0, 233, 0, 149, 189, 0, 0, 0,
	0, 0, 4251, 0, 233, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 2423, 3229, 3230,
	234, 3247, 3248, 3249, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 1595, 0,
	0, 0, 0, 1800, 0, 0, 152, 0, 0, 0,
	2830, 0, 3390, 0, 0, 4291, 0, 0, 1764, 1765,
	0, 189, 0, 264, 0, 0, 0, 0, 0, 233,
	4311, 0, 4311, 0, 0, 0, 0, 0, 0, 2423,
	0, 1795, 226, 0, 0, 1320, 0, 0, 1767, 0,
	0, 227, 0, 3244, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3451, 0, 1295, 1059, 0,
	0, 0, 1059, 1593, 1820, 0, 0, 0, 0, 0,
	0, 0, 3379, 1766, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 4291, 0, 0,
	0, 0, 0, 0, 0, 2830, 0, 0, 0, 0,
	0, 1500, 0, 1506, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 4389, 1800, 1800, 1800, 1800, 1800, 1800,
	1800, 1800, 0, 0, 0, 1498, 0, 3235, 0, 0,
	0, 0, 0, 0, 1800, 0, 3639, 4098, 4098, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 264, 264, 1789, 1790, 1791,
	1792, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 1601, 0, 1606, 0, 1457, 0, 0, 3684,
	0, 0, 0, 0, 1615, 0, 1620, 0, 0, 0,
	0, 0, 2663, 0, 1498, 0, 0, 1498, 3451, 4456,
	0, 0, 0, 0, 0, 1800, 4291, 0, 0, 1457,
	0, 1800, 0, 0, 0, 1794, 1796, 0, 0, 0,
	0, 0, 4098, 0, 1457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3245, 4098, 0, 0, 0, 0,
	0, 1781, 1782, 0, 0, 0, 0, 0, 1457, 0,
	0, 0, 1684, 0, 0, 1690, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 698,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4179, 1074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 4098, 0, 264, 4098, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 3390, 0, 2634, 2635, 2636,
	2637, 2630, 2631, 2632, 2633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 1498, 0, 0, 1817, 0, 0, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4563, 0, 0,
	3246, 0, 1841, 0, 0, 0, 0, 0, 1854, 0,
	4311, 1457, 0, 264, 0, 0, 0, 0, 1793, 2610,
	2611, 2612, 2613, 0, 0, 1498, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 2830, 0, 0,
	1788, 0, 2622, 2623, 2624, 2625, 2618, 2619, 2620, 2621,
	2626, 2627, 2628, 2629, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 1457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 1912, 1912, 2606, 2607, 2608, 2609,
	2614, 2615, 2616, 2617, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 3241, 3242, 3243, 0, 0,
	0, 0, 3240, 3238, 3239, 3231, 3232, 3233, 3234, 3236,
	3237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4291, 0, 0, 0, 0, 1784,
	1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1457, 0, 0, 1457, 0, 0, 0,
	0, 0, 2830, 0, 0, 0, 0, 0, 0, 4098,
	0, 4098, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	1498, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 1457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1457,
	0, 0, 0, 0, 0, 0, 0, 0, 3026, 0,
	0, 1800, 0, 0, 0, 1800, 0, 2830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 3026, 0, 0, 0, 0, 1800, 1800,
	1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800,
	1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800,
	1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800,
	1800, 1800, 1800, 1800, 0, 0, 1764, 1765, 728, 1800,
	0, 1800, 1800, 1800, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 2663, 2663, 0, 1764, 1765, 711, 1795,
	0, 0, 0, 712, 0, 0, 1767, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 1457, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1820, 714, 0, 0, 0, 0, 0, 1800,
	1783, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 715, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 1800, 0, 0, 1800, 734, 0, 1800, 0,
	0, 0, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 0,
	0, 0, 0, 0, 3144, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3137, 1789, 1790, 1791, 1792, 717,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 1791, 1792, 0,
	0, 718, 0, 0, 719, 1772, 0, 0, 1800, 0,
	0, 3250, 0, 2663, 2663, 2663, 2663, 0, 0, 0,
	1800, 743, 1800, 0, 0, 0, 0, 1800, 0, 0,
	2336, 0, 0, 1794, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 1794, 1796, 0, 0, 0, 0, 1781,
	1782, 0, 0, 0, 0, 2360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 2398,
	0, 2402, 0, 0, 0, 730, 0, 0, 2416, 0,
	0, 0, 1787, 0, 0, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 0, 2466, 0, 2468, 2469, 2470, 2471, 0, 0,
	1457, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 740, 0, 721, 0, 0, 0, 0,
	2495, 0, 0, 0, 1817, 1457, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 2546, 0, 0, 0,
	0, 0, 0, 741, 0, 722, 0, 0, 0, 0,
	0, 0, 2576, 2579, 2582, 2585, 1793, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 1788, 0,
	0, 0, 742, 0, 0, 2655, 0, 2667, 2669, 2674,
	723, 0, 0, 0, 0, 738, 739, 736, 1788, 0,
	0, 0, 0, 731, 0, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1457, 725, 1457,
	732, 1800, 1800, 0, 1800, 0, 1819, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 1457, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1780, 0,
	1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0,
	0, 0, 0, 0, 0, 0, 1457, 1784, 1780, 0,
	1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0,
	0, 0, 1457, 1764, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 1800, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	1457, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 1800, 1800, 0, 2663, 2663, 0, 1783, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3250, 3250,
	0, 0, 1800, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1457, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 2958, 2959, 0, 2961, 0, 0, 0,
	0, 0, 0, 1457, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 0, 0, 0, 0,
	0, 0, 1772, 0, 2663, 2663, 2663, 2663, 2663, 2663,
	2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663,
	2663, 2663, 2663, 2663, 1457, 2663, 3250, 3250, 3250, 3250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1457,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3084, 0, 0, 0, 1787,
	0, 1457, 0, 0, 1764, 1765, 0, 1797, 1798, 1799,
	1808, 1809, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1795, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1457, 1821, 1822, 0, 0, 0, 0, 0, 1766,
	0, 1817, 1800, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3138, 3139,
	0, 0, 0, 1793, 3145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3159, 3160, 1788, 0, 0, 0, 2546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 1791, 1792, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3169, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	3183, 1805, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 1794, 1796, 0, 0, 0, 0, 3195, 0, 0,
	0, 0, 1074, 1074, 0, 0, 0, 0, 1811, 0,
	1812, 0, 0, 0, 0, 0, 0, 1781, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	1800, 1800, 0, 0, 1800, 3250, 3250, 1800, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 1813, 0, 0, 0, 2674, 2674, 2674,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1912, 0, 1074, 0, 0, 0, 0, 0,
	3288, 0, 1817, 0, 1800, 1800, 1800, 1800, 1800, 0,
	0, 0, 0, 0, 1800, 0, 1800, 0, 0, 3250,
	3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250,
	3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250, 0,
	0, 0, 3250, 0, 0, 1800, 1800, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 1059,
	0, 0, 0, 1235, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3409, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	1235, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0,
	0, 4024, 0, 0, 0, 4023, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 1800, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 1800, 0,
	0, 0, 1800, 1800, 0, 0, 1800, 1800, 0, 0,
	0, 1800, 0, 0, 0, 1800, 0, 0, 0, 0,
	1800, 0, 1235, 0, 1764, 1765, 0, 1797, 1798, 1799,
	1808, 1809, 1810, 0, 0, 2663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 2663, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 2416, 0, 0,
	0, 0, 0, 3637, 3638, 0, 0, 3641, 0, 0,
	0, 3644, 0, 0, 0, 807, 0, 0, 0, 0,
	3648, 0, 0, 0, 0, 0, 0, 0, 0, 3655,
	0, 0, 0, 0, 3288, 0, 0, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 0, 3668,
	0, 0, 0, 1789, 1790, 1791, 1792, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 3691,
	3692, 0, 3693, 3694, 3695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3701, 0, 0, 0, 3703, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 1794, 1796, 0, 0, 0, 0, 0, 0, 1800,
	1800, 1800, 0, 0, 0, 0, 0, 3732, 3733, 0,
	1800, 1800, 3250, 2663, 0, 0, 0, 1781, 1782, 1800,
	0, 0, 1800, 0, 0, 3744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 1097, 109, 0,
	3753, 0, 0, 0, 0, 1235, 0, 1235, 0, 0,
	1787, 940, 3250, 988, 0, 1231, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 948, 0, 1800,
	1993, 0, 0, 0, 1235, 0, 0, 0, 1800, 0,
	0, 0, 0, 962, 0, 946, 945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 964, 3801, 0,
	0, 0, 1817, 947, 0, 0, 0, 0, 950, 0,
	0, 109, 0, 996, 0, 0, 0, 0, 3812, 0,
	0, 0, 959, 960, 0, 0, 0, 0, 0, 0,
	1235, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 989,
	952, 0, 3840, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 3250, 0, 0, 1788, 953, 0, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 0, 1800, 1034, 0, 1800, 0, 0,
	0, 0, 0, 1806, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 1819, 0, 0, 0, 0, 0,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 1218, 0, 0, 0, 0, 0, 0, 956,
	957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 965, 963,
	1912, 0, 0, 0, 0, 0, 958, 0, 0, 3948,
	974, 0, 0, 0, 0, 1235, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 1804, 0, 993, 985,
	0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3994, 3995, 1800, 0,
	0, 0, 3999, 4000, 0, 0, 0, 4003, 4004, 0,
	0, 0, 0, 0, 0, 4008, 0, 0, 0, 1800,
	0, 0, 951, 0, 0, 995, 4012, 0, 0, 1235,
	0, 1235, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 4017, 0, 0, 0, 0, 949, 0, 1235,
	1235, 981, 982, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 984, 728, 0, 1224, 0, 0,
	0, 0, 1235, 0, 1235, 1235, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 979, 0, 0, 0,
	712, 0, 0, 0, 994, 975, 0, 0, 968, 966,
	0, 971, 0, 0, 0, 0, 0, 972, 0, 0,
	942, 0, 991, 259, 259, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 0, 943, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 0, 0, 983, 0, 973, 0,
	0, 0, 1800, 0, 970, 0, 1800, 0, 0, 0,
	263, 715, 263, 263, 0, 992, 263, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 954, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	1993, 1993, 1235, 716, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 263, 263, 0, 0, 263, 263, 0,
	0, 980, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 4246, 4247, 4248, 0, 1235, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 2416, 0, 0, 4257,
	4258, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	1235, 825, 0, 0, 0, 0, 0, 4266, 4269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 827, 0, 0, 0, 0, 828, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 722, 0, 4312, 829, 0, 846, 0, 0,
	0, 0, 4319, 109, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 4326, 0, 0, 1059, 0,
	0, 0, 830, 0, 0, 0, 0, 831, 0, 742,
	0, 0, 4335, 0, 0, 1235, 1235, 723, 0, 0,
	0, 0, 738, 739, 736, 0, 0, 0, 0, 855,
	731, 0, 0, 724, 0, 832, 0, 0, 1054, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 853,
	0, 0, 0, 0, 109, 0, 109, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	0, 0, 826, 0, 0, 725, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 1993, 0, 0, 833, 0, 0, 834, 0, 0,
	727, 0, 0, 0, 0, 735, 0, 0, 0, 857,
	0, 0, 0, 0, 743, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	729, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 1231, 0, 0, 4461, 263, 0, 4464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 1235,
	0, 263, 1934, 263, 0, 0, 0, 0, 851, 807,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 0, 1235, 263, 1235, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1834, 0, 0, 0, 1235,
	1059, 1059, 0, 0, 0, 0, 0, 835, 0, 0,
	4517, 0, 0, 1840, 0, 0, 0, 1846, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2416, 0, 0, 1281, 0, 1281,
	1281, 0, 0, 4269, 847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 1059, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 845, 0, 0, 1932, 0, 1935,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 0, 0, 0, 841, 860, 0, 859, 0,
	0, 0, 842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4635, 4635, 4635, 0, 843, 0, 0, 0,
	0, 852, 0, 0, 0, 0, 0, 861, 263, 858,
	0, 0, 807, 0, 0, 744, 0, 0, 0, 0,
	0, 0, 4656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 4635,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 263,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 263, 0, 263, 0, 263, 0, 263,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4635, 4789, 0, 0,
	0, 0, 1235, 1235, 0, 4793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 263, 263, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1993, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 1054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	1281, 0, 1231, 1235, 0, 0, 0, 1474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1231, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 1235, 0, 1235, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 1034, 0, 0, 1034, 1034, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2484, 1235, 1235, 0, 0, 263, 0,
	0, 263, 0, 0, 0, 263, 0, 263, 0, 0,
	0, 0, 0, 1054, 263, 263, 0, 1235, 0, 0,
	0, 0, 0, 1840, 263, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 1218,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 1235,
	0, 0, 2223, 0, 0, 0, 2230, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 1235, 0, 2243, 0,
	0, 0, 807, 0, 0, 0, 1993, 1993, 0, 0,
	0, 0, 0, 0, 2255, 0, 2255, 0, 0, 0,
	0, 0, 2262, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 807, 0, 0, 1993, 1993, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 2287, 0, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2307, 0, 0,
	263, 0, 0, 0, 0, 1235, 1235, 0, 0, 0,
	2320, 0, 2322, 0, 2324, 0, 2326, 0, 2327, 263,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2353, 2354, 2355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	263, 263, 0, 0, 0, 0, 0, 263, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 109, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 265, 265, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 109, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 1235, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 1235,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 2731,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2779, 0, 0, 1281, 0,
	0, 0, 1281, 2484, 1281, 0, 0, 1231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2243, 0, 1231, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 1235, 0, 1235, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 1235, 1235, 0, 263, 263, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1474, 0, 0, 0, 0, 0, 0, 0, 263, 1235,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 1235, 0, 0, 1235, 263,
	263, 0, 0, 263, 0, 0, 0, 2230, 0, 1235,
	1934, 0, 0, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1218, 1235, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 0, 0, 0, 1235, 0, 3057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 1235, 0, 0, 0, 3068, 263, 3071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 1235, 0, 0,
	0, 0, 263, 0, 0, 0, 263, 1235, 1235, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1231, 3099, 1474, 3101, 1474, 0,
	0, 0, 0, 0, 3107, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 3135, 0, 0, 0,
	0, 1235, 0, 1235, 0, 0, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 1993, 109, 109, 109, 0,
	265, 0, 265, 265, 0, 0, 265, 0, 1318, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 1235, 1235, 0, 0, 0, 0, 0,
	0, 265, 1318, 265, 265, 0, 1318, 265, 265, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 1235, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 1218, 0, 0, 1054, 0, 0, 0, 0, 1235,
	1235, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	0, 1318, 0, 265, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1318, 0, 0, 0, 0, 0, 1993, 1318, 265,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	1231, 1231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 1235, 0, 0, 1235, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 1235, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 1474, 1474, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 263, 3428, 3430, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 1218, 1218, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3523,
	263, 0, 0, 3527, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1318, 0, 0,
	0, 265, 265, 265, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 3580, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 0, 0, 0,
	0, 0, 0, 0, 3622, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1231, 0, 0,
	1318, 0, 0, 109, 0, 1231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 3635, 0, 0, 0, 0, 0, 0, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 265, 0,
	1318, 1318, 265, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 265, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 1934, 0, 1218, 0, 0, 265, 0, 265,
	0, 0, 1218, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 1318, 0, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 265, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 1318, 0, 1318,
	1318, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 265, 0, 265, 0, 265, 0, 265,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 265, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 2243, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 263, 0, 0, 0, 0, 0, 1318, 0, 3912,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2243, 0, 0, 0, 0, 3930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1934, 0, 0, 0, 0,
	0, 0, 1113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 263, 0, 0, 0, 3979, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 1374, 0, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	0, 0, 1934, 0, 0, 0, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 263, 1318, 1316, 0, 0, 0,
	0, 0, 0, 1316, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 263, 1934, 0, 0, 1801, 1795, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 265, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 0, 0, 265, 1820,
	0, 265, 0, 2484, 0, 265, 0, 265, 1766, 0,
	0, 0, 0, 0, 265, 265, 0, 0, 1786, 0,
	1318, 1318, 0, 0, 265, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4115, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 263, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 265, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 0, 265, 1318, 0, 0, 0, 0, 0,
	4201, 0, 0, 0, 0, 0, 0, 0, 1318, 109,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 265, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 109, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	265, 0, 265, 0, 1318, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1318, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 1318, 0, 1934, 0, 1934, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 265,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 265,
	1802, 0, 1374, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 799, 0, 0, 4300, 0, 0,
	109, 799, 0, 0, 1316, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 265,
	265, 265, 0, 0, 0, 0, 0, 265, 0, 0,
	265, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	1316, 265, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4430,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	3204, 0, 0, 0, 3205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 1316, 0, 0, 0,
	1317, 0, 0, 0, 0, 1374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1375, 0, 0, 0, 1375, 0,
	0, 0, 0, 0, 0, 1317, 0, 0, 4522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 1316, 0, 1316, 0, 0, 0, 0, 1318, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 1316,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	1317, 1318, 1316, 0, 1316, 1316, 1316, 4573, 0, 0,
	0, 0, 0, 0, 1317, 0, 1318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4612, 0, 0, 0, 1318, 1318, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 265, 265, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4676, 0, 0, 0,
	0, 0, 1374, 0, 0, 0, 0, 0, 0, 265,
	265, 0, 1318, 265, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 265, 1318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1318, 0, 0, 0, 1374, 0, 265, 0, 0,
	0, 1318, 0, 1318, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 1318, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	1318, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	1374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799,
	1808, 1809, 1810, 0, 0, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 1801, 1795, 0, 0,
	0, 0, 0, 0, 1767, 1318, 0, 265, 1318, 265,
	0, 1317, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 1316, 1316, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 1374, 0, 0,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 1791, 1792, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 1316, 1815, 0, 0, 0, 0, 0,
	0, 1794, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	1812, 0, 0, 0, 0, 0, 0, 1781, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 799, 0, 1316,
	0, 0, 0, 1318, 0, 1803, 0, 0, 0, 0,
	0, 0, 1317, 1317, 0, 0, 0, 0, 0, 0,
	1787, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 0, 1317, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 1317, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1317, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 1317,
	0, 1317, 1317, 1317, 0, 0, 1788, 0, 0, 0,
	0, 1318, 0, 0, 1318, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 265, 0, 1819, 0, 0, 0, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 1318, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 0, 0, 1375,
	265, 0, 1318, 0, 0, 0, 1804, 0, 0, 0,
	0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775,
	1776, 1768, 1769, 1770, 1771, 1773, 1774, 1318, 0, 0,
	0, 2542, 0, 0, 0, 2543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1375, 0, 1374, 0, 0, 0, 0, 0, 1318,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	0, 0, 0, 0, 0, 0, 1374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 1318, 0,
	0, 0, 0, 0, 0, 1374, 0, 0, 1318, 0,
	1318, 265, 0, 1318, 265, 0, 0, 0, 0, 0,
	0, 1316, 1316, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 1318, 1317, 1317, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 1318, 265, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 1375, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 1316, 1318, 1318, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 1375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 0, 0,
	1317, 0, 0, 0, 0, 0, 1316, 0, 1316, 0,
	0, 0, 1374, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 1318, 0, 1318, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 1317, 0, 0, 1764,
	1765, 1318, 1797, 1798, 1799, 1808, 1809, 1810, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1317, 0, 1767,
	0, 0, 0, 0, 1316, 1316, 0, 0, 1814, 1317,
	0, 1317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1317, 1316, 0, 0,
	0, 0, 0, 1318, 1766, 0, 0, 0, 0, 0,
	1318, 265, 0, 0, 1786, 0, 0, 0, 1318, 1318,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1374, 0, 0, 1374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 1318, 1764, 1765, 0,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 0, 0, 0, 1767, 1789, 1790,
	1791, 1792, 265, 265, 0, 0, 1814, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 1374, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 1805, 0, 0, 1815,
	0, 1783, 0, 0, 0, 0, 1794, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 1318, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1318, 1318, 1374, 0,
	0, 0, 0, 0, 1805, 0, 1802, 1815, 0, 0,
	0, 0, 0, 1318, 1794, 1796, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	265, 0, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 1813, 0, 1806, 0,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1819,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 1375, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 1375, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1317, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 1804, 0, 1316, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 3161, 0, 1806, 0, 1316, 1316,
	1316, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 1374, 0, 0,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1374, 0, 0, 0, 1317, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 0, 0, 1804,
	1317, 0, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 1317, 0, 0, 0, 0, 3653, 0,
	0, 0, 0, 1317, 0, 1317, 0, 0, 0, 1375,
	0, 1764, 1765, 0, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1317,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 1374, 0, 1374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 1316, 1316, 1766, 0, 0, 0,
	0, 1317, 1317, 0, 1374, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1374, 0, 1316, 0, 1375, 1316, 0,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 1805, 0,
	0, 1815, 0, 0, 0, 0, 1375, 1374, 1794, 1796,
	0, 0, 1316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 1811, 0, 1812, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 1316, 1316,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	1374, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1374, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 1802, 0,
	0, 1374, 1814, 1316, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 1375, 1374, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1374, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 1316, 1316, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 1374, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1317, 0, 0, 1317, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 1803, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 0, 1787,
	1764, 1765, 3207, 1797, 1798, 1799, 1808, 1809, 1810, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1795, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 1317, 1317, 1317, 0, 1814,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1317, 0, 0, 0, 1820, 0, 0, 0,
	1802, 0, 0, 0, 0, 1766, 0, 0, 1317, 0,
	0, 1817, 0, 0, 1375, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1316, 1316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1790, 1791, 1792, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 1805, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 1794, 1796, 0,
	0, 1375, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 1812, 0, 0, 0,
	0, 1317, 1317, 1781, 1782, 0, 0, 0, 0, 0,
	0, 1375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1787, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	1317, 0, 0, 0, 3206, 0, 0, 0, 0, 0,
	1375, 0, 1317, 0, 0, 1317, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 1375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1317, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1375, 0, 0, 0, 0, 1317,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 1317, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1375, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 1778, 1779, 1785,
	1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770,
	1771, 1773, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 3203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	1317, 1317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1372, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1317, 1317,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 1377,
	280, 281, 1378, 1379, 1380, 1317, 1381, 624, 1382, 1383,
	1384, 1385, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 1386, 629,
	292, 293, 294, 295, 296, 297, 1387, 1388, 0, 298,
	630, 631, 632, 1389, 299, 300, 633, 1390, 1319, 1391,
	301, 302, 303, 304, 305, 306, 307, 0, 1392, 309,
	310, 311, 308, 312, 1393, 313, 0, 314, 315, 316,
	317, 318, 319, 1394, 320, 321, 322, 1176, 323, 324,
	325, 1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 1402, 335, 332,
	333, 1403, 336, 334, 337, 1404, 338, 339, 340, 1405,
	1406, 341, 342, 343, 1407, 344, 345, 1408, 346, 347,
	348, 1409, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 1410, 270,
	1411, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 1412, 367, 368, 1413, 1414, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 1415, 381, 642, 1416, 643, 382, 1417,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1179,
	388, 389, 1418, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 1419, 1178, 398, 647,
	648, 1420, 649, 1421, 400, 401, 1180, 650, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1422, 412, 414, 413, 1423, 415, 651,
	1183, 416, 417, 1184, 1424, 418, 0, 0, 0, 419,
	420, 423, 1425, 1426, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 1427,
	272, 1187, 463, 464, 1428, 652, 465, 653, 467, 468,
	1429, 0, 469, 0, 1430, 1431, 471, 472, 473, 1432,
	1433, 474, 475, 654, 1188, 476, 1189, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 1434,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 1435, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 1436, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 1437, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 1438, 550, 551,
	549, 552, 553, 554, 1439, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 1440, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 1441,
	582, 583, 0, 579, 570, 1442, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 1443, 592, 665, 666, 667,
	668, 1444, 601, 1445, 593, 594, 595, 669, 596, 670,
	1446, 597, 598, 599, 600, 0, 602, 603, 1447, 1448,
	604, 605, 606, 608, 609, 607, 610, 1449, 611, 1450,
	0, 612, 613, 614, 671, 672, 673, 1451, 616, 615,
	617, 674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1372, 0,
	0, 0, 0, 0, 0, 0, 2709, 0, 0, 0,
	0, 0, 0, 0, 2710, 273, 275, 274, 276, 277,
	278, 279, 1377, 280, 281, 1378, 1379, 1380, 0, 1381,
	624, 1382, 1383, 1384, 1385, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 1386, 629, 292, 293, 294, 295, 296, 297, 1387,
	1388, 0, 298, 630, 631, 632, 1389, 299, 300, 633,
	1390, 1319, 1391, 301, 302, 303, 304, 305, 306, 307,
	0, 1392, 309, 310, 311, 308, 312, 1393, 313, 0,
	314, 315, 316, 317, 318, 319, 1394, 320, 321, 322,
	1176, 323, 324, 325, 1395, 1396, 1398, 1397, 1399, 1400,
	1401, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	1402, 335, 332, 333, 1403, 336, 334, 337, 1404, 338,
	339, 340, 1405, 1406, 341, 342, 343, 1407, 344, 345,
	1408, 346, 347, 348, 1409, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 1410, 270, 1411, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 1412, 367, 368, 1413,
	1414, 1177, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 1415, 381, 642, 1416,
	643, 382, 1417, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1179, 388, 389, 1418, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 1419,
	1178, 398, 647, 648, 1420, 649, 1421, 400, 401, 1180,
	650, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 1422, 412, 414, 413,
	1423, 415, 651, 1183, 416, 417, 1184, 1424, 418, 0,
	0, 0, 419, 420, 423, 1425, 1426, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1427, 272, 1187, 463, 464, 1428, 652, 465,
	653, 467, 468, 1429, 0, 469, 0, 1430, 1431, 471,
	472, 473, 1432, 1433, 474, 475, 654, 1188, 476, 1189,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 1434, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 1435, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 1436, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 1437, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	1438, 550, 551, 549, 552, 553, 554, 1439, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 1440, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 1441, 582, 583, 0, 579, 570, 1442, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 1443, 592,
	665, 666, 667, 668, 1444, 601, 1445, 593, 594, 595,
	669, 596, 670, 1446, 597, 598, 599, 600, 0, 602,
	603, 1447, 1448, 604, 605, 606, 608, 609, 607, 610,
	1449, 611, 1450, 0, 612, 613, 614, 671, 672, 673,
	1451, 616, 615, 617, 674, 1452, 618, 1453, 1454, 1455,
	1456, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 0, 3662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3664, 273, 275, 274, 276,
	277, 278, 279, 1377, 280, 281, 1378, 1379, 1380, 0,
	1381, 624, 1382, 1383, 1384, 1385, 282, 283, 1175, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 1386, 629, 292, 293, 294, 295, 296, 297,
	1387, 1388, 0, 298, 630, 631, 632, 1389, 299, 300,
	633, 1390, 1319, 1391, 301, 302, 303, 304, 305, 306,
	307, 0, 1392, 309, 310, 311, 308, 312, 1393, 313,
	0, 314, 315, 316, 317, 318, 319, 1394, 320, 321,
	322, 1176, 323, 324, 325, 1395, 1396, 1398, 1397, 1399,
	1400, 1401, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 1402, 335, 332, 333, 1403, 336, 334, 337, 1404,
	338, 339, 340, 1405, 1406, 341, 342, 343, 1407, 344,
	345, 1408, 346, 347, 348, 1409, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 1410, 270, 1411, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 1412, 367, 368,
	1413, 1414, 1177, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 1415, 381, 642,
	1416, 643, 382, 1417, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1179, 388, 389, 1418, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	1419, 1178, 398, 647, 648, 1420, 649, 1421, 400, 401,
	1180, 650, 1181, 402, 403, 404, 1182, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1422, 412, 414,
	413, 1423, 415, 651, 1183, 416, 417, 1184, 1424, 418,
	0, 0, 0, 419, 420, 423, 1425, 1426, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1185, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1186, 462, 452, 1427, 272, 1187, 463, 464, 1428, 652,
	465, 653, 467, 468, 1429, 0, 469, 0, 1430, 1431,
	471, 472, 473, 1432, 1433, 474, 475, 654, 1188, 476,
	1189, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 1434, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 1435,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 1436, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 1437, 525, 526, 527,
	1190, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 1438, 550, 551, 549, 552, 553, 554, 1439, 555,
	556, 538, 539, 557, 558, 1191, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 1440, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 1441, 582, 583, 0, 579, 570, 1442,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 1443,
	592, 665, 666, 667, 668, 1444, 601, 1445, 593, 594,
	595, 669, 596, 670, 1446, 597, 598, 599, 600, 0,
	602, 603, 1447, 1448, 604, 605, 606, 608, 609, 607,
	610, 1449, 611, 1450, 0, 612, 613, 614, 671, 672,
	673, 1451, 616, 615, 617, 674, 1452, 618, 1453, 1454,
	1455, 1456, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4050, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4252, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4124, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3980, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3680, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3508, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2566, 273, 275, 274, 276, 277, 278, 279, 1377, 280,
	281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383, 1384,
	1385, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 1386, 629, 292,
	293, 294, 295, 296, 297, 1387, 1388, 0, 298, 630,
	631, 632, 1389, 299, 300, 633, 1390, 1319, 1391, 301,
	302, 303, 304, 305, 306, 307, 0, 1392, 309, 310,
	311, 308, 312, 1393, 313, 0, 314, 315, 316, 317,
	318, 319, 1394, 320, 321, 322, 1176, 323, 324, 325,
	1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 1402, 335, 332, 333,
	1403, 336, 334, 337, 1404, 338, 339, 340, 1405, 1406,
	341, 342, 343, 1407, 344, 345, 1408, 346, 347, 348,
	1409, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 1410, 270, 1411,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 1412, 367, 368, 1413, 1414, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 1415, 381, 642, 1416, 643, 382, 1417, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 1418, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 1419, 1178, 398, 647, 648,
	1420, 649, 1421, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 1422, 412, 414, 413, 1423, 415, 651, 1183,
	416, 417, 1184, 1424, 418, 0, 0, 0, 419, 420,
	423, 1425, 1426, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1427, 272,
	1187, 463, 464, 1428, 652, 465, 653, 467, 468, 1429,
	0, 469, 0, 1430, 1431, 471, 472, 473, 1432, 1433,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 1434, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 1435, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	1436, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 1437, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 1438, 550, 551, 549,
	552, 553, 554, 1439, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 1440, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 1441, 582,
	583, 0, 579, 570, 1442, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 1443, 592, 665, 666, 667, 668,
	1444, 601, 1445, 593, 594, 595, 669, 596, 670, 1446,
	597, 598, 599, 600, 0, 602, 603, 1447, 1448, 604,
	605, 606, 608, 609, 607, 610, 1449, 611, 1450, 0,
	612, 613, 614, 671, 672, 673, 1451, 616, 615, 617,
	674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620, 675,
	621, 622, 623, 1468, 0, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 0, 273, 275, 274, 276, 277, 278, 279, 1377,
	280, 281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383,
	1384, 1385, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 1386, 629,
	292, 293, 294, 295, 296, 297, 1387, 1388, 0, 298,
	630, 631, 632, 1389, 299, 300, 633, 1390, 1319, 1391,
	301, 302, 303, 304, 305, 306, 307, 0, 1392, 309,
	310, 311, 308, 312, 1393, 313, 0, 314, 315, 316,
	317, 318, 319, 1394, 320, 321, 322, 1176, 323, 324,
	325, 1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 1402, 335, 332,
	333, 1403, 336, 334, 337, 1404, 338, 339, 340, 1405,
	1406, 341, 342, 343, 1407, 344, 345, 1408, 346, 347,
	348, 1409, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 1410, 270,
	1411, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 1412, 367, 368, 1413, 1414, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 1415, 381, 642, 1416, 643, 382, 1417,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1179,
	388, 389, 1418, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 1419, 1178, 398, 647,
	648, 1420, 649, 1421, 400, 401, 1180, 650, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1422, 412, 414, 413, 1423, 415, 651,
	1183, 416, 417, 1184, 1424, 418, 0, 0, 0, 419,
	420, 423, 1425, 1426, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 1427,
	272, 1187, 463, 464, 1428, 652, 465, 653, 467, 468,
	1429, 0, 469, 0, 1430, 1431, 471, 472, 473, 1432,
	1433, 474, 475, 654, 1188, 476, 1189, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 1434,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 1435, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 1436, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 1437, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 1438, 550, 551,
	549, 552, 553, 554, 1439, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 1440, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 1441,
	582, 583, 0, 579, 570, 1442, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 1443, 592, 665, 666, 667,
	668, 1444, 601, 1445, 593, 594, 595, 669, 596, 670,
	1446, 597, 598, 599, 600, 0, 602, 603, 1447, 1448,
	604, 605, 606, 608, 609, 607, 610, 1449, 611, 1450,
	0, 612, 613, 614, 671, 672, 673, 1451, 616, 615,
	617, 674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620,
	675, 621, 622, 623, 1369, 0, 1372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	1377, 280, 281, 1378, 1379, 1380, 0, 1381, 624, 1382,
	1383, 1384, 1385, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 1386,
	629, 292, 293, 294, 295, 296, 297, 1387, 1388, 0,
	298, 630, 631, 632, 1389, 299, 300, 633, 1390, 1319,
	1391, 301, 302, 303, 304, 305, 306, 307, 0, 1392,
	309, 310, 311, 308, 312, 1393, 313, 0, 314, 315,
	316, 317, 318, 319, 1394, 320, 321, 322, 1176, 323,
	324, 325, 1395, 1396, 1398, 1397, 1399, 1400, 1401, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 1402, 335,
	332, 333, 1403, 336, 334, 337, 1404, 338, 339, 340,
	1405, 1406, 341, 342, 343, 1407, 344, 345, 1408, 346,
	347, 348, 1409, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 1410,
	270, 1411, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 1412, 367, 368, 1413, 1414, 1177,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 1415, 381, 642, 1416, 643, 382,
	1417, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	1179, 388, 389, 1418, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 1419, 1178, 398,
	647, 648, 1420, 649, 1421, 400, 401, 1180, 650, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 1422, 412, 414, 413, 1423, 415,
	651, 1183, 416, 417, 1184, 1424, 418, 0, 0, 0,
	419, 420, 423, 1425, 1426, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1427, 272, 1187, 463, 464, 1428, 652, 465, 653, 467,
	468, 1429, 0, 469, 0, 1430, 1431, 471, 472, 473,
	1432, 1433, 474, 475, 654, 1188, 476, 1189, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	1434, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 1435, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 1436, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 1437, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 1438, 550,
	551, 549, 552, 553, 554, 1439, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 1440, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	1441, 582, 583, 0, 579, 570, 1442, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 1443, 592, 665, 666,
	667, 668, 1444, 601, 1445, 593, 594, 595, 669, 596,
	670, 1446, 597, 598, 599, 600, 0, 602, 603, 1447,
	1448, 604, 605, 606, 608, 609, 607, 610, 1449, 611,
	1450, 0, 612, 613, 614, 671, 672, 673, 1451, 616,
	615, 617, 674, 1452, 618, 1453, 1454, 1455, 1456, 619,
	620, 675, 621, 622, 623, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 1377,
	280, 281, 1378, 1379, 1380, 0, 1381, 624, 1382, 1383,
	1384, 1385, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 1386, 629,
	292, 293, 294, 295, 296, 297, 1387, 1388, 0, 298,
	630, 631, 632, 1389, 299, 300, 633, 1390, 1319, 1391,
	301, 302, 303, 304, 305, 306, 307, 0, 1392, 309,
	310, 311, 308, 312, 1393, 313, 0, 314, 315, 316,
	317, 318, 319, 1394, 320, 321, 322, 1176, 323, 324,
	325, 1395, 1396, 1398, 1397, 1399, 1400, 1401, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 1402, 335, 332,
	333, 1403, 336, 334, 337, 1404, 338, 339, 340, 1405,
	1406, 341, 342, 343, 1407, 344, 345, 1408, 346, 347,
	348, 1409, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 1410, 270,
	1411, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 1412, 367, 368, 1413, 1414, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 1415, 381, 642, 1416, 643, 382, 1417,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 1179,
	388, 389, 1418, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 1419, 1178, 398, 647,
	648, 1420, 649, 1421, 400, 401, 1180, 650, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1422, 412, 414, 413, 1423, 415, 651,
	1183, 416, 417, 1184, 1424, 418, 0, 0, 0, 419,
	420, 423, 1425, 1426, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 1427,
	272, 1187, 463, 464, 1428, 652, 465, 653, 467, 468,
	1429, 0, 469, 0, 1430, 1431, 471, 472, 473, 1432,
	1433, 474, 475, 654, 1188, 476, 1189, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 1434,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 1435, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 1436, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 1437, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 1438, 550, 551,
	549, 552, 553, 554, 1439, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 1440, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 1441,
	582, 583, 0, 579, 570, 1442, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 1443, 592, 665, 666, 667,
	668, 1444, 601, 1445, 593, 594, 595, 669, 596, 670,
	1446, 597, 598, 599, 600, 0, 602, 603, 1447, 1448,
	604, 605, 606, 608, 609, 607, 610, 1449, 611, 1450,
	0, 612, 613, 614, 671, 672, 673, 1451, 616, 615,
	617, 674, 1452, 618, 1453, 1454, 1455, 1456, 619, 620,
	675, 621, 622, 623, 2541, 0, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	2538, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	2539, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 2537, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 2540, 0, 0, 0, 0, 0, 0, 1095,
	2536, 0, 1055, 1093, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 232, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 234, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 1591, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 226, 619, 620, 675,
	621, 622, 623, 1069, 0, 227, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 1845, 1843, 0,
	0, 1093, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 232, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	234, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 1591,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 226, 619, 620, 675, 621, 622, 623, 1069,
	0, 227, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 1845, 3157, 0, 0, 1093, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 232, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 234, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 1591, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 226, 619,
	620, 675, 621, 622, 623, 1069, 0, 227, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 1845,
	1843, 0, 0, 1093, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 2670, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 2675, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 2671, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	2672, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 2586, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 0, 0, 0, 0,
	0, 0, 0, 1095, 2584, 0, 2583, 1093, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 0,
	0, 1095, 2581, 0, 2580, 1093, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 0, 0, 0, 0, 0, 0, 0, 1095,
	2578, 0, 2577, 1093, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 0, 0, 1095, 2575, 0,
	1686, 1093, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 1685, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 1058, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 1073,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 1095, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 4585, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 1073, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 2418, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 2417, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 1095, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 1073, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 1095, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	4329, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 1073, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 3942, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 1913, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 1093, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	3658, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 1095, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1913, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 1093, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 2675, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 1095, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 0,
	0, 1095, 1843, 0, 2680, 1093, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 2678, 1093, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	2666, 1093, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 2654, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 2652, 1093, 2643, 2650,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 2646, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 2647, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 2648, 433,
	2645, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 2649,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 2644, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 2640, 1093, 2643, 2650, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 2646, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 2647, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 2648, 433, 2645, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 2649, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 2644, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 1851, 0, 1095, 0, 0, 0, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 2397, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 2361, 1093, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 2337, 1093, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 1691, 1093, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	1621, 1093, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 1616, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 1607, 1093, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 1602, 1093, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 1514, 1093, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1513, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	1508, 1093, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 1100, 382, 0, 383, 384, 385,
	386, 387, 1507, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 1501, 1093,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 1321, 1093, 1111, 1083,
	1084, 1085, 1081, 1082, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 1095, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 4634, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 4633, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 1062, 1063, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 1095, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 4632, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 1066,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 4634, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 1071, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	1068, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 1065, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 4633, 603, 0,
	1072, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1069, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 0,
	1062, 1063, 1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 1099, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 1148,
	0, 290, 1155, 291, 1154, 0, 1165, 292, 293, 294,
	295, 296, 297, 1101, 1134, 1066, 298, 1195, 1196, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 4271, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	1158, 331, 1152, 1151, 1071, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 1143,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 1077, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 1090, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 1150, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 1163,
	1164, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 4272, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 1145, 1146, 0, 1106,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 1068, 272, 1187, 463,
	464, 1091, 1139, 465, 1153, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 1078, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 1149, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 4270, 532, 1079,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 1147, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 1194, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 1065,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 1159, 1160, 1161, 1162, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 1089, 597, 598,
	599, 600, 0, 602, 603, 0, 1072, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 1156, 1193, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1069, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 1062, 1063, 1111, 1083,
	1084, 1085, 3124, 3125, 1094, 1095, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 1099, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 1148, 0, 290, 1155, 291,
	1154, 0, 1165, 292, 293, 294, 295, 296, 297, 1101,
	1134, 1066, 298, 1195, 1196, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 1158, 331, 1152, 1151,
	1071, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 1143, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 1077, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 1090, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 1150, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 1163, 1164, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	1100, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 1145, 1146, 0, 1106, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 1068, 272, 1187, 463, 464, 1091, 1139, 465,
	1153, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 1078, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 1149,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 1079, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 1147, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 1194, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 1065, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	1159, 1160, 1161, 1162, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 1089, 597, 598, 599, 600, 0, 602,
	603, 0, 1072, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 1156, 1193,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1069, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 1062, 1063, 1111, 1083, 1084, 1085, 3122, 3123,
	1094, 1095, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 1180, 1138, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	1187, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 602, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1069, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1111, 1083, 1084, 1085, 1081, 1082, 1094, 1095, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 1135, 1099, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 1148, 0, 290,
	1155, 291, 1154, 0, 1165, 292, 293, 294, 295, 296,
	297, 1101, 1134, 1066, 298, 1195, 1196, 632, 0, 299,
	300, 1141, 0, 1122, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131,
	1127, 1126, 1130, 326, 327, 328, 329, 330, 1158, 331,
	1152, 1151, 1071, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 1143, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 1077,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	1166, 1167, 362, 1090, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 1150, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 1163, 1164, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	1173, 0, 1100, 382, 0, 383, 384, 385, 386, 387,
	1136, 1137, 1140, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 1178, 398, 1145, 1146, 0, 1106, 0, 400,
	401, 1180, 1138, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 1174, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 1129, 1128, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 1068, 272, 1187, 463, 464, 1091,
	1139, 465, 1153, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 1168, 477, 478, 1078, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 1169, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 1149, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 1079, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 1132,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 1147, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 1194, 573, 574, 575,
	576, 1170, 580, 581, 0, 582, 583, 1065, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 1159, 1160, 1161, 1162, 0, 601, 0, 593,
	594, 595, 1171, 596, 1172, 1089, 597, 598, 599, 600,
	0, 602, 603, 0, 1072, 604, 605, 606, 608, 609,
	607, 610, 1133, 611, 0, 0, 612, 613, 614, 671,
	1156, 1193, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1069,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 0, 2405, 2406, 1111, 1083, 1084, 1085,
	1081, 1082, 1094, 1095, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 1135, 1099,
	0, 0, 0, 282, 283, 1175, 284, 285, 286, 287,
	288, 289, 625, 1148, 0, 290, 1155, 291, 1154, 0,
	1165, 292, 293, 294, 295, 296, 297, 1101, 1134, 0,
	298, 1195, 1196, 632, 0, 299, 300, 1141, 0, 1122,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 1176, 323,
	324, 325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326,
	327, 328, 329, 330, 1158, 331, 1152, 1151, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 1143, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 1077, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 1166, 1167, 362, 1090,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 1150,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 1177,
	369, 370, 371, 1163, 1164, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 1173, 0, 1100, 382,
	0, 383, 384, 385, 386, 387, 1136, 1137, 1140, 466,
	1179, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 1178, 398,
	1145, 1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181,
	402, 403, 404, 1182, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	1174, 1183, 416, 417, 1184, 0, 418, 0, 0, 0,
	419, 420, 423, 1129, 1128, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 1185, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 1186, 462, 452,
	0, 272, 1187, 463, 464, 1091, 1139, 465, 1153, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 1188, 476, 1189, 1168, 477,
	478, 1078, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 1169, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 1149, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 1190, 528, 529,
	530, 531, 532, 1079, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 1132, 555, 556, 538, 539,
	557, 558, 1191, 559, 560, 561, 562, 563, 564, 565,
	1147, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 1194, 573, 574, 575, 576, 1170, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 1159, 1160,
	1161, 1162, 0, 601, 0, 593, 594, 595, 1171, 596,
	1172, 1089, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 1133, 611,
	0, 0, 612, 613, 614, 671, 1156, 1193, 0, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 1111, 1083, 1084, 1085, 1081,
	1082, 1094, 0, 2662, 0, 0, 0, 0, 0, 0,
	2660, 2661, 273, 275, 274, 276, 277, 278, 279, 1095,
	280, 281, 0, 1093, 0, 0, 0, 1135, 1099, 0,
	0, 0, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 1148, 0, 290, 1155, 291, 1154, 0, 1165,
	292, 293, 294, 295, 296, 297, 1101, 1134, 0, 298,
	1195, 1196, 632, 0, 299, 300, 1141, 0, 1122, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1176, 323, 324,
	325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327,
	328, 329, 330, 1158, 331, 1152, 1151, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 1143, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 1077, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1166, 1167, 362, 1090, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 1150, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1177, 369,
	370, 371, 1163, 1164, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1173, 0, 1100, 382, 0,
	383, 384, 385, 386, 387, 1136, 1137, 1140, 466, 1179,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1178, 398, 1145,
	1146, 0, 1106, 0, 400, 401, 1180, 1138, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1174,
	1183, 416, 417, 1184, 0, 418, 0, 0, 0, 419,
	420, 423, 1129, 1128, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 0,
	272, 1187, 463, 464, 1091, 1139, 465, 1153, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1188, 476, 1189, 1168, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1169, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 1149, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 3117, 3118, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1132, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 1147,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 1194, 573, 574, 575, 576, 1170, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 1159, 1160, 1161,
	1162, 0, 601, 0, 593, 594, 595, 1171, 596, 1172,
	1089, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 1133, 611, 0,
	0, 612, 613, 614, 671, 1156, 1193, 0, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 1111, 1083, 1084, 1085, 1081, 1082,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	2097, 273, 275, 274, 276, 277, 278, 279, 1095, 280,
	281, 0, 1093, 0, 0, 0, 1135, 1099, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	0, 1148, 0, 290, 1155, 291, 1154, 0, 1165, 292,
	293, 294, 295, 296, 297, 1101, 1134, 1066, 298, 1195,
	1196, 632, 0, 299, 300, 1141, 0, 1122, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 4634,
	1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327, 328,
	329, 330, 1158, 331, 1152, 1151, 1071, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 1143, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 1077, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 1166, 1167, 362, 1090, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 1150, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 1163, 1164, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 1173, 0, 1100, 382, 0, 383,
	384, 385, 386, 387, 1136, 1137, 1140, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 1178, 398, 1145, 1146,
	0, 1106, 0, 400, 401, 0, 1138, 0, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 1174, 1183,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 1129, 1128, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 1068, 272,
	0, 463, 464, 1091, 1139, 465, 1153, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 1168, 477, 478, 1078,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 1169,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 1149, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 1079, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 1132, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 1147, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	1194, 573, 574, 575, 576, 1170, 580, 581, 0, 582,
	583, 1065, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 1159, 1160, 1161, 1162,
	0, 601, 0, 593, 594, 595, 1171, 596, 1172, 1089,
	597, 598, 599, 600, 0, 4633, 603, 0, 1072, 604,
	605, 606, 608, 609, 607, 610, 1133, 611, 0, 0,
	612, 613, 614, 671, 1156, 1193, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 1233, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 1093, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 1134, 0, 298,
	630, 631, 632, 0, 299, 300, 1141, 0, 1122, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1176, 323, 324,
	325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1166, 1167, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1173, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1136, 1137, 1140, 466, 1179,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1178, 398, 647,
	648, 0, 649, 0, 400, 401, 1180, 1138, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 1219, 412, 414, 413, 0, 415, 1174,
	1183, 416, 417, 1184, 0, 418, 0, 0, 0, 419,
	420, 423, 1129, 1128, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 0,
	272, 1187, 463, 464, 0, 1139, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 1225, 471, 472, 473, 0,
	0, 474, 475, 654, 1188, 476, 1189, 1168, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1169, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 1227, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 232, 550, 551,
	549, 552, 553, 554, 1132, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 1170, 580, 581, 0,
	582, 583, 0, 579, 570, 234, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 1171, 596, 1172,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 1133, 611, 0,
	0, 612, 613, 614, 1591, 672, 673, 0, 616, 615,
	617, 674, 1233, 618, 0, 0, 0, 226, 619, 620,
	675, 621, 622, 623, 0, 0, 227, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 0, 1223, 0, 1937, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 1134, 0, 298, 630, 631, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 647, 648, 0, 649,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	1219, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 0, 272, 1187, 463,
	464, 0, 1139, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 1225, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 661,
	1227, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 232, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 0,
	579, 570, 234, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 1591, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 226, 619, 620, 675, 621, 622,
	623, 0, 0, 227, 0, 0, 0, 3281, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 1937, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 282, 283, 1175, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 1134, 0, 298, 630, 631, 632, 0, 299, 300,
	1141, 0, 1122, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127,
	1126, 1130, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 1166,
	1167, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1177, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 1173,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 1136,
	1137, 1140, 466, 1179, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 1178, 398, 647, 648, 0, 649, 0, 400, 401,
	1180, 1138, 1181, 402, 403, 404, 1182, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 1219, 412, 414,
	413, 0, 415, 1174, 1183, 416, 417, 1184, 0, 418,
	0, 0, 0, 419, 420, 423, 1129, 1128, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1185, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1186, 462, 452, 0, 272, 1187, 463, 464, 0, 1139,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 1225,
	471, 472, 473, 0, 0, 474, 475, 654, 1188, 476,
	1189, 1168, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 1169, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1190, 528, 529, 530, 531, 532, 661, 1227, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 1132, 555,
	556, 538, 539, 557, 558, 1191, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	1170, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 1171, 596, 1172, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 1133, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 1215,
	0, 1233, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	1223, 0, 1221, 1135, 0, 0, 0, 0, 282, 283,
	1175, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 1134, 0, 298, 630, 631, 632, 0,
	299, 300, 1141, 0, 1122, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1176, 323, 324, 325, 1125, 1123, 1124,
	1131, 1127, 1126, 1130, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 1166, 1167, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1177, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 1173, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1136, 1137, 1140, 466, 1179, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 1178, 398, 647, 648, 0, 649, 0,
	400, 401, 1180, 1138, 1181, 402, 403, 404, 1182, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 1219,
	412, 414, 413, 0, 415, 1174, 1183, 416, 417, 1184,
	0, 418, 0, 0, 0, 419, 420, 423, 1129, 1128,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1185,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1186, 462, 452, 0, 272, 1187, 463, 464,
	0, 1139, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 1225, 471, 472, 473, 0, 0, 474, 475, 654,
	1188, 476, 1189, 1168, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 1169, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1190, 528, 529, 530, 531, 532, 661, 1227,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	1132, 555, 556, 538, 539, 557, 558, 1191, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 1170, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 1171, 596, 1172, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 1133, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 1233, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	1135, 0, 1223, 0, 1221, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	1134, 0, 298, 630, 631, 632, 0, 299, 300, 1141,
	0, 1122, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 1125, 1123, 1124, 1131, 1127, 1126,
	1130, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 1166, 1167,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 1173, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 1136, 1137,
	1140, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	1178, 398, 647, 648, 0, 649, 0, 400, 401, 1180,
	1138, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 1219, 412, 414, 413,
	0, 415, 1174, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 1129, 1128, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 0, 272, 1187, 463, 464, 0, 1139, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 1225, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	1168, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 1169, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 661, 1227, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 1132, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 1170,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	1171, 596, 1172, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	1133, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 1233, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 1135, 0, 1223,
	0, 1221, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 1134, 0, 298,
	630, 631, 632, 0, 299, 300, 1141, 0, 1122, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1176, 323, 324,
	325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1166, 1167, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1173, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1136, 1137, 1140, 466, 1179,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1178, 398, 647,
	648, 0, 649, 0, 400, 401, 1180, 1138, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1174,
	1183, 416, 417, 1184, 0, 418, 0, 0, 0, 419,
	420, 423, 1129, 1128, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 0,
	272, 1187, 463, 464, 0, 1139, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1188, 476, 1189, 1168, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1169, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1132, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 1170, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 1171, 596, 1172,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 1133, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1233, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 1135, 0, 0, 0, 4097, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 1134, 0, 298, 630, 631, 632,
	0, 299, 300, 1141, 0, 1122, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 1125, 1123,
	1124, 1131, 1127, 1126, 1130, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 1166, 1167, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 1173, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1136, 1137, 1140, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 1178, 398, 647, 648, 0, 649,
	0, 400, 401, 1180, 1138, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 1174, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 1129,
	1128, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 0, 272, 1187, 463,
	464, 0, 1139, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 1168, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 1169, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 661,
	1227, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 1132, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 1170, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 1171, 596, 1172, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 1133, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 2509, 2510, 2511, 2528, 2529, 2530, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 2531, 0, 624, 0, 1835, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 1820, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 2521, 0, 309, 310, 311, 308, 312,
	0, 313, 2517, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 2522, 2523, 2524,
	2525, 363, 364, 365, 639, 0, 0, 2516, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 2526, 2527, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 2519, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	2520, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 1819, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 1055, 0, 1314, 2506, 2507, 2508, 2532, 2518,
	2512, 0, 2514, 2515, 2513, 2500, 2501, 2502, 2503, 2504,
	2505, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 1319, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 1178, 398, 647, 648,
	0, 649, 0, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 0, 0,
	1187, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 232, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 234, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 1591, 672, 673, 0, 616, 615, 617,
	674, 1588, 618, 1314, 0, 0, 226, 619, 620, 675,
	621, 622, 623, 0, 0, 227, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 188, 0, 0,
	282, 283, 1175, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 1319, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1176, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1177, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 1179, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 1178, 398, 647, 648, 0,
	649, 0, 400, 401, 1180, 650, 1181, 402, 403, 404,
	1182, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 1183, 416,
	417, 1184, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1185, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1186, 462, 452, 0, 0, 1187,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1188, 476, 1189, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1190, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 232, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 1191,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 234, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 1591, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 226, 619, 620, 675, 621,
	622, 623, 1314, 1313, 227, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 188, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 1319, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 1178, 398, 647, 648, 0, 649,
	0, 400, 401, 1180, 650, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 0, 0, 1187, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1314, 1313, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 1613, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1175, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 1319, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1176, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1177, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 1179, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 1178, 398, 647, 648, 0, 649, 0,
	400, 401, 1180, 650, 1181, 402, 403, 404, 1182, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 1183, 416, 417, 1184,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1185,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1186, 462, 452, 0, 0, 1187, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1188, 476, 1189, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1190, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 1191, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1314, 1313, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 3574, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 1319, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 1178, 398, 647, 648, 0, 649, 0, 400,
	401, 1180, 650, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 0, 0, 1187, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 2282, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1314,
	2196, 0, 0, 0, 0, 2197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 1613, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 1175, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1319, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1176, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1177, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1179, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1178, 398, 647, 648, 0, 649, 0, 400, 401,
	1180, 650, 1181, 402, 403, 404, 1182, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 2195, 414,
	413, 0, 415, 651, 1183, 416, 417, 1184, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1185, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1186, 462, 452, 0, 0, 1187, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1188, 476,
	1189, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1190, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 1191, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1314, 1313,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 1613, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1319, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1178, 398, 647, 648, 0, 649, 0, 400, 401, 1180,
	650, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 0, 0, 1187, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 1233, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 1135, 0, 0,
	0, 1597, 282, 283, 1175, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 1134, 0, 298,
	630, 631, 632, 0, 299, 300, 1141, 0, 1122, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 1176, 323, 324,
	325, 1125, 1123, 1124, 1131, 1127, 1126, 1130, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 1166, 1167, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 1177, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 1173, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1136, 1137, 1140, 466, 1179,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 1178, 398, 647,
	648, 0, 649, 0, 400, 401, 1180, 1138, 1181, 402,
	403, 404, 1182, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 1174,
	1183, 416, 417, 1184, 0, 418, 0, 0, 0, 419,
	420, 423, 1129, 1128, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 1185, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 1186, 462, 452, 0,
	272, 1187, 463, 464, 0, 1139, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 1188, 476, 1189, 1168, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	1169, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 1190, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 1132, 555, 556, 538, 539, 557,
	558, 1191, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 1170, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 1171, 596, 1172,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 1133, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1055, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 232, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 234, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 1591, 672, 673, 0, 616, 615, 617,
	674, 267, 618, 0, 0, 0, 226, 619, 620, 675,
	621, 622, 623, 0, 0, 227, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 188, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 272, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	267, 3027, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 1951, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 267, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 4799, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 3524, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 267, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1585, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 267, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 3015, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 267, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 3683, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 893, 618, 798, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 2273, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	805, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 891, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 803, 584, 585, 586, 587, 588,
	804, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 798, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	2018, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	808, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 805, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 2017, 545, 546, 547, 548, 0, 2019,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 803, 584, 585, 586,
	587, 588, 804, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 2016, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 798, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 1969, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 808, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 805, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 1968, 545, 546, 547, 548,
	0, 1970, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 803, 584,
	585, 586, 587, 588, 804, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 1967, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 796, 618, 798, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 808, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 805, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 803, 584, 585,
	586, 587, 588, 804, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 1991,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 282, 283, 1175, 284,
	285, 286, 287, 288, 289, 0, 1997, 0, 290, 1987,
	291, 2003, 0, 2010, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 2013, 2014, 0, 0, 299, 300,
	0, 0, 1319, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1176, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 1158, 331, 2001,
	2000, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 1143, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 1999, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1177, 369, 370, 371, 2008, 2009, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 0,
	0, 0, 382, 0, 383, 384, 385, 386, 387, 0,
	0, 0, 466, 1179, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1178, 398, 1994, 1995, 0, 1990, 0, 400, 401,
	1180, 0, 1181, 402, 403, 404, 1182, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 0, 1183, 416, 417, 1184, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1185, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1186, 462, 452, 0, 0, 1187, 463, 464, 0, 0,
	465, 2002, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 0, 1188, 476,
	1189, 0, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 1984, 489, 490, 491,
	1985, 492, 493, 494, 0, 495, 0, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	1998, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1190, 528, 529, 530, 531, 532, 0, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 1191, 559, 560, 561, 562,
	563, 564, 565, 1996, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 2012, 573, 574, 575, 576,
	0, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 2004, 2005, 2006, 2007, 0, 601, 0, 593, 594,
	595, 0, 596, 0, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 0, 1988,
	2011, 0, 616, 615, 617, 0, 0, 618, 0, 0,
	798, 0, 619, 620, 0, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 1978, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 805, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	803, 584, 585, 586, 587, 588, 804, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 798, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 808, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 805, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 2316, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 2317,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 803, 584, 585, 586, 587, 588, 804, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	2318, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 2062,
	618, 1314, 2029, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 808, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1175, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 1319, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1176, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 2026, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1177, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 1179, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 1178, 398, 647, 648, 0, 649, 0,
	400, 401, 1180, 650, 1181, 402, 403, 404, 1182, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 1183, 416, 417, 1184,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1185,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1186, 462, 452, 0, 0, 1187, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1188, 476, 1189, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1190, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	2027, 555, 556, 538, 539, 557, 558, 1191, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 2023, 618,
	1314, 2029, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 1319, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 2026, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 1178, 398, 647, 648, 0, 649, 0, 400,
	401, 1180, 650, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 0, 0, 1187, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 2027,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 1314,
	2029, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 1175, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 1319, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 1176, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 2026, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 1177, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 1179, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 1178, 398, 647, 648, 0, 649, 0, 400, 401,
	1180, 650, 1181, 402, 403, 404, 1182, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 1183, 416, 417, 1184, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 1185, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	1186, 462, 452, 0, 0, 1187, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 1188, 476,
	1189, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	1190, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 2027, 555,
	556, 538, 539, 557, 558, 1191, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1314, 1313,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 1175, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 1319, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	1176, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 1177, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 1179, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	1178, 398, 647, 648, 0, 649, 0, 400, 401, 1180,
	650, 1181, 402, 403, 404, 1182, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 1183, 416, 417, 1184, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 1185, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 1186,
	462, 452, 0, 0, 1187, 463, 464, 3876, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 1188, 476, 1189,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 1190,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 1191, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1314, 1313, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 1175, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	1319, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 1176,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	1177, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 1179, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 1178,
	398, 647, 648, 0, 649, 0, 400, 401, 1180, 650,
	1181, 402, 403, 404, 1182, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 1183, 416, 417, 1184, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 1185, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 1186, 462,
	452, 0, 0, 1187, 463, 464, 3489, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 1188, 476, 1189, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 1190, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 1191, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 1641, 0,
	1314, 1313, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 1175,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 1319, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 1176, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	1640, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 1177, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 1179, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 1178, 398, 647, 648, 0, 649, 0, 400,
	401, 1180, 650, 1181, 402, 403, 404, 1182, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 1183, 416, 417, 1184, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 1185, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 1186, 462, 452, 0, 0, 1187, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 1188,
	476, 1189, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 1639,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 1190, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 1638, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 1191, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 1559,
	0, 1314, 1313, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1175, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 1319, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1176, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1177, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1558, 645, 646, 466, 1179, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 1178, 398, 647, 648, 0, 649, 0,
	400, 401, 1180, 650, 1181, 402, 403, 404, 1182, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 1183, 416, 417, 1184,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1185,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1186, 462, 452, 0, 0, 1187, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1188, 476, 1189, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1190, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 1191, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	1519, 0, 1314, 1313, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 1319, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 1178, 398, 647, 648, 0, 649,
	0, 400, 401, 1180, 650, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 0, 0, 1187, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 1486, 0, 1314, 1313, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 1175, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 1319, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1176, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1177, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 1485, 645, 646, 466, 1179, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 1178, 398, 647, 648, 0,
	649, 0, 400, 401, 1180, 650, 1181, 402, 403, 404,
	1182, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 1183, 416,
	417, 1184, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1185, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1186, 462, 452, 0, 0, 1187,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1188, 476, 1189, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1190, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 1191,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 1308, 0, 1314, 1313, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 1175, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 1319, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 1176, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 1177, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1307, 645, 646, 466, 1179, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 1178, 398, 647, 648,
	0, 649, 0, 400, 401, 1180, 650, 1181, 402, 403,
	404, 1182, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 1183,
	416, 417, 1184, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 1185, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 1186, 462, 452, 0, 0,
	1187, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 1188, 476, 1189, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 1190, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	1191, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 1314, 1313, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 1175, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 1319, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1176, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1177, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 1179, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 1178, 398, 647, 648, 0,
	649, 0, 400, 401, 1180, 650, 1181, 402, 403, 404,
	1182, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 1183, 416,
	417, 1184, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1185, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1186, 462, 452, 0, 0, 1187,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1188, 476, 1189, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1190, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 1191,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 1314, 2029, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 1175, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 1319, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 1176, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 2069, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 1177, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 1179, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 1178, 398, 647, 648, 0, 649,
	0, 400, 401, 1180, 650, 1181, 402, 403, 404, 1182,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 1183, 416, 417,
	1184, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	1185, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 1186, 462, 452, 0, 0, 1187, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 1188, 476, 1189, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 1190, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 1191, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 0,
	618, 1314, 1313, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	1175, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 1319, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 1176, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 1177, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 1179, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 1178, 398, 647, 648, 0, 649, 0,
	400, 401, 1180, 650, 1181, 402, 403, 404, 1182, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 1183, 416, 417, 1184,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 1185,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 1186, 462, 452, 0, 0, 1187, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	1188, 476, 1189, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 1190, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 1191, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 1314, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 1175, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 1319, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 1176, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 1177, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 1179, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 1178, 398, 647, 648, 0,
	649, 0, 400, 401, 1180, 650, 1181, 402, 403, 404,
	1182, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 1183, 416,
	417, 1184, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 1185, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 1186, 462, 452, 0, 0, 1187,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 1188, 476, 1189, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 1190, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 1191,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 2831, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 2828, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 2835, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 3040,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 2834, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 3037, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 3039, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 3036, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 2833, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 3038,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 267, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 2831, 299, 300, 633, 0,
	0, 2825, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 2828, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 2835, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 2834, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 2824, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 2833, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 2832, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 1717, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	1716, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 1715, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 1718, 537, 544, 545, 546, 547, 548, 0, 1714,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 1712, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 1713,
	615, 617, 674, 1461, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1463, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 1225, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1458, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1460, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 1225, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 1365, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 1367, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 1225, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	707, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 706, 278, 279, 696, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	699, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	700, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 701, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 695,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 696, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 699,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 700,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 701, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 267, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 696, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 699, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 700, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 701, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 696,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 699, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 3886, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 701, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 267, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 1225, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	3437, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 2985, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 2984, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 2288, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 2229,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 2236, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 2235, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 2222, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 2224, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 267,
	616, 615, 617, 674, 0, 618, 0, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 270, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 2189,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 271, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 272, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 1225,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 1563, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 1562, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 1478, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 270, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 271, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 272, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 1471, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 1473, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 1298, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 270,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1297, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 271, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	272, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1288, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1287, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 1285, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 270, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 1284, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 271,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 272, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1280, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1279, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 677,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 270, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 271, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 272, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 258, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 699, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 700, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 701, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 2325, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 2323, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 270, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 271, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 272, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 2321, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 270, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 271, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 272, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 270, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 2242, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 271, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 272, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 270, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 2048, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	271, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 272,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	270, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 2042, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 271, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 272, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 880, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 879, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 878, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 267, 616, 615,
	617, 674, 0, 618, 0, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 3040, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 644, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 4170, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 764, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 1335, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 1333, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 765, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 761, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 1336, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 760, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 764, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 1335, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 1333, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 765, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 761, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 1336, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 760, 666, 667,
	668, 0, 601, 0, 593, 1334, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 686, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 685, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 684, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 0, 618, 267, 3027, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	0, 618, 267, 4180, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 4455, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 4074, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	3842, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 2715, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 0, 618, 267,
	3027, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 300,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 447, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 3024, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 544, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 553, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 665, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 267, 616, 615, 617, 674, 0, 618, 0, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 273, 275,
	274, 276, 277, 278, 279, 2298, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 2286, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 0, 616, 615, 617, 674, 764, 618, 267,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 273, 275, 274, 276,
	277, 278, 279, 0, 280, 281, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 282, 283, 0, 284,
	285, 286, 287, 288, 289, 625, 626, 0, 290, 627,
	291, 628, 0, 629, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 298, 630, 631, 632, 0, 299, 754,
	633, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 309, 310, 311, 308, 312, 0, 313,
	0, 314, 315, 316, 317, 318, 319, 0, 320, 321,
	322, 0, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 0, 331, 634,
	635, 0, 335, 332, 333, 0, 336, 334, 337, 0,
	338, 339, 340, 0, 0, 341, 342, 343, 0, 344,
	345, 0, 346, 347, 348, 0, 349, 350, 636, 351,
	352, 353, 355, 357, 354, 358, 359, 360, 361, 637,
	638, 362, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 365, 639, 0, 0, 0, 366, 0, 367, 368,
	0, 0, 0, 369, 370, 371, 640, 641, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 0, 381, 642,
	0, 643, 382, 0, 383, 384, 385, 386, 387, 644,
	645, 646, 466, 0, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 0, 0, 0, 395, 396, 397, 399,
	0, 0, 398, 647, 648, 0, 649, 0, 400, 401,
	0, 650, 0, 402, 403, 404, 0, 405, 0, 0,
	0, 406, 407, 408, 409, 410, 411, 0, 412, 414,
	413, 0, 415, 651, 0, 416, 417, 0, 0, 418,
	0, 0, 0, 419, 420, 423, 0, 0, 421, 422,
	424, 425, 0, 426, 427, 429, 432, 428, 430, 431,
	433, 446, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 448, 0, 765, 0, 449, 450,
	451, 456, 458, 459, 454, 455, 457, 460, 461, 453,
	0, 462, 452, 0, 0, 0, 463, 464, 0, 652,
	465, 653, 467, 468, 0, 0, 469, 0, 0, 0,
	471, 472, 473, 0, 0, 474, 475, 654, 0, 476,
	0, 655, 477, 478, 470, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 487, 488, 656, 489, 490, 491,
	657, 492, 493, 494, 658, 495, 659, 496, 497, 0,
	498, 499, 0, 500, 501, 502, 503, 504, 505, 506,
	660, 507, 509, 508, 510, 0, 511, 0, 512, 513,
	514, 0, 0, 0, 0, 515, 0, 517, 518, 519,
	520, 516, 521, 522, 523, 524, 0, 525, 526, 527,
	0, 528, 529, 530, 531, 532, 661, 533, 0, 534,
	535, 541, 542, 543, 536, 537, 761, 545, 546, 547,
	548, 0, 550, 551, 549, 552, 1596, 554, 0, 555,
	556, 538, 539, 557, 558, 0, 559, 560, 561, 562,
	563, 564, 565, 662, 0, 566, 0, 567, 568, 569,
	571, 540, 572, 577, 578, 663, 573, 574, 575, 576,
	664, 580, 581, 0, 582, 583, 0, 579, 570, 0,
	584, 585, 586, 587, 588, 589, 590, 356, 591, 0,
	592, 760, 666, 667, 668, 0, 601, 0, 593, 594,
	595, 669, 596, 670, 0, 597, 598, 599, 600, 0,
	602, 603, 0, 0, 604, 605, 606, 608, 609, 607,
	610, 0, 611, 0, 0, 612, 613, 614, 671, 672,
	673, 0, 616, 615, 617, 674, 1569, 618, 267, 0,
	0, 0, 619, 620, 675, 621, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 1568, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 1553, 618, 267, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 273, 275, 274, 276, 277, 278,
	279, 0, 280, 281, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 282, 283, 0, 284, 285, 286,
	287, 288, 289, 625, 626, 0, 290, 627, 291, 628,
	0, 629, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 298, 630, 631, 632, 0, 299, 300, 633, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 309, 310, 311, 308, 312, 0, 313, 0, 314,
	315, 316, 317, 318, 319, 0, 320, 321, 322, 0,
	323, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 0, 331, 634, 635, 0,
	335, 332, 333, 0, 336, 334, 337, 0, 338, 339,
	340, 0, 0, 341, 342, 343, 0, 344, 345, 0,
	346, 347, 348, 0, 349, 350, 636, 351, 352, 353,
	355, 357, 354, 358, 359, 360, 361, 637, 638, 362,
	0, 0, 0, 0, 0, 0, 0, 363, 364, 365,
	639, 0, 0, 0, 366, 0, 367, 368, 0, 0,
	0, 369, 370, 371, 640, 641, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 0, 381, 642, 0, 643,
	382, 0, 383, 384, 385, 386, 387, 1551, 645, 646,
	466, 0, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 0, 0, 0, 395, 396, 397, 399, 0, 0,
	398, 647, 648, 0, 649, 0, 400, 401, 0, 650,
	0, 402, 403, 404, 0, 405, 0, 0, 0, 406,
	407, 408, 409, 410, 411, 0, 412, 414, 413, 0,
	415, 651, 0, 416, 417, 0, 0, 418, 0, 0,
	0, 419, 420, 423, 0, 0, 421, 422, 424, 425,
	0, 426, 427, 429, 432, 428, 430, 431, 433, 446,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 448, 0, 447, 0, 449, 450, 451, 456,
	458, 459, 454, 455, 457, 460, 461, 453, 0, 462,
	452, 0, 0, 0, 463, 464, 0, 652, 465, 653,
	467, 468, 0, 0, 469, 0, 0, 0, 471, 472,
	473, 0, 0, 474, 475, 654, 0, 476, 0, 655,
	477, 478, 470, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 487, 488, 656, 489, 490, 491, 657, 492,
	493, 494, 658, 495, 659, 496, 497, 0, 498, 499,
	0, 500, 501, 502, 503, 504, 505, 506, 660, 507,
	509, 508, 510, 0, 511, 0, 512, 513, 514, 0,
	0, 0, 0, 515, 0, 517, 518, 519, 520, 516,
	521, 522, 523, 524, 0, 525, 526, 527, 0, 528,
	529, 530, 531, 532, 661, 533, 0, 534, 535, 541,
	542, 543, 536, 537, 544, 545, 546, 547, 548, 0,
	550, 551, 549, 552, 553, 554, 0, 555, 556, 538,
	539, 557, 558, 0, 559, 560, 561, 562, 563, 564,
	565, 662, 0, 566, 0, 567, 568, 569, 571, 540,
	572, 577, 578, 663, 573, 574, 575, 576, 664, 580,
	581, 0, 582, 583, 0, 579, 570, 0, 584, 585,
	586, 587, 588, 589, 590, 356, 591, 0, 592, 665,
	666, 667, 668, 0, 601, 0, 593, 594, 595, 669,
	596, 670, 0, 597, 598, 599, 600, 0, 602, 603,
	0, 0, 604, 605, 606, 608, 609, 607, 610, 0,
	611, 0, 0, 612, 613, 614, 671, 672, 673, 0,
	616, 615, 617, 674, 1546, 618, 267, 0, 0, 0,
	619, 620, 675, 621, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 0, 616,
	615, 617, 674, 1523, 618, 267, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 273, 275, 274, 276, 277, 278, 279, 0,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 1521, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 1483, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 1466, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	1303, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 1302, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 1294,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 1293, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 267, 616, 615, 617, 674, 0, 618,
	0, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	273, 275, 274, 276, 277, 278, 279, 1247, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 541, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 267, 616, 615, 617, 674,
	0, 618, 0, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 273, 275, 274, 276, 277, 278, 279, 770,
	280, 281, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 282, 283, 0, 284, 285, 286, 287, 288,
	289, 625, 626, 0, 290, 627, 291, 628, 0, 629,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	630, 631, 632, 0, 299, 300, 633, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 309,
	310, 311, 308, 312, 0, 313, 0, 314, 315, 316,
	317, 318, 319, 0, 320, 321, 322, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 0, 331, 634, 635, 0, 335, 332,
	333, 0, 336, 334, 337, 0, 338, 339, 340, 0,
	0, 341, 342, 343, 0, 344, 345, 0, 346, 347,
	348, 0, 349, 350, 636, 351, 352, 353, 355, 357,
	354, 358, 359, 360, 361, 637, 638, 362, 0, 0,
	0, 0, 0, 0, 0, 363, 364, 365, 639, 0,
	0, 0, 366, 0, 367, 368, 0, 0, 0, 369,
	370, 371, 640, 641, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 0, 381, 642, 0, 643, 382, 0,
	383, 384, 385, 386, 387, 644, 645, 646, 466, 0,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 0,
	0, 0, 395, 396, 397, 399, 0, 0, 398, 647,
	648, 0, 649, 0, 400, 401, 0, 650, 0, 402,
	403, 404, 0, 405, 0, 0, 0, 406, 407, 408,
	409, 410, 411, 0, 412, 414, 413, 0, 415, 651,
	0, 416, 417, 0, 0, 418, 0, 0, 0, 419,
	420, 423, 0, 0, 421, 422, 424, 425, 0, 426,
	427, 429, 432, 428, 430, 431, 433, 446, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	448, 0, 447, 0, 449, 450, 451, 456, 458, 459,
	454, 455, 457, 460, 461, 453, 0, 462, 452, 0,
	0, 0, 463, 464, 0, 652, 465, 653, 467, 468,
	0, 0, 469, 0, 0, 0, 471, 472, 473, 0,
	0, 474, 475, 654, 0, 476, 0, 655, 477, 478,
	470, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	487, 488, 656, 489, 490, 491, 657, 492, 493, 494,
	658, 495, 659, 496, 497, 0, 498, 499, 0, 500,
	501, 502, 503, 504, 505, 506, 660, 507, 509, 508,
	510, 0, 511, 0, 512, 513, 514, 0, 0, 0,
	0, 515, 0, 517, 518, 519, 520, 516, 521, 522,
	523, 524, 0, 525, 526, 527, 0, 528, 529, 530,
	531, 532, 661, 533, 0, 534, 535, 541, 542, 543,
	536, 537, 544, 545, 546, 547, 548, 0, 550, 551,
	549, 552, 553, 554, 0, 555, 556, 538, 539, 557,
	558, 0, 559, 560, 561, 562, 563, 564, 565, 662,
	0, 566, 0, 567, 568, 569, 571, 540, 572, 577,
	578, 663, 573, 574, 575, 576, 664, 580, 581, 0,
	582, 583, 0, 579, 570, 0, 584, 585, 586, 587,
	588, 589, 590, 356, 591, 0, 592, 665, 666, 667,
	668, 0, 601, 0, 593, 594, 595, 669, 596, 670,
	0, 597, 598, 599, 600, 0, 602, 603, 0, 0,
	604, 605, 606, 608, 609, 607, 610, 0, 611, 0,
	0, 612, 613, 614, 671, 672, 673, 0, 616, 615,
	617, 674, 764, 618, 267, 0, 0, 0, 619, 620,
	675, 621, 622, 623, 0, 0, 0, 0, 0, 0,
	0, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 754, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 752, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 644, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 753,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 765, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 755, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 761, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 756, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 760, 666, 667, 668,
	0, 601, 0, 593, 758, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 0, 616, 615, 617,
	674, 746, 618, 267, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	273, 275, 274, 276, 277, 278, 279, 0, 280, 281,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	282, 283, 0, 284, 285, 286, 287, 288, 289, 625,
	626, 0, 290, 627, 291, 628, 0, 629, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 298, 630, 631,
	632, 0, 299, 300, 633, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 309, 310, 311,
	308, 312, 0, 313, 0, 314, 315, 316, 317, 318,
	319, 0, 320, 321, 322, 0, 323, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 0, 331, 634, 635, 0, 335, 332, 333, 0,
	336, 334, 337, 0, 338, 339, 340, 0, 0, 341,
	342, 343, 0, 344, 345, 0, 346, 347, 348, 0,
	349, 350, 636, 351, 352, 353, 355, 357, 354, 358,
	359, 360, 361, 637, 638, 362, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 639, 0, 0, 0,
	366, 0, 367, 368, 0, 0, 0, 369, 370, 371,
	640, 641, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 0, 381, 642, 0, 643, 382, 0, 383, 384,
	385, 386, 387, 644, 645, 646, 466, 0, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 0, 0, 0,
	395, 396, 397, 399, 0, 0, 398, 647, 648, 0,
	649, 0, 400, 401, 0, 650, 0, 402, 403, 404,
	0, 405, 0, 0, 0, 406, 407, 408, 409, 410,
	411, 0, 412, 414, 413, 0, 415, 651, 0, 416,
	417, 0, 0, 418, 0, 0, 0, 419, 420, 423,
	0, 0, 421, 422, 424, 425, 0, 426, 427, 429,
	432, 428, 430, 431, 433, 446, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 448, 0,
	447, 0, 449, 450, 451, 456, 458, 459, 454, 455,
	457, 460, 461, 453, 0, 462, 452, 0, 0, 0,
	463, 464, 0, 652, 465, 653, 467, 468, 0, 0,
	469, 0, 0, 0, 471, 472, 473, 0, 0, 474,
	475, 654, 0, 476, 0, 655, 477, 478, 470, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 487, 488,
	656, 489, 490, 491, 657, 492, 493, 494, 658, 495,
	659, 496, 497, 0, 498, 499, 0, 500, 501, 502,
	503, 504, 505, 506, 660, 507, 509, 508, 510, 0,
	511, 0, 512, 513, 514, 0, 0, 0, 0, 515,
	0, 517, 518, 519, 520, 516, 521, 522, 523, 524,
	0, 525, 526, 527, 0, 528, 529, 530, 531, 532,
	661, 533, 0, 534, 535, 747, 542, 543, 536, 537,
	544, 545, 546, 547, 548, 0, 550, 551, 549, 552,
	553, 554, 0, 555, 556, 538, 539, 557, 558, 0,
	559, 560, 561, 562, 563, 564, 565, 662, 0, 566,
	0, 567, 568, 569, 571, 540, 572, 577, 578, 663,
	573, 574, 575, 576, 664, 580, 581, 0, 582, 583,
	0, 579, 570, 0, 584, 585, 586, 587, 588, 589,
	590, 356, 591, 0, 592, 665, 666, 667, 668, 0,
	601, 0, 593, 594, 595, 669, 596, 670, 0, 597,
	598, 599, 600, 0, 602, 603, 0, 0, 604, 605,
	606, 608, 609, 607, 610, 0, 611, 0, 0, 612,
	613, 614, 671, 672, 673, 0, 616, 615, 617, 674,
	709, 618, 267, 0, 0, 0, 619, 620, 675, 621,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 0, 616, 615, 617, 674, 703,
	618, 267, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 0, 0, 0, 0, 0, 0, 0, 273, 275,
	274, 276, 277, 278, 279, 0, 280, 281, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 282, 283,
	0, 284, 285, 286, 287, 288, 289, 625, 626, 0,
	290, 627, 291, 628, 0, 629, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 298, 630, 631, 632, 0,
	299, 300, 633, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 309, 310, 311, 308, 312,
	0, 313, 0, 314, 315, 316, 317, 318, 319, 0,
	320, 321, 322, 0, 323, 324, 325, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 0,
	331, 634, 635, 0, 335, 332, 333, 0, 336, 334,
	337, 0, 338, 339, 340, 0, 0, 341, 342, 343,
	0, 344, 345, 0, 346, 347, 348, 0, 349, 350,
	636, 351, 352, 353, 355, 357, 354, 358, 359, 360,
	361, 637, 638, 362, 0, 0, 0, 0, 0, 0,
	0, 363, 364, 365, 639, 0, 0, 0, 366, 0,
	367, 368, 0, 0, 0, 369, 370, 371, 640, 641,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 0,
	381, 642, 0, 643, 382, 0, 383, 384, 385, 386,
	387, 644, 645, 646, 466, 0, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 0, 0, 0, 395, 396,
	397, 399, 0, 0, 398, 647, 648, 0, 649, 0,
	400, 401, 0, 650, 0, 402, 403, 404, 0, 405,
	0, 0, 0, 406, 407, 408, 409, 410, 411, 0,
	412, 414, 413, 0, 415, 651, 0, 416, 417, 0,
	0, 418, 0, 0, 0, 419, 420, 423, 0, 0,
	421, 422, 424, 425, 0, 426, 427, 429, 432, 428,
	430, 431, 433, 446, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 448, 0, 447, 0,
	449, 450, 451, 456, 458, 459, 454, 455, 457, 460,
	461, 453, 0, 462, 452, 0, 0, 0, 463, 464,
	0, 652, 465, 653, 467, 468, 0, 0, 469, 0,
	0, 0, 471, 472, 473, 0, 0, 474, 475, 654,
	0, 476, 0, 655, 477, 478, 470, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 487, 488, 656, 489,
	490, 491, 657, 492, 493, 494, 658, 495, 659, 496,
	497, 0, 498, 499, 0, 500, 501, 502, 503, 504,
	505, 506, 660, 507, 509, 508, 510, 0, 511, 0,
	512, 513, 514, 0, 0, 0, 0, 515, 0, 517,
	518, 519, 520, 516, 521, 522, 523, 524, 0, 525,
	526, 527, 0, 528, 529, 530, 531, 532, 661, 533,
	0, 534, 535, 541, 542, 543, 536, 537, 544, 545,
	546, 547, 548, 0, 550, 551, 549, 552, 553, 554,
	0, 555, 556, 538, 539, 557, 558, 0, 559, 560,
	561, 562, 563, 564, 565, 662, 0, 566, 0, 567,
	568, 569, 571, 540, 572, 577, 578, 663, 573, 574,
	575, 576, 664, 580, 581, 0, 582, 583, 0, 579,
	570, 0, 584, 585, 586, 587, 588, 589, 590, 356,
	591, 0, 592, 665, 666, 667, 668, 0, 601, 0,
	593, 594, 595, 669, 596, 670, 0, 597, 598, 599,
	600, 0, 602, 603, 0, 0, 604, 605, 606, 608,
	609, 607, 610, 0, 611, 0, 0, 612, 613, 614,
	671, 672, 673, 0, 616, 615, 617, 674, 681, 618,
	267, 0, 0, 0, 619, 620, 675, 621, 622, 623,
	0, 0, 0, 0, 0, 0, 0, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 3544, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 3475, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 3453, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	3450, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 541, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 3402, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 555, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 3400, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 3385, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 509,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 382, 0, 383, 384, 385, 386, 387, 2995, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 504, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 533, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	267, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 273, 275, 274,
	276, 277, 278, 279, 0, 280, 281, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 282, 283, 0,
	284, 285, 286, 287, 288, 289, 625, 626, 0, 290,
	627, 291, 628, 0, 629, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 630, 631, 632, 0, 299,
	300, 633, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 309, 310, 311, 308, 312, 0,
	313, 0, 314, 315, 316, 317, 318, 319, 0, 320,
	321, 322, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 0, 331,
	634, 635, 0, 335, 332, 333, 0, 336, 334, 337,
	0, 338, 339, 340, 0, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 0, 349, 350, 636,
	351, 352, 353, 355, 357, 354, 358, 359, 360, 361,
	637, 638, 362, 0, 0, 0, 0, 0, 0, 0,
	363, 364, 365, 639, 0, 0, 0, 366, 0, 367,
	368, 0, 0, 0, 369, 370, 371, 640, 641, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 0, 381,
	642, 0, 643, 382, 0, 383, 384, 385, 386, 387,
	644, 645, 646, 466, 0, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 0, 0, 0, 395, 396, 397,
	399, 0, 0, 398, 647, 648, 0, 649, 0, 400,
	401, 0, 650, 0, 402, 403, 404, 0, 405, 0,
	0, 0, 406, 407, 408, 409, 410, 411, 0, 412,
	414, 413, 0, 415, 651, 0, 416, 417, 0, 0,
	418, 0, 0, 0, 419, 420, 423, 0, 0, 421,
	422, 424, 425, 0, 426, 427, 429, 432, 428, 430,
	431, 433, 446, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 448, 0, 447, 0, 449,
	450, 451, 456, 458, 459, 454, 455, 457, 460, 461,
	453, 0, 462, 452, 0, 0, 0, 463, 464, 0,
	652, 465, 653, 467, 468, 0, 0, 469, 0, 0,
	0, 471, 472, 473, 0, 0, 474, 475, 654, 0,
	476, 0, 655, 477, 478, 470, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 487, 488, 656, 489, 490,
	491, 657, 492, 493, 494, 658, 495, 659, 496, 497,
	0, 498, 499, 0, 500, 501, 502, 503, 504, 505,
	506, 660, 507, 509, 508, 510, 0, 511, 0, 512,
	513, 514, 0, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 516, 521, 522, 523, 524, 0, 525, 526,
	527, 0, 528, 529, 530, 531, 532, 661, 533, 0,
	534, 535, 747, 542, 543, 536, 537, 544, 545, 546,
	547, 548, 0, 550, 551, 549, 552, 553, 554, 0,
	555, 556, 538, 539, 557, 558, 0, 559, 560, 561,
	562, 563, 564, 565, 662, 0, 566, 0, 567, 568,
	569, 571, 540, 572, 577, 578, 663, 573, 574, 575,
	576, 664, 580, 581, 0, 582, 583, 0, 579, 570,
	0, 584, 585, 586, 587, 588, 589, 590, 356, 591,
	0, 592, 665, 666, 667, 668, 0, 601, 0, 593,
	594, 595, 669, 596, 670, 0, 597, 598, 599, 600,
	0, 602, 603, 0, 0, 604, 605, 606, 608, 609,
	607, 610, 0, 611, 0, 0, 612, 613, 614, 671,
	672, 673, 267, 616, 615, 617, 674, 0, 618, 0,
	0, 0, 0, 619, 620, 675, 621, 622, 623, 273,
	275, 274, 276, 277, 278, 279, 0, 280, 281, 0,
	0, 0, 0, 0, 624, 0, 2260, 0, 0, 282,
	283, 0, 284, 285, 286, 287, 288, 289, 625, 626,
	0, 290, 627, 291, 628, 0, 629, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 298, 630, 631, 632,
	0, 299, 300, 633, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 307, 0, 0, 309, 310, 311, 308,
	312, 0, 313, 0, 314, 315, 316, 317, 318, 319,
	0, 320, 321, 322, 0, 323, 324, 325, 0, 0,
	0, 0, 0, 0, 0, 326, 327, 328, 329, 330,
	0, 331, 634, 635, 0, 335, 332, 333, 0, 336,
	334, 337, 0, 338, 339, 340, 0, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 0, 349,
	350, 636, 351, 352, 353, 355, 357, 354, 358, 359,
	360, 361, 637, 638, 362, 0, 0, 0, 0, 0,
	0, 0, 363, 364, 365, 639, 0, 0, 0, 366,
	0, 367, 368, 0, 0, 0, 369, 370, 371, 640,
	641, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	0, 381, 642, 0, 643, 382, 0, 383, 384, 385,
	386, 387, 644, 645, 646, 466, 0, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 0, 0, 0, 395,
	396, 397, 399, 0, 0, 398, 647, 648, 0, 649,
	0, 400, 401, 0, 650, 0, 402, 403, 404, 0,
	405, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	0, 412, 414, 413, 0, 415, 651, 0, 416, 417,
	0, 0, 418, 0, 0, 0, 419, 420, 423, 0,
	0, 421, 422, 424, 425, 0, 426, 427, 429, 432,
	428, 430, 431, 433, 446, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 448, 0, 447,
	0, 449, 450, 451, 456, 458, 459, 454, 455, 457,
	460, 461, 453, 0, 462, 452, 0, 0, 0, 463,
	464, 0, 652, 465, 653, 467, 468, 0, 0, 469,
	0, 0, 0, 471, 472, 473, 0, 0, 474, 475,
	654, 0, 476, 0, 655, 477, 478, 470, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 487, 488, 656,
	489, 490, 491, 657, 492, 493, 494, 658, 495, 659,
	496, 497, 0, 498, 499, 0, 500, 501, 502, 503,
	504, 505, 506, 660, 507, 509, 508, 510, 0, 511,
	0, 512, 513, 514, 0, 0, 0, 0, 515, 0,
	517, 518, 519, 520, 516, 521, 522, 523, 524, 0,
	525, 526, 527, 0, 528, 529, 530, 531, 532, 661,
	533, 0, 534, 535, 541, 542, 543, 536, 537, 544,
	545, 546, 547, 548, 0, 550, 551, 549, 552, 553,
	554, 0, 0, 556, 538, 539, 557, 558, 0, 559,
	560, 561, 562, 563, 564, 565, 662, 0, 566, 0,
	567, 568, 569, 571, 540, 572, 577, 578, 663, 573,
	574, 575, 576, 664, 580, 581, 0, 582, 583, 0,
	579, 570, 0, 584, 585, 586, 587, 588, 589, 590,
	356, 591, 0, 592, 665, 666, 667, 668, 0, 601,
	0, 593, 594, 595, 669, 596, 670, 0, 597, 598,
	599, 600, 0, 602, 603, 0, 0, 604, 605, 606,
	608, 609, 607, 610, 0, 611, 0, 0, 612, 613,
	614, 671, 672, 673, 267, 616, 615, 617, 674, 0,
	618, 0, 0, 0, 0, 619, 620, 675, 621, 622,
	623, 273, 275, 274, 276, 277, 278, 279, 0, 280,
	281, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 282, 283, 0, 284, 285, 286, 287, 288, 289,
	625, 626, 0, 290, 627, 291, 628, 0, 629, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 298, 630,
	631, 632, 0, 299, 300, 633, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 307, 0, 0, 309, 310,
	311, 308, 312, 0, 313, 0, 314, 315, 316, 317,
	318, 319, 0, 320, 321, 322, 0, 323, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 0, 331, 634, 635, 0, 335, 332, 333,
	0, 336, 334, 337, 0, 338, 339, 340, 0, 0,
	341, 342, 343, 0, 344, 345, 0, 346, 347, 348,
	0, 349, 350, 636, 351, 352, 353, 355, 357, 354,
	358, 359, 360, 361, 637, 638, 362, 0, 0, 0,
	0, 0, 0, 0, 363, 364, 365, 639, 0, 0,
	0, 366, 0, 367, 368, 0, 0, 0, 369, 370,
	371, 640, 641, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 0, 381, 642, 0, 643, 382, 0, 383,
	384, 385, 386, 387, 1265, 645, 646, 466, 0, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	0, 395, 396, 397, 399, 0, 0, 398, 647, 648,
	0, 649, 0, 400, 401, 0, 650, 0, 402, 403,
	404, 0, 405, 0, 0, 0, 406, 407, 408, 409,
	410, 411, 0, 412, 414, 413, 0, 415, 651, 0,
	416, 417, 0, 0, 418, 0, 0, 0, 419, 420,
	423, 0, 0, 421, 422, 424, 425, 0, 426, 427,
	429, 432, 428, 430, 431, 433, 446, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 448,
	0, 447, 0, 449, 450, 451, 456, 458, 459, 454,
	455, 457, 460, 461, 453, 0, 462, 452, 0, 0,
	0, 463, 464, 0, 652, 465, 653, 467, 468, 0,
	0, 469, 0, 0, 0, 471, 472, 473, 0, 0,
	474, 475, 654, 0, 476, 0, 655, 477, 478, 470,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 487,
	488, 656, 489, 490, 491, 657, 492, 493, 494, 658,
	495, 659, 496, 497, 0, 498, 499, 0, 500, 501,
	502, 503, 504, 505, 506, 660, 507, 509, 508, 510,
	0, 511, 0, 512, 513, 514, 0, 0, 0, 0,
	515, 0, 517, 518, 519, 520, 516, 521, 522, 523,
	524, 0, 525, 526, 527, 0, 528, 529, 530, 531,
	532, 661, 533, 0, 534, 535, 541, 542, 543, 536,
	537, 544, 545, 546, 547, 548, 0, 550, 551, 549,
	552, 553, 554, 0, 555, 556, 538, 539, 557, 558,
	0, 559, 560, 561, 562, 563, 564, 565, 662, 0,
	566, 0, 567, 568, 569, 571, 540, 572, 577, 578,
	663, 573, 574, 575, 576, 664, 580, 581, 0, 582,
	583, 0, 579, 570, 0, 584, 585, 586, 587, 588,
	589, 590, 356, 591, 0, 592, 665, 666, 667, 668,
	0, 601, 0, 593, 594, 595, 669, 596, 670, 0,
	597, 598, 599, 600, 0, 602, 603, 0, 0, 604,
	605, 606, 608, 609, 607, 610, 0, 611, 0, 0,
	612, 613, 614, 671, 672, 673, 267, 616, 615, 617,
	674, 0, 618, 0, 0, 0, 0, 619, 620, 675,
	621, 622, 623, 273, 275, 274, 276, 277, 278, 279,
	0, 280, 281, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 282, 283, 0, 284, 285, 286, 287,
	288, 289, 625, 626, 0, 290, 627, 291, 628, 0,
	629, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	298, 630, 631, 632, 0, 299, 300, 633, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	309, 310, 311, 308, 312, 0, 313, 0, 314, 315,
	316, 317, 318, 319, 0, 320, 321, 322, 0, 323,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 0, 331, 634, 635, 0, 335,
	332, 333, 0, 336, 334, 337, 0, 338, 339, 340,
	0, 0, 341, 342, 343, 0, 344, 345, 0, 346,
	347, 348, 0, 349, 350, 636, 351, 352, 353, 355,
	357, 354, 358, 359, 360, 361, 637, 638, 362, 0,
	0, 0, 0, 0, 0, 0, 363, 364, 365, 639,
	0, 0, 0, 366, 0, 367, 368, 0, 0, 0,
	369, 370, 371, 640, 641, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 0, 381, 642, 0, 643, 382,
	0, 383, 384, 385, 386, 387, 644, 645, 646, 466,
	0, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	0, 0, 0, 395, 396, 397, 399, 0, 0, 398,
	647, 648, 0, 649, 0, 400, 401, 0, 650, 0,
	402, 403, 404, 0, 405, 0, 0, 0, 406, 407,
	408, 409, 410, 411, 0, 412, 414, 413, 0, 415,
	651, 0, 416, 417, 0, 0, 418, 0, 0, 0,
	419, 420, 423, 0, 0, 421, 422, 424, 425, 0,
	426, 427, 429, 432, 428, 430, 431, 433, 446, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 448, 0, 447, 0, 449, 450, 451, 456, 458,
	459, 454, 455, 457, 460, 461, 453, 0, 462, 452,
	0, 0, 0, 463, 464, 0, 652, 465, 653, 467,
	468, 0, 0, 469, 0, 0, 0, 471, 472, 473,
	0, 0, 474, 475, 654, 0, 476, 0, 655, 477,
	478, 470, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 487, 488, 656, 489, 490, 491, 657, 492, 493,
	494, 658, 495, 659, 496, 497, 0, 498, 499, 0,
	500, 501, 502, 503, 504, 505, 506, 660, 507, 1198,
	508, 510, 0, 511, 0, 512, 513, 514, 0, 0,
	0, 0, 515, 0, 517, 518, 519, 520, 516, 521,
	522, 523, 524, 0, 525, 526, 527, 0, 528, 529,
	530, 531, 532, 661, 533, 0, 534, 535, 541, 542,
	543, 536, 537, 544, 545, 546, 547, 548, 0, 550,
	551, 549, 552, 553, 554, 0, 555, 556, 538, 539,
	557, 558, 0, 559, 560, 561, 562, 563, 564, 565,
	662, 0, 566, 0, 567, 568, 569, 571, 540, 572,
	577, 578, 663, 573, 574, 575, 576, 664, 580, 581,
	0, 582, 583, 0, 579, 570, 0, 584, 585, 586,
	587, 588, 589, 590, 356, 591, 0, 592, 665, 666,
	667, 668, 0, 601, 0, 593, 594, 595, 669, 596,
	670, 0, 597, 598, 599, 600, 0, 602, 603, 0,
	0, 604, 605, 606, 608, 609, 607, 610, 0, 611,
	0, 0, 612, 613, 614, 671, 672, 673, 267, 616,
	615, 617, 674, 0, 618, 0, 0, 0, 0, 619,
	620, 675, 621, 622, 623, 273, 275, 274, 276, 277,
	278, 279, 0, 280, 281, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 282, 283, 0, 284, 285,
	286, 287, 288, 289, 625, 626, 0, 290, 627, 291,
	628, 0, 629, 292, 293, 294, 295, 296, 297, 0,
	0, 0, 298, 630, 631, 632, 0, 299, 300, 633,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 309, 310, 311, 308, 312, 0, 313, 0,
	314, 315, 316, 317, 318, 319, 0, 320, 321, 322,
	0, 323, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 326, 327, 328, 329, 330, 0, 331, 634, 635,
	0, 335, 332, 333, 0, 336, 334, 337, 0, 338,
	339, 340, 0, 0, 341, 342, 343, 0, 344, 345,
	0, 346, 347, 348, 0, 349, 350, 636, 351, 352,
	353, 355, 357, 354, 358, 359, 360, 361, 637, 638,
	362, 0, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 639, 0, 0, 0, 366, 0, 367, 368, 0,
	0, 0, 369, 370, 371, 640, 641, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 0, 381, 642, 0,
	643, 0, 0, 383, 384, 385, 386, 387, 644, 645,
	646, 466, 0, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 0, 0, 0, 395, 396, 397, 399, 0,
	0, 398, 647, 648, 0, 649, 0, 400, 401, 0,
	650, 0, 402, 403, 404, 0, 405, 0, 0, 0,
	406, 407, 408, 409, 410, 411, 0, 412, 414, 413,
	0, 415, 651, 0, 416, 417, 0, 0, 418, 0,
	0, 0, 419, 420, 423, 0, 0, 421, 422, 424,
	425, 0, 426, 427, 429, 432, 428, 430, 431, 433,
	446, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 448, 0, 447, 0, 449, 450, 451,
	456, 458, 459, 454, 455, 457, 460, 461, 453, 0,
	462, 452, 0, 0, 0, 463, 464, 0, 652, 465,
	653, 467, 468, 0, 0, 469, 0, 0, 0, 471,
	472, 473, 0, 0, 474, 475, 654, 0, 476, 0,
	655, 477, 478, 470, 479, 480, 0, 482, 483, 484,
	485, 486, 0, 487, 488, 656, 489, 490, 491, 657,
	492, 493, 494, 658, 495, 659, 496, 497, 0, 498,
	499, 0, 500, 501, 502, 503, 0, 505, 506, 660,
	507, 509, 508, 510, 0, 511, 0, 512, 513, 514,
	0, 0, 0, 0, 515, 0, 517, 518, 519, 520,
	516, 521, 522, 523, 524, 0, 525, 526, 527, 0,
	528, 529, 530, 531, 532, 661, 0, 0, 534, 535,
	541, 542, 543, 536, 537, 544, 545, 546, 547, 548,
	0, 550, 551, 549, 552, 553, 554, 0, 555, 556,
	538, 539, 557, 558, 0, 559, 560, 561, 562, 563,
	564, 565, 662, 0, 566, 0, 567, 568, 569, 571,
	540, 572, 577, 578, 663, 573, 574, 575, 576, 664,
	580, 581, 0, 582, 583, 0, 579, 570, 0, 584,
	585, 586, 587, 588, 589, 590, 356, 591, 0, 592,
	665, 666, 667, 668, 0, 601, 0, 593, 594, 595,
	669, 596, 670, 0, 597, 598, 599, 600, 0, 602,
	603, 0, 0, 604, 605, 606, 608, 609, 607, 610,
	0, 611, 0, 0, 612, 613, 614, 671, 672, 673,
	0, 616, 615, 617, 674, 0, 618, 0, 0, 0,
	0, 619, 620, 675, 621, 622, 623, 1764, 1765, 0,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 1765, 0, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1795, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	1766, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 1794, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 1790, 1791, 1792, 1803, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 1794, 1796, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 1802, 0, 0, 0, 1781, 1782,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1793, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1802, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1786, 0, 1806, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 1765, 0,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 0, 1793, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1766, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1786, 0, 1806, 0, 0, 0, 0, 1804,
	0, 1783, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 0, 0, 1819, 1805, 0, 3202, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	1803, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1804, 0, 0,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 0, 0, 1805, 0, 3201, 1815, 0, 0,
	0, 0, 0, 0, 1794, 1796, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 1802, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1793,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 1802, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1786, 0, 1806, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1765, 0, 1797, 1798, 1799, 1808, 1809, 1810, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1793, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 1766, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 1786, 0, 1806, 0, 0, 0,
	0, 1804, 0, 1783, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 0, 1819, 1805, 0,
	2543, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1803, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1804,
	0, 0, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 0, 4564, 0, 1805, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 1802, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 1787, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	0, 1793, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1802, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1786, 0,
	1806, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 0, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1793,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 1766, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1786, 0, 1806, 0,
	0, 0, 0, 1804, 0, 1783, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 4560, 1819,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 1803, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 1804, 0, 0, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 4476, 0, 1805, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	1802, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 1765, 1787, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1795, 0,
	0, 0, 0, 1793, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 1802, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1786, 0, 1806, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	0, 1793, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 1789, 1790, 1791, 1792, 1766, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 1786, 0,
	1806, 0, 0, 0, 0, 1804, 0, 1783, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	4439, 1819, 1805, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 1794, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 1803, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 4438, 0,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 1802, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 1765, 1787,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 0, 1793, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	1802, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1786, 0, 1806, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 1765, 0, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1795, 0,
	0, 0, 0, 1793, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	1766, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	1786, 0, 1806, 0, 0, 0, 0, 1804, 0, 1783,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 4255, 1819, 1805, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 1794, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 1790, 1791, 1792, 1803, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 1804, 0, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	4093, 0, 1805, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 1794, 1796, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 1802, 0, 0, 0, 1781, 1782,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1793, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1802, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1786, 0, 1806, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 1765, 0,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 0, 1793, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1766, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1786, 0, 1806, 0, 0, 0, 0, 1804,
	0, 1783, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 0, 4027, 1819, 1805, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	1803, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1804, 0, 0,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 4026, 0, 1805, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 1794, 1796, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 1802, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1793,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 1802, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1786, 0, 1806, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1765, 0, 1797, 1798, 1799, 1808, 1809, 1810, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1793, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 1766, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 1786, 0, 1806, 0, 0, 0,
	0, 1804, 0, 1783, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 4025, 1819, 1805, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1803, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1804,
	0, 0, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 0, 3688, 0, 1805, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 1802, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 1787, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	0, 1793, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1802, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1786, 0,
	1806, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 0, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1793,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 1766, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1786, 0, 1806, 0,
	0, 0, 0, 1804, 0, 1783, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 3199, 1819,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 1803, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 1804, 0, 0, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 3198, 0, 1805, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	1802, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 1765, 1787, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1795, 0,
	0, 0, 0, 1793, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 1802, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1786, 0, 1806, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	0, 1793, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 1789, 1790, 1791, 1792, 1766, 0,
	0, 0, 0, 0, 1772, 4708, 0, 0, 1786, 0,
	1806, 0, 0, 0, 0, 1804, 0, 1783, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	3197, 1819, 1805, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 1794, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 1803, 0, 0, 0,
	0, 0, 1772, 0, 3261, 0, 0, 0, 3260, 0,
	0, 1787, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 3196, 0,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 1802, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4707, 0, 0, 0, 0, 1787,
	0, 1764, 1765, 0, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 1793, 0, 0, 0, 3132,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 1813, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	1802, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 1817, 0, 0, 1806, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 3133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 0, 0, 0, 0, 0, 0,
	1772, 0, 1806, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 1805, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1787, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 2688, 0, 0, 0,
	0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1801, 1795, 0, 0, 0,
	2687, 0, 0, 1767, 0, 0, 0, 0, 1802, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 0, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 1801, 1795, 0, 0, 0, 0, 0,
	0, 1767, 1789, 1790, 1791, 1792, 0, 0, 0, 0,
	1814, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	1805, 0, 0, 1815, 0, 1783, 0, 0, 0, 0,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 1803, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 1764, 1765, 0, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 1801, 1795, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 1805, 0,
	1802, 1815, 0, 0, 1814, 0, 0, 0, 1794, 1796,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 1811, 0, 1812, 0, 0,
	1766, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 0, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 1806, 0, 0, 1801, 1795, 0, 0, 0,
	0, 0, 0, 1767, 1789, 1790, 1791, 1792, 1802, 1052,
	0, 0, 1814, 0, 1772, 0, 0, 0, 0, 1817,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 1805, 0, 0, 1815, 0, 1783, 0, 0,
	0, 0, 1794, 1796, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 0, 0, 1788, 0, 1804, 0, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 1803, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 0,
	1806, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 3267, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 1802, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 1803, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 1793, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 1764, 1765, 0, 1797, 1798,
	1799, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 1806, 0, 0, 1801, 1795, 0,
	0, 0, 3262, 0, 0, 1767, 0, 0, 0, 0,
	1802, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 3669, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 1804, 0, 0,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 1790, 1791, 1792, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 1794, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 1812, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 1803, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774, 0, 0, 0, 1764,
	1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1802, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 1765, 0,
	1797, 1798, 1799, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1795, 0, 0, 0, 3200, 1793, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1766, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1786, 0, 1806, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1805, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 1791, 1792,
	1803, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1804, 0, 0,
	0, 0, 1778, 1779, 1785, 1807, 1784, 1780, 0, 1777,
	1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 1794, 1796, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1812, 0, 0, 1802, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 3227, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 1765, 1787, 1797, 1798, 1799, 1808, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1795, 0, 0, 0, 0, 1793,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 1802, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1786, 0, 1806, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1765, 0, 1797, 1798, 1799, 1808, 1809, 1810, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1795, 0, 0, 0, 0, 1793, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	1789, 1790, 1791, 1792, 1766, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 1786, 0, 1806, 0, 0, 0,
	0, 1804, 0, 1783, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 0, 1819, 1805, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1794, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 1812, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	1791, 1792, 1803, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1804,
	0, 0, 0, 0, 1778, 1779, 1785, 1807, 1784, 1780,
	0, 1777, 1775, 1776, 1768, 1769, 1770, 1771, 1773, 1774,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1794, 1796, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 1812, 0, 0, 1802, 0,
	0, 0, 1781, 1782, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 1765, 1787, 1797, 1798, 1799, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 1793, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1786, 0,
	1806, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1792, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 1778, 1779,
	1785, 1807, 1784, 1780, 0, 1777, 1775, 1776, 1768, 1769,
	1770, 1771, 1773, 1774, 0, 0, 0, 0, 0, 1819,
	1805, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1794, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 1812,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 1804, 0, 0, 0, 0, 1778, 1779, 1785, 1807,
	1784, 1780, 0, 1777, 1775, 1776, 1768, 1769, 1770, 1771,
	1773, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	1778, 1779, 1785, 1807, 1784, 1780, 0, 1777, 1775, 1776,
	1768, 1769, 1770, 1771, 1773, 1774,
}

var sqlPact = [...]int{
	4850, -1000, -1000, -1000, -1000, 230, -1000, -1000, 219, 217,
	215, 213, 211, 210, 209, 205, 202, 199, 198, -1000,
	-1000, -1000, -1000, -1000, -1000, 189, -1000, -1000, 188, -1000,
	187, 186, 185, -1000, -1000, 180, -1000, 179, -1000, -1000,
	-1000, -1000, 174, 164, 163, 93946, 93397, 94488, 2324, 114696,
	101020, 2006, 83557, 114147, 83008, 113598, 2156, 8326, 113049, 2787,
	162, -1000, 112500, 161, 160, 157, -1000, 111951, -1000, 2018,
	-1000, 156, -1000, 5747, 69233, 154, 153, 151, 2450, 150,
	-1000, 147, 146, -1000, -1000, 145, -1000, 10889, 1498, -1000,
	144, 143, -1000, 6584, 98831, 142, 140, 2458, 139, 138,
	67600, 137, 136, 2265, 2972, -1000, -1000, 2007, -1000, -1000,
	135, 134, 128, 127, 122, 121, 119, 114, 113, 111,
	110, 104, -1000, 103, 99, 96, 93, 91, -1000, 90,
	88, 87, -1000, 86, -1000, 85, 84, 81, 78, 75,
	74, 73, 69, 68, 67, 66, 63, 62, 60, 10159,
	-1000, -1000, 1914, 1670, 1669, 1667, 1663, 1659, 983, 59,
	58, 56, 49, 45, 44, 42, 40, 38, 33, 32,
	30, 28, 26, 25, 23, 22, 21, 178, 17, 10,
	8, 6, 2, 1, -1, 2494, -1000, 1505, 1056, 31706,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 121742, 115238, -7, -49,
	-8, -1000, 3342, 1049, 56037, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 316, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 527, 1765,
	776, -1000, -1000, -1000, 111409, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2323, -41, -1000, 1987, -1000, -1000, -1000,
	-1000, -1000, 771, -1000, 2316, 284, 2270, -1000, -1000, -1000,
	3388, 2493, 3789, 3788, 3786, 3785, 3783, 121200, 1746, 3782,
	2567, 3781, 3780, 3779, 3776, 3775, 3774, 3772, -1000, 92848,
	1040, 92299, 91750, 3406, 110867, 91201, 110318, 76980, 48074, 1024,
	3387, -1000, -1000, -1000, -1000, -1000, -1000, 115238, -1000, 1037,
	-1000, -1000, 3771, 3770, 2022, 770, 100471, -1000, 1958, -1000,
	958, 33434, -1000, 1312, -1000, 33434, 307, -1000, -1000, -1000,
	-1000, -1000, -1000, 3768, 3767, 3765, 3764, 3763, -1000, -1000,
	82459, 24742, 81910, 81361, 109769, 24181, 90652, 90103, 3761, 3760,
	3758, 109220, 76419, 1036, 1983, 1431, -1000, -1000, -1000, -1000,
	-1000, -1000, -25, 74175, 3517, 115238, -1000, 304, -1000, -1000,
	-1000, -1000, -1000, -1000, 47486, 867, 46898, 877, 46310, 689,
	-1000, -1000, -1000, -1000, 75858, -1000, 108671, 2486, 3756, 3755,
	1137, 3752, 3287, 1743, 3751, 1870, 1223, 3750, 3749, 3748,
	3746, 3743, 3742, 3741, 1430, 108122, 3015, 1470, 107573, 1674,
	75297, 1035, 89554, 94488, 2728, 107024, 1409, 1384, -1000, -1000,
	-1000, -1000, 3125, 2968, 2948, 1351, -1000, -1000, -1000, -1000,
	59339, 7036, 6961, -1000, -1000, 10563, 106475, 62134, 94488, 94488,
	-1000, -1000, -1000, -1000, -1000, 45722, 729, 45134, 1013, -1000,
	-1000, 59898, 2964, -1000, -1000, -1000, -1000, 44546, 688, 43958,
	973, 115238, -1000, 3013, 1943, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2354, 1633, 3581, 2804, 74736, 2045, 1432, 3355,
	3123, 3120, 1538, 3119, 3739, 2628, 3107, 3106, 3099, 3095,
	3092, 1654, 2650, 683, 2666, 31118, 2988, 1745, 43370, 1502,
	1537, 3089, 3088, 3594, 1977, 1973, 2060, 80812, 3737, 3735,
	3309, 3080, 3072, 2838, 3039, -1000, 2953, 1421, -1000, -1000,
	-1000, -1000, 1479, -1000, -1000, -1000, -1000, 85183, -1000, -1000,
	1365, -1000, -1000, 1365, -1000, -1000, -1000, -1000, -1000, 1254,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1505, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2162, -1000, 1974, -1000, -1000, 2508, 3318,
	3318, 3318, 3385, 506, 487, -1000, 178, -1000, -1000, 128240,
	-1000, -1000, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650,
	2161, -1000, 754, -1000, -1000, 810, -1000, 748, 680, 628,
	-1000, -1000, -1000, -1000, -1000, -1000, 747, -1000, -1000, -1000,
	-1000, -1000, -1000, 3517, -1000, 27602, -1000, -1000, -1000, 463,
	746, 48650, -1000, -1000, 3623, 3622, 1057, -1000, 293, 971,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3011, 744, 743, -1000, 742, 741, 739, 737,
	730, -1000, -1000, -1000, 728, 723, 722, 721, 720, 717,
	716, 714, -1000, 1999, -1000, -1000, -1000, -1000, -1000, -1000,
	671, 670, 670, 670, -1000, 1028, -1000, -1000, -1000, 339,
	665, 322, 664, 656, 655, -1000, 711, 708, 702, 701,
	696, 694, 691, 690, 687, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1026, -1000, -1000, -1000, -1000, -26, 115238, -1000,
	527, -26, -1000, -1000, 684, -1000, 35750, 35750, 35750, -1000,
	-1000, 2315, 48650, -1000, 2504, -1000, -19, -19, 903, 57678,
	-1000, 54918, 903, 296, 816, 63777, -1000, 2950, -1000, -1000,
	681, 292, -1000, -1000, -1000, -1000, 25301, 2949, 115238, 115238,
	94488, 94488, 94488, 3734, 3218, 48650, -1000, -1000, 68684, 115238,
	95030, -1000, -1000, 3475, 69775, 68142, 115238, 3006, 71966, 3733,
	-1000, -1000, -1000, -1000, -1000, 3189, 3732, 3731, 3730, -1000,
	115238, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 222, 3182,
	-1000, -1000, 98282, 222, 3181, -1000, 222, 3177, -1000, 97740,
	-1000, -1000, 2235, 3174, -1000, -1000, 232, 3173, -1000, -1000,
	-1000, 226, 3172, -1000, -1000, 283, -60, 3171, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	128240, -1000, -1000, -1000, 71417, -1000, 3322, -1000, -1000, 115238,
	-1000, 48650, -1000, 3474, 1919, 78088, 3430, -33, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2546, 2517, 1152, 2374, -1000,
	3232, 1615, -1000, 33434, 3275, -1000, -1000, -1000, 273, 25301,
	-1000, -1000, -1000, -1000, -1000, -1000, 6462, 3169, 1389, -1000,
	2373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1982,
	3168, -1000, 2317, 3165, 1912, -1000, -1000, 2924, -1000, 3305,
	-1000, -1000, 1843, 3164, -18, -1000, -1000, 2206, -1000, -1000,
	-1000, -1000, 1930, -1000, 996, 3163, -1000, 89005, 3149, 61575,
	59898, 74175, -29, -1000, -1000, -1000, -1000, -235, -1000, 23620,
	128240, -1000, -1000, -1000, -1000, 1634, 128240, 937, -1000, -1000,
	3162, -1000, 128240, 935, -1000, -1000, 3160, -1000, 3004, -1000,
	-1000, 2441, -1000, -1000, 3729, -1000, -1000, 3728, -1000, 3727,
	3724, 3723, -1000, 1580, 1984, 3722, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 88463, 2314, -1000, -1000, 87365, 2993,
	-1000, 2436, 3428, -1000, 87914, 1032, -1000, 996, 2434, -1000,
	97198, 1039, 2430, -1000, 3721, 3400, 2762, 996, 2429, -1000,
	-1000, -1000, -1000, -1000, 1012, -1000, 65415, -1000, 65415, -1000,
	1579, -1000, 120658, -19, 94488, 3517, -1000, -48, -1000, -1000,
	-1000, 1049, -1000, 58790, -1000, 58790, 99922, 77539, 985, 788,
	67051, 128240, -1000, -1000, -1000, -1000, 128240, -1000, -1000, -1000,
	-182, 2800, -1000, 77539, 61016, 128240, -1000, -1000, -1000, -1000,
	128240, -1000, -1000, -1000, 77539, 87365, -1000, 105926, 86823, -1000,
	-1000, 1402, 2626, -1000, -1000, -1000, 77539, 1323, 77539, 77539,
	77539, -1000, 105377, -1000, -1000, 2133, 1630, 3310, 2110, 94488,
	-1000, 1793, -1000, -1000, -1000, 3341, 115238, -1000, -1000, 2991,
	-1000, 70868, 96656, -1000, 96114, -1000, 95572, -1000, 94488, -1000,
	94488, -1000, 3720, 3719, 3717, -1000, -1000, 3714, -1000, 3713,
	3331, -1000, 704, 42782, 128240, 3330, -1000, 3712, 3420, 2988,
	128240, -1000, 3132, 1673, 1666, 115238, -1000, -1000, 115238, -1000,
	115238, -1000, -1000, -1000, 1483, -1000, -1000, 2541, -1000, -1000,
	-1000, -1000, 94488, 94488, 94488, 94488, 1455, -1000, 42194, -1000,
	-1000, 3091, 3711, 1704, -1000, 1789, -1000, 2947, 3340, -1000,
	1390, 1763, -1000, -1000, 242, -1000, -1000, -33, -1000, 120116,
	-1000, 2508, -1000, 115238, -1000, 2524, 2976, 2984, 1632, 2339,
	2639, -1000, 41606, 2594, 52106, 2364, 178, -1000, -1000, 178,
	178, 32858, -1000, -1000, 69775, 69775, 25301, 1339, 48650, 48650,
	48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650,
	48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650,
	48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650,
	48650, 48650, 48650, 48650, 2288, 48650, 1253, 48650, 48650, 48650,
	48650, 2417, -1000, -1000, 1917, 561, 2104, 680, -1000, -1000,
	-1000, 3538, 3538, 3538, 349, 349, 349, 128612, 128612, 641,
	3706, 810, -1000, 48650, -1000, 123, 58227, 48650, 25862, -1000,
	487, 15373, 2487, -1000, 486, 26450, -1000, -1000, -1000, 27602,
	628, 41018, 48650, 1018, 128240, -1000, -1000, 1391, 3548, 23060,
	3023, 2832, 679, 852, 809, 30530, 29942, 29354, 28766, 806,
	48650, 48650, 48650, 48650, 48650, 48650, 48650, 48650, -1000, -1000,
	3560, -1000, 3548, -1000, -1000, -1000, -1000, 3548, 1338, 1327,
	3548, -1000, 3548, 3548, 7695, 7695, 40442, 39854, 39266, 52682,
	38678, 48650, 28178, 38090, 37502, -1000, 115238, -26, 3473, 48650,
	281, -1000, 126862, -1000, 281, 281, 678, -53, 128240, 2712,
	2712, 56584, 2492, 2188, 2188, 2188, -1000, 903, 18551, 903,
	104286, 2207, 903, 903, 264, 303, 473, 54371, 2504, 104286,
	795, 677, -9, -10, -11, -1000, -1000, -12, -14, -1000,
	-1000, 94488, 676, 25862, 25301, 261, 1941, -61, 2698, 2697,
	2695, -1000, 2660, -1000, 1788, -62, 1250, 94488, 115238, 1360,
	3701, -133, -1000, 302, -64, -1000, 1345, 260, 3548, -1000,
	-1000, -1000, -1000, -1000, 3698, 3697, -1000, 1025, 675, 674,
	402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 671,
	670, 670, 670, -1000, 339, 665, 322, 664, 656, 655,
	-1000, -1000, -1000, -1000, -1000, 2946, 94488, 115238, 1352, 3696,
	-235, 95030, -58, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 115238, -1000, -1000, -1000, 3693, -1000, 94488, -1000, -1000,
	94488, 222, 3159, -1000, 94488, -1000, 94488, 221, 3157, -1000,
	-1000, 115238, -1000, 94488, 94488, -1000, 115238, 115238, 115238, 77539,
	77539, 236, -1000, 94488, 891, -69, 1142, -33, -1000, -1000,
	-1000, 1365, -1000, 1784, -1000, -1000, -1000, -1000, -1000, -1000,
	1442, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1057,
	-1000, -1000, -1000, -1000, -1000, -1000, 3572, 3563, -27, -1000,
	-1000, 25301, -1000, -35, 1616, 1873, 1248, -1000, 80263, 2391,
	3313, 3689, 2746, 3296, 1568, -1000, 1474, -1000, 3412, 85183,
	3429, 3460, 1337, -1000, 2944, -1000, -1000, 943, 1693, 1734,
	1247, 1246, 85183, 2317, -1000, 69775, -1000, 2688, 3384, 1422,
	1426, 1422, 1422, 1435, -1000, 85183, 1722, 1242, 1241, 1239,
	1938, 1934, -1000, -1000, 1993, -1000, 1237, 1236, 836, 1923,
	-1000, -36, 3421, 3458, 1305, -1000, 2921, 1230, -1000, -1000,
	-1000, 3383, 94488, 25301, 1575, 1550, 1566, 1721, 1229, -28,
	-1000, 3435, 1227, 1226, -1000, 5833, -1000, 77539, 1878, 3154,
	2799, -1000, 1481, 2798, 894, 2797, -1000, -1000, -1000, 894,
	-29, 74175, 115238, 257, -1000, 123, 48650, 48650, 123, 48650,
	123, 3418, 3151, -1000, -1000, -1000, -1000, -1000, 3688, 1963,
	2565, -1000, -1000, 654, 2425, 2920, 115238, 2710, -30, 94488,
	-1000, 70326, 3150, 72515, 2317, 2424, -1000, -1000, 86274, -1000,
	3147, 527, 2423, -1000, 697, 3687, 3146, -1000, 119574, -1000,
	3322, 1208, 3145, 1096, 928, 3472, -1000, 928, 65957, -1000,
	115238, -1000, -19, 6194, 79179, -71, -79, 472, -1000, 104835,
	115238, 1094, 79721, 115238, 3263, 993, 59898, -1000, 59898, -84,
	-182, 2796, 1462, 985, 985, 894, -1000, 894, -1000, 94488,
	2982, -1000, -1000, 77539, 985, 985, 985, -1000, -1000, -1000,
	-1000, 3683, 3680, 3678, 3677, -1000, -1000, 995, 94488, 115238,
	94488, -1000, 254, -1000, 115238, -1000, 115238, 115238, 94488, -1000,
	995, 115238, 995, 115238, 995, 115238, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 123, -1000, -1000, 128240, -1000, 48650, -1000,
	-1000, 3676, 1601, -1000, 2980, -1000, 2977, -1000, 19, -1000,
	-1000, 1845, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3675,
	128240, -1000, 1799, -1000, -1000, -1000, -1000, 94488, 94488, 94488,
	94488, 115238, 3251, -1000, 115238, 3242, 94488, -1000, -1000, 85183,
	-1000, 2524, 2976, -1000, -1000, -1000, -1000, -1000, -1000, 1382,
	2276, -1000, 2613, -1000, 1506, -1000, -1000, -1000, 128240, 53241,
	-1000, -1000, 128240, 1844, -1000, 51530, 50954, -1000, -1000, 1675,
	94488, 2714, -1000, 2714, -213, -1000, 126560, 2605, 94488, -1000,
	-1000, -1000, -1000, -1000, 941, 929, 929, 1361, 1361, 1361,
	1361, 3416, 4733, 2044, 6847, 6639, 6639, 5005, 5005, 5005,
	5005, 5005, 6639, 6208, 349, 349, 6208, 6208, 6208, 6208,
	6208, 349, 349, 349, 6639, 6639, 6639, 349, 128612, 128338,
	8335, 48650, 48650, 1224, 1897, 561, 8315, 48650, 8912, 8912,
	8912, 8912, -1000, 2249, -1000, -1000, -1000, -1000, 2913, 648,
	52682, 52682, -1000, -1000, -1000, -1000, 27026, 48650, -1000, -1000,
	-1000, -1000, 36914, -1000, -1000, 16388, -314, 469, -1000, 251,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 467, -184, 7, -1000, 48650, 48650, 48650,
	465, -1000, 247, 48650, 115238, -1000, 123208, 794, -81, -1000,
	-89, 1458, -1000, 48650, -1000, -1000, 1222, -1000, 1221, 1220,
	1219, -1000, 647, 464, -1000, 246, -1000, 2164, 646, 643,
	48650, -1000, -1000, -1000, -1000, -1000, 125910, -1000, -1000, 125812,
	-1000, -1000, 125538, -1000, -1000, 125440, -1000, -1000, -1000, 127966,
	122934, 122836, 17689, 14292, 17412, 17110, -90, 458, -92, 445,
	918, 915, 441, 440, 439, -95, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -100, 436,
	-1000, 2902, -184, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 435, -1000, 434, -1000, 127868, -184, 433, 5432, -1000,
	52682, 52682, 52682, 52682, -1000, 430, -1000, 126282, -1000, 127594,
	36338, 36338, 36338, 425, 127292, 48650, -184, -102, -1000, -105,
	-1000, -1000, 549, -107, 1014, 35750, 55485, 25301, -1000, 1014,
	1014, 48650, -1000, 48650, 2636, -1000, -1000, -1000, -1000, 2599,
	2401, 2712, 56584, -1000, -1000, -1000, -1000, 104286, -1000, 3517,
	2776, -1000, 104286, -1000, -1000, 115238, 527, -1000, 104286, 104286,
	25301, 903, -1000, 903, 104286, 796, -1000, -1000, -1000, -1000,
	-1000, 424, 62681, 7, 243, 25301, 996, -1000, -1000, 2717,
	2717, 2717, 2717, -1000, -1000, 115238, 1217, -31, -103, 2795,
	-1000, 3490, -1000, 2051, -1000, 69775, -1000, 808, 1122, 25301,
	-1000, -1000, -1000, 642, -1000, 3548, 3548, -1000, 3548, 115238,
	2900, 274, 2786, -1000, 268, 72515, 72515, 3674, -1000, -1000,
	222, -1000, 94488, 222, 222, -1000, 94488, 94488, 2235, -1000,
	232, -1000, 226, -1000, -1000, -60, -1000, 1008, 33434, -1000,
	1365, -1000, -1000, 1569, -1000, 1971, -1000, 1311, -1000, -1000,
	-1000, -1000, 33434, -1000, 2233, 115238, 115238, 94488, -1000, 115238,
	-1000, 2107, 72515, -1000, 2418, 119032, 2409, 69775, 115238, -1000,
	-1000, 640, 968, 2600, 2598, 1089, 115238, 115238, 2593, 118490,
	117948, -1000, 3673, 115238, 2101, 48650, 3382, 2112, 5050, 123,
	123, -1000, 123, 123, 123, -1000, 638, 1310, 94488, 94488,
	115238, 72515, 94488, 1814, -1000, -1000, -1000, -1000, -1000, 85725,
	-1000, -1000, 3558, 3553, -1000, 1422, -1000, -1000, -1000, 1422,
	2317, 1807, 115238, 72515, 94488, 72515, 117406, 116864, -1000, 1713,
	115238, 1427, -1000, 836, 2063, 123, 123, -1000, 123, 123,
	123, 634, 25301, 2000, -1000, 3051, 115238, 3620, 116322, 3612,
	115238, 115238, 115238, 72515, 3319, 115238, 115238, 72515, 5833, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	73633, 1111, 996, 1702, 1216, 1215, 85183, 2076, 1660, 115238,
	59898, 992, 59898, 2769, -1000, -1000, 22500, -1000, 128240, 128240,
	-1000, 128240, -1000, 70326, 115238, -1000, 1030, 115238, 79721, 969,
	3144, 64873, -235, 985, 77539, 94488, -30, 2710, 115238, -1000,
	-1000, 2317, 3143, 527, 2414, -1000, 77539, 3469, 3142, 632,
	3672, 3670, -1000, 94488, 2313, 2411, -1000, -1000, 115780, 3158,
	836, 115238, 1014, 56584, 1909, -1000, 63230, 1050, 115238, 1835,
	214, -1000, -1000, -1000, 4, 115238, -1000, 811, -1000, -1000,
	6194, 6194, 985, -299, 630, -1000, 886, 885, 60457, 77539,
	-108, -1000, -1000, -1000, -1000, 2409, 94488, 115238, 1283, 2760,
	115238, -113, -1000, 238, 629, -1000, 2176, -1000, -182, -1000,
	993, 59898, 2898, 2883, -1000, -1000, 1007, -1000, 1370, 985,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -20, 115238, -235, -235, -45, -31, -1000, 995, -1000,
	995, -1000, 995, -1000, 128240, -1000, -1000, 1597, 1592, 115238,
	-1000, -1000, 115238, -1000, 25301, 115238, 94488, 25301, 94488, 2974,
	2905, -1000, -1000, -1000, 115238, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1117, -1000, 1844, 2267, -1000, 628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2519, -1000, -32,
	32858, 910, -1000, -1000, 94488, -21, 48650, 48650, 7557, 5930,
	48650, 52682, 52682, -1000, 48650, 5893, -1000, -1000, -1000, -1000,
	-1000, 2876, 627, 48650, 69775, 2024, 1951, -1000, 423, 16516,
	6208, -1000, 48650, -1000, 587, -1000, 421, 35174, -1000, 126990,
	-50, -120, -1000, 19124, -184, -126, -1000, -1000, 807, -1000,
	3130, -1000, 48650, 127164, 2463, 2052, 1852, 1608, 3548, 3608,
	21940, -1000, 66504, 1016, 2220, 125166, -1000, -1000, -1000, -1000,
	69775, 69775, 48650, 48650, -1000, 48650, 48650, 48650, -1000, -1000,
	-1000, 3548, 908, -1000, -1000, -1000, 908, -1000, -1000, 1422,
	-1000, 1422, -1000, 48650, -1000, -1000, 2875, 48650, -1000, 69775,
	69775, 52682, 52682, 52682, 52682, 52682, 52682, 52682, 52682, 52682,
	52682, 52682, 52682, 52682, 52682, 52682, 52682, 52682, 52682, 52682,
	52682, 2542, 52682, 3516, 3516, 3516, 1099, -1000, 2881, 2875,
	48650, 48650, 69775, 420, 418, 411, -1000, 48650, -184, -1000,
	-1000, 6950, 625, -1000, 2496, -1000, 2831, -1000, 48650, -1000,
	-121, -1000, 2504, -1000, -1000, 2831, 2831, -137, 128240, 56584,
	56584, -1000, 624, 48650, 2583, -1000, -1000, 793, -316, -1000,
	881, -1000, -1000, -1000, -1000, -1000, 527, -1000, -1000, -1000,
	234, 104286, 104286, 792, -1000, -142, -1000, -1000, -145, -1000,
	3468, 394, 25301, -1000, 1014, 2676, -1000, -1000, -1000, -1000,
	-1000, -1000, -235, 115238, 115238, 1656, 2239, 3606, -1000, 3551,
	805, 791, 227, 3548, 393, 392, 391, -235, 115238, 115238,
	1655, 115238, -1000, -1000, -1000, -1000, 222, -1000, -1000, -1000,
	221, -1000, -1000, -1000, -1000, 2671, -1000, -33, -1000, -1000,
	-1000, 48650, -1000, -1000, 3308, 1212, 1211, -1000, -1000, -1000,
	-1000, 2936, -1000, 3136, -1000, 2404, -1000, 1062, -1000, 1874,
	-1000, 48650, 619, 2759, 618, 617, 3666, 2026, 3665, 1090,
	3135, 2235, 3134, 2235, -1000, -1000, -1000, 963, -1000, 128240,
	2112, -1000, 613, 612, -1000, -35, 1612, 1819, 1207, 1005,
	-1000, -1000, -1000, -1000, 48650, 48650, 103744, -1000, 468, 3305,
	-23, -1000, -1000, -1000, 1646, 1205, 1204, -1000, -1000, -1000,
	-1000, 2317, 1643, 1203, 1200, -1000, -1000, -1000, -1000, -1000,
	2403, -1000, -1000, 3133, 1002, -1000, 3049, 3046, 913, 115238,
	-1000, 999, -1000, -1000, -1000, -1000, 48650, -1000, -36, 1192,
	3427, 2402, 94488, -1000, 2235, 3131, 1191, -1000, 1189, -1000,
	-1000, -1000, 3434, 3432, 1196, -1000, -1000, -1000, -1000, -1000,
	73074, -1000, 115238, 72515, 94488, 1790, -1000, -1000, 84099, 84641,
	115238, -235, 894, -1000, 2578, 894, 992, 2874, -1000, 2707,
	998, 94488, 3664, 389, -150, -39, 69775, 3466, -1000, 2328,
	631, 94488, 938, -1000, 3517, -1000, -1000, -1000, 997, -1000,
	3422, 94488, 3465, 3127, 996, 123, 94488, 3580, -1000, -1000,
	3464, 94488, 3111, 2312, 2397, 2553, 836, 78637, 996, 2217,
	-59, -1000, 1835, 34586, 3303, -151, -1000, -1000, -1000, 1014,
	65957, 56584, 48650, 3663, -152, -1000, -1000, -1000, -1000, -1000,
	101569, 101569, 77539, 77539, 77539, 985, 115238, 115238, 79721, -1000,
	-1000, 602, 115238, 115238, 601, -1000, 115238, 115238, 3662, 77539,
	-40, 600, -1000, 879, 878, 868, -1000, -1000, -1000, -1000,
	-1000, -1000, 993, -1000, -182, 59898, 123, -1000, 2225, 94488,
	-1000, 21380, -1000, -1000, -1000, -1000, -1000, -1000, 995, -235,
	-1000, -1000, 2082, 2358, 2082, 1815, 1812, -1000, -1000, 2236,
	-1000, -1000, -1000, -1000, 2677, 3320, 25301, 3419, 8912, 48650,
	48650, 543, 769, 462, 8912, 48650, 48650, 69775, 9873, -153,
	48650, 48650, -1000, 48650, 783, 128240, -1000, 3605, 48650, 383,
	380, -1000, -1000, -1000, 3539, -1000, -1000, -1000, 128240, 48650,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 379, -1000, 20,
	-1000, -1000, -1000, 122284, -1000, 48650, 374, 3381, -1000, 373,
	367, 415, 9193, 125068, 124794, 124696, 364, -1000, -1000, 363,
	362, 128240, 2881, 128240, -1000, -1000, 845, 845, 1376, 1376,
	1376, 1376, 3516, 953, 525, 614, 504, 504, 504, 340,
	1099, 1099, 504, 504, 504, 1099, 2873, 2558, 599, 2535,
	-1000, -1000, 128240, 128240, 360, -1000, -1000, -1000, -184, 358,
	6950, -1000, 2826, 3377, 128240, -1000, 56584, 2826, 2826, -1000,
	-1000, 2401, 115238, 128240, 56584, -1000, 2776, -1000, 19695, -1000,
	25301, -1000, -1000, -1000, -1000, 3517, -1000, 62681, -1000, 598,
	-1000, 5, -1000, 2676, -1000, 866, -1000, -1000, 77539, 77539,
	-235, -183, 115238, -1000, -1000, 782, 3661, 800, 25301, 357,
	-1000, -1000, -1000, -235, -235, 115238, -235, -1000, -1000, -1000,
	3262, 128240, 115238, 115238, 1522, 103202, 115238, 3074, -1000, 2031,
	-1000, 1089, 124422, 57131, -1000, 57131, 115238, -1000, -1000, -1000,
	1884, 1503, 3659, 1131, -1000, 3345, 115238, -1000, 115238, -1000,
	-1000, -1000, 115238, 115238, 94488, 115238, -1000, 72515, 3058, -164,
	128240, -42, -1000, 859, -1000, 1401, -1000, 20820, 115238, 72515,
	94488, 115238, 72515, 94488, 3073, 115238, 2139, -1000, -1000, 3034,
	-1000, 3056, -170, 25301, -1000, 3604, 3602, 3069, 3344, -1000,
	115238, 3592, 115238, 94488, 3261, -1000, -1000, -1000, -1000, -1000,
	1642, 1188, 1182, 2308, -43, 2307, 2237, -45, 992, -46,
	597, -1000, 848, -1000, -1000, 847, -1000, 992, -1000, 77539,
	59898, 3658, 527, -1000, 2730, -1000, 99373, 2213, 123, -1000,
	3656, 102118, 594, -1000, 2223, -1000, 779, -1000, 2512, 72515,
	2317, 123, 94488, -1000, -1000, 527, 356, -47, -1000, 3113,
	1071, 25301, 94488, 3067, 2556, 836, 78637, -1000, 1208, 2639,
	-1000, -54, -1000, 556, 123, 2217, -1000, -59, 128240, -1000,
	846, -1000, -171, -1000, -1000, 354, -1000, 3260, 3256, -1000,
	2851, 57131, 593, 592, 115238, 3255, -1000, -1000, -173, 2218,
	2218, 77539, 59898, 77539, -1000, 993, 894, -1000, 2349, -1000,
	-1000, -1000, -1000, -1000, 25301, 1688, -1000, 591, 589, -1000,
	-1000, -1000, -1000, 3320, 8912, 8912, 48650, 48650, 48650, 8912,
	9873, -186, -1000, 8912, 8912, -184, -1000, -1000, 126990, -1000,
	-1000, -1000, 128240, -1000, 20260, 2085, -1000, 124324, -1000, 32858,
	-1000, -1000, 48650, 48650, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 52682, 2872, 585, 69775, -1000, -1000, 350, 1010,
	48650, 50378, 2504, 1010, 1010, -1000, -189, -1000, -1000, -1000,
	3517, 5, -1000, -1000, 3655, 25301, -1000, 77539, -1000, -1000,
	3654, -187, 798, -1000, 3653, -1000, -1000, 105, -1000, -1000,
	-1000, 2784, 3462, -1000, 1899, -1000, 115238, -1000, 115238, -1000,
	25301, 115238, 2859, 1277, -1000, 968, 2592, 584, 52682, 94488,
	934, -1000, 3484, 2835, -191, -1000, 115238, 48650, 115238, -194,
	-196, 2385, -1000, -1000, 1262, 48650, -1000, -1000, -1000, 69775,
	567, 2235, 2235, -197, -199, -1000, -1000, -1000, 48650, 1181,
	115238, 34010, -1000, 3648, 3305, -1000, -1000, -1000, -1000, -1000,
	-1000, 115238, -1000, 115238, -1000, 48650, 1173, -1000, -1000, -1000,
	3587, 2235, 25301, 2235, -1000, 2235, 3344, 1129, 115238, 72515,
	94488, 1728, 1728, 2863, -1000, 2483, 2483, 77539, 59898, -1000,
	-60, 992, -1000, 3459, 2742, 3640, -1000, -1000, -1000, -1000,
	2582, -1000, -1000, 115238, 2581, 987, -1000, -206, -1000, 844,
	842, 79721, 969, 951, -1000, -74, 566, -1000, 841, -1000,
	-1000, -1000, -1000, 527, 3452, -1000, 3582, 565, 564, 115238,
	2306, 562, 25301, 3301, 836, 78637, -1000, 3158, 1835, -1000,
	2395, 115238, 3295, -1000, 2639, 561, -1000, 985, 560, 559,
	2608, 2608, -207, 57131, 57131, -212, 558, 985, -1000, -214,
	-1000, -1000, -1000, -1000, -1000, -80, -1000, 882, 740, -1000,
	-1000, 94488, 94488, 48650, 48650, -1000, 8912, 8912, 8912, -1000,
	347, -1000, -1000, 2217, 3374, -1000, -85, 124050, 123952, 7517,
	52682, 69775, -217, -1000, -1000, 115238, 128240, -86, -1000, 128240,
	557, 555, 484, -1000, -1000, -1000, 615, -1000, -1000, -1000,
	115238, 3637, -1000, 115238, 102660, 115238, -1000, -1000, 1628, -1000,
	-1000, -1000, 115238, 2392, -1000, -1000, -1000, 1080, 48650, 2535,
	554, 48650, -1000, 3451, -1000, 2726, 2901, 1867, 57131, -1000,
	3320, -1000, 123678, -1000, 1069, 1950, -1000, -1000, -1000, 128240,
	3344, 57131, -1000, -1000, 553, 552, 128240, 551, 839, 2871,
	-1000, -1000, -1000, -1000, -1000, 128240, 550, 3427, -1000, -1000,
	-1000, -1000, 2235, 94488, -1000, -1000, -1000, 1166, -1000, -1000,
	-1000, -1000, 3636, 3634, 2868, 84099, -1000, -220, -1000, -1000,
	1955, 123, 2081, 2778, -1000, 2213, 544, -1000, -1000, 2238,
	2652, -1000, 102118, 33434, 33434, 345, 3447, 951, -1000, 3544,
	-1000, 3230, 3230, 48650, 3443, 123, -1000, 3580, 57131, -1000,
	94488, 57131, 2303, 1993, 2537, 78637, -1000, 2553, -1000, -1000,
	-222, 115238, 1835, -1000, -1000, 77539, 77539, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1069, -223,
	-225, -1000, 77539, -1000, -1000, 2349, -1000, 115238, -1000, 115238,
	-1000, -1000, -230, -233, -1000, 2078, 48650, 32858, -1000, -1000,
	7517, -238, -1000, -176, -1000, 3441, 50378, 3631, 3630, 3629,
	-1000, -235, -1000, -235, -1000, 1898, -1000, -1000, -1000, 3066,
	2819, 123580, 2507, 115238, 123306, -1000, 2877, -1000, -1000, 2742,
	540, -1000, -1000, -1000, -1000, 910, 115238, 2742, 2817, 94488,
	1078, -239, 2082, 2082, 48650, 32282, 2134, 48650, -1000, -1000,
	3344, 115238, -1000, -1000, 115238, 2301, -1000, 2853, 3550, -1000,
	969, -1000, 2111, 115238, -1000, 3335, -1000, 3254, -1000, -1000,
	-1000, 2730, 123, -1000, -1000, -1000, -245, 128240, 123, -1000,
	320, -246, 1071, -247, 94488, 1944, -1000, 836, -1000, 2556,
	1014, -1000, -1000, -248, -253, 1867, 1069, 2063, -254, -1000,
	-255, -256, -1000, -1000, 319, 49802, 49802, 49802, -184, -213,
	-1000, 115238, 530, -1000, -1000, -1000, -1000, -1000, 3031, 991,
	-1000, 2290, 1831, 9, 1092, -1000, -1000, 2063, 115238, -1000,
	-1000, -1000, 990, 527, -1000, 48650, 1069, -262, -1000, 1047,
	-263, -1000, 1045, -268, -1000, 2867, -1000, -270, 2235, -264,
	218, 1728, 989, 3417, -1000, -1000, -1000, 2238, 94488, -271,
	-1000, -1000, 2431, -1000, 2742, 987, -1000, -1000, -1000, 1069,
	526, 1867, 513, 1449, 836, -1000, -1000, 1422, 3301, 3206,
	985, 985, 2742, 1867, 981, -1000, 985, -1000, -1000, -1000,
	3101, -1000, 53800, 2198, 1800, 126184, 3101, 3101, -1000, -1000,
	115238, 3395, -1000, 2295, 2291, 1514, -1000, -1000, -1000, -1000,
	-1000, -1000, 2835, -273, 3394, 2507, 128240, 2742, -1000, 2082,
	2777, -1000, 2082, 2861, -1000, 2033, -1000, -1000, -1000, 2836,
	-1000, 2858, -1000, 1750, 3511, 2520, 512, -1000, 115238, 1781,
	1771, 3628, 2081, 2238, 1867, 57131, 2742, 57131, -1000, -1000,
	115238, -1000, 1993, 1319, -1000, -1000, 2063, 2742, 1014, 511,
	-1000, -1000, 1624, 3463, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 834, -1000, 3229, -1000, 1115, 2177, 2177, 1014,
	-1000, 829, 2290, -1000, -1000, 510, -1000, 508, -1000, 2228,
	115238, 2215, -1000, -1000, -1000, -1000, 115238, -1000, -1000, 3584,
	-1000, 969, -1000, 2742, -276, 2063, -278, -1000, -235, 1944,
	-1000, 1567, 981, 2063, -1000, 1791, -1000, -1000, 2192, 49226,
	48650, -1000, 3497, -1000, -1000, 2586, -1000, -1000, 48650, 2835,
	48650, 48650, -1000, 218, 64326, -279, -1000, 2238, 2063, 1069,
	981, 1867, 1449, 65957, 1014, 981, -1000, -1000, -1000, 128240,
	-1000, -1000, -1000, 128240, -1000, -281, -287, -1000, -299, 101569,
	2234, 2520, 981, 1867, 1014, 2742, -1000, -265, -1000, 1014,
	2063, 1149, -304, -1000, -1000, -1000, -1000, 1014, 2742, -1000,
	2063, -1000, -1000, -1000, -1000, 505, -1000, -1000, 2063, 981,
	48650, 981, 1014, -305, 1014, -1000, 2063, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4466, 4463, 4456, 4448, 4443, 4439, 4434, 4431, 4430,
	4429, 4428, 4427, 4426, 4425, 4424, 4422, 4418, 4416, 4414,
	4413, 4412, 4411, 4410, 4409, 4408, 4405, 4404, 4401, 4400,
	4399, 4398, 4395, 4394, 4393, 4391, 4390, 4387, 4381, 4377,
	4376, 4373, 4371, 4368, 4365, 4364, 4361, 4358, 4357, 4355,
	4354, 4352, 4351, 4349, 4348, 4347, 4345, 4344, 4343, 4342,
	4341, 4340, 4338, 4333, 54, 4326, 4325, 4324, 4323, 4321,
	4319, 4316, 4315, 4314, 4313, 4312, 4311, 4307, 4306, 4305,
	4303, 4300, 4297, 4294, 4292, 62, 4291, 268, 4288, 4286,
	4282, 4280, 4278, 4276, 4274, 4269, 4263, 4259, 4258, 4255,
	265, 4249, 124, 163, 4239, 4238, 3792, 4236, 4235, 264,
	4230, 4229, 4227, 4222, 274, 4221, 4212, 4210, 4209, 4207,
	4204, 4202, 4200, 4198, 4196, 4195, 95, 204, 4194, 4192,
	2782, 4191, 4190, 4188, 4187, 4186, 4185, 4184, 4183, 4182,
	4181, 245, 4180, 263, 4178, 4177, 4176, 4175, 4174, 4172,
	4170, 4169, 4166, 4165, 4164, 4163, 4162, 4161, 4157, 4155,
	4154, 4146, 4144, 4142, 4138, 4137, 4135, 4131, 4130, 4129,
	4128, 4127, 4126, 4125, 4124, 4123, 4121, 4118, 4117, 4114,
	4113, 4111, 240, 267, 191, 4109, 4107, 261, 259, 4105,
	4103, 4102, 4101, 4099, 126, 10, 32, 4097, 4096, 146,
	86, 91, 93, 104, 96, 4094, 108, 4092, 115, 63,
	4091, 16, 2, 222, 242, 10147, 236, 4090, 4088, 4087,
	248, 193, 4086, 232, 4085, 4084, 4083, 4082, 4080, 69,
	46, 179, 175, 172, 167, 3, 4078, 158, 107, 82,
	56, 43, 13, 85, 206, 24, 4077, 252, 8, 139,
	5, 38, 4076, 4075, 4071, 4066, 3483, 136, 4065, 257,
	233, 166, 4064, 4062, 4061, 279, 4060, 4057, 58, 4055,
	100, 80, 129, 15, 121, 4054, 147, 34, 4053, 160,
	55, 4052, 159, 94, 90, 9930, 10567, 4051, 4049, 103,
	71, 150, 2565, 197, 196, 198, 98, 161, 168, 122,
	215, 212, 173, 60, 4048, 247, 4043, 3458, 77, 181,
	155, 5862, 4038, 4037, 4032, 83, 194, 97, 4031, 4030,
	76, 11, 20, 1, 9, 141, 21, 25, 22, 4029,
	30, 117, 47, 27, 4028, 33, 4025, 4016, 4014, 4013,
	4011, 49, 164, 4009, 4005, 273, 4004, 99, 51, 28,
	4002, 174, 207, 4000, 226, 144, 3995, 3987, 250, 202,
	180, 3986, 73, 229, 3984, 3983, 3982, 3981, 3980, 134,
	6, 133, 3979, 3978, 149, 3976, 48, 243, 195, 3971,
	68, 3970, 3969, 170, 106, 137, 270, 130, 224, 114,
	228, 183, 230, 3968, 3967, 3966, 219, 3965, 3964, 218,
	151, 3963, 3961, 239, 275, 87, 45, 81, 238, 78,
	189, 157, 3960, 200, 3959, 3955, 269, 184, 208, 14,
	4, 102, 128, 3954, 7, 234, 156, 223, 113, 3951,
	6856, 2239, 2456, 3949, 3948, 140, 118, 79, 119, 154,
	254, 116, 3943, 3940, 2675, 3939, 3938, 3936, 3935, 186,
	3931, 3930, 3929, 143, 169, 185, 3928, 92, 74, 52,
	23, 148, 246, 258, 111, 217, 176, 249, 3923, 3921,
	3919, 188, 3917, 72, 123, 171, 199, 241, 57, 3916,
	127, 3915, 153, 787, 59, 152, 3914, 213, 3913, 3912,
	3911, 3908, 3907, 3906, 3904, 631, 231, 3902, 3899, 3898,
	37, 187, 3896, 253, 412, 192, 109, 67, 3893, 105,
	3446, 3892, 221, 2734, 66, 255, 303, 256, 3890, 1979,
	53, 3887, 0, 14162, 8935, 12320, 13405, 3885, 5058, 3883,
	3881, 3880, 216, 145, 3877, 3873, 3871, 112, 3863, 84,
	3860, 3859, 70, 3858, 29, 19, 17, 35, 31, 178,
	142, 3857, 3856, 110, 135, 131, 3854, 266, 227, 3852,
	3851, 3849, 3847, 88, 3846, 44, 3845, 42, 3843, 3840,
	50, 18, 36, 3837, 3836, 201, 3835, 211, 244, 3834,
	165, 3831, 65, 138, 3830, 3829, 3827, 64, 61, 251,
	89, 3826, 280, 3825, 220, 3824, 3823, 26, 3822, 3820,
	237, 3817, 3813, 3812, 3811, 3810, 40, 205, 177, 209,
	3809, 3806, 162, 3805, 3804, 3803, 277, 3802, 3801, 39,
	3800, 12, 3799, 3798, 203, 3255, 3796, 3795, 41, 3794,
	182,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 49, 49, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 36, 31, 31, 32, 32,
	33, 34, 34, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 17, 17, 37, 37, 18, 18,
	39, 39, 19, 19, 40, 40, 589, 589, 607, 607,
	22, 22, 42, 42, 23, 43, 16, 590, 590, 590,
	590, 35, 24, 44, 28, 28, 28, 28, 28, 197,
	197, 197, 197, 21, 21, 38, 38, 232, 232, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 585, 585, 234, 234, 233,
	227, 227, 228, 228, 591, 591, 235, 235, 235, 237,
	237, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 484, 484, 484, 517, 517, 516, 516, 516, 515,
	515, 611, 611, 612, 612, 612, 612, 612, 129, 129,
	382, 382, 382, 53, 53, 53, 53, 53, 580, 580,
	199, 199, 199, 201, 201, 200, 200, 200, 200, 200,
	76, 76, 596, 596, 597, 597, 595, 598, 598, 598,
	198, 198, 198, 125, 125, 125, 125, 125, 125, 126,
	126, 127, 127, 202, 202, 202, 204, 204, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 208, 15, 15,
	15, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	105, 105, 519, 519, 520, 520, 193, 193, 194, 194,
	194, 194, 195, 195, 196, 196, 196, 67, 67, 205,
	205, 207, 207, 206, 206, 206, 206, 206, 55, 55,
	55, 55, 55, 55, 55, 56, 56, 56, 56, 56,
	57, 57, 57, 57, 57, 57, 58, 58, 58, 58,
	58, 58, 65, 65, 65, 65, 65, 184, 184, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 73, 73, 73, 73, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 614, 614, 615, 615, 616,
	616, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 82, 82, 343,
	343, 306, 306, 83, 83, 83, 84, 84, 85, 85,
	69, 69, 578, 578, 359, 359, 475, 475, 70, 586,
	586, 586, 588, 588, 587, 587, 87, 87, 381, 381,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 97, 97, 97,
	97, 97, 98, 98, 98, 95, 95, 95, 92, 92,
	92, 91, 91, 91, 96, 96, 96, 577, 295, 295,
	94, 94, 94, 93, 93, 93, 360, 360, 99, 99,
	99, 99, 307, 100, 100, 100, 100, 100, 100, 100,
	100, 103, 103, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 477, 477, 101, 101,
	101, 442, 442, 106, 106, 106, 397, 397, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 128, 128, 128, 128, 128, 128, 128, 128,
	582, 582, 352, 352, 259, 259, 259, 259, 118, 118,
	118, 118, 119, 119, 119, 120, 120, 189, 189, 135,
	135, 135, 135, 135, 134, 134, 134, 134, 134, 134,
	59, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 64, 64, 64, 137, 137, 608, 608,
	139, 136, 136, 136, 138, 138, 138, 138, 140, 141,
	141, 141, 141, 141, 141, 141, 141, 142, 142, 509,
	509, 368, 368, 507, 507, 529, 529, 508, 508, 313,
	313, 313, 313, 313, 314, 314, 314, 518, 518, 518,
	518, 518, 518, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 190, 190, 191, 192, 192, 192,
	192, 192, 167, 167, 167, 183, 183, 183, 183, 183,
	183, 183, 170, 170, 170, 154, 154, 144, 144, 144,
	144, 144, 144, 144, 149, 149, 149, 149, 149, 149,
	149, 149, 145, 145, 156, 156, 156, 156, 156, 150,
	150, 151, 151, 151, 151, 177, 177, 153, 153, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 146, 146,
	146, 146, 158, 158, 158, 158, 404, 404, 404, 182,
	182, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 180, 180, 180,
	180, 180, 180, 599, 599, 600, 600, 174, 174, 174,
	174, 174, 174, 456, 456, 168, 168, 168, 168, 173,
	173, 173, 173, 176, 176, 176, 176, 387, 387, 165,
	165, 165, 166, 166, 166, 171, 171, 172, 344, 344,
	169, 169, 175, 175, 175, 175, 147, 147, 147, 147,
	147, 147, 147, 148, 148, 148, 148, 178, 178, 164,
	164, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 618, 618, 160, 160, 160, 159, 159, 159,
	159, 162, 162, 163, 163, 163, 163, 163, 163, 161,
	152, 181, 579, 579, 575, 575, 575, 575, 575, 575,
	575, 575, 576, 576, 576, 576, 581, 581, 111, 111,
	111, 111, 111, 121, 121, 121, 121, 121, 112, 112,
	112, 112, 112, 114, 114, 113, 113, 113, 113, 77,
	77, 77, 77, 77, 14, 14, 14, 78, 78, 250,
	250, 211, 211, 211, 332, 332, 212, 212, 321, 321,
	321, 321, 209, 209, 210, 210, 79, 79, 619, 619,
	619, 592, 592, 592, 593, 593, 593, 593, 593, 593,
	315, 315, 316, 316, 422, 422, 422, 422, 422, 319,
	319, 319, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 236, 236, 236, 330, 331, 331, 323,
	323, 329, 328, 328, 327, 327, 326, 326, 324, 325,
	325, 325, 334, 334, 333, 336, 336, 335, 421, 538,
	538, 540, 540, 540, 540, 540, 540, 540, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	405, 405, 620, 620, 536, 536, 536, 537, 532, 532,
	533, 533, 533, 533, 533, 317, 317, 318, 318, 318,
	318, 534, 535, 350, 350, 460, 539, 539, 541, 541,
	543, 621, 621, 621, 621, 621, 621, 622, 622, 622,
	420, 420, 419, 419, 341, 341, 544, 544, 544, 544,
	545, 545, 545, 545, 545, 548, 547, 546, 546, 546,
	546, 546, 81, 81, 81, 384, 384, 383, 383, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 186, 186, 262, 262, 75, 75,
	75, 12, 12, 12, 594, 594, 594, 80, 80, 80,
	80, 80, 80, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 584, 584, 583, 583, 263, 263, 624,
	624, 86, 86, 86, 86, 86, 86, 86, 86, 478,
	478, 479, 479, 74, 74, 74, 74, 74, 406, 406,
	403, 403, 402, 402, 349, 349, 458, 458, 458, 459,
	267, 267, 268, 268, 229, 229, 229, 30, 29, 20,
	20, 25, 25, 26, 26, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 27, 27, 46, 46, 46, 46,
	47, 47, 47, 47, 50, 50, 51, 51, 45, 45,
	45, 45, 48, 48, 41, 41, 52, 52, 52, 601,
	603, 603, 602, 602, 606, 606, 606, 606, 606, 606,
	604, 604, 605, 605, 609, 609, 610, 610, 117, 117,
	122, 122, 122, 122, 122, 123, 123, 123, 123, 124,
	124, 124, 124, 133, 133, 185, 185, 185, 185, 185,
	185, 185, 54, 54, 54, 54, 66, 66, 66, 66,
	131, 626, 626, 626, 132, 132, 132, 625, 625, 260,
	260, 416, 416, 417, 417, 627, 627, 418, 418, 418,
	418, 418, 253, 252, 254, 254, 255, 255, 72, 72,
	72, 245, 245, 244, 242, 242, 521, 521, 247, 247,
	247, 248, 248, 238, 238, 239, 239, 240, 240, 241,
	241, 251, 251, 628, 628, 109, 109, 109, 188, 188,
	305, 305, 305, 413, 413, 413, 342, 342, 274, 274,
	415, 415, 415, 415, 380, 380, 380, 187, 187, 357,
	357, 370, 370, 371, 371, 472, 472, 372, 115, 115,
	116, 116, 130, 130, 215, 215, 213, 213, 213, 213,
	213, 213, 213, 213, 220, 220, 221, 221, 222, 222,
	223, 224, 224, 224, 224, 361, 361, 225, 225, 225,
	214, 214, 214, 216, 216, 216, 216, 216, 216, 216,
	219, 219, 219, 219, 226, 226, 226, 218, 218, 555,
	555, 555, 557, 557, 559, 559, 558, 558, 554, 554,
	556, 556, 623, 623, 386, 386, 386, 339, 340, 337,
	337, 338, 338, 347, 347, 345, 346, 346, 348, 348,
	457, 457, 457, 230, 230, 230, 377, 377, 377, 377,
	378, 378, 409, 409, 407, 407, 407, 407, 408, 408,
	410, 410, 410, 411, 411, 412, 412, 374, 374, 375,
	375, 376, 376, 376, 376, 438, 438, 217, 217, 217,
	354, 354, 354, 355, 355, 428, 428, 428, 428, 428,
	428, 429, 429, 427, 427, 427, 427, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 462, 463, 463, 356,
	356, 464, 414, 414, 573, 573, 573, 574, 574, 455,
	455, 465, 465, 465, 465, 465, 465, 453, 453, 454,
	454, 473, 474, 474, 390, 390, 390, 390, 388, 388,
	391, 391, 391, 391, 391, 389, 389, 466, 466, 466,
	466, 379, 379, 467, 467, 467, 467, 468, 469, 469,
	470, 470, 423, 424, 424, 480, 480, 480, 480, 482,
	353, 353, 353, 353, 353, 531, 530, 530, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 497,
	497, 497, 497, 497, 497, 497, 483, 483, 483, 483,
	483, 487, 487, 487, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 488, 488, 493, 493, 494,
	494, 494, 489, 490, 495, 495, 495, 495, 629, 629,
	499, 499, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 485, 485, 485, 492, 492, 492, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	398, 398, 400, 400, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 432, 432, 432, 432, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 549, 549, 549, 549, 549, 549,
	549, 549, 434, 434, 552, 552, 553, 553, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 560, 560, 561,
	561, 563, 563, 564, 564, 565, 566, 566, 566, 567,
	568, 568, 562, 562, 569, 569, 569, 569, 570, 570,
	571, 571, 571, 571, 571, 572, 572, 572, 572, 572,
	444, 444, 445, 445, 451, 451, 451, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 312, 312, 311, 264, 264, 264, 264, 264,
	264, 366, 366, 364, 364, 364, 367, 367, 365, 365,
	363, 363, 362, 362, 441, 441, 439, 439, 443, 443,
	392, 392, 498, 498, 498, 498, 498, 498, 498, 498,
	393, 393, 393, 401, 394, 394, 395, 395, 395, 395,
	395, 435, 436, 396, 396, 396, 437, 437, 446, 450,
	450, 449, 448, 448, 447, 447, 425, 425, 426, 426,
	373, 373, 630, 630, 369, 369, 471, 471, 471, 471,
	309, 309, 358, 358, 308, 308, 300, 300, 301, 301,
	301, 301, 351, 351, 452, 452, 500, 500, 501, 501,
	502, 502, 503, 503, 504, 505, 506, 440, 440, 284,
	283, 271, 272, 282, 281, 280, 270, 273, 277, 278,
	279, 275, 276, 291, 290, 289, 243, 246, 296, 297,
	297, 299, 299, 298, 298, 286, 287, 288, 476, 269,
	302, 302, 303, 303, 303, 304, 304, 304, 304, 265,
	265, 266, 266, 292, 292, 293, 294, 294, 285, 285,
	285, 256, 256, 256, 257, 257, 258, 258, 514, 514,
	511, 511, 511, 512, 512, 512, 513, 513, 513, 513,
	510, 510, 510, 510, 510, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 523, 523,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 525, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	528, 528,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 9, 6, 8,
	4, 4, 5, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 1, 0,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 1,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 7, 6, 8, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 2, 8, 4, 2, 5, 5, 5, 2,
	2, 0, 1, 3, 11, 12, 9, 5, 3, 1,
	5, 10, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 590, -102, -99, -67, -65, -106, -107,
	-88, -108, -101, -128, -133, -115, -116, -117, -129, -135,
	-185, -190, -191, -192, -3, -53, -55, -68, -87, -89,
	-100, -110, -109, -111, -118, -125, -121, -105, -59, -130,
	-134, -143, -186, -187, -188, 32, 31, 100, 80, 154,
	128, 137, 202, 382, 424, 436, 396, 142, 416, 401,
	-138, -139, 454, -54, -66, -132, -131, 73, 129, 410,
	-4, -12, -15, 29, 46, -56, -57, -58, 62, -75,
	-71, -82, -76, -69, -70, -73, -613, 102, -556, -90,
	-93, -124, -617, 161, 220, -112, -113, 365, -119, -120,
	418, -122, -123, 420, 162, -61, -60, 156, -213, -215,
	-136, -137, -189, -144, -145, -146, -147, -148, -149, -150,
	-151, -177, -152, -153, -154, -155, -156, -157, -161, -180,
	-158, -159, -160, -163, -162, -164, -169, -165, -166, -167,
	-168, -170, -171, -173, -174, -175, -176, -178, -179, 459,
	-172, -181, 520, 49, 474, 82, 146, 428, 21, -5,
	-6, -7, -8, -9, -10, -11, -14, -13, -52, -72,
	-74, -77, -78, -79, -86, -80, -81, -555, -91, -92,
	-95, -97, -98, -94, -96, 417, -216, -214, 587, 535,
	-17, -22, -23, -18, -19, -21, -24, -20, -25, -26,
	-27, -37, -42, -43, -39, -40, -38, -41, -44, -45,
	-46, -47, -48, -49, -50, -51, -29, -35, -36, -30,
	-31, -32, -33, -34, -16, -28, 556, 565, -219, -217,
	-218, -226, 446, 543, 494, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, -307, 2, -286,
	-292, -293, -294, -285, -256, -525, -528, 4, -522, -526,
	168, 230, 329, 21, 23, 22, 24, 25, 26, 27,
	29, 30, 41, 42, 44, 45, 46, 47, 48, 49,
	53, 55, 59, 60, 61, 62, 63, 64, 68, 73,
	74, 79, 80, 81, 82, 83, 84, 85, 91, 88,
	89, 90, 92, 94, 96, 97, 98, 99, 100, 101,
	103, 104, 105, 107, 108, 109, 117, 118, 119, 120,
	121, 123, 128, 129, 132, 127, 131, 133, 135, 136,
	137, 140, 141, 142, 144, 145, 147, 148, 149, 151,
	152, 154, 155, 156, 159, 157, 502, 158, 160, 161,
	162, 163, 166, 174, 175, 176, 181, 183, 184, 188,
	189, 190, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 203, 207, 209, 210, 211, 212, 213, 219, 220,
	222, 223, 224, 225, 226, 231, 232, 233, 237, 234,
	243, 244, 248, 249, 250, 252, 256, 257, 258, 259,
	260, 261, 263, 265, 264, 267, 270, 271, 274, 278,
	279, 283, 284, 280, 285, 286, 288, 289, 292, 290,
	293, 294, 291, 295, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 296, 311, 309, 313,
	314, 315, 327, 324, 319, 320, 316, 321, 317, 318,
	322, 323, 326, 331, 332, 335, 217, 337, 338, 341,
	359, 345, 346, 347, 350, 351, 354, 357, 358, 360,
	361, 362, 363, 364, 365, 366, 367, 369, 370, 372,
	373, 374, 376, 377, 378, 380, 382, 383, 385, 386,
	388, 389, 390, 391, 392, 393, 394, 396, 398, 397,
	399, 401, 403, 404, 405, 410, 416, 412, 413, 414,
	415, 417, 418, 419, 420, 422, 423, 424, 426, 427,
	428, 429, 430, 432, 434, 435, 439, 440, 456, 457,
	476, 436, 437, 438, 441, 442, 443, 444, 445, 449,
	447, 448, 450, 451, 452, 454, 455, 458, 459, 461,
	462, 463, 464, 465, 466, 467, 470, 472, 473, 474,
	493, 475, 477, 481, 482, 483, 484, 478, 479, 492,
	486, 487, 489, 490, 495, 496, 497, 498, 499, 500,
	501, 503, 505, 513, 514, 515, 517, 520, 521, 522,
	523, 511, 525, 526, 529, 530, 531, 534, 532, 533,
	535, 537, 540, 541, 542, 548, 547, 549, 552, 557,
	558, 560, 561, 562, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 124, 125, 153, 164, 165, 177,
	191, 192, 204, 206, 214, 215, 216, 238, 239, 241,
	246, 268, 334, 336, 352, 356, 371, 375, 379, 381,
	395, 431, 468, 480, 485, 506, 507, 508, 509, 516,
	518, 543, 544, 545, 550, 559, -307, 2, -286, 343,
	-279, 2, -256, -256, 382, 28, 2, 28, 370, 448,
	497, 499, 2, -582, -352, 2, 28, -259, -256, 102,
	202, 446, -279, 2, -582, -352, 25, 2, -256, 2,
	357, 22, 27, 66, 77, 98, 140, 163, 185, 188,
	-616, 359, 389, 434, 450, 492, 503, 517, 2, 547,
	289, 447, 494, 230, 120, 522, 441, -594, 439, 440,
	357, 387, 426, 205, 536, -260, 2, 436, -256, 289,
	2, 590, 94, 279, 74, 431, 451, -141, 514, -140,
	506, 441, -142, -509, 2, 311, -256, 590, 590, 590,
	28, -269, -256, 494, 230, 441, 120, 490, 590, 2,
	494, 362, 547, 447, 120, 392, 230, 522, 188, 140,
	27, 441, -594, 289, 126, -580, 2, -575, 4, -526,
	-522, -301, -300, 494, 500, 120, -294, -285, 580, -293,
	590, 590, 590, 2, 249, 250, 391, 390, 451, 452,
	590, 590, 590, 590, 439, 2, 163, 22, 27, 66,
	93, 98, 126, 185, 188, 348, -614, 359, 389, 450,
	492, 496, 503, 517, -593, 475, 68, 415, 441, -592,
	-594, 289, 522, 140, -402, 120, 279, 200, 530, 499,
	497, 528, 132, 237, 533, 532, 590, 590, -103, 2,
	587, 32, 31, -102, -106, 142, 454, -208, 494, 242,
	2, -256, 590, 590, 2, 249, 250, 439, 440, 590,
	590, 186, -575, 2, 590, 590, 2, 249, 250, 439,
	440, 242, 2, 68, 443, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	2, -183, 451, 475, 211, 47, 46, 74, 28, 388,
	79, 363, 121, 148, 523, 203, 230, 231, 257, 93,
	94, -404, 44, 250, 68, 249, 440, -599, 439, -456,
	495, 442, 448, 489, 261, 436, 514, 102, 537, 427,
	562, 392, 393, 487, 405, 280, 157, 187, 4, 120,
	311, 453, 506, 279, 435, 366, 84, -623, 2, 494,
	-625, 2, 514, 514, 2, -625, 2, -625, 2, -625,
	2, -626, 514, 559, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, -214, -216, -215, 590, 590, 590, 590, 590,
	590, 590, -183, 451, 2, 74, 28, -345, -347, 527,
	240, 150, 349, -213, -215, 2, -555, -507, 2, -430,
	-529, -432, 578, 579, 571, 491, 67, -311, 328, 563,
	-444, 126, 528, 343, -528, -433, -446, 153, 359, 431,
	-367, 8, 9, 5, 6, 7, -265, -434, -440, 519,
	167, 333, -304, 591, 10, 587, -552, -215, -445, 37,
	206, 65, -511, -303, -266, -483, 241, -302, -285, -549,
	-550, 4, -522, -523, -512, -486, -494, -490, -491, -497,
	-256, -525, 77, 111, 112, 110, 115, 114, 282, 281,
	116, 113, 453, 536, 66, 36, 214, 215, 246, 334,
	216, 75, -551, 141, -524, 238, 239, 468, 51, 395,
	177, 125, 124, 336, 56, 54, 544, -495, 122, 506,
	507, 508, 509, 191, 192, 58, 164, 165, 356, 379,
	485, 516, 518, 204, 268, 43, 106, 187, 236, 218,
	245, 247, 251, 269, 272, 312, 325, 330, 353, 355,
	425, 460, -629, 545, 480, 69, 70, -557, 397, -558,
	-279, -557, 590, 590, 592, 590, -337, -339, -340, 2,
	28, 138, 587, 2, -461, 2, -462, -466, -215, 262,
	-465, 587, -463, 585, -286, 344, -553, 432, -549, -550,
	-265, -285, -303, 4, -522, -524, 589, -341, 587, 120,
	494, 78, 230, 163, -397, 587, -256, 28, 343, 510,
	592, -338, 386, -442, 587, 343, 186, 346, 60, 293,
	2, 2, 2, 2, 2, 214, -256, 494, 119, 2,
	260, 2, 2, 2, 2, 2, 2, 2, -360, 214,
	2, -286, 547, -360, 214, 2, -360, 214, 2, -403,
	2, 87, -270, 214, 2, -256, -295, 214, 2, -290,
	-292, -299, 214, 2, -297, -256, -520, 214, 2, -519,
	-514, 10, -513, 5, 4, -522, -526, -523, -525, 77,
	-430, 2, -130, 2, 60, -256, 547, 2, 2, 456,
	2, 587, -141, 71, 514, 43, 451, -417, 2, -418,
	-252, -253, -254, -473, -255, 248, 385, 394, 566, 130,
	328, 562, -507, -608, 186, 570, 510, -507, -368, 589,
	2, 2, 2, 2, 2, 2, -466, 214, -286, 2,
	-283, -510, 4, -522, -526, -523, -527, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 328, 333, 339,
	343, 344, 348, 349, 368, 384, 400, 421, 446, 453,
	471, 488, 494, 504, 510, 512, 519, 527, 528, 536,
	538, 546, 551, 553, 554, 555, 556, -528, 2, -466,
	214, 2, -289, 214, -466, -292, 2, -270, 2, -282,
	-510, 2, -308, 214, -286, -288, -292, -290, 2, 2,
	2, 2, -297, 2, -519, 214, 2, 547, 386, 242,
	510, 592, -358, -300, -301, -506, 8, -351, -256, 589,
	-430, 2, -130, -114, 2, 182, -430, 214, 2, -130,
	214, 2, -430, 214, 2, -130, 214, 2, -596, 2,
	-519, 214, -256, 2, 293, 2, 2, 517, 2, 98,
	494, 119, 2, 414, -615, 434, 521, 2, 2, 2,
	2, 2, 2, 2, 494, -275, 2, -256, 182, 478,
	-297, 214, -298, 2, 447, -624, 397, -519, 214, 2,
	547, -290, 214, 2, -290, 230, 244, -270, 214, 2,
	499, 497, 499, 497, 186, 2, 242, 2, 242, 2,
	-467, 2, -468, -462, -469, 585, 344, -477, 2, -476,
	-513, 543, -103, 587, -103, 587, 451, 587, -519, -286,
	-286, -430, 2, -130, -114, 2, -430, 2, -130, 2,
	-127, -519, -126, 587, 186, -430, 2, -130, -114, 2,
	-430, 2, -130, 2, -208, 182, 2, 120, 494, -183,
	2, 182, 538, 2, 8, 2, 221, -519, 442, 393,
	174, 2, 456, 2, 457, 74, -404, 562, 74, 186,
	2, 186, 2, -387, 2, 556, 186, 2, 2, -579,
	2, 343, 186, 2, 186, 2, 186, 2, 186, 2,
	186, 2, -182, 452, 515, 493, 390, 250, 2, -130,
	553, -114, 250, 249, -430, 553, 2, -600, 182, 440,
	-430, 2, 513, 259, 158, 186, -387, 2, 186, 2,
	186, 2, 5, 2, 391, 476, 2, 248, 385, 476,
	2, -286, 494, 547, 447, 120, 28, 2, 439, 2,
	2, 88, 89, 186, 2, 186, 2, 201, 186, 2,
	186, 494, 562, 2, -379, -466, -416, -417, -416, 510,
	-345, -347, -183, 456, 2, -220, -377, -222, 182, -407,
	-408, -223, 273, 169, 339, -224, -386, 28, 138, -386,
	-386, 60, 588, 588, 11, 12, 76, 41, 578, 579,
	580, 581, 180, 582, 583, 576, 577, 575, 568, 569,
	573, 254, 255, 95, 572, 570, 86, 287, 433, 170,
	171, 172, 173, 411, 228, 34, 229, 14, 15, 16,
	-311, 33, 348, 272, 563, 218, 460, 571, 17, 18,
	19, 245, 247, 330, 50, 221, -264, 359, -310, 491,
	67, -430, -430, -430, -430, -430, -430, -430, -430, 355,
	587, -373, -425, 585, -215, 587, 587, 587, 587, -506,
	-215, -430, -444, 588, -365, 587, -215, -444, -439, 587,
	431, 585, 587, -447, -430, 5, 5, 5, 587, 589,
	-560, 557, 182, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 381, -488,
	587, -487, 587, -487, -487, 548, -485, 587, 565, 558,
	587, -485, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 548, 592, -557, -341, 587,
	-369, -471, -430, 580, -369, -369, 343, -362, -430, 106,
	-390, 251, 312, 187, 269, 425, 236, -427, 591, -427,
	-455, 565, -215, -463, -285, -215, -465, 587, -461, -455,
	-104, -506, -87, -100, -109, -130, -143, -187, -188, 580,
	-286, 587, 186, 587, 589, -510, 186, -351, -270, -286,
	-302, -303, -308, 2, 137, -362, -575, 522, 441, 28,
	447, -351, -259, 38, -441, -480, -481, -531, 591, -530,
	-483, -493, -489, -492, 371, 375, -512, 54, 544, -495,
	241, 4, -522, -524, 238, 239, 468, 51, 395, 177,
	125, 124, 336, 56, 506, 507, 508, 509, 191, 192,
	58, 545, 480, 69, 70, -575, 522, 441, 28, 447,
	-351, 182, -517, 2, -516, -515, 116, 453, -513, 5,
	2, 153, 2, 2, 2, -256, -235, 592, 64, 419,
	153, -360, 214, -235, 153, -235, 153, -309, 214, -308,
	-235, 153, -235, 592, 153, -235, 592, 153, 589, 592,
	153, -517, 2, -403, -509, -362, 38, -417, 2, 126,
	-515, -627, 592, 271, -314, 286, 327, 210, 344, 560,
	337, 130, -518, 5, 4, -440, -452, 126, 279, 241,
	-500, -502, 8, -501, 9, -503, 578, 579, -508, -507,
	109, 589, -510, -232, 412, 454, 358, -231, 24, 29,
	142, 232, 315, 541, 159, -327, 233, -324, 362, 153,
	472, 531, -589, -590, 438, 501, 502, 90, 337, 454,
	358, 412, 153, -383, -385, 38, 118, 315, 357, 61,
	225, 291, 292, 474, 550, 153, 454, 358, 412, 358,
	24, 142, -247, -244, 454, -590, 99, 412, 486, 384,
	-590, -234, 472, 531, -589, -590, 438, 412, -233, -329,
	-324, 362, 153, 591, 24, 142, 412, 454, 358, -611,
	-612, 29, 412, 358, -583, -554, 556, 153, -466, 214,
	-604, 2, 182, -597, -126, 263, 5, 10, -519, -126,
	-358, 592, 592, -510, 580, 440, 439, 153, 153, 153,
	153, 182, 328, 2, 2, 2, 2, 2, 188, -592,
	-616, 2, 2, -286, 214, -343, 343, -578, -359, 494,
	-286, 182, 328, 43, -289, 214, 2, -292, 547, -583,
	328, -291, 214, -286, 38, 587, 328, 2, -403, 2,
	230, -554, 328, -467, -305, -286, -462, -305, 454, -279,
	38, -427, -286, 588, 592, -477, -477, -519, -196, 556,
	186, 102, 587, 587, -208, -474, 592, -473, 221, -520,
	-127, -519, 415, -519, -578, -270, 2, -286, 2, 494,
	252, -519, -196, 221, -519, -519, -519, -509, 28, 457,
	2, -182, 452, 515, 89, 457, 2, -286, 494, 120,
	230, 80, -256, -581, 182, -576, 426, 441, 522, -575,
	-286, 120, -286, 120, -286, 120, -286, -286, 2, 2,
	2, 2, 2, 85, 2, -130, -430, 2, 85, 2,
	46, -600, 182, 2, 513, 2, 513, 2, -256, -256,
	-256, 475, 271, -286, -286, -286, -287, -292, 495, 440,
	-430, 2, -618, 2, 186, 182, 2, 494, 230, 494,
	230, 120, 186, 74, 120, 28, 494, 437, -235, 592,
	-260, -220, -377, -509, -378, -377, -221, -220, -223, 182,
	394, 532, 315, 458, 256, -408, -407, 28, -430, -412,
	176, 314, -430, -410, -432, 578, 579, -501, -503, -361,
	337, -214, -214, -214, -348, -457, -430, 384, 230, -482,
	-480, -480, -284, -510, 506, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, 272, 218, 460, 50, 221, -430, 510, -430, -430,
	-430, -430, 309, 328, 333, 519, 167, 529, 138, 337,
	-630, 488, 40, -437, -215, -366, 587, -451, 35, 471,
	28, -444, 587, 2, -425, -430, -426, -312, -310, -256,
	578, 579, 580, 581, 582, 583, 568, 569, 570, 14,
	15, 16, 573, 577, 575, 576, 180, 95, 572, 287,
	433, 86, 170, 171, 172, 173, 254, 255, 17, 18,
	19, 34, 571, -363, -362, -362, 588, 546, 28, 138,
	580, 2, 588, 592, 38, 588, -430, -363, -443, -439,
	-362, -450, -449, 553, -398, -399, 561, 296, 123, 212,
	294, -400, 445, -504, 8, -510, 580, -561, 175, 205,
	587, 588, 2, 588, 2, 588, -430, 2, 588, -430,
	2, 588, -430, 2, 588, -430, 2, 588, 2, -430,
	-430, -430, -430, -430, -430, -430, -362, 8, -504, -504,
	506, 506, -504, -504, -504, -496, 371, 372, 373, 374,
	274, 275, 276, 277, 375, 376, 377, 378, 301, 302,
	303, 304, 297, 298, 299, 300, 305, 306, 307, 308,
	196, 197, 198, 199, 192, 193, 194, 195, -496, -392,
	2, -498, -362, 4, 561, 296, 123, 212, 294, 445,
	5, -392, 2, -393, 2, -430, -362, -394, -431, -432,
	578, 579, 571, -311, -444, -395, 2, -430, -363, -430,
	57, 266, 512, -396, -430, 186, -362, -362, 2, -362,
	2, -558, 38, -362, -354, 592, 186, 38, 4, -354,
	-354, 587, 588, 592, -391, 209, 290, 285, 244, -391,
	-461, -390, 251, -388, 353, -388, -388, -455, -271, 585,
	593, -510, -455, -454, -453, 38, -279, 350, -455, -455,
	589, 588, -454, 586, -573, 587, 590, 590, 590, 590,
	590, -286, 587, -362, -510, 589, 477, 2, 588, 245,
	245, 245, 245, 432, 588, 510, -577, -295, -299, 495,
	2, 556, -102, 345, 588, 592, -353, 37, 585, 589,
	-504, 2, 2, -499, 548, 587, 587, -399, 587, 186,
	-577, -299, 495, 2, -352, 592, 510, -256, 2, -286,
	-360, -235, 153, -360, -360, -235, 592, 153, -270, -290,
	-295, -297, -299, -256, -519, -520, -235, -291, -608, 588,
	514, -418, -313, 394, 470, 413, 449, 490, 8, 9,
	8, 9, 592, -510, 592, -609, 93, 510, 78, 441,
	-249, 280, 510, -421, 214, 78, -532, -273, 93, -533,
	-256, 72, 528, 384, 185, 151, -609, 93, 384, -609,
	93, 2, 232, 93, 454, 475, 28, 60, -466, 41,
	41, 28, -607, 326, 267, 552, 186, 562, 494, 230,
	441, 510, 510, -466, -385, -480, 118, 291, 292, 60,
	-505, -500, 578, 579, -505, 60, -505, -505, -505, 556,
	-289, -466, 441, 510, 510, 510, 403, 403, -244, 510,
	510, -628, 570, 403, 592, 41, 41, 28, -607, 326,
	267, 186, 510, -308, -271, 542, 42, 542, 42, 542,
	510, 42, 441, 510, 592, 42, 510, 510, -584, -261,
	105, 321, 284, 322, 97, 318, 96, 317, 103, 319,
	104, 320, 549, 331, 63, 316, 295, 323, -262, -263,
	364, 540, -519, 454, 358, 412, 153, -605, 221, -594,
	221, -474, 221, -474, -300, -256, 589, -130, -430, -430,
	-130, -430, -130, 46, 153, 2, -624, 260, 587, -317,
	328, 186, -351, -475, 242, 592, -359, -575, 153, -516,
	-384, -383, 328, -291, 214, 2, 153, -341, 328, 147,
	587, 392, 2, 153, -272, 214, -257, -256, -403, -238,
	498, 153, -381, 538, -413, -130, 587, 126, 38, -413,
	-370, -371, -472, -372, -273, 587, -279, -427, -103, -476,
	588, 588, 588, -195, 347, -194, -256, 5, -208, 538,
	-316, -422, -421, -536, -537, -532, 272, 230, 528, 244,
	168, -342, -274, -273, 119, -202, 556, -126, -127, 588,
	-474, 221, 478, -196, -196, -474, -474, -286, 182, -519,
	-196, -196, -196, 2, 2, 2, 2, -387, -286, -270,
	-308, -286, 589, -351, -351, -299, -295, -387, -270, -387,
	-270, -387, -270, -130, -430, 2, 451, 182, 182, 589,
	-387, -344, 421, 2, 392, 120, 494, 362, 230, -286,
	-308, -286, -308, -270, 120, -270, 121, -286, -466, -378,
	-221, 344, 256, 458, -410, -411, -432, 431, 432, -411,
	431, 432, 8, 9, 8, 9, -225, 462, 332, -360,
	592, -229, 39, 134, 256, -286, 562, 149, -430, -430,
	510, -630, 488, -437, 149, -430, 309, 333, 519, 167,
	529, 138, 337, 186, 587, -431, -431, 588, -364, -430,
	-430, 586, 595, 588, 589, 588, -347, 592, -345, -430,
	-362, -362, 588, 589, -362, -351, 586, 586, 592, 588,
	-448, -449, 143, -430, 510, 510, 510, 510, 587, 588,
	589, -566, 354, 587, 587, -430, 588, 588, 588, 588,
	38, 592, 592, 592, 588, 592, 592, 592, 588, 588,
	588, 592, 588, 562, 562, 588, 588, 588, 588, 592,
	588, 592, 588, 186, 588, 588, -401, 368, 588, 11,
	12, 578, 579, 580, 581, 180, 582, 583, 576, 577,
	575, 568, 569, 570, 86, 287, 433, 14, 15, 16,
	-311, 245, 221, -431, -431, -431, -431, 588, -435, -436,
	186, 182, 38, -396, -396, -396, 588, 186, -362, 588,
	588, 587, -559, 289, 328, 588, -424, -423, 554, -471,
	-355, 2, -461, -281, -510, -424, -424, -362, -430, 251,
	251, -389, 538, 343, -391, -461, -454, -506, -429, -428,
	184, 39, 134, 324, 217, -454, -279, -341, -454, -454,
	-510, -455, -455, -453, 588, -574, -506, 588, -356, -464,
	-553, -347, 589, -510, -205, -554, -184, 5, 333, -184,
	-184, -184, -351, 510, 510, 221, 25, 369, -480, 585,
	586, 8, -510, 587, -504, -504, -504, -351, 186, 186,
	221, 186, -516, -516, 2, -235, -360, -235, -235, -308,
	-309, -235, -235, -235, -382, 556, -507, -417, 526, 83,
	394, 506, -507, -231, 412, -273, -273, -286, -296, -256,
	200, 404, -516, 328, -421, 214, -237, 328, -480, -280,
	-256, 587, -405, 558, 256, 256, 538, -273, -280, 256,
	214, -273, 214, -280, 2, -280, -585, 394, 338, -430,
	60, -325, 278, 392, 329, -232, 412, 454, 358, -130,
	-130, -130, -130, -130, 587, -608, 538, 137, -286, -308,
	-286, -296, -516, -291, 454, 358, 412, 325, -302, -505,
	-505, -383, 454, 358, 412, -296, -516, -289, -516, -243,
	214, -256, -243, 214, 441, -270, 403, 562, 45, -628,
	-233, -130, -130, -130, -130, -130, 587, -271, -234, 412,
	5, 214, -273, 5, -273, 214, 5, -256, -273, -296,
	-516, -612, 24, 142, -273, -296, -516, -261, -519, 333,
	534, -583, 441, 510, 510, -466, -601, -602, 202, 424,
	441, -351, -126, -199, 556, -126, -193, 226, 580, -580,
	-256, 547, -256, -315, -318, -316, -273, -211, -212, 558,
	556, 153, -306, -286, 585, -196, -519, -286, -475, -297,
	-298, 153, -341, 328, -519, 38, 153, 587, 2, 2,
	-290, 343, 328, -272, 214, -239, 144, -628, -270, -424,
	-355, -380, -415, 421, 343, -342, 543, -279, -380, -357,
	592, 186, 570, 589, -342, -470, 580, -103, -103, -196,
	592, 587, 570, 570, 587, -519, -519, 588, 592, -237,
	-286, -272, 230, 230, -278, -257, 588, 592, 589, 587,
	-204, 347, -203, 145, 258, 243, 464, 465, 466, 467,
	136, 463, -474, -202, -127, 186, 186, -62, 556, 494,
	-196, 591, -256, -387, -387, -387, 451, 451, -256, -351,
	-282, -270, -286, -283, -308, 182, 182, -270, 532, -411,
	344, 283, -457, -230, 564, -286, 591, -430, -430, 149,
	149, -430, -431, -431, -430, 149, 186, 587, -430, -441,
	33, 33, 588, 592, -426, -430, -310, 588, 546, -347,
	-347, 588, 580, -510, 591, 588, -439, 146, -430, 504,
	296, 212, 294, -400, 294, -400, -400, -504, 5, -510,
	580, -567, -276, 587, -256, 554, -346, 349, 588, -482,
	-480, -430, -430, -430, -430, -430, -504, -485, -485, -500,
	-500, -430, -435, -430, -482, -480, -431, -431, -431, -431,
	-431, -431, -431, -431, -431, -431, -431, -431, -431, -431,
	-431, -431, -431, -431, -431, -431, 138, 328, 337, -431,
	-436, -435, -430, -430, -480, 588, 588, 588, -362, -102,
	587, 289, -374, 205, -430, -474, 592, -374, -374, 588,
	-461, -461, 587, -430, 251, 586, 592, 594, 570, -341,
	589, -453, -454, 586, 588, 592, 588, 592, -414, 38,
	588, -510, -424, -207, -206, 135, 53, 107, 133, 333,
	-351, -351, 441, 346, 5, 8, 585, 586, 589, -504,
	588, 588, 588, -351, -351, 441, -351, -235, -235, 119,
	315, -430, 510, 510, 60, 221, 153, 328, 540, -538,
	-533, 151, -430, 587, 230, 587, 587, 2, -227, -228,
	142, 454, 24, -610, 2, 538, 153, -235, 153, -235,
	560, -325, 587, 587, 510, 441, -249, 510, 556, -362,
	-430, -197, 126, -509, -590, 591, -590, 591, 441, 510,
	510, 441, 510, 510, 328, 153, 556, 166, 166, 562,
	-243, 556, -362, 510, -484, 48, 26, 328, -290, -235,
	153, 510, 510, 522, 454, -519, 333, -296, -516, -291,
	454, 358, 412, -582, -352, -582, 202, -299, -474, -201,
	347, -200, 145, 423, 136, 258, 223, -474, -199, 186,
	242, 556, -291, 2, 588, 588, 592, -539, 38, 341,
	341, 587, -286, -83, 556, -473, -506, -586, 556, 43,
	-289, 38, 153, -583, -130, -291, -478, -479, 5, 38,
	-286, 153, 343, 328, -240, 265, -628, -514, -554, -347,
	-380, -369, 329, 91, 588, -424, -371, -355, -430, 2,
	588, -194, -195, -519, -519, -519, -196, -208, -208, -422,
	-319, 587, -272, -257, 587, -208, -274, 2, -520, 592,
	587, 570, 570, 570, -202, -474, -126, -130, 347, -286,
	580, -387, -331, -330, 362, 337, -331, 431, 431, 344,
	176, 261, -229, -271, -430, -430, 149, 33, 33, -430,
	-430, -441, 588, -430, -430, -362, 586, 5, -430, 588,
	588, 8, -430, 588, 589, -568, -256, -430, 588, 60,
	588, 588, 592, 592, 588, 588, 588, 588, 588, 588,
	588, -436, 186, 138, 337, 587, 588, 588, -102, -438,
	208, 60, -461, -438, -438, -389, -351, -461, -428, -271,
	585, -510, -506, -464, 587, 589, -206, 570, -519, -519,
	556, -299, 586, 2, 585, -510, 588, -299, 119, -273,
	-273, 494, 431, -243, 384, -421, 153, -540, 93, -542,
	76, 168, 102, 328, 333, 528, 384, 72, 126, 400,
	-620, 38, 567, 588, -349, -458, -553, 587, -256, -349,
	-351, 328, 483, 126, 328, 126, 551, 119, 2, 522,
	79, -273, -280, -351, -351, -286, -296, -516, 160, 588,
	592, 570, 2, 580, 580, -296, -516, -291, -296, -516,
	-289, 153, -243, 360, 166, 160, 588, -271, 5, 5,
	153, -268, 76, -273, 5, -273, -290, 119, 441, 510,
	510, 343, 343, 346, -199, 592, 587, 570, 570, -199,
	-520, -126, 2, -341, -332, 232, -273, -537, -534, -535,
	384, -541, -543, 168, 384, -130, 2, -210, -209, -256,
	5, 587, -317, 347, 586, -588, 347, -587, 117, 136,
	-516, -384, -130, -291, -341, 588, 592, 147, -406, 538,
	-271, -286, 153, -241, 264, -628, -514, -238, -409, -407,
	139, 587, 343, -130, -347, 570, 588, 588, 119, 119,
	224, 152, -349, 587, 587, -351, 119, 588, -203, -204,
	-519, -126, -519, -202, -474, -63, -64, 230, 93, 367,
	-283, 494, 230, 587, 587, -229, -430, -430, -430, 588,
	-347, -510, 580, -562, 362, 588, -457, -430, -430, -431,
	186, 587, -441, 588, -563, 555, -430, -375, -376, -430,
	429, 108, 206, -563, -563, 588, -506, 2, -519, 2,
	510, 585, 2, 186, 221, 38, 403, -421, -280, -284,
	-277, -256, 168, 214, 333, 551, -405, 256, 587, -431,
	-286, 587, 2, 30, -621, 130, 235, 588, 592, -459,
	-267, -256, -430, -459, 588, 588, 333, 333, 551, -430,
	-480, 587, -235, -235, 588, 588, -430, 510, -509, 100,
	-507, 2, -590, -243, -270, -430, 510, 5, -235, -284,
	-235, -235, -268, 522, -296, -516, -291, -606, 495, 448,
	523, 442, 189, 430, -606, 182, -200, -201, -519, -126,
	-199, 38, -322, 234, 2, -539, 256, -277, 256, -619,
	556, 588, 592, 570, 570, -315, -211, -84, -85, 511,
	-473, 592, 587, 570, -341, 38, 5, 587, 587, -256,
	343, 587, -271, -251, 92, -628, -514, -239, -380, 329,
	-351, 93, -409, -437, -196, 587, 587, -320, 81, 94,
	127, 213, 190, 231, 475, 481, 28, -320, 588, -349,
	-349, 588, 587, -196, 588, 592, 28, 587, 28, 587,
	-286, -308, -362, -362, 588, -347, 60, 592, 588, 588,
	-431, -441, 588, -564, -565, -276, 592, 587, 587, 455,
	586, -351, 2, -351, -243, 384, -256, -542, -277, 328,
	538, -430, -258, 587, -430, 38, 235, 131, 219, -420,
	-622, 101, 484, 222, -458, -229, 588, -419, 538, 400,
	-268, -349, 587, 587, 587, 570, 186, 587, -484, -235,
	-290, 510, 2, 2, 186, -582, 588, -595, 398, -130,
	-326, -327, 221, 587, -321, 343, 119, 315, -209, -507,
	-507, 588, 38, -85, 9, -587, -588, -430, 38, -130,
	-478, -349, -286, -349, 343, -245, -244, 273, -514, -240,
	588, -280, -380, -520, -520, -419, 588, 588, -520, -64,
	-351, -351, 588, 588, -569, 392, 432, 207, -362, -348,
	588, 592, 38, -376, 2, 2, 2, 403, 153, 209,
	588, -544, 288, -256, 588, 131, 219, -322, 587, -230,
	-459, -322, 209, -286, -591, 538, 588, -334, -333, -330,
	-336, -335, -330, -362, -507, 100, 360, -362, -268, -351,
	-351, 343, -598, 187, -597, 5, 10, -211, 360, -350,
	-460, -273, 82, 119, -332, -130, 588, -130, 588, 588,
	-406, 588, -286, -242, -521, 403, 405, -628, -241, -424,
	588, 588, -420, -419, -328, -324, 588, 588, 588, 588,
	-570, -571, 50, 525, 109, -430, -570, -570, -565, -567,
	168, 556, -545, -548, -547, 343, 461, 187, 361, 588,
	483, 550, -328, -351, 556, -341, -430, -419, 588, 592,
	543, 588, 592, 543, 588, 186, 588, -235, -603, 556,
	-235, -606, -198, 556, 46, -321, -286, 588, 592, 383,
	132, 142, -322, -619, -419, 587, -420, 587, -248, -247,
	-628, -500, -251, 139, -196, -196, -322, -420, -212, 556,
	-196, -572, 151, -571, 380, 181, 431, 380, 181, -572,
	-572, -277, 55, -547, 343, -548, 343, 532, 132, -621,
	588, 55, -544, -322, -333, 221, -335, 186, 360, 202,
	186, 439, -597, 30, -250, -249, 587, -460, 432, 432,
	2, -326, -321, -420, -349, -322, -349, -246, -351, -245,
	329, 532, -328, -322, -424, 109, 205, 505, 315, 33,
	570, -546, 315, 419, 64, 454, -546, -424, 570, -545,
	587, 587, 346, -351, 347, -351, 2, -211, -322, 588,
	-328, 588, -242, 454, -212, -328, 431, 351, -571, -430,
	23, 333, 126, -430, -621, -362, -362, -235, -195, 587,
	588, -321, -328, -419, -212, -420, -248, -370, -424, -212,
	588, 588, -195, -236, 64, 419, -250, -212, -420, -424,
	-322, -424, -424, -323, -324, 510, 588, -424, -322, -328,
	587, -328, -212, -362, -212, -424, 588, -424, -323,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 543, 544, 546, 547, 548, 550,
	551, 553, 555, 557, 558, 559, 561, 562, 564, 565,
	566, 567, 568, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	639, 641, 0, 1365, 1367, 1369, 1371, 0, 786, 0,
	36, 37, 39, 0, -2, 328, 330, 332, 0, 359,
	361, 362, 364, 366, 367, 368, 370, -2, 0, 476,
	477, 479, 481, -2, 0, 988, 990, 0, 628, 630,
	0, 993, 995, 0, 0, 650, 651, 0, 1472, -2,
	644, 646, 648, 713, 715, 717, 719, 721, 723, 725,
	727, 729, 731, 732, 734, 736, 738, 740, 742, 743,
	745, 747, 749, 750, 752, 753, 755, 757, 759, 761,
	763, 765, 767, 769, 771, 773, 775, 777, 779, -2,
	782, 783, -2, -2, 0, -2, -2, -2, 1383, 41,
	43, 45, 47, 49, 51, 53, 55, 57, 59, 420,
	422, 424, 426, 428, 431, 433, 435, 1530, 483, 485,
	487, 489, 491, 493, 495, 0, -2, 1544, 0, 0,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 105, 106, 107, 108, 109, 110, 111, 112, 75,
	76, 77, 79, 80, 81, 82, 86, 87, 88, 89,
	90, 91, 92, 93, 103, 73, 0, 0, 1503, 1505,
	1507, 1509, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 545, 549, 552,
	554, 556, 560, 563, 569, 571, 573, 528, 529, 532,
	2235, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2262, 2263,
	2708, 2790, 2791, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 530, 531, 1165, 0,
	597, 595, 2220, 598, 2508, 600, 602, 470, 471, 472,
	473, 474, 475, 0, 621, 611, 1542, 622, 624, 625,
	626, 627, 592, 590, 0, 621, 2289, 619, 1363, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 399, 1214, 1215, 1216, 1348, 1349, 2553, 1390, 0,
	229, 640, -2, -2, -2, 2673, -2, 672, -2, 679,
	2677, 2556, 684, 0, 686, -2, 689, 1366, 1368, 1370,
	784, 785, 2239, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 239, -2, -2,
	-2, -2, 0, 0, 2601, 2341, 2188, 2255, 2191, 2186,
	329, 331, 333, 334, 0, 0, 0, 0, 0, 0,
	360, 363, 365, 369, -2, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1049, 1041,
	1042, 1272, 0, 0, 0, -2, 478, 480, 533, 534,
	0, 1531, 1531, 541, 542, -2, 0, 0, 0, 0,
	299, 287, 989, 991, 992, 0, 0, 0, 0, 629,
	631, 0, 0, 268, 994, 996, 997, 0, 0, 0,
	0, 0, 301, 0, 0, 645, 647, 649, 714, 716,
	718, 720, 722, 724, 726, 728, 730, 733, 735, 737,
	739, 741, 744, 746, 748, 751, 754, 756, 758, 760,
	762, 764, 766, 768, 770, 772, 774, 776, 778, 780,
	781, 792, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 885, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 969, 0, 0, 795, 797,
	798, 799, 0, 858, 883, 884, 893, 0, 1205, 1532,
	1392, 1373, 1387, 1392, 1375, 1376, 1377, 1378, 1379, 1384,
	1386, 1380, 1381, 1382, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 421, 423, 425, 427, 429, 432,
	434, 436, -2, 1501, 1502, 484, 486, 488, 490, 492,
	494, 496, 632, 0, 634, 0, 796, -2, 0, 1536,
	1536, 1536, 0, 0, 1502, 1500, 0, 637, 638, 693,
	694, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 1892, 0, 695, -2, 1925, 1927, 2648, 2482, 2673,
	2061, 1929, 1930, 1931, 1932, 1933, 0, 1935, 1936, 1937,
	1938, 1939, 1940, 0, 1942, 0, 1947, 1948, 1949, 0,
	2655, 2165, 2249, -2, 0, 0, 2661, 2245, 0, 2028,
	1965, -2, -2, 2272, 2251, 1736, 1737, 1738, 1739, 1740,
	-2, -2, 2691, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 0, 2636, 2656, 2657, 2662, 2664,
	2658, 2645, 1990, 2354, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1763, 1772, -2,
	-2, -2, -2, -2, -2, -2, 2649, 2650, 2667, 2670,
	2676, 2681, 2682, 2654, 2663, 2690, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 1764, -2, -2, -2, -2, 1519, 2521, 1522,
	1165, 1520, 1504, 1506, 0, 1508, 0, 0, 0, 1513,
	1539, 1537, 0, 1588, 1517, 1518, 1606, 1606, 1630, 0,
	1611, 0, 1630, 1531, 1657, 0, 1617, 2545, 1966, 1967,
	0, 2255, 2250, -2, -2, 2688, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 599, 601, 0, 0,
	0, 620, 1541, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 404, 405, 406, 2656, 0, 0, 0, 411,
	0, 413, 414, 415, 416, 417, 418, 419, 198, 2656,
	501, 526, 0, 198, 2656, 504, 198, 2656, 507, 0,
	510, 1270, 198, 2656, 513, 2216, 198, 2656, 516, 518,
	2224, 198, 2656, 522, 2231, 2229, 523, 2656, 525, 304,
	302, 303, 2268, 2269, 2276, 2277, 2278, 2279, 2689, 2691,
	1359, 1360, 1361, 1362, 0, 1389, 1271, 642, 643, 0,
	667, 0, 671, 2644, -2, 0, 2565, -2, 675, 1393,
	1397, 1398, 1399, 1400, 1401, 0, 0, 0, 0, 1406,
	0, 0, 681, 0, 0, 668, 669, 687, 690, 0,
	787, 788, 789, 790, 791, 72, 0, 2656, 1657, 74,
	0, 2210, 2280, 2281, 2282, 2283, 2284, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 78, 0,
	2656, 83, 0, 2656, 0, -2, 94, 0, 104, 0,
	2213, 113, 0, 2656, 0, 2185, -2, 0, 210, 288,
	289, 290, 0, 1016, -2, 2656, 1213, 0, -2, 0,
	0, 0, 979, 2182, 2187, 980, 2206, 981, 2192, 0,
	335, 336, 337, 338, 339, 0, 340, 2656, 342, 343,
	0, 345, 346, 2656, 348, 349, 0, 351, 0, 251,
	252, 2656, 373, 375, 0, 377, 378, 0, 380, 0,
	0, 0, 384, -2, 400, 0, 397, 387, 388, 390,
	391, 392, 393, 394, 0, 440, 438, 2221, 0, 0,
	-2, 2656, 0, 1013, 0, 0, 1250, -2, 2656, 1210,
	0, 1257, 2656, 1253, 0, -2, 0, 1529, 2656, 1410,
	1045, 1046, 1047, 1048, 1669, 467, 0, 1437, 0, 1439,
	0, 1458, 1663, 1606, 0, 0, 1668, 0, -2, 586,
	2238, -2, 536, 0, 537, 0, -2, 0, 316, 0,
	0, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008,
	1643, 269, 271, 0, 0, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 0, 0, 652, 0, 0, 793,
	794, 0, 0, 804, 805, 806, 0, 316, 2557, 2517,
	2375, 813, 0, 816, 819, -2, 0, 0, 0, 0,
	823, 0, 828, 829, 830, 0, 0, 834, 836, 987,
	838, 0, 0, 840, 0, 844, 0, 847, 0, 849,
	0, 851, -2, -2, -2, 859, 860, -2, 865, -2,
	0, 869, -2, 0, 872, 0, 875, -2, 0, 885,
	881, 882, 0, 0, 0, 0, 901, 902, 0, 911,
	0, 914, 915, 916, 0, 920, 921, 0, 923, 924,
	925, 926, 0, 2628, 2562, 2341, 0, 932, -2, 938,
	940, 0, -2, 0, 956, 0, 960, 0, 0, 968,
	0, 0, 800, 801, 198, 1661, 1372, -2, 1374, 0,
	-2, 0, 633, 0, 636, 1561, 1487, 1484, 0, 1558,
	1559, 1488, 0, 0, 0, 1495, 0, 1534, 1535, 0,
	0, 0, 1474, 1475, 0, 0, 0, 0, 2067, 2068,
	2069, 2070, 2083, 2071, 2072, 2082, 2080, 2081, 2073, 2074,
	2079, 2093, 2094, 2084, 2085, 2075, 2088, 2086, 2087, 2089,
	2090, 2091, 2092, 0, 0, 2098, 0, 2076, 2077, 2078,
	2106, 0, 0, 2107, 0, 2109, 0, 2099, 2095, 2096,
	2097, 0, 1871, 1873, 2173, 0, 0, 0, 2105, 2100,
	2101, 1809, 1810, 1811, 1812, 1813, 1846, 1850, 1851, 0,
	0, 1926, 2170, 2169, 1928, 0, 0, 2121, 0, 1941,
	-2, 0, 2062, 2116, 0, 0, 1950, 1951, 1952, 0,
	0, 2121, 0, 0, 2164, 1962, 1963, 1801, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 1749,
	0, 1751, 0, 1752, 1753, 1760, 1773, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 2145,
	-2, 0, 0, 0, 0, 1765, 0, 1521, 0, 0,
	1592, 2174, 2178, 2179, 1592, 1592, 0, 0, 2122, 1654,
	1654, 0, 0, 1649, 1649, 1649, 1647, 1630, 0, 1630,
	1640, 0, 1630, 1630, 0, -2, 1611, 0, 0, 1640,
	0, 1624, 574, 576, 578, 580, 581, 582, 584, 1658,
	1659, 0, 0, 0, 0, 2256, 0, 0, 0, 0,
	0, 2241, 0, 356, 0, 0, 0, 2611, 2556, 0,
	-2, 604, 623, 1531, 0, 2124, 1684, 1688, 0, 1690,
	1691, 1692, 1693, 1694, 0, 0, 1685, -2, 1761, 1763,
	1784, 2273, 2274, 2275, 1744, 1745, 1746, 1747, 1748, 1756,
	1743, 1743, 1743, 1754, 1783, 1775, 1783, 1779, 1729, 1730,
	1731, 1766, 1767, 1768, 1769, 0, 2611, 2556, 0, -2,
	613, 0, 0, 1469, 214, 216, 217, 218, 219, 220,
	401, 0, 408, 409, 410, 0, 497, 0, 196, 197,
	0, 198, 2656, 502, 0, 505, 0, 198, 2656, 2180,
	511, 0, 514, 0, 0, 520, 0, 0, 0, 0,
	0, 198, 1471, 0, 0, 0, 0, -2, 677, 682,
	683, 0, 1395, 0, 1402, 704, 705, 706, 1404, 1405,
	0, 1407, 680, 707, 708, 709, 710, 711, 712, 0,
	2194, 2195, 2196, 2197, 2200, 2201, 0, 0, 678, 697,
	685, 0, 691, 114, 1345, 0, 0, 157, 0, 1345,
	1345, 0, 0, 0, 0, 183, 0, 1084, 0, 0,
	0, 0, 129, 142, 153, 126, 127, 0, 0, 0,
	0, 0, 0, 84, 1187, 0, 1190, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 141, 0, 0, 1434, 0,
	136, 116, 0, 0, 129, 143, 155, 0, 187, 189,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	221, 0, 0, 0, 1211, 0, 1528, 0, 0, 2656,
	1343, 1328, 0, 0, 1643, 2424, -2, -2, 269, 1643,
	978, 0, 0, 2256, 2190, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 379, 381, 382, 383, 0, 1249,
	0, 389, 430, 1136, 2656, 0, 0, 457, 452, 0,
	454, 0, 0, 0, 1186, 2656, 1184, 2225, 0, 1208,
	0, 1165, 2656, 2223, 0, 0, 0, 1258, 2265, 1267,
	1271, 1424, 0, 469, 0, 1440, 1442, 0, 0, 1664,
	0, 1666, 1606, 1531, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 0, 275, 0, 1642, 0, 0,
	1643, 269, 2532, 316, 316, 1643, 654, 1643, 656, 0,
	0, 807, 808, 0, 316, 316, 316, 814, 815, 817,
	818, -2, -2, -2, -2, 820, 821, 908, 0, 0,
	0, 907, 833, 837, 0, 972, 2540, 2556, 2611, 985,
	908, 2341, 908, 2341, 908, 2341, 848, 850, 853, 896,
	904, 864, 871, 0, 866, 870, 873, 876, 0, 878,
	886, -2, 0, 888, 0, 890, 0, 892, 908, 909,
	912, 919, 922, 927, 928, 929, 930, 2236, 931, -2,
	935, 936, 0, 947, 952, 953, 949, 0, 0, 0,
	0, 0, 0, 963, 964, 0, 0, 971, 1204, 0,
	1385, 1561, 1487, 635, 1478, 1560, 1479, 1486, 1489, 0,
	0, 1491, 0, 1493, 0, 1556, 1557, 1564, 1565, 0,
	1575, 1576, 1568, 0, -2, 0, 0, 1571, 1572, 1497,
	0, 1514, 1515, 1516, 1545, 1548, 1286, 0, 2790, 1805,
	1679, 1806, 1807, 2209, 0, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, -2, -2, -2, -2, -2,
	-2, -2, -2, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, -2, -2, -2, 1847, 1848, 1849,
	-2, 2108, 2110, 0, 2173, 0, -2, 0, -2, -2,
	-2, -2, 1868, 0, 1870, 1875, 1877, 1879, 0, 0,
	0, 0, 2172, 1889, 2156, 2157, 0, 0, 2064, 2065,
	2066, 1874, 0, 1893, 2171, 2168, 0, 0, 2102, 0,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 0, 2120, 1544, 1954, 0, 0, 0,
	0, 1961, 1946, 2118, 0, 2117, 0, 0, 0, 2128,
	0, 2163, 2159, 0, 2207, 1800, 1787, 1788, 1789, 1790,
	1791, 1792, 1802, 0, 2204, 2242, 2248, 2038, 0, 0,
	0, 1991, 1992, 1993, 1994, 1995, 0, 1997, 1998, 0,
	2000, 2001, 0, 2003, 2004, 0, 2006, 2007, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 0, 0,
	2010, 0, 2131, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2012, 0, 2014, 2122, 2142, 0, 0, 1894,
	0, 0, 0, 0, 2062, 0, 2017, 2122, 2150, 0,
	0, 0, 0, 0, 2122, 0, 2155, 0, 2024, 0,
	2026, 1523, 0, 0, 1674, 0, 0, 0, 2177, 1674,
	1674, 0, 1587, 0, 0, 1650, 1651, 1652, 1653, 0,
	0, 1654, 0, 1644, 1648, 1645, 1646, 1640, 1603, 0,
	0, 2211, 1640, 1609, 1639, 0, 1165, 1629, 1640, 1640,
	0, -2, 1613, 1630, 0, 0, 575, 577, 579, 583,
	585, 0, 0, 1544, -2, 0, -2, 318, 1164, 0,
	0, 0, 0, 594, 596, 0, 0, 517, 0, 0,
	610, 0, 588, 0, 591, 0, 1675, 1678, 0, 0,
	1689, 1695, 1696, 0, -2, 0, 0, 1785, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 412, 527,
	198, 499, 0, 198, 198, 508, 0, 0, 198, 519,
	198, 2232, 198, 2230, 305, 524, 1470, 232, 0, 670,
	0, 1394, 1403, 0, 701, 0, 703, 0, 2198, 2202,
	2199, 2203, 0, 692, 0, 0, 0, 0, 1344, 0,
	1293, 0, 0, 161, 2656, 0, 200, 0, 0, 1129,
	2217, 0, 1121, 0, 0, 2361, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 1189, 1191, 1198, 1200, 0,
	1194, 2205, 0, 0, 1195, 0, 1197, 1199, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 1433, 1434, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 2184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1243,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 307, 2183, 2193, 0, 1003, 1004, 341,
	344, 347, 350, 238, 0, 385, 0, 0, 1051, 1026,
	0, 0, 439, 316, 0, 0, 453, 457, 2234, 1011,
	1182, 1185, 0, 1165, 2656, 1222, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 2656, 2212, 2264, 2265, 1426,
	1434, 0, 1674, 0, 1456, 1443, 0, 0, 0, 1456,
	1460, 1461, 1463, 1464, 0, 0, 1665, 1671, 535, 587,
	1531, 1531, 316, 314, 2485, 312, 309, 311, 0, 0,
	0, 1052, 1054, 1055, 1056, 200, 0, 2265, 1121, 2413,
	2265, 0, 1446, 1448, 0, 263, 0, 272, 1643, 270,
	275, 0, 0, 0, 451, 653, 658, 802, 0, 316,
	810, 811, 812, 855, 898, 906, 951, 822, 824, 825,
	826, 0, 0, 986, 982, 983, 984, 839, 908, 842,
	908, 845, 908, 868, 874, 880, 887, 0, 0, 0,
	900, 917, 0, 934, 0, 0, 0, 0, 0, 0,
	0, 957, 958, 959, 961, 966, 965, 970, 1662, 1482,
	1483, 1485, 0, 1494, 0, 0, 1570, -2, -2, 1569,
	1573, 1574, -2, -2, -2, -2, 1490, 0, 1499, 1496,
	0, 1555, 1284, 1285, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1890, 0, -2, 1869, 1872, 1876, 1878,
	1880, 0, 0, 0, 0, 0, 0, 2111, 0, 2113,
	1891, 2166, 2169, 2104, 0, 2060, 0, 0, 1543, 1544,
	1544, 0, 1960, 0, 2119, 0, 2126, 2127, 0, 1953,
	0, 2160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 1996, 1999, 2002, 2005,
	0, 0, 0, 0, 1985, 0, 0, 0, 1989, 1755,
	1741, 0, 1783, 1781, 1782, 1776, 1783, 1780, 1733, 0,
	1732, 0, 2009, 0, 2011, 2013, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1897, 1898, 1899, 1919, 2016, 2148, 2149,
	0, 0, 0, 0, 0, 0, 2022, 0, 2154, 2023,
	2025, 1531, 0, 1524, 0, 1589, 1578, 1673, 0, 2175,
	1643, 1591, 1593, 2176, 2214, 1578, 1578, 0, 2123, 0,
	0, 1634, 0, 0, 0, 1636, 1607, 0, 0, 1601,
	0, 1597, 1598, 1599, 1600, 1608, 1165, 1638, 1610, 1614,
	2242, 0, 1640, 0, 1625, 0, 1627, 1660, 0, 1619,
	1622, 0, 0, 2257, 1674, 0, 352, 357, 358, 353,
	354, 355, 603, 0, 0, 0, 0, 0, 2125, 0,
	1680, 0, 1686, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 215, 1468, 407, 498, 198, 503, 506, 2181,
	198, 512, 515, 521, 228, 0, 666, -2, 699, 700,
	702, 0, 698, 158, 1345, 0, 0, 1289, 1291, 2228,
	1295, 1301, 1304, 0, 163, 2656, 174, 0, 1100, 0,
	2215, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	2656, 198, 2656, 198, 177, 179, 182, 0, 186, 184,
	0, 1088, 0, 0, 1091, 115, 1345, 0, 0, 118,
	122, 130, 131, 134, 0, 0, 0, 140, 0, 0,
	0, 1306, 1310, 1318, 0, 0, 0, 1192, 1193, 1196,
	1202, 85, 0, 0, 0, 1314, 1316, 1322, 95, 96,
	2656, 2226, 98, 2656, 0, 1288, 0, 0, 0, 0,
	188, 120, 124, 132, 133, 135, 0, 1324, 117, 0,
	213, 0, 0, 203, 198, 2656, 0, 205, 0, 206,
	207, 222, 0, 0, 0, 1014, 1015, 1244, 1206, 1207,
	0, 1212, 0, 0, 0, 0, 1326, 1327, 0, 0,
	0, 1340, 1643, 234, 0, 1643, 242, 0, 2189, 0,
	372, 0, 0, 0, 0, 1050, 1147, 0, 1021, 0,
	0, 0, 445, 441, 0, 450, 456, 455, 461, -2,
	0, 0, 0, 0, -2, 0, 0, 1260, 1254, 1255,
	0, 0, 0, 0, 2656, 1428, 1434, 0, 1529, 1544,
	468, 1435, 1456, 0, 0, 0, 1445, 1441, 1438, 1674,
	0, 0, 0, 0, 0, 1667, 1670, 538, 539, 291,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 1057,
	1061, 0, 2265, 2265, 0, 2219, 0, 0, 0, 0,
	273, 0, 276, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 275, 265, 1643, 0, 0, 655, 0, 0,
	809, 0, 832, 841, 843, 846, 889, 891, 908, 918,
	941, 942, 1078, 0, 1078, 0, 0, 962, 1492, 0,
	1567, 1498, 1549, 1550, 0, 1286, 0, 1808, 1853, 0,
	0, -2, 0, 0, 1857, 0, 0, 0, -2, 0,
	0, 0, 2112, 2114, 0, 2168, 2103, 1955, 0, 0,
	0, 1959, 1943, 1944, 0, 2063, 2129, 2158, 2162, 0,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 0, 2208, 2243,
	2247, 2036, 2037, 2041, 2222, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1778, 0,
	0, 2130, 2141, 2143, 1895, 1896, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, -2, -2, -2, 1913,
	1914, 1915, -2, -2, -2, 1920, 0, 0, 0, 2144,
	2146, 2147, 2151, 2152, 0, 2019, 2020, 2021, 2153, 0,
	1531, 1525, 1586, 0, 1672, 1590, 0, 1586, 1586, 1538,
	1632, 0, 0, 1656, 0, 1604, 0, 1605, 0, 1637,
	0, 1612, 1615, 1616, 1626, 0, 1618, 0, 1621, 0,
	1955, -2, 317, 319, 321, 0, 324, 325, 0, 0,
	606, 607, 0, 605, 589, 0, 0, 1682, 0, 0,
	1758, 1762, 1786, 615, 616, 0, 614, 500, 509, 230,
	0, 1641, 0, 0, 0, 0, 0, 0, 199, 1098,
	1128, 0, 0, 0, 1120, 0, 0, 1134, 165, 166,
	0, 0, 0, 0, 175, 0, 0, 172, 0, 181,
	185, 1085, 0, 0, 0, 0, 1294, 0, 0, 0,
	137, 138, 139, 0, 144, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1419, 0,
	1413, 0, 0, 0, 201, 0, 0, 0, 1283, 224,
	0, 0, 0, 0, 0, 1247, 1248, 1307, 1311, 1319,
	0, 0, 0, 0, 621, 0, 626, 1342, 242, 240,
	0, 243, 0, 246, 247, 0, 249, 242, 236, 0,
	0, 0, 1165, 386, 1024, 1135, 0, 1137, 0, 1022,
	0, 0, 1136, 437, 0, 444, 0, 458, 0, 0,
	1186, 0, 0, 1209, 1220, 1165, 0, 1259, 1261, 0,
	1269, 0, 0, 0, 1430, 1434, 0, 1423, 1424, 1563,
	1436, 1454, -2, 0, 0, 1544, 1462, 1459, 1465, 1466,
	0, 313, 0, 308, 310, 0, 294, 0, 0, 1053,
	1058, 0, 0, 0, 0, 0, 1447, 1449, 0, 0,
	0, 0, 0, 0, 264, 275, 1643, 300, 0, 803,
	827, 899, 943, 1077, 0, 0, 945, 0, 0, 1566,
	1553, 1554, 1551, 1286, 1855, 1859, 0, 0, 0, 1861,
	-2, 0, 1883, -2, -2, 2115, 2167, 1934, 1544, 1956,
	1958, 1945, 2161, 1803, 0, 2043, 2040, 0, 2027, 0,
	1980, 1981, 0, 0, 1984, 1986, 1987, 1988, 1742, 1735,
	1734, 2140, 0, 0, 0, 0, 2018, 1526, 0, 2032,
	0, 0, 1594, 2032, 2032, 1633, 0, 1635, 1602, 1595,
	0, 2243, 1628, 1620, 0, 0, 322, 0, 326, 327,
	0, 0, 1676, 1681, 0, 1687, 1757, 0, 231, 159,
	160, 1298, 1302, 1299, 0, 162, 0, 1099, 0, 1102,
	0, 0, 0, 0, 1109, 1121, 0, 0, 0, 0,
	0, 1122, 0, 1151, 0, 1274, 1281, 0, -2, 0,
	0, 0, 168, 191, 0, 0, 192, 1346, 170, 0,
	0, 198, 198, 0, 0, 1290, 1292, 1305, 0, 0,
	0, 0, 147, 0, 0, 1308, 1312, 1320, 1315, 1317,
	1323, 0, 99, 0, 1420, 0, 0, 1325, 211, 212,
	0, 198, 0, 198, 204, 198, 1283, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 235,
	306, 242, 374, 0, 1072, 0, 1147, 1139, 1140, 1141,
	0, 1146, 1148, 0, 0, 1038, 1023, 0, 1034, 0,
	0, 1051, 1026, 0, 442, 459, 0, 462, 0, 465,
	1012, 1183, 1217, 1165, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 1432, 1434, 0, 1425, 1426, 1456, 1562,
	0, 0, 0, 1444, 1563, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 277, 0,
	278, 279, 280, 266, 267, 657, 659, 0, 0, 665,
	1076, 0, 0, 0, 0, 1552, 1863, -2, -2, 1884,
	0, 2244, 2246, 1544, 0, 2029, 1546, 0, 0, -2,
	0, 0, 0, 1527, 1510, 0, 1585, 1577, 1579, 1581,
	2543, 2336, 2655, 1511, 1512, 1655, 0, 1623, 323, 608,
	0, 0, 1683, 0, 0, 0, 1300, 164, 0, 1103,
	1104, 2218, 1106, 0, 1108, 1110, 1111, 1112, 0, 1115,
	2267, 0, 1119, 0, 1130, 1152, 0, 1161, 0, 1276,
	1286, 1280, 0, 1278, 1163, 0, 167, 169, 193, 190,
	1283, 0, 171, 180, 0, 0, 119, 0, 0, 2330,
	150, 148, 146, 97, 1287, 121, 0, 213, 223, 1282,
	225, 208, 198, 0, 1309, 1313, 1321, 0, 1334, 1335,
	1336, 1337, 0, 0, 0, 0, 244, 0, 245, 248,
	0, 0, 1087, 0, 1025, 1138, 0, 1149, 1150, 1028,
	0, 1027, 0, 0, 0, 0, 0, 443, 446, 0,
	449, 0, 0, 0, 0, 0, 1262, 1260, 0, 1268,
	0, 0, 0, 1412, 0, 0, 1427, 1428, 466, 1450,
	0, 0, 1456, 1467, 293, 0, 0, 1059, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1060, 1163, 0,
	0, 1127, 0, 298, 274, 0, 661, 0, 663, 0,
	944, 946, 0, 0, 1957, 2047, 0, 0, 1982, 1983,
	-2, 0, 1923, 2031, 2033, 0, 0, 0, 0, 0,
	1596, 609, 1677, 617, 1296, 0, 1303, 1101, 1105, 0,
	0, 0, 1169, 0, 0, 1123, 0, 1155, 1156, 1072,
	0, 1157, 1158, 1159, 1275, 1555, 1281, 1072, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 202, 226,
	1283, 0, 1338, 1339, 0, 0, 241, 259, 0, 1218,
	1026, 1086, 0, 0, 1036, 0, 1039, 0, 1035, 1032,
	1033, 1024, 0, 447, 448, 463, 0, 464, 0, 1221,
	0, 0, 1269, 0, 0, 1415, 1411, 1434, 1429, 1430,
	1674, 1453, 1457, 0, 0, 1161, 1163, 1083, 0, 660,
	0, 0, 954, 955, 0, 0, 0, 0, 2042, 1547,
	1924, 0, 0, 1580, 1582, 1583, 1584, 1297, 0, 0,
	1114, 1174, 0, 0, 0, 1153, 1154, 1083, 0, 1279,
	1277, 1132, 0, 1165, 173, 0, 1163, 0, 1092, 0,
	0, 1095, 0, 0, 151, 2330, 149, 0, 198, 1331,
	198, 0, 262, 0, 256, 254, 255, 1028, 0, 0,
	1143, 1145, 0, 1040, 1072, 1038, 460, 1219, 1252, 1163,
	0, 1161, 0, 1422, 1434, 1416, 1417, 0, 1432, 0,
	316, 316, 1072, 1161, 1026, 1082, 316, 662, 664, 2039,
	2059, 2048, -2, 2614, 2337, 0, 2059, 2059, 2034, 2035,
	0, 0, 1116, 1170, 1171, 0, 1166, 1167, 1168, 2266,
	1117, 1118, 1151, 0, 0, 1169, 194, 1072, 1089, 0,
	0, 1090, 0, 0, 154, 0, 156, 227, 1329, 0,
	1332, 0, 250, 0, 0, 1020, 0, 1142, 0, 0,
	0, 0, 1087, 1028, 1161, 0, 1072, 0, 1408, 1421,
	0, 1431, 1412, 0, 295, 296, 1083, 1072, 1674, 0,
	297, 2044, 0, 0, 2050, 2051, 2052, 2053, 2054, 2045,
	2046, 1107, 0, 1172, 0, 1173, 0, 0, 0, 1674,
	1160, 0, 1174, 178, 1093, 0, 1096, 0, 152, 0,
	0, 0, 257, 258, 1017, 1019, 0, 1144, 1029, 0,
	1031, 1026, 1037, 1072, 0, 1083, 0, 1414, 2227, 1415,
	1451, 0, 1026, 1083, 1126, 0, 2056, 2057, 0, 0,
	0, 1175, 0, 1178, 1179, 0, 1176, 1131, 0, 1151,
	0, 0, 1330, 198, 0, 0, 1030, 1028, 1083, 1163,
	1026, 1161, 1422, 0, 1674, 1026, 2055, 2058, 2049, 1113,
	1177, 1180, 1181, 1162, 1133, 0, 0, 1333, 260, 0,
	1075, 1020, 1026, 1161, 1674, 1072, 1409, 1674, 1124, 1674,
	1080, 0, 0, 1071, 1073, 1074, 1018, 1674, 1072, 1265,
	1083, 1452, 1125, 1094, 1079, 0, 261, 1263, 1083, 1026,
	0, 1026, 1674, 0, 1674, 1266, 1080, 1264, 1097,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 576, 3, 582, 577, 3,
	587, 588, 580, 578, 592, 579, 589, 581, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 595, 3,
	568, 570, 569, 573, 591, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 585, 3, 586, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 593, 575, 594, 571,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 572, 57911, 574, 57912, 584, 57913, 590, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1452
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1462
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1463
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1464
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1465
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1466
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1467
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1680
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1769
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1823
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1831
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1855
		{
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1859
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1868
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1919
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1928
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1947
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1958
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1968
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1978
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1987
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1998
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2004
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2030
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2035
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2121
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2167
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2173
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = true
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = false
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = nil
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2398
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2445
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2861
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "alter function")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3012
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3023
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3028
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3033
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3038
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = nil
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3145
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3325
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3350
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "CREATE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3383
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3387
		{
			return unimplemented(sqllex, "create access method")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return unimplemented(sqllex, "create cast")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3392
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3396
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3397
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return unimplemented(sqllex, "create publication")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			return unimplemented(sqllex, "create rule")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			return unimplemented(sqllex, "create server")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3412
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3413
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3417
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "drop server")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3564
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3599
		{

			sqlVAL.union.val = nil
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DELETE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3686
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "DROP")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3917
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3978
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4002
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4010
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "DELETE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4034
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "INSERT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DELETE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "INSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4091
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4124
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4214
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "GRANT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4292
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "RESET")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "RESET")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4378
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4585
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "set from current")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4621
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = tree.Low
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = tree.Normal
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.High
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4800
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.str = "client_encoding"
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.str = "timezone"
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4869
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4932
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4941
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4949
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = true
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = true
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = false
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5304
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = true
		}
	case 894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = false
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = true
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = false
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5413
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5421
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5432
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5487
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5497
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5521
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5565
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5573
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5599
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5617
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5640
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5721
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5728
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5911
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "RESUME")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6152
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6168
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{

			sqlVAL.union.val = nil
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.str = ""
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = nil
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6240
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6266
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6280
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6295
		{
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6389
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6395
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6402
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.str = ""
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6666
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6691
		{

			sqlVAL.union.val = true
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = false
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6804
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6815
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6842
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6857
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6927
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6999
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7083
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7092
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7100
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7130
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7193
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = true
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{

			sqlVAL.union.val = true
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = false
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7218
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7232
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7244
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7256
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7266
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7276
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = nil
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7414
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7416
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7460
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7478
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7497
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7514
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7531
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = false
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = true
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = false
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = true
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = false
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7601
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.str = ""
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.str = ""
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7668
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7674
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7899
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7905
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7917
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7923
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7937
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7943
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7984
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = true
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = false
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.Types
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8073
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8074
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8078
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8210
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8243
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8244
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.str = ""
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{

		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8440
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.str = ""
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.str = ""
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.str = ""
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.str = ""
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8495
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8509
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8645
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8740
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8755
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8934
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = true
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = false
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9111
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = nil
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = true
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = false
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = false
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = true
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9155
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9158
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9159
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9221
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9226
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9341
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9413
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9450
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9502
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9541
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9551
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9627
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9660
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = nil
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = true
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = false
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.str = tree.AstFull
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.str = tree.AstRight
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.str = tree.AstInner
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9780
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.str = tree.AstHash
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.str = ""
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9872
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9878
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = true
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = false
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = true
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = false
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9956
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9964
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9983
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9993
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10013
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10062
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = types.Geography
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10124
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10132
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10166
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = nil
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = types.Int2
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = types.Int
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = types.Float4
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = types.Float
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10209
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10217
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = types.Bool
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = types.Float
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10258
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10264
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = types.String
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = true
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = false
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = types.Date
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10335
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10343
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10357
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10374
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10391
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = true
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = false
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = false
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = types.Interval
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10415
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10499
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = nil
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10544
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10940
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11070
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11174
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11179
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11229
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11259
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11270
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11271
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11361
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11491
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11557
		{
			return unimplemented(sqllex, "treat")
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.str = ""
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11732
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11829
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12246
		{
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12326
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12399
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12415
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12452
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12469
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12688
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12701
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12708
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.str = ""
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
