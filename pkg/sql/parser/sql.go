// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11513

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1298,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	217, 195,
	441, 195,
	-2, 0,
	-1, 79,
	206, 1106,
	219, 1106,
	235, 335,
	332, 335,
	341, 903,
	373, 335,
	385, 903,
	426, 903,
	451, 335,
	476, 903,
	-2, 0,
	-1, 85,
	235, 339,
	-2, 0,
	-1, 86,
	120, 1298,
	212, 1298,
	461, 1298,
	462, 1298,
	-2, 0,
	-1, 102,
	137, 1269,
	155, 1269,
	168, 1269,
	215, 1269,
	248, 1269,
	291, 1269,
	301, 1269,
	456, 1269,
	-2, 1240,
	-1, 136,
	145, 788,
	234, 788,
	335, 757,
	390, 757,
	444, 788,
	-2, 0,
	-1, 138,
	4, 1300,
	21, 1300,
	22, 1300,
	23, 1300,
	24, 1300,
	25, 1300,
	26, 1300,
	28, 1300,
	29, 1300,
	35, 1300,
	40, 1300,
	41, 1300,
	42, 1300,
	43, 1300,
	44, 1300,
	45, 1300,
	46, 1300,
	47, 1300,
	48, 1300,
	50, 1300,
	51, 1300,
	52, 1300,
	53, 1300,
	55, 1300,
	56, 1300,
	57, 1300,
	58, 1300,
	59, 1300,
	60, 1300,
	64, 1300,
	65, 1300,
	66, 1300,
	67, 1300,
	69, 1300,
	70, 1300,
	71, 1300,
	75, 1300,
	76, 1300,
	77, 1300,
	78, 1300,
	79, 1300,
	80, 1300,
	81, 1300,
	84, 1300,
	85, 1300,
	86, 1300,
	87, 1300,
	89, 1300,
	91, 1300,
	92, 1300,
	93, 1300,
	95, 1300,
	97, 1300,
	98, 1300,
	106, 1300,
	107, 1300,
	108, 1300,
	109, 1300,
	111, 1300,
	112, 1300,
	113, 1300,
	115, 1300,
	116, 1300,
	117, 1300,
	119, 1300,
	120, 1300,
	122, 1300,
	123, 1300,
	124, 1300,
	127, 1300,
	128, 1300,
	129, 1300,
	131, 1300,
	132, 1300,
	134, 1300,
	135, 1300,
	136, 1300,
	138, 1300,
	139, 1300,
	140, 1300,
	141, 1300,
	142, 1300,
	143, 1300,
	144, 1300,
	145, 1300,
	146, 1300,
	147, 1300,
	148, 1300,
	149, 1300,
	150, 1300,
	151, 1300,
	152, 1300,
	154, 1300,
	160, 1300,
	161, 1300,
	162, 1300,
	163, 1300,
	167, 1300,
	169, 1300,
	173, 1300,
	174, 1300,
	175, 1300,
	176, 1300,
	177, 1300,
	178, 1300,
	180, 1300,
	181, 1300,
	183, 1300,
	184, 1300,
	186, 1300,
	187, 1300,
	188, 1300,
	189, 1300,
	190, 1300,
	191, 1300,
	192, 1300,
	193, 1300,
	194, 1300,
	196, 1300,
	197, 1300,
	199, 1300,
	200, 1300,
	201, 1300,
	202, 1300,
	206, 1300,
	207, 1300,
	208, 1300,
	209, 1300,
	212, 1300,
	213, 1300,
	214, 1300,
	216, 1300,
	218, 1300,
	219, 1300,
	221, 1300,
	223, 1300,
	224, 1300,
	225, 1300,
	227, 1300,
	231, 1300,
	232, 1300,
	233, 1300,
	234, 1300,
	235, 1300,
	236, 1300,
	238, 1300,
	239, 1300,
	240, 1300,
	242, 1300,
	243, 1300,
	245, 1300,
	246, 1300,
	249, 1300,
	250, 1300,
	251, 1300,
	254, 1300,
	255, 1300,
	256, 1300,
	257, 1300,
	259, 1300,
	260, 1300,
	261, 1300,
	262, 1300,
	263, 1300,
	264, 1300,
	265, 1300,
	266, 1300,
	267, 1300,
	268, 1300,
	269, 1300,
	271, 1300,
	273, 1300,
	274, 1300,
	275, 1300,
	276, 1300,
	277, 1300,
	278, 1300,
	280, 1300,
	282, 1300,
	284, 1300,
	286, 1300,
	287, 1300,
	288, 1300,
	289, 1300,
	290, 1300,
	293, 1300,
	296, 1300,
	297, 1300,
	298, 1300,
	299, 1300,
	302, 1300,
	303, 1300,
	304, 1300,
	306, 1300,
	308, 1300,
	309, 1300,
	310, 1300,
	311, 1300,
	312, 1300,
	313, 1300,
	314, 1300,
	315, 1300,
	316, 1300,
	317, 1300,
	318, 1300,
	319, 1300,
	321, 1300,
	322, 1300,
	323, 1300,
	324, 1300,
	325, 1300,
	326, 1300,
	327, 1300,
	328, 1300,
	329, 1300,
	331, 1300,
	333, 1300,
	334, 1300,
	335, 1300,
	336, 1300,
	337, 1300,
	338, 1300,
	339, 1300,
	340, 1300,
	341, 1300,
	342, 1300,
	343, 1300,
	345, 1300,
	351, 1300,
	353, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	357, 1300,
	358, 1300,
	359, 1300,
	360, 1300,
	362, 1300,
	363, 1300,
	364, 1300,
	366, 1300,
	367, 1300,
	368, 1300,
	369, 1300,
	370, 1300,
	371, 1300,
	373, 1300,
	374, 1300,
	375, 1300,
	376, 1300,
	377, 1300,
	378, 1300,
	379, 1300,
	380, 1300,
	381, 1300,
	382, 1300,
	383, 1300,
	385, 1300,
	386, 1300,
	387, 1300,
	388, 1300,
	389, 1300,
	390, 1300,
	392, 1300,
	393, 1300,
	394, 1300,
	395, 1300,
	396, 1300,
	398, 1300,
	399, 1300,
	400, 1300,
	401, 1300,
	402, 1300,
	403, 1300,
	404, 1300,
	406, 1300,
	408, 1300,
	409, 1300,
	410, 1300,
	411, 1300,
	412, 1300,
	413, 1300,
	414, 1300,
	415, 1300,
	416, 1300,
	417, 1300,
	418, 1300,
	419, 1300,
	420, 1300,
	422, 1300,
	423, 1300,
	425, 1300,
	427, 1300,
	428, 1300,
	429, 1300,
	430, 1300,
	431, 1300,
	432, 1300,
	433, 1300,
	434, 1300,
	436, 1300,
	437, 1300,
	438, 1300,
	439, 1300,
	440, 1300,
	442, 1300,
	444, 1300,
	445, 1300,
	446, 1300,
	447, 1300,
	448, 1300,
	450, 1300,
	451, 1300,
	452, 1300,
	454, 1300,
	455, 1300,
	458, 1300,
	459, 1300,
	460, 1300,
	461, 1300,
	462, 1300,
	463, 1300,
	464, 1300,
	466, 1300,
	469, 1300,
	470, 1300,
	471, 1300,
	472, 1300,
	473, 1300,
	474, 1300,
	476, 1300,
	477, 1300,
	478, 1300,
	483, 1300,
	484, 1300,
	485, 1300,
	486, 1300,
	487, 1300,
	488, 1300,
	-2, 0,
	-1, 139,
	1, 1174,
	223, 1174,
	331, 1174,
	339, 1174,
	491, 1174,
	515, 1174,
	-2, 0,
	-1, 141,
	1, 1174,
	515, 1174,
	-2, 0,
	-1, 142,
	1, 1174,
	515, 1174,
	-2, 0,
	-1, 143,
	1, 1174,
	441, 1174,
	515, 1174,
	-2, 0,
	-1, 172,
	137, 1268,
	155, 1268,
	168, 1268,
	215, 1268,
	248, 1268,
	291, 1268,
	301, 1268,
	456, 1268,
	-2, 1243,
	-1, 208,
	4, 1307,
	5, 1307,
	6, 1307,
	7, 1307,
	8, 1307,
	9, 1307,
	10, 1307,
	21, 1307,
	22, 1307,
	23, 1307,
	24, 1307,
	25, 1307,
	26, 1307,
	28, 1307,
	29, 1307,
	35, 1307,
	36, 1307,
	40, 1307,
	41, 1307,
	42, 1307,
	43, 1307,
	44, 1307,
	45, 1307,
	46, 1307,
	47, 1307,
	48, 1307,
	50, 1307,
	51, 1307,
	52, 1307,
	53, 1307,
	55, 1307,
	56, 1307,
	57, 1307,
	58, 1307,
	59, 1307,
	60, 1307,
	61, 1307,
	62, 1307,
	63, 1307,
	64, 1307,
	65, 1307,
	66, 1307,
	67, 1307,
	69, 1307,
	70, 1307,
	71, 1307,
	73, 1307,
	75, 1307,
	76, 1307,
	77, 1307,
	78, 1307,
	79, 1307,
	80, 1307,
	81, 1307,
	84, 1307,
	85, 1307,
	86, 1307,
	87, 1307,
	89, 1307,
	91, 1307,
	92, 1307,
	93, 1307,
	95, 1307,
	96, 1307,
	97, 1307,
	98, 1307,
	99, 1307,
	100, 1307,
	101, 1307,
	102, 1307,
	103, 1307,
	104, 1307,
	105, 1307,
	106, 1307,
	107, 1307,
	108, 1307,
	109, 1307,
	110, 1307,
	111, 1307,
	112, 1307,
	113, 1307,
	114, 1307,
	115, 1307,
	116, 1307,
	117, 1307,
	119, 1307,
	120, 1307,
	122, 1307,
	123, 1307,
	124, 1307,
	127, 1307,
	128, 1307,
	129, 1307,
	131, 1307,
	132, 1307,
	134, 1307,
	135, 1307,
	136, 1307,
	138, 1307,
	139, 1307,
	140, 1307,
	141, 1307,
	142, 1307,
	143, 1307,
	144, 1307,
	145, 1307,
	146, 1307,
	147, 1307,
	148, 1307,
	149, 1307,
	150, 1307,
	151, 1307,
	152, 1307,
	153, 1307,
	154, 1307,
	160, 1307,
	161, 1307,
	162, 1307,
	163, 1307,
	167, 1307,
	169, 1307,
	172, 1307,
	173, 1307,
	174, 1307,
	175, 1307,
	176, 1307,
	177, 1307,
	178, 1307,
	180, 1307,
	181, 1307,
	183, 1307,
	184, 1307,
	186, 1307,
	187, 1307,
	188, 1307,
	189, 1307,
	190, 1307,
	191, 1307,
	192, 1307,
	193, 1307,
	194, 1307,
	195, 1307,
	196, 1307,
	197, 1307,
	199, 1307,
	200, 1307,
	201, 1307,
	202, 1307,
	206, 1307,
	207, 1307,
	208, 1307,
	209, 1307,
	211, 1307,
	212, 1307,
	213, 1307,
	214, 1307,
	216, 1307,
	218, 1307,
	219, 1307,
	220, 1307,
	221, 1307,
	222, 1307,
	223, 1307,
	224, 1307,
	225, 1307,
	226, 1307,
	227, 1307,
	231, 1307,
	232, 1307,
	233, 1307,
	234, 1307,
	235, 1307,
	236, 1307,
	238, 1307,
	239, 1307,
	240, 1307,
	242, 1307,
	243, 1307,
	244, 1307,
	245, 1307,
	246, 1307,
	247, 1307,
	249, 1307,
	250, 1307,
	251, 1307,
	252, 1307,
	253, 1307,
	254, 1307,
	255, 1307,
	256, 1307,
	257, 1307,
	259, 1307,
	260, 1307,
	261, 1307,
	262, 1307,
	263, 1307,
	264, 1307,
	265, 1307,
	266, 1307,
	267, 1307,
	268, 1307,
	269, 1307,
	271, 1307,
	272, 1307,
	273, 1307,
	274, 1307,
	275, 1307,
	276, 1307,
	277, 1307,
	278, 1307,
	279, 1307,
	280, 1307,
	281, 1307,
	282, 1307,
	283, 1307,
	284, 1307,
	285, 1307,
	286, 1307,
	287, 1307,
	288, 1307,
	289, 1307,
	290, 1307,
	293, 1307,
	297, 1307,
	298, 1307,
	299, 1307,
	302, 1307,
	303, 1307,
	304, 1307,
	305, 1307,
	306, 1307,
	307, 1307,
	308, 1307,
	309, 1307,
	310, 1307,
	311, 1307,
	312, 1307,
	313, 1307,
	314, 1307,
	315, 1307,
	316, 1307,
	317, 1307,
	318, 1307,
	319, 1307,
	321, 1307,
	322, 1307,
	323, 1307,
	324, 1307,
	325, 1307,
	326, 1307,
	327, 1307,
	328, 1307,
	329, 1307,
	331, 1307,
	333, 1307,
	334, 1307,
	335, 1307,
	336, 1307,
	337, 1307,
	338, 1307,
	339, 1307,
	340, 1307,
	341, 1307,
	342, 1307,
	343, 1307,
	345, 1307,
	351, 1307,
	353, 1307,
	354, 1307,
	355, 1307,
	356, 1307,
	357, 1307,
	358, 1307,
	359, 1307,
	360, 1307,
	362, 1307,
	363, 1307,
	364, 1307,
	365, 1307,
	366, 1307,
	367, 1307,
	368, 1307,
	369, 1307,
	370, 1307,
	371, 1307,
	373, 1307,
	374, 1307,
	375, 1307,
	376, 1307,
	377, 1307,
	378, 1307,
	379, 1307,
	380, 1307,
	381, 1307,
	382, 1307,
	383, 1307,
	385, 1307,
	386, 1307,
	387, 1307,
	388, 1307,
	389, 1307,
	390, 1307,
	391, 1307,
	392, 1307,
	393, 1307,
	394, 1307,
	395, 1307,
	396, 1307,
	397, 1307,
	398, 1307,
	399, 1307,
	400, 1307,
	401, 1307,
	402, 1307,
	403, 1307,
	404, 1307,
	406, 1307,
	408, 1307,
	409, 1307,
	410, 1307,
	411, 1307,
	412, 1307,
	413, 1307,
	414, 1307,
	415, 1307,
	416, 1307,
	417, 1307,
	418, 1307,
	419, 1307,
	420, 1307,
	422, 1307,
	423, 1307,
	424, 1307,
	425, 1307,
	427, 1307,
	428, 1307,
	429, 1307,
	430, 1307,
	431, 1307,
	432, 1307,
	433, 1307,
	434, 1307,
	436, 1307,
	437, 1307,
	438, 1307,
	439, 1307,
	440, 1307,
	442, 1307,
	444, 1307,
	445, 1307,
	446, 1307,
	447, 1307,
	448, 1307,
	449, 1307,
	450, 1307,
	451, 1307,
	452, 1307,
	454, 1307,
	455, 1307,
	457, 1307,
	458, 1307,
	459, 1307,
	460, 1307,
	461, 1307,
	462, 1307,
	463, 1307,
	464, 1307,
	465, 1307,
	466, 1307,
	469, 1307,
	470, 1307,
	471, 1307,
	472, 1307,
	473, 1307,
	474, 1307,
	476, 1307,
	477, 1307,
	478, 1307,
	483, 1307,
	484, 1307,
	485, 1307,
	486, 1307,
	487, 1307,
	488, 1307,
	489, 1307,
	496, 1307,
	503, 1307,
	504, 1307,
	505, 1307,
	512, 1307,
	516, 1307,
	-2, 0,
	-1, 622,
	171, 2015,
	441, 2015,
	495, 2015,
	514, 2015,
	-2, 0,
	-1, 623,
	171, 2102,
	441, 2102,
	495, 2102,
	514, 2102,
	-2, 0,
	-1, 624,
	171, 2003,
	441, 2003,
	495, 2003,
	514, 2003,
	-2, 0,
	-1, 626,
	171, 2201,
	441, 2201,
	495, 2201,
	514, 2201,
	-2, 0,
	-1, 628,
	171, 2235,
	441, 2235,
	495, 2235,
	514, 2235,
	-2, 0,
	-1, 635,
	171, 2117,
	441, 2117,
	495, 2117,
	514, 2117,
	-2, 607,
	-1, 665,
	514, 1955,
	517, 1955,
	-2, 842,
	-1, 666,
	514, 1957,
	517, 1957,
	-2, 843,
	-1, 667,
	514, 1956,
	517, 1956,
	-2, 844,
	-1, 668,
	517, 1890,
	-2, 845,
	-1, 690,
	168, 209,
	-2, 0,
	-1, 712,
	476, 1083,
	-2, 904,
	-1, 751,
	4, 1104,
	21, 1104,
	22, 1104,
	23, 1104,
	24, 1104,
	25, 1104,
	26, 1104,
	28, 1104,
	29, 1104,
	35, 1104,
	40, 1104,
	41, 1104,
	42, 1104,
	43, 1104,
	44, 1104,
	45, 1104,
	46, 1104,
	47, 1104,
	48, 1104,
	50, 1104,
	51, 1104,
	52, 1104,
	53, 1104,
	55, 1104,
	56, 1104,
	57, 1104,
	58, 1104,
	59, 1104,
	60, 1104,
	64, 1104,
	65, 1104,
	66, 1104,
	67, 1104,
	69, 1104,
	70, 1104,
	71, 1104,
	75, 1104,
	76, 1104,
	77, 1104,
	78, 1104,
	79, 1104,
	80, 1104,
	81, 1104,
	84, 1104,
	85, 1104,
	86, 1104,
	87, 1104,
	89, 1104,
	91, 1104,
	92, 1104,
	93, 1104,
	95, 1104,
	97, 1104,
	98, 1104,
	106, 1104,
	107, 1104,
	108, 1104,
	109, 1104,
	111, 1104,
	112, 1104,
	113, 1104,
	115, 1104,
	116, 1104,
	117, 1104,
	119, 1104,
	120, 1104,
	122, 1104,
	123, 1104,
	124, 1104,
	127, 1104,
	128, 1104,
	129, 1104,
	131, 1104,
	132, 1104,
	134, 1104,
	135, 1104,
	136, 1104,
	138, 1104,
	139, 1104,
	140, 1104,
	141, 1104,
	142, 1104,
	143, 1104,
	144, 1104,
	145, 1104,
	146, 1104,
	147, 1104,
	148, 1104,
	149, 1104,
	150, 1104,
	151, 1104,
	152, 1104,
	154, 1104,
	160, 1104,
	161, 1104,
	162, 1104,
	163, 1104,
	167, 1104,
	169, 1104,
	173, 1104,
	174, 1104,
	175, 1104,
	176, 1104,
	177, 1104,
	178, 1104,
	180, 1104,
	181, 1104,
	183, 1104,
	184, 1104,
	186, 1104,
	187, 1104,
	188, 1104,
	189, 1104,
	190, 1104,
	191, 1104,
	192, 1104,
	193, 1104,
	194, 1104,
	196, 1104,
	197, 1104,
	199, 1104,
	200, 1104,
	201, 1104,
	202, 1104,
	206, 1104,
	207, 1104,
	208, 1104,
	209, 1104,
	212, 1104,
	213, 1104,
	214, 1104,
	216, 1104,
	218, 1104,
	219, 1104,
	221, 1104,
	223, 1104,
	224, 1104,
	225, 1104,
	227, 1104,
	231, 1104,
	232, 1104,
	233, 1104,
	234, 1104,
	235, 1104,
	236, 1104,
	238, 1104,
	239, 1104,
	240, 1104,
	242, 1104,
	243, 1104,
	245, 1104,
	246, 1104,
	249, 1104,
	250, 1104,
	251, 1104,
	254, 1104,
	255, 1104,
	256, 1104,
	257, 1104,
	259, 1104,
	260, 1104,
	261, 1104,
	262, 1104,
	263, 1104,
	264, 1104,
	265, 1104,
	266, 1104,
	267, 1104,
	268, 1104,
	269, 1104,
	271, 1104,
	273, 1104,
	274, 1104,
	275, 1104,
	276, 1104,
	277, 1104,
	278, 1104,
	280, 1104,
	282, 1104,
	284, 1104,
	286, 1104,
	287, 1104,
	288, 1104,
	289, 1104,
	290, 1104,
	293, 1104,
	297, 1104,
	298, 1104,
	299, 1104,
	302, 1104,
	303, 1104,
	304, 1104,
	306, 1104,
	308, 1104,
	309, 1104,
	310, 1104,
	311, 1104,
	312, 1104,
	313, 1104,
	314, 1104,
	315, 1104,
	316, 1104,
	317, 1104,
	318, 1104,
	319, 1104,
	321, 1104,
	322, 1104,
	323, 1104,
	324, 1104,
	325, 1104,
	326, 1104,
	327, 1104,
	328, 1104,
	329, 1104,
	331, 1104,
	333, 1104,
	334, 1104,
	335, 1104,
	336, 1104,
	337, 1104,
	338, 1104,
	339, 1104,
	340, 1104,
	341, 1104,
	342, 1104,
	343, 1104,
	345, 1104,
	351, 1104,
	353, 1104,
	354, 1104,
	355, 1104,
	356, 1104,
	357, 1104,
	358, 1104,
	359, 1104,
	360, 1104,
	362, 1104,
	363, 1104,
	364, 1104,
	366, 1104,
	367, 1104,
	368, 1104,
	369, 1104,
	370, 1104,
	371, 1104,
	373, 1104,
	374, 1104,
	375, 1104,
	376, 1104,
	377, 1104,
	378, 1104,
	379, 1104,
	380, 1104,
	381, 1104,
	382, 1104,
	383, 1104,
	385, 1104,
	386, 1104,
	387, 1104,
	388, 1104,
	389, 1104,
	390, 1104,
	392, 1104,
	393, 1104,
	394, 1104,
	395, 1104,
	396, 1104,
	398, 1104,
	399, 1104,
	400, 1104,
	401, 1104,
	402, 1104,
	403, 1104,
	404, 1104,
	406, 1104,
	408, 1104,
	409, 1104,
	410, 1104,
	411, 1104,
	412, 1104,
	413, 1104,
	414, 1104,
	415, 1104,
	416, 1104,
	417, 1104,
	418, 1104,
	419, 1104,
	420, 1104,
	422, 1104,
	423, 1104,
	425, 1104,
	427, 1104,
	428, 1104,
	429, 1104,
	430, 1104,
	431, 1104,
	432, 1104,
	433, 1104,
	434, 1104,
	436, 1104,
	437, 1104,
	438, 1104,
	439, 1104,
	440, 1104,
	442, 1104,
	444, 1104,
	445, 1104,
	446, 1104,
	447, 1104,
	448, 1104,
	450, 1104,
	451, 1104,
	452, 1104,
	454, 1104,
	455, 1104,
	458, 1104,
	459, 1104,
	460, 1104,
	461, 1104,
	462, 1104,
	463, 1104,
	464, 1104,
	466, 1104,
	469, 1104,
	470, 1104,
	471, 1104,
	472, 1104,
	473, 1104,
	474, 1104,
	476, 1104,
	477, 1104,
	478, 1104,
	483, 1104,
	484, 1104,
	485, 1104,
	486, 1104,
	487, 1104,
	488, 1104,
	-2, 0,
	-1, 829,
	335, 758,
	390, 758,
	-2, 0,
	-1, 830,
	335, 757,
	390, 757,
	-2, 703,
	-1, 834,
	1, 798,
	511, 798,
	513, 798,
	515, 798,
	-2, 0,
	-1, 835,
	1, 736,
	511, 736,
	513, 736,
	515, 736,
	-2, 0,
	-1, 836,
	1, 841,
	168, 841,
	511, 841,
	513, 841,
	515, 841,
	-2, 0,
	-1, 844,
	1, 761,
	511, 761,
	513, 761,
	515, 761,
	-2, 0,
	-1, 850,
	1, 798,
	511, 798,
	513, 798,
	515, 798,
	-2, 0,
	-1, 851,
	1, 800,
	511, 800,
	513, 800,
	515, 800,
	-2, 0,
	-1, 852,
	1, 803,
	511, 803,
	513, 803,
	515, 803,
	-2, 0,
	-1, 858,
	1, 820,
	511, 820,
	513, 820,
	515, 820,
	-2, 0,
	-1, 859,
	1, 822,
	511, 822,
	513, 822,
	515, 822,
	-2, 0,
	-1, 908,
	155, 1309,
	168, 1309,
	248, 1309,
	291, 1309,
	-2, 1247,
	-1, 923,
	155, 1308,
	168, 1308,
	248, 1308,
	291, 1308,
	-2, 1244,
	-1, 949,
	514, 1954,
	-2, 615,
	-1, 977,
	5, 1946,
	512, 1944,
	-2, 1935,
	-1, 985,
	5, 1967,
	512, 1964,
	-2, 1955,
	-1, 986,
	5, 1968,
	512, 1965,
	-2, 1956,
	-1, 994,
	514, 1952,
	-2, 1934,
	-1, 995,
	512, 2314,
	-2, 1953,
	-1, 1018,
	512, 2313,
	-2, 1969,
	-1, 1019,
	5, 1474,
	-2, 2284,
	-1, 1020,
	5, 1475,
	-2, 2285,
	-1, 1021,
	5, 1476,
	-2, 2299,
	-1, 1022,
	5, 1477,
	-2, 2263,
	-1, 1023,
	5, 1478,
	-2, 2297,
	-1, 1024,
	5, 1486,
	-2, 2276,
	-1, 1025,
	5, 1473,
	-2, 2272,
	-1, 1026,
	5, 1473,
	-2, 2271,
	-1, 1027,
	5, 1473,
	-2, 2290,
	-1, 1028,
	5, 1484,
	-2, 2265,
	-1, 1029,
	5, 1489,
	-2, 2264,
	-1, 1030,
	5, 1491,
	-2, 2309,
	-1, 1033,
	5, 1513,
	-2, 2302,
	-1, 1034,
	5, 1505,
	-2, 2303,
	-1, 1035,
	5, 1513,
	-2, 2304,
	-1, 1036,
	5, 1509,
	-2, 2305,
	-1, 1037,
	5, 1459,
	-2, 2277,
	-1, 1038,
	5, 1460,
	-2, 2278,
	-1, 1039,
	5, 1461,
	-2, 2266,
	-1, 1066,
	5, 1496,
	-2, 2310,
	-1, 1067,
	5, 1497,
	-2, 2300,
	-1, 1068,
	5, 1498,
	477, 1498,
	-2, 2267,
	-1, 1069,
	5, 1499,
	477, 1499,
	-2, 2268,
	-1, 1106,
	512, 1964,
	-2, 1955,
	-1, 1107,
	512, 1965,
	-2, 1956,
	-1, 1137,
	171, 2235,
	441, 2235,
	495, 2235,
	514, 2235,
	-2, 0,
	-1, 1140,
	1, 593,
	515, 593,
	-2, 1182,
	-1, 1265,
	353, 1930,
	392, 1930,
	505, 1930,
	-2, 1928,
	-1, 1277,
	516, 1930,
	-2, 1931,
	-1, 1284,
	1, 1080,
	511, 1080,
	513, 1080,
	515, 1080,
	-2, 1296,
	-1, 1337,
	341, 903,
	476, 903,
	-2, 334,
	-1, 1358,
	1, 1080,
	511, 1080,
	513, 1080,
	515, 1080,
	-2, 1296,
	-1, 1365,
	4, 1104,
	21, 1104,
	22, 1104,
	23, 1104,
	24, 1104,
	25, 1104,
	26, 1104,
	28, 1104,
	29, 1104,
	35, 1104,
	40, 1104,
	41, 1104,
	42, 1104,
	43, 1104,
	44, 1104,
	45, 1104,
	46, 1104,
	47, 1104,
	48, 1104,
	50, 1104,
	51, 1104,
	52, 1104,
	53, 1104,
	55, 1104,
	56, 1104,
	57, 1104,
	58, 1104,
	59, 1104,
	60, 1104,
	64, 1104,
	65, 1104,
	66, 1104,
	67, 1104,
	69, 1104,
	70, 1104,
	71, 1104,
	75, 1104,
	76, 1104,
	77, 1104,
	78, 1104,
	79, 1104,
	80, 1104,
	81, 1104,
	84, 1104,
	85, 1104,
	86, 1104,
	87, 1104,
	89, 1104,
	91, 1104,
	92, 1104,
	93, 1104,
	95, 1104,
	97, 1104,
	98, 1104,
	106, 1104,
	107, 1104,
	108, 1104,
	109, 1104,
	111, 1104,
	112, 1104,
	113, 1104,
	115, 1104,
	116, 1104,
	117, 1104,
	119, 1104,
	120, 1104,
	122, 1104,
	123, 1104,
	124, 1104,
	127, 1104,
	128, 1104,
	129, 1104,
	131, 1104,
	132, 1104,
	134, 1104,
	135, 1104,
	136, 1104,
	138, 1104,
	139, 1104,
	140, 1104,
	141, 1104,
	142, 1104,
	143, 1104,
	144, 1104,
	145, 1104,
	146, 1104,
	147, 1104,
	148, 1104,
	149, 1104,
	150, 1104,
	151, 1104,
	152, 1104,
	160, 1104,
	161, 1104,
	162, 1104,
	163, 1104,
	167, 1104,
	169, 1104,
	173, 1104,
	174, 1104,
	175, 1104,
	176, 1104,
	177, 1104,
	178, 1104,
	180, 1104,
	181, 1104,
	183, 1104,
	184, 1104,
	186, 1104,
	187, 1104,
	188, 1104,
	189, 1104,
	190, 1104,
	191, 1104,
	192, 1104,
	193, 1104,
	194, 1104,
	196, 1104,
	197, 1104,
	199, 1104,
	200, 1104,
	201, 1104,
	202, 1104,
	207, 1104,
	208, 1104,
	209, 1104,
	212, 1104,
	213, 1104,
	214, 1104,
	216, 1104,
	218, 1104,
	219, 1104,
	221, 1104,
	223, 1104,
	224, 1104,
	225, 1104,
	227, 1104,
	231, 1104,
	232, 1104,
	233, 1104,
	234, 1104,
	235, 1104,
	236, 1104,
	238, 1104,
	239, 1104,
	240, 1104,
	242, 1104,
	243, 1104,
	245, 1104,
	246, 1104,
	249, 1104,
	250, 1104,
	251, 1104,
	254, 1104,
	255, 1104,
	256, 1104,
	257, 1104,
	259, 1104,
	260, 1104,
	261, 1104,
	262, 1104,
	263, 1104,
	264, 1104,
	265, 1104,
	266, 1104,
	267, 1104,
	268, 1104,
	269, 1104,
	271, 1104,
	273, 1104,
	274, 1104,
	275, 1104,
	276, 1104,
	277, 1104,
	278, 1104,
	280, 1104,
	284, 1104,
	286, 1104,
	287, 1104,
	288, 1104,
	289, 1104,
	290, 1104,
	293, 1104,
	295, 1104,
	297, 1104,
	298, 1104,
	299, 1104,
	302, 1104,
	303, 1104,
	304, 1104,
	306, 1104,
	308, 1104,
	309, 1104,
	310, 1104,
	311, 1104,
	312, 1104,
	313, 1104,
	314, 1104,
	315, 1104,
	316, 1104,
	317, 1104,
	318, 1104,
	319, 1104,
	321, 1104,
	322, 1104,
	323, 1104,
	324, 1104,
	325, 1104,
	326, 1104,
	327, 1104,
	328, 1104,
	329, 1104,
	331, 1104,
	333, 1104,
	334, 1104,
	335, 1104,
	336, 1104,
	337, 1104,
	338, 1104,
	339, 1104,
	340, 1104,
	341, 1104,
	342, 1104,
	343, 1104,
	345, 1104,
	351, 1104,
	353, 1104,
	354, 1104,
	355, 1104,
	356, 1104,
	357, 1104,
	358, 1104,
	359, 1104,
	360, 1104,
	362, 1104,
	363, 1104,
	364, 1104,
	366, 1104,
	367, 1104,
	368, 1104,
	369, 1104,
	370, 1104,
	371, 1104,
	373, 1104,
	374, 1104,
	375, 1104,
	376, 1104,
	377, 1104,
	378, 1104,
	379, 1104,
	380, 1104,
	381, 1104,
	382, 1104,
	383, 1104,
	385, 1104,
	386, 1104,
	387, 1104,
	388, 1104,
	389, 1104,
	390, 1104,
	392, 1104,
	393, 1104,
	394, 1104,
	395, 1104,
	396, 1104,
	398, 1104,
	399, 1104,
	400, 1104,
	401, 1104,
	402, 1104,
	403, 1104,
	404, 1104,
	406, 1104,
	408, 1104,
	409, 1104,
	410, 1104,
	411, 1104,
	412, 1104,
	413, 1104,
	414, 1104,
	415, 1104,
	416, 1104,
	417, 1104,
	418, 1104,
	419, 1104,
	420, 1104,
	422, 1104,
	423, 1104,
	425, 1104,
	427, 1104,
	428, 1104,
	429, 1104,
	430, 1104,
	431, 1104,
	432, 1104,
	433, 1104,
	434, 1104,
	436, 1104,
	437, 1104,
	438, 1104,
	439, 1104,
	440, 1104,
	442, 1104,
	444, 1104,
	445, 1104,
	446, 1104,
	447, 1104,
	448, 1104,
	450, 1104,
	451, 1104,
	452, 1104,
	454, 1104,
	455, 1104,
	458, 1104,
	459, 1104,
	460, 1104,
	461, 1104,
	462, 1104,
	463, 1104,
	464, 1104,
	466, 1104,
	469, 1104,
	470, 1104,
	471, 1104,
	472, 1104,
	473, 1104,
	474, 1104,
	476, 1104,
	477, 1104,
	478, 1104,
	483, 1104,
	484, 1104,
	485, 1104,
	486, 1104,
	487, 1104,
	488, 1104,
	-2, 0,
	-1, 1437,
	1, 470,
	511, 470,
	513, 470,
	515, 470,
	-2, 1267,
	-1, 1440,
	4, 2308,
	11, 2308,
	12, 2308,
	14, 2308,
	15, 2308,
	16, 2308,
	17, 2308,
	18, 2308,
	19, 2308,
	21, 2308,
	22, 2308,
	23, 2308,
	24, 2308,
	25, 2308,
	26, 2308,
	28, 2308,
	29, 2308,
	32, 2308,
	33, 2308,
	35, 2308,
	37, 2308,
	40, 2308,
	41, 2308,
	42, 2308,
	43, 2308,
	44, 2308,
	45, 2308,
	46, 2308,
	47, 2308,
	48, 2308,
	50, 2308,
	51, 2308,
	52, 2308,
	53, 2308,
	55, 2308,
	56, 2308,
	57, 2308,
	58, 2308,
	59, 2308,
	60, 2308,
	64, 2308,
	65, 2308,
	66, 2308,
	67, 2308,
	69, 2308,
	70, 2308,
	71, 2308,
	72, 2308,
	75, 2308,
	76, 2308,
	77, 2308,
	78, 2308,
	79, 2308,
	80, 2308,
	81, 2308,
	82, 2308,
	84, 2308,
	85, 2308,
	86, 2308,
	87, 2308,
	89, 2308,
	90, 2308,
	91, 2308,
	92, 2308,
	93, 2308,
	95, 2308,
	96, 2308,
	97, 2308,
	98, 2308,
	106, 2308,
	107, 2308,
	108, 2308,
	109, 2308,
	111, 2308,
	112, 2308,
	113, 2308,
	115, 2308,
	116, 2308,
	117, 2308,
	119, 2308,
	120, 2308,
	122, 2308,
	123, 2308,
	124, 2308,
	127, 2308,
	128, 2308,
	129, 2308,
	131, 2308,
	132, 2308,
	134, 2308,
	135, 2308,
	136, 2308,
	138, 2308,
	139, 2308,
	140, 2308,
	141, 2308,
	142, 2308,
	143, 2308,
	144, 2308,
	145, 2308,
	146, 2308,
	147, 2308,
	148, 2308,
	149, 2308,
	150, 2308,
	151, 2308,
	152, 2308,
	156, 2308,
	157, 2308,
	158, 2308,
	159, 2308,
	160, 2308,
	161, 2308,
	162, 2308,
	163, 2308,
	166, 2308,
	167, 2308,
	169, 2308,
	172, 2308,
	173, 2308,
	174, 2308,
	175, 2308,
	176, 2308,
	177, 2308,
	178, 2308,
	180, 2308,
	181, 2308,
	183, 2308,
	184, 2308,
	186, 2308,
	187, 2308,
	188, 2308,
	189, 2308,
	190, 2308,
	191, 2308,
	192, 2308,
	193, 2308,
	194, 2308,
	195, 2308,
	196, 2308,
	197, 2308,
	198, 2308,
	199, 2308,
	200, 2308,
	201, 2308,
	202, 2308,
	204, 2308,
	205, 2308,
	207, 2308,
	208, 2308,
	209, 2308,
	211, 2308,
	212, 2308,
	213, 2308,
	214, 2308,
	216, 2308,
	218, 2308,
	219, 2308,
	220, 2308,
	221, 2308,
	222, 2308,
	223, 2308,
	224, 2308,
	225, 2308,
	226, 2308,
	227, 2308,
	229, 2308,
	230, 2308,
	231, 2308,
	232, 2308,
	233, 2308,
	234, 2308,
	235, 2308,
	236, 2308,
	238, 2308,
	239, 2308,
	240, 2308,
	242, 2308,
	243, 2308,
	244, 2308,
	245, 2308,
	246, 2308,
	247, 2308,
	249, 2308,
	250, 2308,
	251, 2308,
	254, 2308,
	255, 2308,
	256, 2308,
	257, 2308,
	258, 2308,
	259, 2308,
	260, 2308,
	261, 2308,
	262, 2308,
	263, 2308,
	264, 2308,
	265, 2308,
	266, 2308,
	267, 2308,
	268, 2308,
	269, 2308,
	271, 2308,
	272, 2308,
	273, 2308,
	274, 2308,
	275, 2308,
	276, 2308,
	277, 2308,
	278, 2308,
	280, 2308,
	283, 2308,
	284, 2308,
	286, 2308,
	287, 2308,
	288, 2308,
	289, 2308,
	290, 2308,
	293, 2308,
	297, 2308,
	298, 2308,
	299, 2308,
	300, 2308,
	302, 2308,
	303, 2308,
	304, 2308,
	306, 2308,
	308, 2308,
	309, 2308,
	310, 2308,
	311, 2308,
	312, 2308,
	313, 2308,
	314, 2308,
	315, 2308,
	316, 2308,
	317, 2308,
	318, 2308,
	319, 2308,
	321, 2308,
	322, 2308,
	323, 2308,
	324, 2308,
	325, 2308,
	326, 2308,
	327, 2308,
	328, 2308,
	329, 2308,
	331, 2308,
	333, 2308,
	334, 2308,
	335, 2308,
	336, 2308,
	337, 2308,
	338, 2308,
	339, 2308,
	340, 2308,
	341, 2308,
	342, 2308,
	343, 2308,
	345, 2308,
	351, 2308,
	352, 2308,
	353, 2308,
	354, 2308,
	355, 2308,
	356, 2308,
	357, 2308,
	358, 2308,
	359, 2308,
	360, 2308,
	362, 2308,
	363, 2308,
	364, 2308,
	365, 2308,
	366, 2308,
	367, 2308,
	368, 2308,
	369, 2308,
	370, 2308,
	371, 2308,
	372, 2308,
	373, 2308,
	374, 2308,
	375, 2308,
	376, 2308,
	377, 2308,
	378, 2308,
	379, 2308,
	380, 2308,
	381, 2308,
	382, 2308,
	383, 2308,
	385, 2308,
	386, 2308,
	387, 2308,
	388, 2308,
	389, 2308,
	390, 2308,
	392, 2308,
	393, 2308,
	394, 2308,
	395, 2308,
	396, 2308,
	397, 2308,
	398, 2308,
	399, 2308,
	400, 2308,
	401, 2308,
	402, 2308,
	403, 2308,
	404, 2308,
	406, 2308,
	408, 2308,
	409, 2308,
	410, 2308,
	411, 2308,
	412, 2308,
	413, 2308,
	414, 2308,
	415, 2308,
	416, 2308,
	417, 2308,
	418, 2308,
	419, 2308,
	420, 2308,
	422, 2308,
	423, 2308,
	425, 2308,
	427, 2308,
	428, 2308,
	429, 2308,
	430, 2308,
	431, 2308,
	432, 2308,
	433, 2308,
	434, 2308,
	436, 2308,
	437, 2308,
	438, 2308,
	439, 2308,
	440, 2308,
	442, 2308,
	444, 2308,
	445, 2308,
	446, 2308,
	447, 2308,
	448, 2308,
	450, 2308,
	451, 2308,
	452, 2308,
	454, 2308,
	455, 2308,
	458, 2308,
	459, 2308,
	460, 2308,
	461, 2308,
	462, 2308,
	463, 2308,
	464, 2308,
	466, 2308,
	469, 2308,
	470, 2308,
	471, 2308,
	472, 2308,
	473, 2308,
	474, 2308,
	476, 2308,
	477, 2308,
	478, 2308,
	483, 2308,
	484, 2308,
	485, 2308,
	486, 2308,
	487, 2308,
	488, 2308,
	489, 2308,
	490, 2308,
	493, 2308,
	494, 2308,
	495, 2308,
	496, 2308,
	497, 2308,
	498, 2308,
	500, 2308,
	501, 2308,
	502, 2308,
	503, 2308,
	504, 2308,
	505, 2308,
	506, 2308,
	507, 2308,
	508, 2308,
	510, 2308,
	513, 2308,
	514, 2308,
	516, 2308,
	517, 2308,
	-2, 0,
	-1, 1445,
	171, 2201,
	441, 2201,
	495, 2201,
	514, 2201,
	-2, 0,
	-1, 1493,
	335, 758,
	390, 758,
	-2, 0,
	-1, 1518,
	1, 753,
	511, 753,
	513, 753,
	515, 753,
	-2, 0,
	-1, 1519,
	1, 789,
	511, 789,
	513, 789,
	515, 789,
	-2, 0,
	-1, 1520,
	1, 760,
	511, 760,
	513, 760,
	515, 760,
	-2, 0,
	-1, 1522,
	1, 764,
	511, 764,
	513, 764,
	515, 764,
	-2, 0,
	-1, 1528,
	1, 771,
	511, 771,
	513, 771,
	515, 771,
	-2, 0,
	-1, 1556,
	1, 2255,
	511, 2255,
	513, 2255,
	514, 2255,
	515, 2255,
	-2, 818,
	-1, 1557,
	1, 2198,
	511, 2198,
	513, 2198,
	514, 2198,
	515, 2198,
	-2, 819,
	-1, 1572,
	1, 1177,
	515, 1177,
	-2, 1182,
	-1, 1575,
	155, 1308,
	168, 1308,
	248, 1308,
	291, 1308,
	-2, 1248,
	-1, 1669,
	137, 1269,
	155, 1269,
	168, 1269,
	215, 1269,
	248, 1269,
	291, 1269,
	301, 1269,
	456, 1269,
	-2, 1674,
	-1, 1729,
	513, 1824,
	-2, 0,
	-1, 1764,
	137, 1269,
	155, 1269,
	168, 1269,
	215, 1269,
	248, 1269,
	291, 1269,
	301, 1269,
	456, 1269,
	-2, 1389,
	-1, 1811,
	512, 1501,
	-2, 1489,
	-1, 1847,
	1, 595,
	515, 595,
	-2, 1182,
	-1, 2074,
	1, 755,
	511, 755,
	513, 755,
	515, 755,
	-2, 0,
	-1, 2075,
	1, 791,
	511, 791,
	513, 791,
	515, 791,
	-2, 0,
	-1, 2105,
	1, 773,
	511, 773,
	513, 773,
	515, 773,
	-2, 0,
	-1, 2151,
	370, 1335,
	371, 1335,
	-2, 1534,
	-1, 2182,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1554,
	-1, 2183,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1555,
	-1, 2184,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1556,
	-1, 2185,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1557,
	-1, 2186,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1558,
	-1, 2187,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1559,
	-1, 2188,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1560,
	-1, 2189,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1561,
	-1, 2201,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1573,
	-1, 2202,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1574,
	-1, 2203,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1575,
	-1, 2206,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1580,
	-1, 2212,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1584,
	-1, 2214,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1592,
	-1, 2215,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1593,
	-1, 2216,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1594,
	-1, 2217,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1595,
	-1, 2329,
	5, 1967,
	171, 1835,
	512, 1964,
	-2, 1955,
	-1, 2330,
	171, 1836,
	-2, 2259,
	-1, 2331,
	171, 1837,
	-2, 2116,
	-1, 2332,
	171, 1838,
	-2, 2026,
	-1, 2333,
	171, 1839,
	-2, 2070,
	-1, 2334,
	171, 1840,
	-2, 2111,
	-1, 2335,
	171, 1841,
	-2, 2196,
	-1, 2336,
	171, 1842,
	-2, 1657,
	-1, 2405,
	1, 1390,
	2, 1390,
	96, 1390,
	137, 1390,
	155, 1390,
	168, 1390,
	172, 1390,
	182, 1390,
	185, 1390,
	211, 1390,
	215, 1390,
	226, 1390,
	244, 1390,
	248, 1390,
	272, 1390,
	291, 1390,
	295, 1390,
	301, 1390,
	361, 1390,
	365, 1390,
	456, 1390,
	467, 1390,
	480, 1390,
	481, 1390,
	482, 1390,
	491, 1390,
	511, 1390,
	513, 1390,
	515, 1390,
	517, 1390,
	-2, 1389,
	-1, 2418,
	512, 1936,
	-2, 1950,
	-1, 2420,
	1, 271,
	-2, 1296,
	-1, 2442,
	512, 1500,
	-2, 1490,
	-1, 2560,
	1, 1080,
	511, 1080,
	513, 1080,
	515, 1080,
	-2, 1296,
	-1, 2724,
	296, 1338,
	-2, 2298,
	-1, 2725,
	296, 1339,
	-2, 2182,
	-1, 2729,
	370, 1901,
	371, 1901,
	-2, 1655,
	-1, 2730,
	370, 1905,
	371, 1905,
	-2, 1656,
	-1, 2731,
	370, 1902,
	371, 1902,
	-2, 1655,
	-1, 2732,
	370, 1906,
	371, 1906,
	-2, 1656,
	-1, 2745,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1582,
	-1, 2746,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1586,
	-1, 2752,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1588,
	-1, 2950,
	223, 1182,
	331, 1182,
	339, 1182,
	491, 1182,
	-2, 592,
	-1, 3078,
	1, 1080,
	511, 1080,
	513, 1080,
	515, 1080,
	-2, 1296,
	-1, 3183,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1590,
	-1, 3190,
	220, 0,
	222, 0,
	283, 0,
	-2, 1609,
	-1, 3257,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1638,
	-1, 3258,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1639,
	-1, 3259,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1640,
	-1, 3263,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1644,
	-1, 3264,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1645,
	-1, 3265,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1646,
	-1, 3311,
	512, 1937,
	-2, 1951,
	-1, 3435,
	514, 2414,
	-2, 1226,
	-1, 3492,
	220, 0,
	222, 0,
	283, 0,
	-2, 1610,
	-1, 3495,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1613,
	-1, 3496,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1615,
	-1, 3701,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1614,
	-1, 3702,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1616,
	-1, 3713,
	220, 0,
	-2, 1647,
	-1, 3859,
	220, 0,
	-2, 1648,
	-1, 4008,
	47, 0,
	195, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 2262,
}

const sqlPrivate = 57344

const sqlLast = 101912

var sqlAct = [...]int{

	242, 3881, 4018, 3902, 4116, 2879, 3063, 3788, 3748, 4007,
	2644, 3745, 3982, 3475, 3627, 3966, 3976, 3337, 3064, 3963,
	4019, 3948, 4020, 3733, 4066, 1303, 2616, 2045, 2018, 3795,
	1110, 3222, 2880, 3658, 3653, 3863, 933, 2161, 3612, 1428,
	2475, 3690, 4006, 3427, 1287, 2968, 2054, 3641, 3804, 2029,
	3561, 1423, 3375, 3094, 2229, 3826, 1798, 3059, 3663, 3087,
	1584, 3049, 3388, 2537, 3405, 1900, 937, 3175, 3390, 3089,
	667, 3338, 1460, 3139, 633, 2361, 2169, 1169, 2738, 3141,
	2666, 2653, 2162, 2588, 2579, 2605, 1099, 2655, 3718, 3313,
	1842, 2902, 2922, 2894, 667, 3531, 2862, 1501, 1262, 3474,
	2646, 765, 2663, 2652, 2600, 1770, 2617, 2602, 2883, 1949,
	1739, 2477, 1948, 1910, 2397, 3282, 2166, 2514, 1677, 1270,
	2398, 2242, 2885, 2052, 2027, 932, 163, 1715, 1459, 2987,
	3864, 1943, 2400, 2662, 4, 1934, 2722, 662, 2551, 2271,
	2344, 3789, 2589, 1153, 1927, 2929, 1883, 1886, 1740, 2262,
	236, 2226, 235, 2133, 1572, 2379, 1759, 1873, 2150, 2131,
	1438, 924, 1090, 1424, 2358, 1404, 3061, 1414, 2610, 1420,
	981, 2861, 1983, 1356, 2466, 1142, 986, 668, 2656, 599,
	585, 2265, 669, 1749, 607, 2369, 1710, 1427, 984, 1093,
	2387, 1072, 988, 2325, 172, 2243, 1289, 2513, 37, 2315,
	1662, 615, 1585, 2132, 2134, 1586, 1031, 1528, 664, 101,
	1982, 1107, 163, 627, 2004, 739, 1380, 712, 1436, 1298,
	673, 759, 676, 173, 1899, 2155, 1799, 962, 602, 42,
	41, 39, 610, 30, 2773, 28, 1070, 2769, 26, 1591,
	1309, 1571, 824, 842, 673, 1095, 676, 3296, 2881, 3297,
	2834, 2835, 2020, 2852, 2853, 2854, 2020, 3104, 4179, 1267,
	928, 2020, 2378, 1756, 2020, 2020, 2948, 4173, 4158, 4157,
	2273, 3120, 2378, 2378, 4133, 4131, 4127, 4048, 3577, 3577,
	1957, 4049, 4042, 4040, 4037, 3103, 2378, 2378, 4038, 4034,
	3120, 4029, 4004, 4035, 1089, 1957, 1957, 4003, 928, 4002,
	3997, 1957, 780, 2038, 2038, 3996, 3991, 1302, 2782, 2038,
	3577, 1150, 1599, 1600, 2783, 1632, 1633, 1634, 1642, 1643,
	1644, 2849, 3989, 3961, 3942, 3935, 3577, 3577, 2433, 2378,
	2371, 1126, 2737, 1087, 1630, 1073, 1073, 2053, 3934, 3929,
	3928, 1602, 2378, 3577, 3577, 3922, 3895, 3861, 1648, 1957,
	3619, 2433, 3843, 3840, 2378, 3837, 3463, 1957, 909, 3577,
	3797, 3765, 3764, 3756, 3798, 1957, 1957, 1957, 3755, 1076,
	3943, 1077, 3577, 1601, 1599, 1600, 3856, 1632, 1633, 1634,
	1642, 1643, 1644, 1621, 929, 3724, 3703, 908, 3682, 1957,
	2433, 1618, 2038, 3671, 3607, 1635, 1630, 3120, 2378, 1102,
	3596, 1150, 3576, 1602, 2378, 2840, 3577, 3494, 923, 3443,
	1648, 2433, 3437, 3136, 918, 3403, 3136, 3306, 3304, 3404,
	3289, 3307, 3305, 3844, 2378, 3206, 3202, 3286, 3135, 1957,
	2378, 2533, 3136, 3127, 2878, 1601, 2038, 3128, 2378, 2873,
	1074, 1121, 2872, 2378, 2825, 1621, 2378, 86, 2826, 2429,
	2823, 2815, 2813, 1618, 2824, 2816, 2378, 1624, 1625, 1626,
	1627, 2784, 2669, 3286, 2642, 2378, 2038, 1607, 2041, 2370,
	2641, 2450, 1599, 1600, 2041, 2378, 2378, 2432, 2427, 2421,
	2499, 2433, 2378, 1957, 1957, 2377, 2040, 3652, 3619, 2378,
	2041, 3597, 1957, 3463, 1630, 3128, 1639, 2850, 2528, 1649,
	208, 1602, 2465, 2268, 1521, 1629, 1631, 1904, 1853, 2019,
	2585, 1956, 2834, 2835, 2772, 2545, 2463, 1122, 1735, 1624,
	1625, 1626, 1627, 1297, 3367, 1599, 1600, 3178, 3156, 1607,
	1616, 1617, 1757, 1601, 1937, 2414, 2413, 1503, 3105, 2412,
	2411, 979, 210, 1621, 2410, 1078, 1075, 917, 1637, 916,
	915, 2021, 914, 208, 1602, 2021, 1472, 3106, 1639, 1622,
	2021, 1649, 913, 2021, 2021, 1468, 912, 1629, 1631, 2702,
	1686, 911, 907, 208, 906, 905, 904, 903, 902, 901,
	900, 2269, 899, 1645, 898, 1646, 1601, 897, 209, 896,
	895, 894, 1616, 1617, 893, 210, 892, 891, 202, 873,
	822, 1302, 821, 3103, 820, 819, 203, 818, 817, 816,
	1637, 2851, 1122, 815, 814, 210, 813, 1624, 1625, 1626,
	1627, 1622, 208, 812, 811, 810, 809, 1607, 174, 808,
	807, 1323, 986, 806, 805, 804, 986, 803, 802, 801,
	800, 209, 799, 798, 797, 796, 1647, 795, 794, 793,
	783, 1172, 782, 1628, 778, 1172, 2270, 2267, 777, 1292,
	771, 209, 770, 1636, 210, 1629, 1631, 2840, 1152, 730,
	1311, 202, 1157, 1623, 4025, 1146, 2370, 1122, 729, 203,
	1607, 174, 986, 208, 986, 689, 986, 688, 687, 1454,
	679, 1292, 678, 677, 647, 136, 639, 638, 1640, 637,
	621, 174, 230, 229, 3547, 1273, 228, 3506, 1278, 2630,
	209, 2596, 227, 2036, 1292, 1628, 2298, 226, 2033, 1622,
	202, 2019, 2126, 225, 224, 210, 223, 222, 203, 221,
	220, 1311, 2846, 2847, 2848, 1623, 219, 218, 217, 2845,
	2843, 2844, 2836, 2837, 2838, 2839, 2841, 2842, 2834, 2835,
	174, 2852, 2853, 2854, 2284, 216, 1292, 986, 215, 2850,
	1640, 214, 1292, 213, 212, 211, 1292, 1362, 1364, 3490,
	3321, 209, 3300, 3137, 986, 2272, 986, 1301, 2925, 2795,
	1292, 202, 2778, 1140, 2566, 2437, 986, 2419, 986, 203,
	1638, 2404, 1458, 1881, 1613, 1614, 1620, 1641, 1619, 1615,
	1783, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	2876, 174, 1165, 1628, 1259, 1264, 1718, 2834, 2835, 2849,
	1322, 673, 1717, 676, 2834, 2835, 1718, 1760, 2048, 1292,
	2613, 2877, 1717, 1623, 1688, 2282, 1305, 1159, 1109, 4005,
	1135, 3909, 3853, 3717, 1721, 1281, 986, 3672, 1300, 986,
	1598, 1679, 1638, 1299, 1716, 1311, 1613, 1614, 1620, 1641,
	1619, 1615, 3651, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 3743, 2851, 3847, 1317, 3516, 1435, 3554, 2266,
	3515, 1308, 3845, 1315, 3529, 1321, 208, 3528, 163, 163,
	3667, 1473, 3522, 3521, 3520, 3513, 3512, 1441, 1443, 1352,
	3510, 3505, 3502, 2840, 2446, 2047, 2834, 2835, 3501, 2852,
	2853, 2854, 2395, 3408, 2598, 1408, 1411, 3402, 3325, 3324,
	3323, 3310, 3277, 3276, 1146, 3275, 3198, 1146, 210, 2834,
	2835, 3194, 2852, 2853, 2854, 2920, 2869, 3365, 208, 986,
	986, 986, 986, 986, 986, 986, 2860, 208, 1537, 2833,
	3489, 2830, 3131, 2829, 2827, 2822, 1434, 2855, 1439, 2821,
	2820, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	986, 929, 2840, 1452, 209, 1457, 986, 2849, 1367, 2840,
	210, 1523, 2817, 2814, 202, 1466, 2794, 1471, 2777, 210,
	2770, 1680, 203, 1678, 1679, 2850, 1599, 1600, 2643, 2405,
	2849, 2845, 2843, 2844, 2836, 2837, 2838, 2839, 2841, 2842,
	2255, 1598, 1417, 208, 174, 1453, 1597, 1603, 1604, 1605,
	1606, 1608, 1609, 1383, 1086, 1602, 209, 1467, 1995, 4172,
	1599, 1600, 1964, 4125, 1962, 209, 202, 1570, 4124, 3409,
	4058, 4056, 4047, 1522, 203, 202, 2834, 2835, 1111, 2852,
	2853, 2854, 1630, 203, 3224, 210, 3901, 1601, 3891, 1602,
	3888, 2840, 2874, 977, 1316, 3887, 174, 3193, 1478, 3886,
	1576, 208, 3880, 1668, 1494, 174, 3873, 1687, 2834, 2835,
	986, 986, 986, 3841, 2840, 1524, 986, 3825, 3824, 2597,
	2232, 1601, 3812, 1107, 3809, 1107, 3761, 3739, 3715, 3698,
	208, 209, 3697, 3679, 1737, 3865, 2917, 3666, 3678, 2851,
	1172, 202, 3644, 210, 3620, 2855, 3546, 2849, 986, 203,
	3527, 667, 1573, 3464, 3458, 1816, 667, 909, 1581, 1580,
	3455, 3355, 3409, 3354, 3341, 986, 2238, 1786, 2855, 1292,
	3340, 174, 210, 1575, 3292, 3280, 3189, 1795, 1666, 3138,
	3121, 1607, 1840, 2850, 986, 3080, 908, 3025, 3000, 209,
	1172, 1746, 1577, 1720, 2971, 1791, 1594, 1595, 2970, 202,
	2943, 2941, 2799, 2798, 208, 2793, 2850, 203, 2761, 929,
	2578, 1724, 1723, 1850, 1146, 1607, 1599, 1600, 209, 1722,
	1879, 1743, 1744, 1793, 1719, 1711, 1709, 2444, 202, 174,
	234, 2840, 2443, 2416, 1073, 2409, 203, 1844, 2376, 2280,
	1845, 1782, 1461, 1712, 1713, 1602, 210, 1767, 2834, 2835,
	1738, 1733, 163, 1629, 1631, 2834, 2835, 2297, 2612, 1732,
	2846, 2847, 2848, 2840, 1731, 1730, 1729, 2845, 2843, 2844,
	2836, 2837, 2838, 2839, 2841, 2842, 2049, 1601, 1728, 2435,
	1727, 1726, 1768, 1725, 1706, 2855, 1705, 208, 2971, 208,
	1704, 1703, 209, 1702, 3647, 2283, 1701, 2851, 1700, 1870,
	1699, 673, 202, 676, 1105, 1310, 673, 1622, 676, 1698,
	203, 1102, 1697, 1102, 1765, 1789, 1696, 1695, 1694, 1693,
	2851, 1692, 1847, 2850, 1681, 1774, 1292, 1292, 1667, 210,
	1665, 210, 174, 1660, 929, 1134, 1172, 1892, 1736, 2836,
	2837, 2838, 2839, 2841, 2842, 1124, 1117, 1810, 2838, 2839,
	2841, 2842, 3550, 3498, 3728, 2850, 1777, 1776, 1775, 1794,
	1773, 1813, 1772, 1924, 1839, 1771, 1926, 983, 1762, 1931,
	3320, 3303, 3295, 2781, 3552, 209, 2281, 209, 2407, 2834,
	2835, 1796, 3319, 931, 1758, 202, 1680, 202, 2939, 3848,
	1663, 3599, 1778, 203, 1872, 203, 4122, 3846, 1952, 1954,
	1872, 4115, 1787, 2840, 1156, 3889, 3090, 1875, 3800, 1865,
	2840, 3799, 3742, 3670, 1872, 174, 3622, 174, 2846, 2847,
	2848, 1623, 3621, 3598, 3549, 2845, 2843, 2844, 2836, 2837,
	2838, 2839, 2841, 2842, 1701, 1909, 1701, 2851, 3467, 3466,
	3465, 2846, 2847, 2848, 3298, 1935, 1154, 3123, 2845, 2843,
	2844, 2836, 2837, 2838, 2839, 2841, 2842, 3003, 1155, 3122,
	3805, 1150, 1718, 2518, 1760, 3412, 1568, 2023, 1717, 2851,
	2025, 1311, 945, 1292, 1150, 1292, 2030, 1292, 673, 2032,
	676, 2819, 1994, 2035, 1987, 2818, 2743, 2501, 1151, 3353,
	1859, 889, 1690, 1292, 1292, 2850, 1502, 3719, 1493, 1147,
	2881, 1992, 2850, 3226, 1292, 1300, 3066, 2001, 3065, 1150,
	1299, 4001, 2046, 3796, 4045, 4030, 4017, 1292, 1292, 1292,
	1605, 1606, 1608, 1609, 3050, 2667, 1503, 1950, 1930, 3372,
	3358, 890, 2055, 1996, 4026, 3154, 2263, 2442, 667, 1538,
	1734, 1714, 2787, 2066, 3057, 2009, 1991, 1955, 1361, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 2846, 2847,
	2848, 1129, 4039, 1998, 1085, 2845, 2843, 2844, 2836, 2837,
	2838, 2839, 2841, 2842, 4036, 3099, 3332, 1904, 1101, 2542,
	3882, 2051, 3654, 2539, 1975, 1974, 3960, 3870, 1848, 1482,
	2974, 3348, 2650, 1170, 4027, 2070, 2609, 1271, 2843, 2844,
	2836, 2837, 2838, 2839, 2841, 2842, 3047, 1148, 4082, 2851,
	3921, 3170, 3781, 2952, 3587, 1149, 2851, 1329, 986, 2451,
	986, 2003, 2056, 2007, 887, 3385, 4083, 986, 2125, 1141,
	1816, 1816, 1172, 1535, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 1439,
	986, 1439, 986, 986, 986, 986, 2143, 2011, 2012, 869,
	1860, 4167, 929, 2130, 929, 3384, 2151, 208, 673, 1135,
	676, 2042, 3774, 2043, 986, 885, 1804, 986, 986, 1383,
	1339, 2006, 927, 2006, 2940, 986, 2268, 883, 1536, 986,
	2111, 986, 986, 1609, 881, 2059, 1156, 1295, 878, 1172,
	3767, 2109, 1534, 3381, 2469, 986, 986, 986, 986, 210,
	986, 986, 986, 986, 986, 986, 986, 986, 2467, 2844,
	2836, 2837, 2838, 2839, 2841, 2842, 2088, 2836, 2837, 2838,
	2839, 2841, 2842, 2436, 3380, 1480, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 208, 2060, 1150, 2105, 986,
	1155, 3374, 2244, 2245, 1156, 209, 3371, 2154, 1340, 3369,
	926, 1107, 725, 3329, 2269, 202, 2244, 2260, 1172, 3920,
	3328, 2792, 2791, 203, 2790, 2789, 2747, 1107, 1864, 1863,
	3002, 2549, 1872, 1874, 2548, 2544, 2127, 210, 2535, 1147,
	2129, 2128, 2306, 986, 1172, 174, 909, 2142, 2135, 909,
	909, 2527, 1810, 1810, 2526, 2345, 2469, 2224, 1155, 2259,
	1973, 2328, 2328, 2342, 2505, 2244, 1813, 1813, 2362, 2364,
	2467, 2492, 2428, 2213, 2368, 2158, 1574, 2954, 2159, 2160,
	1147, 2392, 4110, 209, 2311, 2222, 2167, 2168, 2310, 2270,
	2267, 2171, 2606, 202, 960, 3155, 928, 1901, 2522, 875,
	1373, 203, 1372, 1371, 726, 1370, 2842, 2141, 2552, 2123,
	3696, 2124, 1292, 1265, 2064, 2503, 1277, 1280, 2417, 2515,
	2516, 2263, 2240, 174, 3600, 2515, 2516, 1347, 1073, 1897,
	2458, 1284, 2758, 2384, 1394, 929, 2257, 3583, 1867, 2515,
	2516, 2420, 1172, 2406, 929, 1547, 1495, 1148, 929, 1767,
	2120, 2139, 1335, 1902, 1903, 1149, 1850, 645, 2141, 1146,
	2756, 2491, 1533, 1326, 1475, 2383, 4111, 2115, 2228, 2720,
	2228, 1296, 1816, 2391, 2078, 2396, 1280, 1280, 2402, 2403,
	2337, 1898, 1567, 163, 2324, 2353, 1358, 2366, 1148, 2374,
	2375, 2735, 2430, 1114, 2073, 2385, 1149, 4082, 1172, 1102,
	1491, 2218, 2139, 3994, 2389, 2390, 1503, 2122, 2272, 2541,
	1551, 1579, 1292, 2219, 1280, 1102, 1765, 2220, 1720, 2951,
	2081, 2225, 986, 986, 2236, 986, 1778, 1112, 1431, 2471,
	4119, 2234, 3344, 2490, 1133, 1748, 929, 3750, 1447, 2540,
	1869, 2008, 2308, 2538, 3161, 3160, 2536, 2309, 2449, 1503,
	2312, 925, 2313, 2314, 2705, 644, 2445, 2479, 2699, 4113,
	3215, 2272, 3370, 3573, 3017, 1911, 2137, 2582, 2554, 3368,
	1476, 2140, 1712, 1713, 3010, 1868, 2753, 1904, 3357, 791,
	2523, 2448, 1784, 2507, 1481, 2595, 1915, 3212, 2452, 2553,
	2555, 2543, 2754, 2454, 3569, 2525, 2759, 879, 2504, 1292,
	1292, 1485, 1292, 3016, 3581, 1103, 2734, 1150, 2456, 2620,
	1923, 1752, 2266, 3009, 1292, 723, 2629, 722, 2082, 2494,
	2470, 3356, 2140, 2484, 2487, 1115, 2474, 3335, 1530, 2558,
	3695, 2506, 1882, 2438, 1912, 2502, 2561, 2138, 2563, 2638,
	3570, 2457, 2591, 3752, 2524, 2633, 2672, 2673, 1150, 1922,
	1755, 2664, 2708, 728, 727, 2678, 2679, 2680, 2498, 2482,
	2455, 1357, 3213, 986, 1810, 1750, 2074, 673, 879, 676,
	2119, 2688, 4023, 2689, 2517, 2519, 2520, 2521, 1813, 2272,
	879, 2221, 2110, 1753, 4136, 4126, 2668, 880, 2138, 2532,
	2223, 879, 2686, 2108, 1300, 1887, 1961, 1960, 2508, 2564,
	1888, 1804, 1804, 2622, 1907, 1355, 3939, 986, 2576, 2649,
	1887, 1751, 1518, 986, 986, 1888, 1105, 2586, 1105, 2567,
	4112, 2075, 2570, 2468, 2572, 4099, 163, 2121, 2604, 1916,
	2710, 1548, 2712, 784, 2896, 2639, 2615, 2683, 1790, 4098,
	2670, 3582, 2426, 1906, 2674, 4117, 2675, 2690, 2626, 2692,
	2627, 2694, 2628, 1393, 864, 4071, 2755, 2727, 2728, 3480,
	2707, 2636, 2640, 2611, 2634, 2757, 2611, 1519, 986, 986,
	2703, 1334, 646, 2723, 986, 643, 2651, 922, 1958, 3479,
	3393, 2272, 2559, 2704, 2635, 3096, 3883, 986, 986, 3391,
	1917, 1918, 1337, 986, 986, 3345, 1895, 3897, 1439, 986,
	4149, 1889, 3097, 1913, 1754, 1895, 1904, 3565, 986, 986,
	986, 3566, 1357, 4024, 986, 772, 1889, 2953, 1891, 2481,
	1545, 1707, 2020, 876, 986, 2985, 2750, 1876, 1877, 4118,
	1947, 758, 2937, 1891, 4070, 3028, 4092, 1914, 2080, 1549,
	2780, 986, 3971, 2717, 1933, 1113, 3636, 2726, 2716, 2715,
	2749, 2632, 2227, 2345, 2345, 1546, 3568, 2210, 865, 3937,
	2696, 2469, 4120, 3751, 2154, 2721, 2077, 1932, 3096, 597,
	3571, 2991, 2706, 1946, 2984, 2485, 1277, 1895, 3476, 3708,
	1893, 3692, 1938, 2736, 2775, 2776, 2072, 1945, 1477, 2779,
	3394, 1490, 1492, 3938, 592, 1893, 792, 3900, 4022, 1928,
	1659, 2685, 1578, 2993, 2235, 2797, 2895, 986, 986, 986,
	2691, 1479, 2693, 864, 2695, 2388, 986, 986, 986, 4137,
	1550, 986, 2748, 1902, 1903, 1132, 2401, 2762, 2763, 2254,
	928, 986, 1107, 1172, 3228, 1748, 922, 986, 1919, 986,
	2888, 2889, 4147, 2713, 4051, 3646, 2480, 1107, 3470, 3316,
	1127, 1929, 3393, 4052, 3481, 785, 786, 3172, 2992, 2718,
	3903, 3391, 3407, 4021, 1506, 1172, 4081, 2771, 4079, 3917,
	3811, 2786, 1671, 2345, 2345, 2345, 1676, 1107, 3425, 3083,
	1172, 1981, 1894, 3567, 1745, 1125, 1895, 1589, 1944, 1120,
	1101, 2910, 1101, 4069, 1816, 584, 2871, 1894, 1172, 3691,
	1752, 1895, 929, 3477, 2157, 2208, 1920, 1905, 2211, 3176,
	986, 1752, 2890, 1804, 2935, 1861, 3869, 865, 3574, 3525,
	3392, 866, 3637, 2930, 986, 2995, 4142, 3758, 3757, 3737,
	3426, 3211, 1588, 2947, 3586, 3378, 1816, 773, 774, 1755,
	2957, 3585, 3331, 620, 1858, 1583, 2949, 2857, 2858, 2859,
	1755, 3084, 986, 1292, 2386, 3077, 2966, 2207, 1146, 2900,
	2955, 2962, 3394, 2923, 2996, 1750, 2899, 2958, 2959, 2898,
	1588, 2908, 1753, 1925, 2170, 2919, 2590, 2911, 2912, 2882,
	2866, 2867, 2868, 1753, 2580, 2975, 2002, 1993, 2979, 2916,
	2928, 2976, 2909, 1986, 2981, 2982, 1172, 2988, 1969, 4150,
	3281, 2897, 3904, 3949, 3173, 1292, 2380, 2116, 787, 788,
	1292, 1751, 3693, 3005, 1856, 2963, 1990, 2486, 1854, 1292,
	1102, 2021, 2914, 1292, 2915, 1587, 3266, 1172, 3389, 2932,
	2933, 2934, 2147, 3428, 667, 1102, 3659, 1857, 2577, 2924,
	3031, 867, 1890, 3034, 3794, 1292, 1396, 3039, 3041, 2988,
	3792, 2065, 1588, 4050, 2988, 1292, 3008, 1890, 3294, 3026,
	3738, 2275, 2977, 1587, 2973, 1102, 2950, 1892, 1589, 1941,
	1107, 3071, 2972, 2956, 3092, 1277, 2382, 2741, 2719, 3062,
	866, 2381, 3076, 3526, 2509, 3019, 1810, 868, 1520, 593,
	775, 776, 3392, 1754, 2893, 3051, 1892, 4141, 3482, 1659,
	1813, 2994, 2892, 2425, 1754, 3001, 1589, 2209, 3584, 2424,
	1292, 1292, 1939, 2664, 2423, 3109, 3110, 3111, 2961, 2044,
	2938, 3114, 2664, 3115, 3021, 3116, 3015, 2422, 1810, 3101,
	1935, 3119, 1292, 3048, 3036, 1431, 2057, 3037, 1935, 3043,
	3112, 3027, 1813, 3012, 2148, 1587, 2058, 3398, 2584, 3044,
	926, 1940, 3007, 594, 2997, 2998, 2418, 1507, 2999, 2067,
	2068, 2069, 2967, 2507, 3876, 1172, 1365, 3746, 1172, 3085,
	3905, 3055, 3483, 3018, 2944, 2945, 3013, 2946, 3093, 1366,
	3014, 3628, 3267, 1379, 673, 3132, 676, 2000, 3022, 3023,
	3268, 3035, 3024, 1377, 3053, 595, 3042, 596, 986, 4089,
	867, 619, 790, 2931, 986, 986, 3098, 3100, 986, 986,
	986, 3150, 986, 3790, 2671, 3107, 3113, 2562, 3167, 3957,
	3676, 986, 1816, 3130, 3735, 3946, 3029, 163, 163, 3134,
	986, 3532, 3283, 986, 3149, 3074, 3117, 3118, 2279, 1172,
	2510, 2511, 3952, 3142, 3877, 3166, 868, 3020, 986, 3157,
	3975, 3158, 1565, 3159, 2464, 1563, 1172, 680, 1102, 3747,
	3151, 3736, 4091, 2904, 1542, 4041, 1816, 1816, 986, 986,
	3890, 986, 986, 986, 1105, 2345, 2345, 3714, 3191, 3524,
	3174, 3675, 929, 3397, 3163, 2863, 3188, 3152, 2828, 986,
	1105, 2760, 2581, 986, 2864, 1816, 1816, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 1540, 986, 3171, 3953,
	1517, 3878, 1515, 2534, 986, 986, 1816, 3091, 1513, 3144,
	1511, 986, 2500, 2447, 1785, 1509, 1781, 1500, 1498, 1566,
	1375, 1463, 986, 3169, 3143, 3168, 2905, 1583, 2701, 3184,
	3185, 3196, 2700, 1107, 1107, 2677, 2136, 986, 2118, 2107,
	1529, 2085, 3207, 2345, 2345, 2345, 2345, 2345, 2345, 2345,
	2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345,
	2345, 2345, 3230, 2345, 1966, 1841, 1172, 1103, 3223, 1103,
	3214, 3216, 3217, 2278, 2903, 1691, 3200, 3201, 1378, 1474,
	3299, 1351, 3240, 4016, 3241, 3238, 3278, 3606, 1376, 3239,
	3140, 3245, 3030, 3595, 1810, 986, 877, 789, 3270, 2907,
	4093, 1564, 3945, 3657, 1562, 3164, 3611, 3558, 1813, 3424,
	3417, 986, 986, 1541, 3326, 1804, 3383, 3247, 3248, 3249,
	3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259,
	3260, 3261, 3262, 3263, 3264, 3265, 240, 3269, 1810, 1810,
	163, 986, 986, 3243, 3287, 3288, 1792, 3285, 3350, 3279,
	3352, 3351, 1813, 1813, 3349, 3290, 3291, 1804, 4067, 681,
	682, 2323, 2319, 3330, 3075, 1539, 986, 1810, 1810, 1516,
	3302, 1514, 2167, 3231, 3271, 3301, 3067, 1512, 2631, 1510,
	2607, 1813, 1813, 2906, 1508, 3835, 1499, 1497, 1292, 1374,
	3149, 3145, 3146, 3147, 3148, 2594, 2587, 2574, 1810, 3142,
	2039, 2167, 3246, 1816, 3218, 2106, 2037, 3208, 3382, 2034,
	3364, 3366, 1813, 2031, 1887, 2026, 3359, 3363, 2024, 1888,
	3334, 1102, 1102, 3379, 2022, 2013, 1965, 3237, 1101, 1963,
	1292, 1951, 3274, 1936, 2317, 3827, 1921, 986, 882, 884,
	886, 3373, 2237, 1908, 1101, 1107, 986, 3828, 3438, 1896,
	3088, 2321, 2322, 2320, 3396, 3413, 3038, 1671, 1082, 3818,
	2739, 1945, 1265, 1292, 1292, 1292, 1592, 3315, 4083, 2507,
	684, 683, 3446, 3829, 3430, 3985, 3681, 1277, 3674, 1292,
	3673, 3618, 3444, 1083, 2620, 3144, 2665, 1880, 3400, 3433,
	1331, 3820, 2469, 3450, 2489, 3436, 1904, 1172, 3429, 2469,
	3143, 2076, 1416, 658, 2560, 2102, 2467, 1999, 2316, 2318,
	2101, 2349, 949, 2488, 3415, 3395, 3414, 2664, 3462, 1172,
	1889, 1415, 986, 986, 685, 686, 1560, 1561, 986, 986,
	1816, 3418, 3831, 986, 986, 3984, 986, 1891, 2083, 3314,
	986, 3431, 3588, 2740, 1599, 1600, 3613, 3434, 3830, 1496,
	3439, 986, 3855, 3440, 3322, 1599, 1600, 3533, 3511, 2512,
	2493, 3445, 1944, 1596, 1593, 3832, 598, 986, 3451, 3452,
	4085, 4046, 3453, 1602, 1280, 1280, 3456, 3459, 4077, 3460,
	3457, 1084, 3485, 713, 3377, 231, 3493, 2573, 1416, 755,
	2104, 2637, 1431, 1851, 3432, 1810, 3484, 2539, 2547, 1893,
	3473, 994, 1416, 2546, 3376, 1601, 920, 3478, 864, 1813,
	2529, 3497, 2495, 2531, 3944, 3468, 1601, 3913, 3419, 609,
	3910, 2497, 3875, 1277, 3787, 2887, 2530, 1107, 3416, 2967,
	581, 922, 3406, 1102, 2496, 1107, 3309, 3079, 2614, 1172,
	2367, 1172, 1846, 1804, 1797, 238, 238, 238, 1107, 587,
	588, 4114, 603, 587, 603, 613, 618, 2913, 3538, 3977,
	636, 1277, 1172, 1277, 3978, 642, 3744, 3145, 3146, 3147,
	3148, 238, 2926, 2936, 921, 4140, 2834, 2835, 1599, 1600,
	3523, 986, 3912, 4095, 2461, 2462, 1302, 1804, 1804, 769,
	2942, 3469, 3977, 2459, 2460, 238, 3503, 3978, 3579, 2274,
	1484, 1894, 3541, 3318, 2461, 1895, 1483, 3580, 1172, 3555,
	3556, 2459, 865, 2307, 3808, 1172, 1804, 1804, 3775, 3614,
	3591, 3592, 1810, 3535, 3536, 3537, 1544, 3610, 3540, 1543,
	3589, 3609, 3499, 3422, 2923, 3317, 1813, 3590, 1292, 1292,
	3545, 3219, 3548, 3032, 1884, 1685, 163, 1804, 1684, 3534,
	4128, 3544, 3557, 4100, 3866, 3530, 3771, 3539, 3578, 3729,
	3726, 3639, 3615, 3551, 3616, 1172, 3461, 3442, 3401, 3833,
	1292, 3626, 3399, 3347, 3834, 1105, 3617, 3624, 3608, 3342,
	3108, 3082, 3081, 1885, 2698, 3629, 2682, 2681, 2624, 2599,
	1105, 2575, 2440, 2439, 2239, 2103, 986, 3623, 2100, 2099,
	3603, 2098, 2097, 2016, 587, 587, 1292, 1292, 1292, 2015,
	3605, 3625, 238, 3677, 3661, 1102, 2014, 1172, 1997, 2926,
	1105, 1976, 1972, 1102, 3680, 1971, 1970, 1968, 3655, 986,
	986, 986, 3630, 3664, 1967, 3645, 1102, 1559, 3660, 3648,
	1558, 1504, 1403, 1402, 1401, 1400, 1399, 1172, 3650, 1398,
	1397, 1395, 986, 1390, 1389, 986, 986, 3662, 1388, 1387,
	1386, 1890, 1346, 1345, 1344, 986, 1343, 1342, 1816, 1341,
	1336, 1330, 1328, 986, 986, 866, 1327, 1163, 3684, 3686,
	1162, 1161, 1160, 3683, 1131, 3594, 1130, 1065, 1172, 3688,
	1292, 1852, 888, 874, 3694, 3749, 3602, 3572, 3604, 1553,
	84, 1338, 701, 1172, 3699, 78, 1942, 3346, 847, 3974,
	1324, 986, 3896, 708, 3959, 2983, 1790, 2550, 986, 2084,
	1505, 2086, 2918, 2408, 3716, 1103, 986, 3936, 1816, 2349,
	3507, 2345, 2796, 3862, 3710, 3707, 986, 2277, 1689, 986,
	3669, 1103, 2875, 80, 1804, 3638, 3731, 986, 970, 3721,
	1016, 3635, 3634, 3559, 1172, 3649, 3333, 1271, 3762, 3763,
	1170, 2654, 1292, 1292, 3722, 3723, 3632, 3631, 949, 1801,
	1803, 936, 949, 1175, 1862, 3770, 3668, 2345, 976, 3732,
	3730, 3776, 1878, 1871, 3778, 3779, 3754, 1256, 3725, 3753,
	2441, 1256, 3802, 919, 2327, 867, 3780, 993, 1172, 990,
	3793, 1292, 3704, 1805, 1807, 3713, 992, 3772, 991, 2349,
	2349, 1806, 3768, 1105, 1708, 989, 1800, 3421, 3420, 986,
	986, 3807, 2583, 3783, 2618, 3062, 1382, 3786, 3782, 849,
	3777, 3204, 3819, 3806, 3791, 3785, 3838, 3839, 986, 986,
	3823, 868, 3801, 1866, 1277, 3815, 2233, 2261, 3220, 1101,
	3842, 3740, 2785, 1682, 951, 986, 1816, 3817, 972, 2258,
	1810, 3813, 3816, 1123, 1101, 3822, 961, 1990, 3821, 3814,
	3664, 1804, 3836, 950, 1813, 2901, 3095, 3308, 3665, 2146,
	986, 717, 2831, 986, 2264, 1116, 3850, 2350, 2343, 2834,
	2835, 2339, 2608, 1569, 1101, 1661, 2619, 1158, 954, 3868,
	2231, 1673, 986, 3879, 2765, 2156, 3102, 2921, 2434, 3981,
	3227, 3045, 3860, 3851, 3852, 1980, 1081, 1080, 1079, 3885,
	1810, 2345, 3867, 3965, 3962, 3454, 3060, 1855, 2453, 2349,
	2349, 2349, 1651, 3068, 1813, 3899, 966, 3072, 1276, 3884,
	986, 986, 2886, 3133, 1348, 641, 978, 3078, 1650, 3893,
	986, 2557, 2556, 986, 3760, 1292, 3872, 1145, 1144, 1143,
	2849, 2965, 4148, 3343, 207, 1292, 1292, 3914, 3892, 2733,
	3916, 1277, 1277, 3894, 1590, 1582, 3907, 3908, 3311, 3927,
	204, 206, 1292, 205, 3640, 3312, 3906, 2927, 4044, 3361,
	3806, 1118, 3911, 3052, 21, 3859, 986, 986, 20, 3918,
	3919, 19, 3125, 3126, 3925, 3926, 3923, 105, 40, 3854,
	18, 119, 3932, 135, 3933, 3924, 134, 133, 132, 1128,
	131, 3930, 137, 130, 129, 124, 3931, 3954, 636, 986,
	986, 128, 986, 127, 3941, 126, 3956, 125, 123, 122,
	3964, 3967, 121, 3979, 2840, 120, 3955, 118, 1810, 1277,
	117, 238, 116, 238, 238, 1268, 115, 238, 238, 1283,
	114, 113, 1813, 112, 3986, 111, 3969, 110, 109, 108,
	3999, 3940, 238, 3973, 1304, 107, 3998, 106, 986, 986,
	986, 632, 3983, 629, 57, 56, 104, 1101, 4000, 103,
	3990, 17, 38, 3993, 14, 3995, 1105, 1105, 61, 1333,
	62, 986, 16, 4033, 3968, 13, 4028, 3972, 33, 83,
	95, 1350, 94, 1283, 34, 92, 4015, 238, 238, 4014,
	1268, 4012, 4013, 91, 32, 15, 3898, 89, 88, 4031,
	238, 4055, 31, 29, 4053, 11, 2850, 9, 1392, 8,
	4057, 35, 4043, 1769, 12, 5, 4064, 168, 4063, 986,
	238, 238, 238, 4062, 1268, 238, 1283, 4054, 4068, 167,
	170, 4059, 648, 166, 4060, 4061, 636, 169, 238, 238,
	4065, 82, 165, 164, 4084, 2620, 81, 4074, 4075, 27,
	4076, 4080, 4078, 10, 160, 3803, 3411, 76, 4087, 3964,
	162, 769, 3967, 4086, 4090, 4088, 161, 986, 4102, 986,
	4101, 159, 4097, 4094, 4103, 4107, 158, 157, 77, 1804,
	4108, 74, 4105, 4096, 4104, 156, 4106, 155, 4109, 75,
	154, 25, 6, 60, 7, 3689, 3153, 98, 4121, 4123,
	3983, 99, 36, 72, 71, 70, 24, 59, 23, 197,
	196, 195, 194, 193, 192, 4129, 1256, 187, 186, 3987,
	2851, 191, 3988, 4132, 189, 986, 986, 4135, 4130, 238,
	188, 190, 185, 986, 4138, 986, 986, 4134, 653, 1804,
	199, 198, 201, 4152, 184, 4144, 238, 182, 4151, 178,
	4155, 177, 4154, 181, 183, 180, 179, 176, 200, 152,
	949, 4153, 153, 67, 4156, 151, 1256, 150, 4159, 4163,
	149, 4162, 4165, 148, 147, 4166, 146, 4169, 1105, 4164,
	4161, 4168, 4171, 986, 145, 66, 22, 4170, 4174, 2,
	1, 4178, 0, 4180, 0, 0, 0, 4181, 0, 0,
	4175, 2349, 2349, 4177, 0, 0, 0, 0, 0, 0,
	4145, 4146, 660, 0, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 3543, 0, 0, 0, 0, 0, 0,
	0, 1103, 0, 0, 0, 0, 655, 0, 0, 0,
	1101, 1101, 1280, 0, 3553, 0, 0, 0, 2845, 2843,
	2844, 2836, 2837, 2838, 2839, 2841, 2842, 0, 4176, 0,
	0, 1103, 0, 0, 0, 0, 0, 1804, 0, 0,
	3386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 1990, 0, 0, 2349,
	2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349,
	2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 0, 2349,
	0, 68, 1256, 763, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 587, 650, 3447, 3448, 3449, 0, 0,
	0, 0, 0, 0, 3569, 0, 0, 0, 3562, 0,
	1105, 1431, 0, 0, 238, 0, 238, 654, 1105, 0,
	238, 0, 0, 0, 3560, 0, 0, 79, 0, 0,
	3564, 1105, 0, 1304, 1268, 238, 0, 238, 0, 0,
	0, 0, 238, 1304, 603, 0, 659, 238, 1304, 1170,
	3570, 238, 2834, 2835, 636, 2852, 2853, 2854, 0, 657,
	0, 0, 85, 0, 0, 652, 0, 0, 0, 0,
	0, 0, 0, 3192, 0, 0, 100, 0, 0, 3705,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	3563, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 1101, 0, 1103, 0, 649, 0, 0, 0,
	0, 0, 0, 1635, 1630, 0, 0, 0, 0, 0,
	3705, 1602, 0, 2849, 0, 0, 0, 0, 1648, 0,
	87, 0, 656, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 1601, 2834, 2835, 651, 2852, 2853, 2854,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3565, 0, 238,
	0, 3566, 0, 0, 0, 2849, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 1280, 0, 1607, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 2855, 0, 0, 0, 0, 3568, 0, 0, 238,
	1431, 0, 0, 238, 0, 0, 1639, 238, 0, 1649,
	3571, 0, 0, 238, 1101, 1629, 1631, 0, 0, 0,
	171, 93, 1101, 96, 0, 0, 238, 0, 238, 2850,
	238, 1645, 0, 1646, 587, 1101, 0, 0, 0, 2840,
	1616, 1617, 0, 0, 0, 0, 0, 208, 2017, 0,
	0, 0, 0, 0, 0, 764, 0, 0, 1637, 136,
	0, 0, 0, 0, 0, 0, 238, 0, 3685, 1622,
	3687, 2856, 0, 0, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 2855, 1647, 0, 0, 636, 0, 0,
	0, 769, 0, 0, 0, 0, 0, 0, 1599, 1600,
	0, 1636, 0, 138, 0, 0, 0, 1103, 1103, 0,
	0, 0, 0, 3567, 0, 0, 238, 175, 1268, 238,
	1630, 2850, 0, 0, 0, 209, 0, 1602, 0, 0,
	0, 0, 636, 2851, 1256, 202, 0, 0, 0, 238,
	0, 0, 3727, 203, 0, 0, 0, 0, 3574, 238,
	238, 0, 238, 1628, 238, 0, 238, 0, 238, 1601,
	1256, 0, 0, 0, 0, 761, 0, 0, 0, 1621,
	0, 0, 0, 1623, 0, 0, 0, 1618, 2112, 0,
	0, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3784, 0, 618, 0, 0, 0,
	636, 0, 0, 3488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2851, 0, 0, 0, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 0, 1607, 2846, 2847, 2848, 0, 1256, 0,
	0, 2845, 2843, 2844, 2836, 2837, 2838, 2839, 2841, 2842,
	0, 0, 0, 0, 0, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 1629, 1631, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 0, 1256, 0, 1616, 1617, 3514, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 2349, 0, 0,
	0, 0, 0, 0, 0, 0, 2846, 2847, 2848, 0,
	0, 0, 1280, 2845, 2843, 2844, 2836, 2837, 2838, 2839,
	2841, 2842, 0, 0, 0, 0, 0, 587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 2349, 0, 0, 0, 0, 0, 0,
	0, 587, 0, 0, 0, 0, 0, 0, 238, 0,
	587, 68, 0, 0, 0, 0, 0, 1431, 1431, 0,
	0, 0, 238, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 0, 0, 1628,
	0, 0, 73, 0, 68, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 68, 0, 44, 43, 1623,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 0, 139, 0, 73, 0, 79, 0, 0,
	0, 0, 0, 603, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 1103, 0, 46, 0, 141, 0, 0, 0, 1103,
	79, 0, 85, 0, 0, 0, 0, 0, 0, 45,
	1747, 79, 1103, 0, 0, 0, 100, 0, 0, 2478,
	0, 86, 97, 0, 0, 0, 0, 2349, 238, 0,
	0, 0, 0, 48, 64, 85, 0, 0, 0, 0,
	238, 49, 0, 0, 0, 0, 85, 0, 0, 100,
	142, 0, 0, 238, 86, 97, 0, 0, 47, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 238, 0,
	87, 0, 0, 0, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 238, 2565,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 87, 0, 238, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	2603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2478, 0, 587, 0, 0, 2623, 0, 0, 0, 0,
	0, 238, 0, 0, 238, 0, 238, 0, 238, 0,
	0, 0, 0, 1268, 0, 238, 238, 0, 1283, 1283,
	2431, 0, 0, 0, 0, 0, 0, 0, 2647, 769,
	0, 2478, 2478, 0, 0, 0, 935, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 1268, 238, 0, 0, 1304, 0, 1304,
	0, 0, 1268, 90, 1268, 0, 1268, 0, 0, 0,
	171, 93, 0, 96, 90, 0, 0, 0, 0, 1256,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	0, 238, 238, 238, 238, 1268, 238, 208, 238, 0,
	0, 0, 55, 171, 93, 764, 96, 0, 65, 136,
	0, 1256, 0, 54, 171, 93, 0, 96, 0, 0,
	0, 52, 0, 1599, 1600, 143, 1256, 0, 0, 238,
	208, 0, 53, 0, 0, 0, 0, 238, 764, 210,
	0, 208, 136, 0, 1256, 1630, 0, 0, 0, 58,
	0, 0, 1602, 136, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 140, 0, 0,
	949, 0, 210, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 210, 1601, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 138, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 138, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 175, 0, 0, 0, 174, 1304, 0, 202, 209,
	0, 0, 0, 0, 1599, 1600, 203, 0, 0, 202,
	0, 0, 1256, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 174, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 174,
	0, 0, 3, 1256, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 0, 0,
	0, 0, 1642, 1643, 1644, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 1602, 1629, 1631, 0, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 1599, 1600, 0, 1621, 238, 0,
	0, 0, 0, 587, 0, 1618, 0, 0, 587, 0,
	1622, 587, 0, 0, 587, 587, 1630, 0, 0, 0,
	587, 0, 0, 1602, 0, 0, 0, 0, 238, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 1256, 1601, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 1629, 1631, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 2478, 2478,
	238, 1607, 1283, 0, 0, 2478, 0, 0, 2969, 0,
	0, 0, 0, 0, 0, 0, 2478, 2969, 0, 2478,
	2969, 2969, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 1649, 238, 238, 1283, 238, 0, 1629,
	1631, 1622, 935, 0, 1623, 1256, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1283, 238, 1268,
	0, 0, 1256, 0, 1616, 1617, 0, 0, 0, 1607,
	0, 2478, 0, 3033, 2478, 1283, 0, 0, 2478, 2478,
	1283, 0, 1637, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 1306, 1622, 1312, 0, 1318, 0, 0, 0,
	69, 0, 0, 0, 0, 238, 3056, 1629, 1631, 3058,
	2478, 0, 0, 238, 0, 73, 0, 238, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2603, 0, 0, 1268,
	0, 238, 0, 0, 2478, 0, 587, 0, 0, 0,
	79, 0, 0, 2478, 0, 1623, 0, 0, 0, 0,
	0, 1622, 238, 238, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 1450, 85, 1455, 1628, 0, 238,
	2603, 0, 1256, 2603, 68, 0, 1464, 0, 1469, 100,
	0, 0, 0, 0, 86, 97, 0, 1623, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 1640, 0, 3162, 0, 0, 1268, 238, 0,
	238, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 87, 0, 0, 1525, 0, 0, 1531,
	79, 0, 0, 1635, 1630, 0, 0, 0, 0, 0,
	0, 1602, 0, 238, 0, 1623, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 1621, 86, 97, 0, 0, 0, 0,
	0, 1618, 0, 0, 1638, 0, 0, 0, 0, 3225,
	0, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 0, 0, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 1683, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 171, 93, 0, 96, 0, 0, 0,
	0, 0, 0, 1256, 238, 238, 1639, 0, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	208, 0, 0, 0, 0, 1256, 587, 587, 764, 0,
	0, 1645, 136, 1646, 0, 0, 0, 0, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 1637, 0,
	1304, 0, 210, 90, 0, 0, 0, 0, 0, 1622,
	1741, 1741, 1741, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 1602, 138, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	175, 0, 0, 171, 93, 0, 96, 0, 209, 0,
	0, 1636, 0, 0, 636, 0, 0, 1601, 202, 0,
	0, 0, 0, 0, 0, 0, 203, 1621, 0, 0,
	208, 0, 0, 0, 0, 1618, 0, 0, 764, 0,
	0, 0, 136, 238, 935, 1256, 0, 1256, 1444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 1256, 238,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 238,
	0, 3187, 0, 1623, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 238, 138, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 1640, 0,
	175, 1607, 0, 0, 1256, 2478, 238, 0, 209, 0,
	0, 1256, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 2647, 2647, 0, 0, 203, 0, 769, 769,
	2478, 0, 0, 2603, 2603, 0, 0, 769, 2478, 1629,
	1631, 0, 0, 0, 0, 0, 0, 0, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 1256, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 1622, 1613, 1614, 1620, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 1256, 2809, 0, 0, 0, 2810, 0,
	0, 0, 0, 0, 0, 0, 3508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 1628, 238, 0,
	0, 0, 0, 0, 1304, 0, 238, 0, 0, 1256,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2478, 2478, 2478, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	1256, 2478, 0, 2969, 0, 0, 1304, 1304, 238, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1283, 238, 1283, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2478, 0, 2478, 238, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 1599, 1600, 0, 0, 0, 2478, 0, 0, 0,
	0, 3642, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 1630, 0, 0, 0, 238, 0, 0,
	1602, 0, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 1601, 0, 0, 0, 0, 0, 2145, 0,
	2149, 0, 1621, 0, 0, 0, 0, 2163, 0, 0,
	1618, 0, 0, 0, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 0,
	2212, 0, 2214, 2215, 2216, 2217, 3182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 949, 0, 0,
	0, 0, 0, 0, 2241, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 1670, 1607, 0, 0, 2256,
	2478, 0, 2969, 0, 0, 3734, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 2286, 2289, 2292, 2295, 0,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 0, 0, 0,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 2341, 0,
	2352, 2354, 2359, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3734, 0,
	0, 0, 0, 0, 0, 0, 2478, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 3810, 0, 0, 0,
	0, 1599, 1600, 0, 0, 0, 0, 0, 1304, 995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 238, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 239, 239, 0, 0, 0, 0,
	0, 3225, 1601, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 1621, 0, 0, 0, 0, 3734, 0, 239,
	1618, 0, 1628, 0, 1635, 1630, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 1623, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 1601, 0, 3181, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	3642, 0, 1618, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 238, 0, 0, 1607, 0, 0, 0,
	0, 0, 2969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2568, 2569, 0, 2571, 0, 0, 1304, 0,
	1304, 0, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 3950, 0, 0, 1607, 1616,
	1617, 0, 1304, 0, 0, 238, 0, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 238, 2478, 0, 0, 0, 1639, 1622, 0,
	1649, 0, 0, 0, 0, 0, 1629, 1631, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 3225, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2697, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 1647, 2478, 0, 0, 0,
	0, 733, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 3734, 734,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 1653, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 2478, 0, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 2745, 2746,
	0, 0, 0, 0, 2752, 0, 0, 0, 737, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 1640,
	660, 0, 0, 2766, 2767, 0, 0, 0, 0, 2256,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 0, 0, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2788, 0, 0, 1619, 1615, 2647,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 2800, 2647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 2252, 0, 0, 0, 2253,
	0, 0, 0, 0, 0, 0, 2359, 2359, 2359, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 2891,
	758, 0, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 756, 757, 754, 0, 0,
	0, 0, 0, 749, 0, 0, 743, 0, 0, 239,
	1176, 239, 239, 0, 1176, 239, 239, 0, 1176, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 750, 0, 0, 0, 0, 0,
	1176, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2986, 0, 0, 746, 0, 0, 0, 0,
	753, 0, 0, 1176, 0, 239, 239, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 239,
	239, 0, 0, 239, 0, 1176, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 1176, 239, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 239, 0, 0,
	1618, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2163, 0,
	0, 0, 0, 0, 3179, 3180, 0, 0, 3183, 0,
	0, 0, 3186, 0, 2751, 1639, 0, 0, 1649, 0,
	0, 3190, 0, 0, 1629, 1631, 0, 0, 0, 0,
	3197, 0, 0, 2891, 1624, 1625, 1626, 1627, 0, 0,
	1645, 0, 1646, 0, 1607, 0, 0, 0, 3209, 1616,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 3232, 3233,
	0, 3234, 3235, 3236, 0, 0, 0, 0, 1622, 0,
	0, 0, 1629, 1631, 0, 0, 0, 0, 0, 3242,
	0, 0, 0, 3244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 3272, 3273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	1599, 1600, 3284, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 3293, 1097, 1176,
	0, 0, 1630, 239, 239, 239, 0, 0, 0, 1602,
	239, 0, 1628, 0, 0, 239, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 233, 233, 583, 0, 0, 0, 0, 1176,
	0, 1621, 0, 0, 0, 3327, 0, 1640, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 3336, 3339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3360, 0, 0, 2744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 1629, 1631, 0, 0, 3195, 0, 0,
	0, 0, 0, 0, 0, 1176, 1176, 239, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 1741, 1616, 1617,
	0, 0, 0, 0, 0, 0, 3441, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 239, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 239, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3486, 3487, 0, 0, 0, 0, 3491, 3492,
	0, 0, 0, 3495, 3496, 0, 0, 0, 0, 0,
	3500, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 3504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 3509, 0, 0,
	0, 0, 1176, 0, 1176, 0, 1176, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 239, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 1176, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 0,
	239, 0, 239, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3339, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	237, 237, 0, 0, 0, 0, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3700,
	3701, 3702, 0, 0, 0, 0, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 2163, 0, 0, 3711, 3712, 0, 0, 1635,
	1630, 0, 0, 0, 0, 0, 1104, 1602, 0, 0,
	0, 0, 0, 3720, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 1167, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	239, 0, 0, 1176, 0, 0, 0, 1618, 3339, 0,
	0, 0, 0, 0, 0, 0, 3759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3766, 0, 0, 935,
	0, 0, 1599, 1600, 0, 0, 0, 3773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1384, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 1624, 1625, 1626, 1627, 1407, 1407, 1407,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 1448, 1449, 0, 0, 0,
	0, 1176, 0, 1621, 0, 0, 0, 0, 0, 3339,
	3339, 1618, 1639, 0, 0, 1649, 239, 0, 0, 0,
	0, 1629, 1631, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 239, 0, 0, 0, 0, 1616, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 1176, 0, 0,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 0,
	3871, 1176, 0, 3874, 0, 1622, 239, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 1552, 1607, 0, 0,
	0, 0, 3339, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	935, 935, 0, 0, 0, 0, 0, 0, 0, 239,
	3339, 0, 239, 3339, 239, 0, 239, 0, 0, 0,
	1616, 1617, 0, 239, 239, 0, 0, 0, 1176, 1176,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 1176, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 239, 0, 0, 2163, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	239, 239, 239, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4011, 4011,
	4011, 0, 0, 1628, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 4032, 0, 1623, 0, 237, 0, 237, 237, 0,
	0, 237, 237, 0, 0, 0, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 674, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 1779, 0, 0,
	0, 0, 0, 0, 2812, 0, 0, 0, 0, 4011,
	0, 0, 1788, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 237, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3339, 0, 3339,
	0, 0, 0, 0, 237, 237, 237, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 237, 0, 0, 0, 0, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4011, 4139, 0, 0, 0,
	0, 0, 0, 4143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 2005, 0, 2005, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 1176, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 1985, 1176, 239, 2062, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 1763, 2091,
	1104, 2093, 0, 2095, 237, 2096, 0, 0, 0, 0,
	239, 239, 0, 0, 0, 0, 0, 0, 0, 237,
	1763, 237, 0, 0, 0, 0, 674, 0, 0, 1176,
	1176, 674, 0, 0, 0, 237, 0, 239, 0, 0,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 971, 102, 0, 0,
	0, 0, 0, 0, 1176, 0, 239, 1176, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 102, 0, 0, 1635, 1630, 0, 0,
	0, 0, 0, 0, 1602, 1176, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 674, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 237, 0, 0, 0, 237, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 237, 0, 2415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 237, 0, 237, 691, 0, 1091, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 1176, 0, 0, 0, 692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 1018, 1639,
	0, 0, 1649, 0, 0, 0, 0, 0, 1629, 1631,
	0, 0, 0, 0, 0, 693, 0, 710, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 0, 0, 0, 0,
	0, 694, 0, 0, 695, 0, 0, 0, 0, 0,
	237, 1637, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 718, 1622, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	716, 239, 0, 674, 237, 0, 237, 1647, 237, 0,
	237, 0, 237, 0, 0, 1275, 0, 1176, 0, 0,
	0, 0, 0, 697, 1636, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 698, 0, 239, 699, 0, 0, 237,
	0, 720, 0, 239, 0, 660, 0, 0, 0, 1176,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 1176, 1176, 0, 1623, 0, 2625, 0,
	0, 1407, 0, 1407, 0, 1407, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 719, 239, 1176, 0, 0, 1108,
	0, 0, 0, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2684,
	0, 2687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2709, 1275,
	2711, 1275, 0, 2714, 0, 0, 0, 703, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 1407, 0, 0, 659,
	0, 2811, 0, 0, 2742, 0, 1104, 0, 0, 0,
	690, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 1104, 0, 0, 0, 0, 0, 1176, 0,
	1176, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 723, 0, 722, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 715, 239, 0, 0, 0,
	724, 0, 721, 0, 0, 0, 0, 1176, 661, 239,
	0, 239, 0, 0, 1176, 0, 0, 0, 0, 102,
	0, 102, 0, 102, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 237, 0, 1176, 239, 0, 0, 0, 1176,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 930, 102,
	102, 0, 237, 0, 0, 1176, 1176, 1176, 0, 0,
	0, 102, 0, 102, 0, 0, 1176, 0, 0, 0,
	0, 0, 674, 102, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 237, 0, 1176, 237, 1176,
	237, 0, 237, 0, 0, 0, 0, 0, 0, 237,
	237, 0, 1176, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 2960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 1108, 0, 0, 237, 1108, 237, 0,
	0, 3004, 3006, 1176, 1843, 0, 0, 0, 0, 0,
	0, 1176, 1176, 0, 0, 0, 0, 0, 0, 910,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 237, 237, 237, 237, 1664,
	237, 0, 237, 0, 0, 0, 0, 1176, 0, 0,
	1176, 0, 1108, 0, 0, 0, 1669, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	3069, 237, 0, 0, 3073, 239, 239, 0, 0, 0,
	666, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 1108, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 666, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 1635, 1630, 0, 1275,
	1275, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 1108, 0, 0,
	0, 239, 0, 0, 0, 0, 1621, 0, 0, 1761,
	0, 1764, 0, 102, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 1176, 3165, 0, 1275, 0, 0,
	0, 0, 0, 0, 1176, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	3177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 1639,
	239, 0, 1649, 0, 0, 0, 0, 0, 1629, 1631,
	0, 0, 1104, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 237,
	0, 237, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 1108, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 1628, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 1640, 0, 0, 0, 0, 0, 237, 1108, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 0, 0, 930,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3410, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 3423, 1638, 0, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3471, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 0, 0, 0, 1173, 0, 0, 910, 1293,
	0, 910, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 2230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 930, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 1108, 1293, 1108, 0, 1108, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 1108, 1108, 0, 0, 0, 0, 0, 1104, 1104,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 1108, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 0, 1764, 0, 3593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 823, 0, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 3656, 0, 0, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1817,
	1108, 0, 0, 843, 828, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 237, 0, 832, 0, 0, 0, 0,
	872, 0, 0, 237, 0, 0, 102, 0, 840, 841,
	0, 237, 0, 0, 857, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 834,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 863, 0, 0, 102, 0, 0,
	102, 0, 102, 0, 0, 0, 0, 1174, 0, 0,
	0, 1174, 0, 0, 0, 1294, 0, 0, 0, 0,
	3741, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	836, 0, 0, 0, 0, 0, 0, 0, 827, 1108,
	0, 102, 0, 0, 102, 0, 1108, 1294, 0, 0,
	0, 0, 0, 0, 0, 1108, 837, 838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 1108, 0, 845, 844, 0, 102, 0, 0,
	1173, 0, 839, 0, 0, 0, 854, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 1294, 0, 0, 0, 0, 0, 1294, 0,
	0, 866, 1294, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 0, 1294, 0, 102, 0,
	1108, 0, 0, 0, 3849, 1275, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 833, 0, 0, 871, 0,
	1108, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 1294, 0, 861, 862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 859, 0, 0,
	0, 0, 237, 0, 870, 855, 1108, 848, 846, 0,
	851, 0, 0, 0, 0, 237, 852, 237, 0, 825,
	1108, 867, 0, 0, 0, 0, 0, 0, 2230, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3915, 826, 0, 0, 0, 0, 1293, 1293, 0, 1669,
	0, 0, 853, 0, 0, 0, 1173, 850, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 868, 0, 0,
	0, 237, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 1108, 0,
	1108, 0, 3958, 0, 0, 0, 0, 0, 860, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 3980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 1293, 0, 1293, 0, 1293, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 1293, 1293,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 102, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 237, 0, 0, 0, 102, 102, 0, 0,
	102, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 237, 0, 930,
	0, 0, 1294, 1294, 0, 0, 0, 0, 0, 1173,
	1108, 1108, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 237, 102, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 1108, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 237, 0, 0, 0, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 1294,
	0, 1294, 0, 1294, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 1294,
	1294, 0, 1293, 0, 1108, 1648, 0, 0, 0, 0,
	1294, 0, 0, 1108, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 1294, 1294, 1294, 0, 1108, 0, 0,
	1601, 1108, 1173, 0, 0, 1108, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 1599, 1600, 1108, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 0, 0, 0, 0, 1108, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 1173, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 1091,
	1091, 0, 1601, 0, 1624, 1625, 1626, 1627, 1108, 1108,
	0, 0, 1621, 0, 1607, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	0, 0, 1629, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 1108, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 1293,
	1293, 0, 1293, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 1293, 1637, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 1639, 0, 0, 1649, 0,
	0, 1647, 0, 0, 1629, 1631, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1645, 0, 1646, 0, 1108, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 1817, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 1174, 0, 102, 0, 1622, 0,
	0, 0, 0, 1817, 1817, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 1091, 0, 1647, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1108, 1108, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 1628, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 1174, 2807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 1173, 0, 0, 0, 0, 0, 1638,
	0, 1817, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 0, 0, 1173, 0, 2806, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 0, 1108, 0, 1294, 1294, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1173, 0,
	1294, 1108, 1108, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 1817, 0,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1630, 0, 0, 0, 1173, 0, 0, 1602,
	0, 0, 0, 0, 0, 1293, 1648, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 0, 1293, 0, 0, 0, 1173, 0, 0,
	0, 1601, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 1293, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 1108, 0, 1108,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 1293, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 1108, 1639, 0, 0, 1649, 0, 0,
	0, 0, 0, 1629, 1631, 1173, 0, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 1108, 1108, 0, 1645,
	0, 1646, 0, 0, 0, 0, 0, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 0, 2230, 0, 0,
	0, 0, 0, 1108, 0, 0, 1637, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 1647, 0, 1108, 1108, 1108, 0, 0, 0,
	0, 1174, 0, 0, 0, 1108, 1173, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 1628, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 1108, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 1600, 1640, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 1630, 0, 0, 0,
	0, 0, 1174, 1602, 0, 0, 1173, 0, 0, 0,
	1648, 1294, 1108, 0, 0, 0, 1294, 0, 0, 0,
	1108, 1108, 0, 0, 0, 1294, 0, 0, 0, 1294,
	0, 0, 0, 1174, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 1294, 0, 1618, 0, 0, 1108, 102, 0, 1108,
	102, 1294, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 1294, 1294, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 1293, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1649, 0, 0, 0, 0, 0, 1629, 1631, 0,
	1293, 1174, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 0, 1616, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 1293, 0, 0, 0, 0,
	1637, 0, 0, 1108, 0, 0, 0, 0, 0, 1293,
	0, 1622, 0, 1108, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	1108, 0, 0, 0, 0, 1174, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 1174, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1630, 0, 0, 0, 0, 1628, 0, 1602, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1640, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 1173, 0,
	0, 0, 1638, 0, 0, 1173, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 1639, 0, 0, 1649, 3951, 0, 1293, 1293,
	0, 1629, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 0, 0, 0, 0, 1173, 1616, 1617, 0, 0,
	1293, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 1293, 1293, 0,
	0, 0, 0, 0, 0, 0, 1294, 1173, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 1294,
	1294, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 1173, 1628,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1173, 0, 1174, 0, 0, 0, 1623,
	0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 1640, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 1293, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 0, 0, 0, 1173, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 1638, 1174, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 1174, 0,
	3947, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 1639, 0, 0, 1649, 0,
	0, 1174, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 1294, 1294, 0, 0, 0, 1616,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 1174, 0, 0, 0, 1293, 1294, 0, 1622, 0,
	0, 0, 0, 0, 0, 1293, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 1294, 1294, 0, 0, 0, 0, 0,
	1636, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 1174, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 1294, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 1294, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 3858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 1294, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 1177, 253, 254, 1178, 1179, 1180, 1294, 1181,
	529, 1182, 1183, 1184, 1185, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 1186,
	534, 264, 265, 266, 267, 268, 1187, 1188, 0, 269,
	535, 536, 537, 1189, 270, 271, 538, 1190, 1257, 1191,
	272, 273, 274, 275, 276, 277, 278, 0, 1192, 280,
	281, 282, 279, 1193, 283, 0, 284, 285, 286, 1194,
	287, 1049, 288, 289, 1195, 1196, 1198, 1197, 1199, 1200,
	1201, 290, 291, 292, 293, 0, 294, 539, 540, 1202,
	298, 295, 296, 1203, 299, 297, 1204, 300, 301, 302,
	1205, 1206, 303, 304, 305, 1207, 306, 307, 1208, 308,
	309, 310, 1209, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 1210, 244,
	1211, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 1212, 328, 1213, 1214, 1050, 329, 330,
	545, 546, 331, 332, 1215, 333, 547, 1216, 548, 334,
	1217, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	1052, 340, 341, 1218, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 1219, 1051, 348, 552, 553,
	1220, 554, 1221, 350, 351, 1053, 555, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 1222, 362, 364, 363, 1223, 365, 556, 1056,
	366, 367, 1057, 1224, 368, 369, 370, 1225, 1226, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 1227, 246, 1060, 394,
	1228, 557, 395, 558, 397, 398, 1229, 0, 399, 0,
	1230, 1231, 401, 402, 403, 1232, 1233, 404, 405, 559,
	1061, 406, 1062, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 1234, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 1235, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 1236,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 1237, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 1238,
	466, 467, 465, 468, 469, 470, 1239, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 1240, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 1241, 492, 493, 0,
	491, 1242, 494, 495, 496, 497, 498, 499, 318, 500,
	1243, 501, 570, 571, 572, 573, 1244, 508, 1245, 502,
	503, 574, 504, 575, 1246, 505, 506, 507, 0, 509,
	510, 1247, 1248, 511, 512, 513, 515, 516, 514, 517,
	1249, 518, 1250, 0, 519, 520, 521, 576, 577, 578,
	1251, 523, 522, 579, 1252, 1253, 1254, 1255, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 2393, 0, 0, 0, 0,
	0, 0, 0, 2394, 247, 248, 249, 250, 251, 252,
	1177, 253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182,
	1183, 1184, 1185, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1186, 534, 264,
	265, 266, 267, 268, 1187, 1188, 0, 269, 535, 536,
	537, 1189, 270, 271, 538, 1190, 1257, 1191, 272, 273,
	274, 275, 276, 277, 278, 0, 1192, 280, 281, 282,
	279, 1193, 283, 0, 284, 285, 286, 1194, 287, 1049,
	288, 289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290,
	291, 292, 293, 0, 294, 539, 540, 1202, 298, 295,
	296, 1203, 299, 297, 1204, 300, 301, 302, 1205, 1206,
	303, 304, 305, 1207, 306, 307, 1208, 308, 309, 310,
	1209, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 1210, 244, 1211, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 1212, 328, 1213, 1214, 1050, 329, 330, 545, 546,
	331, 332, 1215, 333, 547, 1216, 548, 334, 1217, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1052, 340,
	341, 1218, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 1219, 1051, 348, 552, 553, 1220, 554,
	1221, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1222, 362, 364, 363, 1223, 365, 556, 1056, 366, 367,
	1057, 1224, 368, 369, 370, 1225, 1226, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 1227, 246, 1060, 394, 1228, 557,
	395, 558, 397, 398, 1229, 0, 399, 0, 1230, 1231,
	401, 402, 403, 1232, 1233, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 1234, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 1235, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 1236, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 1237, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 1238, 466, 467,
	465, 468, 469, 470, 1239, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	1240, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 1241, 492, 493, 0, 491, 1242,
	494, 495, 496, 497, 498, 499, 318, 500, 1243, 501,
	570, 571, 572, 573, 1244, 508, 1245, 502, 503, 574,
	504, 575, 1246, 505, 506, 507, 0, 509, 510, 1247,
	1248, 511, 512, 513, 515, 516, 514, 517, 1249, 518,
	1250, 0, 519, 520, 521, 576, 577, 578, 1251, 523,
	522, 579, 1252, 1253, 1254, 1255, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 3203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3205,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3542,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3706, 247, 248, 249, 250, 251,
	252, 1177, 253, 254, 1178, 1179, 1180, 0, 1181, 529,
	1182, 1183, 1184, 1185, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1186, 534,
	264, 265, 266, 267, 268, 1187, 1188, 0, 269, 535,
	536, 537, 1189, 270, 271, 538, 1190, 1257, 1191, 272,
	273, 274, 275, 276, 277, 278, 0, 1192, 280, 281,
	282, 279, 1193, 283, 0, 284, 285, 286, 1194, 287,
	1049, 288, 289, 1195, 1196, 1198, 1197, 1199, 1200, 1201,
	290, 291, 292, 293, 0, 294, 539, 540, 1202, 298,
	295, 296, 1203, 299, 297, 1204, 300, 301, 302, 1205,
	1206, 303, 304, 305, 1207, 306, 307, 1208, 308, 309,
	310, 1209, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1210, 244, 1211,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1212, 328, 1213, 1214, 1050, 329, 330, 545,
	546, 331, 332, 1215, 333, 547, 1216, 548, 334, 1217,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 1218, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1219, 1051, 348, 552, 553, 1220,
	554, 1221, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1222, 362, 364, 363, 1223, 365, 556, 1056, 366,
	367, 1057, 1224, 368, 369, 370, 1225, 1226, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 1227, 246, 1060, 394, 1228,
	557, 395, 558, 397, 398, 1229, 0, 399, 0, 1230,
	1231, 401, 402, 403, 1232, 1233, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1234, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1235, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1236, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1237, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1238, 466,
	467, 465, 468, 469, 470, 1239, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1240, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1241, 492, 493, 0, 491,
	1242, 494, 495, 496, 497, 498, 499, 318, 500, 1243,
	501, 570, 571, 572, 573, 1244, 508, 1245, 502, 503,
	574, 504, 575, 1246, 505, 506, 507, 0, 509, 510,
	1247, 1248, 511, 512, 513, 515, 516, 514, 517, 1249,
	518, 1250, 0, 519, 520, 521, 576, 577, 578, 1251,
	523, 522, 579, 1252, 1253, 1254, 1255, 524, 525, 580,
	526, 527, 528, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3601,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3472, 247, 248, 249, 250, 251,
	252, 1177, 253, 254, 1178, 1179, 1180, 0, 1181, 529,
	1182, 1183, 1184, 1185, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1186, 534,
	264, 265, 266, 267, 268, 1187, 1188, 0, 269, 535,
	536, 537, 1189, 270, 271, 538, 1190, 1257, 1191, 272,
	273, 274, 275, 276, 277, 278, 0, 1192, 280, 281,
	282, 279, 1193, 283, 0, 284, 285, 286, 1194, 287,
	1049, 288, 289, 1195, 1196, 1198, 1197, 1199, 1200, 1201,
	290, 291, 292, 293, 0, 294, 539, 540, 1202, 298,
	295, 296, 1203, 299, 297, 1204, 300, 301, 302, 1205,
	1206, 303, 304, 305, 1207, 306, 307, 1208, 308, 309,
	310, 1209, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1210, 244, 1211,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1212, 328, 1213, 1214, 1050, 329, 330, 545,
	546, 331, 332, 1215, 333, 547, 1216, 548, 334, 1217,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 1218, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1219, 1051, 348, 552, 553, 1220,
	554, 1221, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1222, 362, 364, 363, 1223, 365, 556, 1056, 366,
	367, 1057, 1224, 368, 369, 370, 1225, 1226, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 1227, 246, 1060, 394, 1228,
	557, 395, 558, 397, 398, 1229, 0, 399, 0, 1230,
	1231, 401, 402, 403, 1232, 1233, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1234, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1235, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1236, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1237, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1238, 466,
	467, 465, 468, 469, 470, 1239, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1240, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1241, 492, 493, 0, 491,
	1242, 494, 495, 496, 497, 498, 499, 318, 500, 1243,
	501, 570, 571, 572, 573, 1244, 508, 1245, 502, 503,
	574, 504, 575, 1246, 505, 506, 507, 0, 509, 510,
	1247, 1248, 511, 512, 513, 515, 516, 514, 517, 1249,
	518, 1250, 0, 519, 520, 521, 576, 577, 578, 1251,
	523, 522, 579, 1252, 1253, 1254, 1255, 524, 525, 580,
	526, 527, 528, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3221,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3054, 247, 248, 249, 250, 251,
	252, 1177, 253, 254, 1178, 1179, 1180, 0, 1181, 529,
	1182, 1183, 1184, 1185, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1186, 534,
	264, 265, 266, 267, 268, 1187, 1188, 0, 269, 535,
	536, 537, 1189, 270, 271, 538, 1190, 1257, 1191, 272,
	273, 274, 275, 276, 277, 278, 0, 1192, 280, 281,
	282, 279, 1193, 283, 0, 284, 285, 286, 1194, 287,
	1049, 288, 289, 1195, 1196, 1198, 1197, 1199, 1200, 1201,
	290, 291, 292, 293, 0, 294, 539, 540, 1202, 298,
	295, 296, 1203, 299, 297, 1204, 300, 301, 302, 1205,
	1206, 303, 304, 305, 1207, 306, 307, 1208, 308, 309,
	310, 1209, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1210, 244, 1211,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1212, 328, 1213, 1214, 1050, 329, 330, 545,
	546, 331, 332, 1215, 333, 547, 1216, 548, 334, 1217,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 1218, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1219, 1051, 348, 552, 553, 1220,
	554, 1221, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1222, 362, 364, 363, 1223, 365, 556, 1056, 366,
	367, 1057, 1224, 368, 369, 370, 1225, 1226, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 1227, 246, 1060, 394, 1228,
	557, 395, 558, 397, 398, 1229, 0, 399, 0, 1230,
	1231, 401, 402, 403, 1232, 1233, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1234, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1235, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1236, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1237, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1238, 466,
	467, 465, 468, 469, 470, 1239, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1240, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1241, 492, 493, 0, 491,
	1242, 494, 495, 496, 497, 498, 499, 318, 500, 1243,
	501, 570, 571, 572, 573, 1244, 508, 1245, 502, 503,
	574, 504, 575, 1246, 505, 506, 507, 0, 509, 510,
	1247, 1248, 511, 512, 513, 515, 516, 514, 517, 1249,
	518, 1250, 0, 519, 520, 521, 576, 577, 578, 1251,
	523, 522, 579, 1252, 1253, 1254, 1255, 524, 525, 580,
	526, 527, 528, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2276,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 1269, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 247, 248, 249,
	250, 251, 252, 1177, 253, 254, 1178, 1179, 1180, 0,
	1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	1186, 534, 264, 265, 266, 267, 268, 1187, 1188, 0,
	269, 535, 536, 537, 1189, 270, 271, 538, 1190, 1257,
	1191, 272, 273, 274, 275, 276, 277, 278, 0, 1192,
	280, 281, 282, 279, 1193, 283, 0, 284, 285, 286,
	1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197, 1199,
	1200, 1201, 290, 291, 292, 293, 0, 294, 539, 540,
	1202, 298, 295, 296, 1203, 299, 297, 1204, 300, 301,
	302, 1205, 1206, 303, 304, 305, 1207, 306, 307, 1208,
	308, 309, 310, 1209, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 1210,
	244, 1211, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 1212, 328, 1213, 1214, 1050, 329,
	330, 545, 546, 331, 332, 1215, 333, 547, 1216, 548,
	334, 1217, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1052, 340, 341, 1218, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 1219, 1051, 348, 552,
	553, 1220, 554, 1221, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1222, 362, 364, 363, 1223, 365, 556,
	1056, 366, 367, 1057, 1224, 368, 369, 370, 1225, 1226,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 1227, 246, 1060,
	394, 1228, 557, 395, 558, 397, 398, 1229, 0, 399,
	0, 1230, 1231, 401, 402, 403, 1232, 1233, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 1234, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 1235, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	1236, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 1237, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	1238, 466, 467, 465, 468, 469, 470, 1239, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 1240, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 1241, 492, 493,
	0, 491, 1242, 494, 495, 496, 497, 498, 499, 318,
	500, 1243, 501, 570, 571, 572, 573, 1244, 508, 1245,
	502, 503, 574, 504, 575, 1246, 505, 506, 507, 0,
	509, 510, 1247, 1248, 511, 512, 513, 515, 516, 514,
	517, 1249, 518, 1250, 0, 519, 520, 521, 576, 577,
	578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255, 524,
	525, 580, 526, 527, 528, 1168, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	1177, 253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182,
	1183, 1184, 1185, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1186, 534, 264,
	265, 266, 267, 268, 1187, 1188, 0, 269, 535, 536,
	537, 1189, 270, 271, 538, 1190, 1257, 1191, 272, 273,
	274, 275, 276, 277, 278, 0, 1192, 280, 281, 282,
	279, 1193, 283, 0, 284, 285, 286, 1194, 287, 1049,
	288, 289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290,
	291, 292, 293, 0, 294, 539, 540, 1202, 298, 295,
	296, 1203, 299, 297, 1204, 300, 301, 302, 1205, 1206,
	303, 304, 305, 1207, 306, 307, 1208, 308, 309, 310,
	1209, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 1210, 244, 1211, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 1212, 328, 1213, 1214, 1050, 329, 330, 545, 546,
	331, 332, 1215, 333, 547, 1216, 548, 334, 1217, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1052, 340,
	341, 1218, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 1219, 1051, 348, 552, 553, 1220, 554,
	1221, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1222, 362, 364, 363, 1223, 365, 556, 1056, 366, 367,
	1057, 1224, 368, 369, 370, 1225, 1226, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 1227, 246, 1060, 394, 1228, 557,
	395, 558, 397, 398, 1229, 0, 399, 0, 1230, 1231,
	401, 402, 403, 1232, 1233, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 1234, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 1235, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 1236, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 1237, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 1238, 466, 467,
	465, 468, 469, 470, 1239, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	1240, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 1241, 492, 493, 0, 491, 1242,
	494, 495, 496, 497, 498, 499, 318, 500, 1243, 501,
	570, 571, 572, 573, 1244, 508, 1245, 502, 503, 574,
	504, 575, 1246, 505, 506, 507, 0, 509, 510, 1247,
	1248, 511, 512, 513, 515, 516, 514, 517, 1249, 518,
	1250, 0, 519, 520, 521, 576, 577, 578, 1251, 523,
	522, 579, 1252, 1253, 1254, 1255, 524, 525, 580, 526,
	527, 528, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1177, 253, 254, 1178, 1179,
	1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 1186, 534, 264, 265, 266, 267, 268, 1187,
	1188, 0, 269, 535, 536, 537, 1189, 270, 271, 538,
	1190, 1257, 1191, 272, 273, 274, 275, 276, 277, 278,
	0, 1192, 280, 281, 282, 279, 1193, 283, 0, 284,
	285, 286, 1194, 287, 1049, 288, 289, 1195, 1196, 1198,
	1197, 1199, 1200, 1201, 290, 291, 292, 293, 0, 294,
	539, 540, 1202, 298, 295, 296, 1203, 299, 297, 1204,
	300, 301, 302, 1205, 1206, 303, 304, 305, 1207, 306,
	307, 1208, 308, 309, 310, 1209, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 1210, 244, 1211, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 1212, 328, 1213, 1214,
	1050, 329, 330, 545, 546, 331, 332, 1215, 333, 547,
	1216, 548, 334, 1217, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 1052, 340, 341, 1218, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1219, 1051,
	348, 552, 553, 1220, 554, 1221, 350, 351, 1053, 555,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1222, 362, 364, 363, 1223,
	365, 556, 1056, 366, 367, 1057, 1224, 368, 369, 370,
	1225, 1226, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 1227,
	246, 1060, 394, 1228, 557, 395, 558, 397, 398, 1229,
	0, 399, 0, 1230, 1231, 401, 402, 403, 1232, 1233,
	404, 405, 559, 1061, 406, 1062, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1234, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 1235, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 1236, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1237,
	443, 444, 445, 1063, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1238, 466, 467, 465, 468, 469, 470, 1239,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 1240, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 1241,
	492, 493, 0, 491, 1242, 494, 495, 496, 497, 498,
	499, 318, 500, 1243, 501, 570, 571, 572, 573, 1244,
	508, 1245, 502, 503, 574, 504, 575, 1246, 505, 506,
	507, 0, 509, 510, 1247, 1248, 511, 512, 513, 515,
	516, 514, 517, 1249, 518, 1250, 0, 519, 520, 521,
	576, 577, 578, 1251, 523, 522, 579, 1252, 1253, 1254,
	1255, 524, 525, 580, 526, 527, 528, 2251, 0, 985,
	957, 958, 959, 955, 956, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 2248, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	2249, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	2247, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	2250, 0, 0, 0, 0, 0, 0, 969, 2246, 0,
	931, 967, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 208, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 210, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	1440, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	202, 524, 525, 580, 526, 527, 528, 944, 203, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 985, 957, 958, 959, 955, 956, 968,
	1674, 1672, 0, 0, 967, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 208, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 210, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 1440, 1030, 1066, 0, 523, 522, 579, 0, 0,
	0, 202, 524, 525, 580, 526, 527, 528, 944, 203,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 985, 957, 958, 959, 955, 956,
	968, 1674, 2764, 0, 0, 967, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 1440, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 944,
	203, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 985, 957, 958, 959, 955,
	956, 968, 1674, 1672, 0, 0, 967, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 2355, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 2360, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 2356, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 2357, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 2296, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 0, 0, 969, 2294, 0, 2293,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	2291, 0, 2290, 967, 985, 957, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 0, 0, 0, 0, 0,
	0, 0, 969, 2288, 0, 2287, 967, 985, 957, 958,
	959, 955, 956, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 0, 0,
	0, 0, 0, 0, 0, 969, 2285, 0, 1527, 967,
	985, 957, 958, 959, 955, 956, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 1526, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 934, 967, 985, 957, 958, 959, 955, 956, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 948, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 1030, 1066, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 944, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 985, 957, 958, 959, 955, 956,
	968, 969, 0, 0, 0, 967, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 3970, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 948, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 985, 957, 958, 959, 955,
	956, 968, 969, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 2165, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 2164, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 985, 957, 958, 959,
	955, 956, 968, 969, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 948, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 985, 957, 958,
	959, 955, 956, 968, 969, 0, 0, 0, 967, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 3769, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 948, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 985, 957,
	958, 959, 955, 956, 968, 969, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 3435, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 1742,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 3199, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 985, 957, 958, 959, 955, 956, 968, 969,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 1742, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 0, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 2360, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 985, 957, 958, 959,
	955, 956, 968, 969, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 0, 0, 0,
	0, 0, 0, 0, 969, 1672, 0, 2365, 967, 985,
	957, 958, 959, 955, 956, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	2363, 967, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 2351, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 2340, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 2338,
	967, 2329, 2336, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 2332, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 2333, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 2334, 2331, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	2335, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 2330, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 2326, 967, 2329, 2336, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 2332, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 2333,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 2334, 2331, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 2335, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 2330, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 985, 957, 958, 959, 955,
	956, 968, 969, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 1680, 0, 969, 0, 0, 0, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 2144, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 1532,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 1470, 967, 985, 957, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 1465, 967, 985, 957, 958,
	959, 955, 956, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 0, 0,
	0, 0, 0, 0, 0, 969, 0, 0, 1456, 967,
	985, 957, 958, 959, 955, 956, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 1451, 967, 985, 957, 958, 959, 955, 956, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 1030, 1066, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 944, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 1433, 967, 985, 957, 958, 959,
	955, 956, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 0, 0, 0,
	0, 0, 0, 0, 969, 0, 0, 1320, 967, 985,
	957, 958, 959, 955, 956, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1319, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	1314, 967, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1313,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 1307, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 985, 957, 958, 959,
	955, 956, 968, 969, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 985, 957, 958,
	959, 955, 956, 968, 969, 0, 0, 0, 967, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 4010, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 4009, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 985, 957,
	958, 959, 955, 956, 968, 969, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 4008, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 4010, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 4009, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 985,
	957, 958, 959, 2731, 2732, 968, 969, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	985, 957, 958, 959, 2729, 2730, 968, 969, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 985, 957, 958, 959, 955, 956, 968, 969, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	2152, 2153, 985, 957, 958, 959, 955, 956, 968, 969,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 0, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 0,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 985, 957, 958,
	959, 955, 956, 968, 2348, 0, 0, 0, 0, 0,
	0, 2346, 2347, 0, 247, 248, 249, 250, 251, 252,
	969, 253, 254, 0, 967, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 0, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 2724, 2725, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 1876, 1877, 0, 247,
	248, 249, 250, 251, 252, 969, 253, 254, 0, 967,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 0, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 4010, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 0, 1012,
	0, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 0, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 0, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 4009, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 931, 0, 1106, 0,
	0, 938, 939, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 0, 967, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 1008, 0, 269, 535,
	536, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 1047, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1092, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 246, 1060, 394, 0,
	1013, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	1098, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 1100, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 208, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 1044, 0, 492, 493, 0, 491,
	210, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	1045, 504, 1046, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 1440, 577, 578, 0,
	523, 522, 579, 0, 1106, 0, 202, 524, 525, 580,
	526, 527, 528, 0, 203, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1096, 1009, 1766, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 1008, 0, 269, 535, 536, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 1047, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1092, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 246, 1060, 394, 0, 1013, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 1098, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 1100, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	1044, 0, 492, 493, 0, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 1045, 504, 1046, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 1440, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 0,
	203, 0, 0, 0, 2884, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 1766, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 1008, 0, 269, 535, 536, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 1047, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1092,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 246, 1060, 394, 0, 1013, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 1098, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 1100, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 1044, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 1045, 504,
	1046, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 1088, 0, 1106, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 1096, 0, 1094, 1009, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 1008, 0, 269, 535, 536, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 1047, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1092, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 246, 1060, 394, 0, 1013, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 1098, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 1100, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	1044, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 1045, 504, 1046, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	1106, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	1096, 1009, 1094, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 1008, 0,
	269, 535, 536, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 545, 546, 331, 332, 0, 333, 1047, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 552,
	553, 0, 554, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1092, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 246, 1060,
	394, 0, 1013, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 1098, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 1100, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 1044, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 1045, 504, 1046, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 1106, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 1096, 1009, 1094, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 1008, 0, 269, 535, 536, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 1047, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 246, 1060, 394, 0, 1013, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 1100, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 1044, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 1045, 504,
	1046, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 931, 0, 1291, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1665, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1257, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 555, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1056, 366, 367, 1057, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 0, 1060, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 1440, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 0,
	203, 0, 0, 0, 1437, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 208, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 210, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 1440, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 202, 524, 525, 580, 526, 527,
	528, 0, 203, 0, 0, 0, 0, 0, 1291, 1290,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1257, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 1056, 366,
	367, 1057, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 0, 1060, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 1291, 1290, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1462, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 1291, 1290,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 3124, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1257, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 1953, 364, 363, 0, 365, 556, 1056, 366,
	367, 1057, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 0, 1060, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 1291, 1290, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1462, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1106, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	0, 1446, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 1008, 0, 269, 535,
	536, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 1047, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 246, 1060, 394, 0,
	1013, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 1044, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	1045, 504, 1046, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 931, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 208, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 210, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 1440, 577, 578, 0, 523, 522, 579,
	241, 0, 0, 202, 524, 525, 580, 526, 527, 528,
	0, 203, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 174, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 1381, 0, 241, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 1780, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 241, 2648, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1385, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 241,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 4160, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 3070, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 1385, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 241, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 2621,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 241, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 3224, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 781, 0, 665,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 2050,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 672, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 779, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 670, 494, 495, 496, 497, 671, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 0, 663, 0, 665, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	675, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 672, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 670,
	494, 495, 496, 497, 671, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 665, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 675, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 672, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	670, 494, 495, 496, 497, 671, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 665,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 675,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 672, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 2087, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 670, 494, 495, 496, 497, 671, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	1815, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	675, 0, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 0, 1821, 0, 262, 1811, 263, 1827,
	0, 1834, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 1837, 1838, 0, 0, 270, 271, 0, 0, 1257,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 1032, 294, 1825, 1824,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 1823,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1832, 1833, 331, 332, 0, 333, 0, 0, 0,
	334, 0, 335, 336, 337, 338, 339, 0, 0, 0,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1051, 348, 1818,
	1819, 0, 1814, 0, 350, 351, 1053, 0, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 0,
	1056, 366, 367, 1057, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 0, 1060,
	394, 0, 0, 395, 1826, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	0, 1061, 406, 1062, 0, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 1808,
	1809, 0, 419, 0, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1822, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 0, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1820, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1836, 486, 487, 488, 489, 0, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1828, 1829, 1830, 1831, 0, 508, 0,
	502, 503, 0, 504, 0, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 0, 1812,
	1835, 0, 523, 522, 0, 0, 0, 0, 0, 524,
	525, 0, 526, 527, 528, 1291, 1290, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 1802, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 1257, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1051, 348, 552, 553, 0, 554, 0, 350,
	351, 1053, 555, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 1056, 366, 367, 1057, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 0, 0, 1060, 394, 3387, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	1291, 1290, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1257,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1051, 348, 552,
	553, 0, 554, 0, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1056, 366, 367, 1057, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 0, 1060,
	394, 3046, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1291, 1290, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 1257, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	0, 0, 0, 0, 0, 0, 2989, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1051, 348, 552, 553, 0, 554, 0, 350,
	351, 1053, 555, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 1056, 366, 367, 1057, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 0, 0, 1060, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 2990, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 1489, 0, 1291, 1290, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 1488,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 1487, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 1486,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 1430, 0,
	1291, 1290, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1257,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1429, 550, 551,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1051, 348, 552,
	553, 0, 554, 0, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1056, 366, 367, 1057, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 0, 1060,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 1360, 0, 1291, 1290, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1257, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1359, 550, 551, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1056, 366, 367,
	1057, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 0, 1060, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 1325, 0, 1291, 1290, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1257, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 555, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1056, 366, 367, 1057, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 0, 1060, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 1286,
	0, 1291, 1290, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1257, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1285, 550,
	551, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 1056, 366, 367, 1057, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 0,
	1060, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 1291, 1290, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1291, 1290, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1257, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 1849, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 1056, 366, 367, 1057, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 0,
	1060, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 1291, 1290, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 1291, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1257, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1056, 366, 367,
	1057, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 0, 1060, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 2479, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 2476, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 2483, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 2661, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 2482, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	2658, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 2660, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 2657, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 2481, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 2659, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 2479, 270, 271, 538, 0, 0, 2473,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 2476, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 2483, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 2482, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 2472, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 2481, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 2480, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1554, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 1557, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 1555, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 1556, 522,
	579, 1261, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1263, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1098, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1258, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1260, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 1098, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1164, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1166, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 1098,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 612, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 611, 251, 252, 601, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 604, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 605,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 606, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 600,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 601, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 604, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 605, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 606, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 3011, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1098, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 2593, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 2592, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 2063, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	1984, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1989, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 1988, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1977, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1979,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1422, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1421, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1413, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1412, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1410, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1409, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1406, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1405, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1363, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 1279, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 246, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 1272,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1274, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 582, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 232, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 604, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 605, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 606, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 2094, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 2092, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 2090, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 2028, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 768, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 767, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	766, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 2661,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 3633, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 591, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 590,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	589, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 241, 2648, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 241, 3643, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 3362, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 2399, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 241, 2648, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 2645, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 2071, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 2061,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 634, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 1138, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 1136, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 635, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 631, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 1139, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 630, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 634, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 624, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 635, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	631, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	1445, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 630, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1426, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1425,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1419, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1418, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1369, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1368, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1354, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1353, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1349, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1282, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 1266, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 634,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 1138,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 1136, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 635, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 631, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 1139, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 630, 571, 572, 573, 0, 508,
	0, 502, 1137, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1119, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 640, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 634, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 624, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 622, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 623, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 635, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 625, 450, 0, 451,
	452, 458, 459, 453, 454, 631, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 626, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 630, 571, 572, 573, 0, 508, 0,
	502, 628, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 616, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 617, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 614, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 608,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 586, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 3086, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 3040, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 2980,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	2978, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 2964, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 2601, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 617, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	2010, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 0, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1391, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1332, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 1071, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 0, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 0, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 0, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 0, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1630, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 1635, 1630, 0, 0, 0, 0, 1621, 0, 1602,
	0, 0, 0, 0, 0, 1618, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 1649, 0, 1624, 1625, 1626, 1627, 1629,
	1631, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 1649, 0, 0,
	0, 0, 1637, 1629, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 1645,
	0, 1646, 0, 0, 0, 0, 0, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1640, 1635, 1630, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 0, 3857, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 0, 1607, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 0, 3709, 0, 0, 0, 1639, 0, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 1646, 0, 0, 0, 0, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 1637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 1640, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 1639, 0, 0, 1649, 0, 1602, 0,
	0, 0, 1629, 1631, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 1637, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 1647, 0, 0, 3575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	0, 0, 1629, 1631, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 1640, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 1635, 1630, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	1628, 3519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 1640, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1630, 0,
	1639, 0, 0, 1649, 0, 1602, 0, 0, 0, 1629,
	1631, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 1637, 0, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 1647, 0,
	0, 3518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	1639, 0, 0, 1649, 0, 0, 0, 0, 0, 1629,
	1631, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 1640, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 1637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 1635, 1630, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 1628, 3517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 1640, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 1630, 0, 1639, 0, 0,
	1649, 0, 1602, 0, 0, 0, 1629, 1631, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 1637,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 1647, 0, 0, 3229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 1639, 0, 0,
	1649, 0, 0, 0, 0, 0, 1629, 1631, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 1640,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 1635, 1630, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 1628, 2804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 1640,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1630, 0, 1639, 0, 0, 1649, 0, 1602,
	0, 0, 0, 1629, 1631, 0, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 1646, 0, 0, 0, 0, 0, 0, 1616, 1617,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 1637, 0, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 1647, 0, 0, 2803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 1639, 0, 0, 1649, 0, 0,
	0, 0, 0, 1629, 1631, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 1646, 0, 0, 0, 0, 0, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 1640, 1599, 1600, 0,
	1632, 1633, 1634, 1642, 1643, 1644, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 1635, 1630,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 1628, 2802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 1640, 1599, 1600, 0,
	1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1630,
	0, 1639, 0, 0, 1649, 0, 1602, 0, 0, 0,
	1629, 1631, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 1646, 0,
	0, 0, 0, 0, 0, 1616, 1617, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 1637, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 1647,
	0, 0, 2801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	0, 0, 1607, 4073, 0, 0, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 1635,
	1630, 1639, 0, 0, 1649, 2739, 0, 1602, 0, 0,
	1629, 1631, 0, 0, 1648, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 1646, 0,
	0, 0, 0, 0, 0, 1616, 1617, 0, 0, 1601,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 1637, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2740, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 4072, 1607, 0, 1638, 0, 0, 0, 1613,
	1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 0, 2768, 1628, 0,
	0, 0, 1639, 0, 0, 1649, 0, 0, 0, 0,
	0, 1629, 1631, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 0, 0, 0, 0, 0, 1616, 1617, 0, 0,
	0, 0, 0, 1640, 0, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 1637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 1635, 1630, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 1613,
	1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 0, 2864, 0, 1640, 2863, 0, 2373, 0, 0,
	0, 0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 1649, 0, 0, 1635, 1630, 0, 1629, 1631,
	2372, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 1622, 1618, 0, 0, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1649, 0, 0, 0, 0, 1623, 1629, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 1640, 1616, 1617, 0, 0, 0, 0, 0, 0,
	0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	1637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 1635, 1630, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 1638, 0, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	1640, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 0, 1639, 0, 0, 1649, 0,
	1602, 0, 0, 0, 1629, 1631, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 1637, 0, 0,
	1618, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 1635, 1630, 1639, 0, 0, 1649, 0,
	0, 1602, 0, 0, 1629, 1631, 0, 0, 1648, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 1601, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 1637, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 0, 1607, 0, 1638,
	0, 0, 2870, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 1628, 0, 0, 0, 1639, 0, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 1646, 0, 0, 0, 0, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3210, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 1600, 1623, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 0, 0, 0, 2865, 1640, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 1630, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 0, 1601, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 1621, 0, 1607, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 1649, 0,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 1637, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 1647, 1635, 1630, 1629, 1631, 0, 2805,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	1636, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	1622, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 2832, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 0, 1623, 0, 1629, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 1640,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 1637,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 1600, 1623, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 1630, 0, 0, 0, 0, 1640,
	0, 1602, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 1630, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	1648, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 1601, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 1621, 0, 1607, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 1646, 0, 0, 0, 0, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 1637, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 1639, 0,
	0, 1649, 0, 0, 1647, 0, 1630, 1629, 1631, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	1648, 1636, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 0, 1616, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	1637, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 1622, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1649, 0, 0, 0, 1623, 0, 1629, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	1640, 0, 1616, 1617, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	1637, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609,
}
var sqlPact = [...]int{

	5047, -1000, -1000, -1000, -1000, 250, -1000, -1000, 249, 248,
	246, 243, 240, 223, 222, 221, 215, -1000, -1000, -1000,
	-1000, -1000, -1000, 214, -1000, -1000, 212, -1000, 211, 209,
	208, -1000, -1000, 202, -1000, 197, -1000, -1000, -1000, -1000,
	191, 188, 187, 74511, 74034, 74982, 2140, 90174, 78762, 2307,
	66897, 89697, 66420, 89220, 88743, 2481, 185, -1000, 88266, 184,
	182, 181, -1000, 87789, -1000, 1789, -1000, 179, 4020, 55423,
	178, 177, 175, 2795, 173, -1000, 172, 170, -1000, 9833,
	1632, -1000, 163, 154, -1000, 7188, 4273, 77814, 147, 145,
	2253, 143, 139, 54945, 137, 135, 2171, 2740, -1000, -1000,
	1955, -1000, -1000, 134, 133, 132, 130, 129, 128, 127,
	125, 124, 123, -1000, 122, 120, 119, 118, 115, 114,
	111, 110, -1000, 109, 108, 101, 99, 98, 94, 93,
	92, 90, 89, 87, 85, -1000, 11440, 84, 1837, 1686,
	1682, 1675, 1663, 1592, 1016, 82, 81, 79, 76, 75,
	74, 72, 69, 67, -1000, 65, 64, 63, 62, 61,
	60, 59, 57, 169, 56, 51, 47, 37, 35, 34,
	32, 3264, -1000, 1535, 1351, 26189, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 95826, 90645, 31, -146, 30, -1000, 3116, 1022,
	45850, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 324, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 536, 1859, 804, -1000, -1000, -1000, 87318,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2134, 0,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 803, -1000, 2130,
	160, 2092, -1000, -1000, -1000, -1000, -1000, 90645, -1000, 1055,
	-1000, -1000, 3544, 3542, 1972, 793, 86847, -1000, 1597, -1000,
	970, 27692, -1000, 1245, -1000, 27692, 323, -1000, -1000, -1000,
	-1000, -1000, -1000, 3540, 3539, 3538, 3535, -1000, -1000, 65943,
	20123, 65466, 64989, 86370, 19636, 73557, 73080, 85893, 61187, -1000,
	-1000, -1000, 1470, -1000, -1000, -1000, -1000, -1000, -1000, 6,
	58752, 3338, 90645, -1000, 322, -1000, -1000, -1000, -1000, -1000,
	-1000, 39431, 1273, 38918, 873, 38405, 629, -1000, -1000, -1000,
	60700, -1000, 3534, 3530, 1140, 3529, 3059, 95355, 1785, 3528,
	1877, 1297, 3527, 3525, 3524, 3522, 3521, 3520, 1441, 85416,
	2773, 84939, 1760, 60213, 1042, 72603, 74982, 2500, 84462, 1415,
	1412, -1000, -1000, -1000, -1000, 2878, 2731, 2721, 51624, -1000,
	-1000, 3518, 3517, 3516, 3512, 3511, 94884, 1767, 3509, 2351,
	3508, 3507, 3504, 3503, 3502, 3501, 3500, -1000, 72126, 71649,
	71172, 3179, 83985, 70695, 83508, 59726, 37892, 875, -1000, -1000,
	-1000, 47772, 5896, 5786, 83031, 49719, 74982, 74982, -1000, -1000,
	-1000, -1000, -1000, 37379, 687, 36866, 790, -1000, -1000, 48264,
	2710, -1000, -1000, -1000, -1000, 36353, 563, 35840, 554, 90645,
	-1000, 2771, 1902, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2349, 1557, 3358, 59239, 1938,
	1398, 3139, 2876, 2875, 1464, 3499, 2402, 2873, 2868, 2866,
	2860, 2858, 1817, 2403, 502, 25676, 2732, 1690, 35327, 1458,
	1507, 2854, 2802, 3384, 1924, 1883, 1948, 64512, 3498, 3495,
	3102, 2793, 2790, 2708, -1000, -1000, -1000, -1000, 1434, -1000,
	-1000, -1000, -1000, -1000, 67839, -1000, -1000, 1246, -1000, -1000,
	1246, -1000, -1000, -1000, -1000, -1000, 1375, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1535, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2190,
	-1000, 1949, -1000, -1000, 2317, 3099, 3099, 3099, 3166, 503,
	498, -1000, 169, -1000, -1000, 101151, -1000, -1000, 39932, 39932,
	39932, 39932, 39932, 39932, 39932, 2033, -1000, 791, -1000, -1000,
	850, -1000, 788, 636, -1000, -1000, -1000, -1000, -1000, -1000,
	786, -1000, -1000, -1000, -1000, -1000, -1000, 3338, -1000, 22610,
	-1000, -1000, -1000, 481, 782, 39932, -1000, -1000, 3403, 3400,
	565, -1000, 320, 979, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2767, 779, 777, -1000,
	776, 775, 774, 770, 767, -1000, -1000, -1000, 758, 756,
	754, 751, 749, 748, 744, 742, -1000, 1934, -1000, -1000,
	-1000, -1000, -1000, -1000, 684, 683, 683, 683, -1000, 1034,
	-1000, -1000, -1000, 342, 682, 332, 677, 670, 669, -1000,
	741, 739, 738, 736, 724, 723, 722, 717, 709, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1033, -1000, -1000, -1000, -1000,
	1, 90645, -1000, 536, 1, -1000, -1000, 708, -1000, 29708,
	29708, 29708, -1000, -1000, 2129, 39932, -1000, 2279, -1000, 16,
	16, 944, 46802, -1000, 44880, 944, 299, 857, 51146, -1000,
	2705, -1000, -1000, 699, 286, -1000, -1000, -1000, -1000, 20608,
	2703, 90645, 90645, 74982, 74982, 74982, 2882, 39932, -1000, -1000,
	55894, 90645, 75453, 3267, 56836, 55894, 90645, 2757, -1000, 74982,
	-1000, -1000, 90645, -1000, 39932, -1000, 3265, 1556, 62147, 3211,
	-9, -1000, -1000, -1000, -1000, -1000, -1000, 2312, 2297, 1164,
	2166, 1764, -1000, 27692, 3049, -1000, -1000, -1000, 279, 20608,
	-1000, -1000, -1000, -1000, -1000, 3051, 2969, 1461, -1000, 2158,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1791,
	2963, -1000, 1968, 2956, 1697, -1000, -1000, 2160, -1000, -1000,
	3070, -1000, -1000, 1931, 2953, 18, -1000, -1000, 2299, -1000,
	-1000, 1960, -1000, -1000, 1015, 2951, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49234, 48264, 58752, -6, -1000,
	-1000, -1000, -1000, -25, -1000, 19149, 101151, -1000, -1000, -1000,
	-1000, 1759, 101151, 894, -1000, -1000, 2949, -1000, 101151, 892,
	-1000, -1000, 2946, -1000, 2756, -1000, -1000, -1000, -1000, 3492,
	-1000, 3485, 2257, 3484, 3483, 3480, -1000, 1627, 1939, 3479,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 70218, 2126, -1000,
	-1000, 69264, -1000, 2252, -1000, 69741, 1040, -1000, 1015, 2246,
	-1000, 74982, 991, -1000, 3476, 3165, 2521, 1015, 2245, -1000,
	-1000, -1000, -1000, -1000, 53046, -1000, 53046, -1000, 53046, -1000,
	1589, -1000, 94413, 16, 16, 3338, -1000, -1000, -1000, -1000,
	-1000, 2945, 3474, 3467, 3461, -1000, 90645, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 204, 2944, -1000, -1000, 204, 2938,
	-1000, 204, 2935, -1000, 77337, -1000, -1000, 2202, 2933, -1000,
	201, 2929, -1000, -1000, 196, 2926, -1000, -1000, -81, 2920,
	-1000, -1000, 101151, -1000, -1000, -1000, -27, -1000, -1000, -1000,
	1022, -1000, 47280, -1000, 47280, 82554, 61672, 1000, 734, 54467,
	101151, -1000, -1000, -1000, -1000, 101151, -1000, -1000, -1000, -180,
	-1000, -1000, 61672, 48264, 101151, -1000, -1000, -1000, -1000, 101151,
	-1000, -1000, -1000, 61672, 69264, -1000, 82077, 68793, -1000, -1000,
	1428, 2364, -1000, -1000, -1000, 1000, 61672, 61672, 61672, -1000,
	81600, -1000, -1000, 1932, 1771, 3076, 1912, 74982, -1000, 1852,
	-1000, -1000, -1000, 3122, -1000, 2733, -1000, 56365, 76866, -1000,
	76395, -1000, 75924, -1000, 74982, -1000, 74982, -1000, 3460, 3459,
	3457, -1000, 3456, 3089, -1000, 101151, 3084, -1000, 3453, 3206,
	2732, 101151, -1000, 2897, 1689, 1678, 90645, -1000, -1000, 90645,
	-1000, 90645, -1000, -1000, -1000, 1496, -1000, -1000, 2301, -1000,
	-1000, -1000, -1000, 74982, -1000, -1000, -1000, -1000, -1000, -1000,
	2730, -1000, 1684, -1000, 1741, -1000, 1425, -1000, -1000, 205,
	-1000, -1000, -9, -1000, 93942, -1000, 2317, -1000, 90645, -1000,
	2355, 2719, 2728, 1667, 2136, 2437, -1000, 34814, 2410, 42437,
	2155, 169, -1000, -1000, 169, 169, 27191, -1000, -1000, 56836,
	56836, 20608, 1394, 39932, 39932, 39932, 39932, 39932, 39932, 39932,
	39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932,
	39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932,
	39932, 39932, 39932, 39932, 39932, 39932, 39932, 39932, 2250, 39932,
	1372, 39932, 39932, 39932, 39932, 1672, -1000, -1000, 1871, 578,
	1937, -1000, 3327, 3327, 3327, 514, 514, 101403, 101403, 624,
	3452, 850, -1000, 39932, -1000, 116, 39932, 21095, -1000, 498,
	6972, 2332, -1000, 497, 21608, -1000, -1000, -1000, 22610, 636,
	34301, 39932, 1027, 101151, -1000, -1000, 1565, 3351, 18664, 2772,
	2596, 697, 833, 752, 25163, 24650, 24137, 23624, 714, 39932,
	39932, 39932, 39932, 39932, 39932, 39932, 39932, -1000, -1000, 3365,
	-1000, 3351, -1000, -1000, -1000, -1000, 3351, 1391, 1387, 3351,
	-1000, 3351, 3351, 2845, 2845, 33800, 33287, 32774, 42938, 32261,
	39932, 23111, 31748, 31235, -1000, 90645, 1, 3263, 39932, 159,
	-1000, 99633, -1000, 159, 159, 696, -28, 101151, 2360, 2360,
	46326, 2268, 2050, 2050, 2050, -1000, 944, 14755, 944, 80654,
	2064, 944, 944, 277, 337, 486, 44404, 2279, 80654, 837,
	693, 29, 25, 24, -1000, -1000, 21, 20, -1000, -1000,
	74982, 691, 21095, 20608, 273, 1468, -34, 2447, 2434, 2429,
	-1000, 2423, 1811, -35, 1371, -33, -1000, 5003, -36, -1000,
	1213, 271, 3351, -1000, -1000, -1000, -1000, -1000, 3451, 3450,
	-1000, 1030, 690, 685, 392, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 684, 683, 683, 683, -1000, 342, 682,
	332, 677, 670, 669, -1000, -1000, -1000, -1000, -1000, 2702,
	-25, 75453, -1000, -1000, 933, -42, 1144, -9, -1000, -1000,
	-1000, 62147, 1246, -1000, 1694, -1000, -1000, -1000, -1000, -1000,
	-1000, 1447, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 565,
	-1000, -1000, -1000, -1000, -1000, -1000, 3345, 3336, -1, -1000,
	-1000, 20608, -1000, -15, 1722, 1681, -1000, 64035, 2227, 3085,
	3066, 1581, -1000, 1490, 1370, 3163, 67839, 3232, 3254, 238,
	-1000, 2701, -1000, -1000, 969, 1649, 1659, 1363, 67839, 1968,
	-1000, 56836, -1000, 2518, 3162, 1362, 1376, 1362, 1362, 1356,
	-1000, 67839, 1656, 1353, -1000, 1350, -1000, -19, 3230, 3246,
	189, -1000, 2692, 1337, -1000, -1000, 74982, 20608, 1512, 1508,
	1652, 1334, -2, -1000, 3222, 3217, 1333, 1330, -1000, 1753,
	-1000, 61672, 940, 2559, 940, -6, 58752, 90645, 270, -1000,
	116, 39932, 39932, 116, 39932, 116, 3203, -1000, -1000, 2917,
	-1000, -1000, -1000, 3449, 1911, 2343, -1000, -1000, 668, 2243,
	2661, 90645, 2471, -7, 74982, -1000, 2916, 1968, 2235, -1000,
	-1000, 68316, -1000, 2915, 536, 577, 3447, -1000, 93471, -1000,
	3079, 1403, 2900, 1099, 716, 3261, -1000, 716, 53517, -1000,
	90645, -1000, -1000, 90645, -1000, -1000, -1000, 3446, -1000, 74982,
	-1000, -1000, 74982, -1000, 74982, -1000, 74982, 192, 2898, -1000,
	-1000, 90645, -1000, 74982, 74982, -1000, 90645, 90645, 61672, 61672,
	5036, 63093, -43, -49, 485, -1000, 81129, 90645, 1095, 63564,
	90645, 3039, 1013, 48264, -1000, -51, -180, 2556, 1000, 1000,
	940, -1000, 940, -1000, 74982, 2727, -1000, 1000, 1000, 1000,
	-1000, -1000, -1000, -1000, 3445, 3444, -1000, -1000, -1000, 1014,
	74982, 90645, 74982, -1000, -1000, 90645, -1000, 90645, -1000, 1014,
	90645, 1014, 90645, 1014, 90645, -1000, -1000, -1000, -1000, -1000,
	-1000, 116, 39932, -1000, -1000, 3442, 1609, -1000, 2724, -1000,
	2720, -1000, 55, -1000, -1000, -1000, -1000, -1000, 1886, 74982,
	74982, 74982, 74982, 90645, 74982, -1000, 67839, -1000, 2355, 2719,
	-1000, -1000, -1000, -1000, -1000, -1000, 1616, 2103, -1000, 2387,
	-1000, 1514, -1000, -1000, -1000, 101151, 43423, -1000, -1000, 101151,
	1827, -1000, 41936, 41435, -1000, -1000, 1647, 74982, 2475, -1000,
	2475, -185, -1000, 99237, 2386, 74982, -1000, -1000, -1000, -1000,
	-1000, 968, 985, 985, 1175, 1175, 1175, 1175, 3193, 5513,
	5633, 5402, 5565, 5565, 461, 461, 461, 461, 461, 5565,
	1019, 514, 514, 1019, 1019, 1019, 1019, 1019, 514, 514,
	514, 5565, 5565, 5565, 101403, 101233, 8009, 39932, 39932, 1325,
	1869, 578, 7758, 39932, 8731, 8731, 8731, 8731, -1000, 1747,
	-1000, -1000, -1000, -1000, 2660, 666, 42938, 42938, -1000, -1000,
	-1000, -1000, 22109, 39932, -1000, -1000, -1000, -1000, 30722, -1000,
	-1000, 98916, -283, 477, -163, -3, -1000, 39932, 39932, 39932,
	475, -1000, 268, 39932, 90645, -1000, 13059, 832, -203, -1000,
	-52, 1382, -1000, 39932, -1000, -1000, 1324, -1000, 1323, 1321,
	1320, -1000, 663, 473, -1000, 265, -1000, 2039, 661, 660,
	39932, -1000, -1000, -1000, -1000, -1000, 98689, -1000, -1000, 98529,
	-1000, -1000, 98302, -1000, -1000, 98142, -1000, -1000, -1000, 100792,
	12450, 12368, 10634, 5961, 9684, 8627, -61, 470, -62, 469,
	967, 963, 447, 446, 442, -63, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -69, 441, -1000, 2657, -163, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 440, -1000, 438,
	-1000, 100622, -163, 436, 4483, -1000, 42938, 42938, 42938, -1000,
	433, -1000, 99464, -1000, 100540, 30221, 30221, 30221, 423, 100181,
	39932, -163, -71, -1000, -74, -1000, -1000, 550, -79, 990,
	29708, 45372, 20608, -1000, 990, 990, 39932, -1000, 39932, 2416,
	-1000, -1000, -1000, 2408, 1879, 2360, 46326, -1000, -1000, -1000,
	-1000, 80654, -1000, 3338, 2765, -1000, 80654, -1000, -1000, 90645,
	536, -1000, 80654, 80654, 20608, 944, -1000, 944, 80654, 593,
	-1000, -1000, -1000, -1000, -1000, 422, 50194, -3, 264, 20608,
	1015, -1000, 2458, 2458, 2458, 2458, -1000, -1000, 90645, 3309,
	-1000, 1951, -1000, 56836, -1000, 848, 1163, 20608, -1000, -1000,
	-1000, 658, -1000, 3351, 3351, -1000, 3351, 90645, 95, 27692,
	-1000, 1246, -1000, -1000, 1504, -1000, 1918, -1000, 1380, -1000,
	-1000, -1000, -1000, 27692, -1000, 2127, 90645, 90645, 74982, -1000,
	90645, -1000, 2220, 93000, 2215, 56836, 90645, -1000, -1000, 656,
	652, 2381, 2373, 1093, 90645, 90645, 2371, 92529, 92058, 90645,
	1975, 39932, 58281, 2061, 2112, 116, 116, -1000, -1000, 116,
	646, 1303, 74982, 74982, 90645, 74982, 1661, -1000, -1000, -1000,
	-1000, -1000, 67368, -1000, -1000, 3363, 3356, -1000, 1362, -1000,
	-1000, -1000, 1362, 1968, 1651, 90645, 74982, 90645, 2003, 116,
	116, -1000, -1000, 116, 645, 20608, 1922, -1000, 2761, 90645,
	3398, 90645, 90645, 90645, 58281, 3093, 91587, 90645, 90645, 58281,
	1753, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 57806, 1113,
	1015, 1012, 48264, 2532, -1000, -1000, 18179, -1000, 101151, 101151,
	-1000, 101151, -1000, 55894, 90645, -1000, 1038, 90645, 63564, 994,
	2896, 52575, -25, 1000, 61672, 74982, -7, 90645, -1000, 1968,
	2884, 536, 2214, -1000, 61672, 3260, 643, 3440, 3439, -1000,
	2124, 2210, -1000, -1000, 91116, 2979, 881, 90645, 990, 46326,
	1947, -1000, 50671, 1073, 90645, 1864, 86, -1000, -1000, -1000,
	43, 90645, -1000, 3438, -1000, -1000, 204, 204, 204, -1000,
	74982, 74982, 2202, -1000, 201, -1000, 196, -1000, -81, -1000,
	-1000, 5036, 5036, 1000, -227, 638, -1000, 934, 922, 48749,
	61672, -80, -1000, -1000, -1000, -1000, -1000, 74982, 90645, 746,
	2519, 90645, -85, -1000, 259, 637, -1000, 2651, -1000, -1000,
	1013, 48264, 2656, -1000, -1000, 1023, -1000, 1409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12, -25, -25,
	-1000, 1014, -1000, 1014, -1000, 1014, -1000, 101151, -1000, -1000,
	1596, 1595, 90645, -1000, 20608, 90645, 74982, 20608, 74982, 2717,
	2715, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1120,
	-1000, 1827, 2101, -1000, 636, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2290, -1000, -8, 27191, 2162, -1000,
	-1000, 74982, 11, 39932, 39932, 6910, 6650, 39932, 42938, 42938,
	-1000, 39932, 6195, -1000, -1000, -1000, -1000, -1000, 2655, 634,
	39932, 56836, 4381, 1035, -1000, 418, 7700, 1019, -1000, 39932,
	-1000, 413, 29207, -1000, 99860, -41, -87, -1000, 15253, -163,
	-88, -1000, -1000, 846, -1000, 2934, -1000, 39932, 100020, 2206,
	1838, 1736, 1618, 3351, 3396, 17694, -1000, 53992, 993, 2073,
	97915, -1000, -1000, -1000, -1000, 56836, 56836, 39932, 39932, -1000,
	39932, 39932, 39932, -1000, -1000, -1000, 3351, 948, -1000, -1000,
	-1000, 948, -1000, -1000, 1362, -1000, 1362, -1000, 39932, -1000,
	-1000, 2654, 39932, -1000, 56836, 56836, 42938, 42938, 42938, 42938,
	42938, 42938, 42938, 42938, 42938, 42938, 42938, 42938, 42938, 42938,
	42938, 42938, 42938, 42938, 42938, 2441, 42938, 3325, 3325, 3325,
	-1000, 2666, 2654, 39932, 39932, 56836, 412, 410, 409, -1000,
	39932, -163, -1000, -1000, 5036, 633, -1000, 2280, -1000, 2590,
	-1000, 39932, -1000, -90, -1000, 2279, -1000, -1000, 2590, 2590,
	-93, 101151, 46326, 46326, -1000, 632, 39932, 2372, -1000, -1000,
	831, -270, -1000, 919, -1000, -1000, -1000, -1000, -1000, 536,
	-1000, -1000, -1000, 258, 80654, 80654, 830, -1000, -95, -1000,
	-1000, -96, -1000, 3259, 408, 20608, -1000, -1000, 3077, -1000,
	-1000, -1000, -1000, -1000, -1000, -25, 2091, 3390, -1000, 3355,
	842, 829, 256, 3351, 407, 406, 405, -25, 90645, -1000,
	-9, -1000, -1000, -1000, 39932, -1000, -1000, 3078, 1319, 1312,
	-1000, -1000, 2883, -1000, 2201, -1000, 1077, -1000, 1929, -1000,
	39932, 39932, 628, 622, 3437, 1843, 3431, 1094, 2874, 2202,
	2871, 2202, -1000, -1000, 973, -1000, 101151, -1000, -1000, -1000,
	-1000, 621, 619, -1000, -15, 1620, 1639, 1018, -1000, -1000,
	39932, 39932, 80183, -1000, 421, 3070, 8, -1000, -1000, 1630,
	1308, -1000, -1000, -1000, -1000, 1968, 1623, 1305, -1000, -1000,
	-1000, -1000, 1017, -1000, -1000, 39932, -1000, -19, 1300, 3219,
	2194, 74982, 1283, -1000, 1252, -1000, -1000, -1000, 3216, 2202,
	2836, 1203, -1000, -1000, -1000, -1000, -1000, 57321, -1000, -1000,
	2269, 940, 1012, 2652, -1000, 2470, 3430, 74982, 3426, 404,
	-98, -22, 56836, 3255, -1000, 2109, 620, 74982, 953, -1000,
	3338, -1000, -1000, -1000, -1000, 74982, 3251, 2830, 1015, 116,
	3388, -1000, -1000, 74982, 2829, 2123, 2189, 2333, 881, 62622,
	-1000, 1015, 2069, -54, -1000, 1864, 28694, 3068, -101, -1000,
	-1000, -1000, 990, 53517, 46326, 39932, 3425, -104, -1000, -1000,
	-1000, -1000, -1000, 192, -1000, -1000, -1000, -1000, -1000, -1000,
	79237, 79237, 61672, 61672, 61672, 1000, 90645, 90645, 63564, -1000,
	618, 90645, 90645, 612, -1000, 90645, 90645, 3424, 61672, -24,
	611, -1000, 915, 914, 913, -1000, -1000, -1000, -1000, -1000,
	-1000, -180, 116, -1000, 2089, 74982, 17209, -1000, -1000, -1000,
	-1000, -1000, 1014, -1000, -1000, 2004, 2154, 2004, 1849, 1829,
	-1000, 2098, -1000, -1000, -1000, -1000, 2476, 3082, 20608, 3204,
	8731, 39932, 39932, 4707, 918, 737, 8731, 39932, 39932, 56836,
	301, -106, 39932, 39932, -1000, 39932, 812, 101151, 3387, 39932,
	395, 389, -1000, -1000, -1000, 3348, -1000, -1000, -1000, 101151,
	39932, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 388, -1000,
	193, -1000, -1000, -1000, 96297, -1000, 39932, 387, 3161, -1000,
	383, 382, 4421, 363, 97755, 97528, 97368, 381, -1000, -1000,
	380, 379, 101151, 2666, 101151, -1000, -1000, 813, 813, 1338,
	1338, 1338, 1338, 3325, 1207, 1214, 1067, 3738, 3738, 3738,
	501, 806, 806, 3738, 3738, 3738, 2648, 2334, 608, 895,
	-1000, -1000, 101151, 101151, 374, -1000, -1000, -1000, -163, 371,
	5036, -1000, 2586, 3160, 101151, -1000, 46326, 2586, 2586, -1000,
	-1000, 1879, 90645, 101151, 46326, -1000, 2765, -1000, 15749, -1000,
	20608, -1000, -1000, -1000, -1000, 3338, -1000, 50194, -1000, 604,
	-1000, 190, 3077, -1000, 899, -1000, -1000, -1000, 811, 3421,
	834, 20608, 365, -1000, -1000, -1000, -25, 101151, 90645, 90645,
	90645, 2827, -1000, 4276, -1000, 1093, 97141, -111, -1000, 99237,
	39932, 90645, -1000, -1000, 1763, 2367, 1132, -1000, 3127, 90645,
	-1000, 90645, -1000, -1000, 90645, 90645, 74982, 90645, 2806, -113,
	101151, -26, -1000, 898, -1000, 1359, -1000, 16724, 90645, 74982,
	90645, 74982, 2800, -119, 20608, -1000, 3386, 3382, 2826, 3134,
	3374, 90645, -1000, 90645, 74982, 3034, -1000, -1000, -29, 602,
	-1000, 897, -1000, -1000, 891, 1012, -1000, 61672, 48264, -1000,
	536, -1000, 2512, -1000, 78285, 2132, 116, -1000, 3419, 79712,
	600, -1000, 2086, -1000, 753, 1968, 116, 74982, -1000, -1000,
	349, -30, -1000, 1085, 20608, 74982, 2823, 2337, 881, 62622,
	-1000, 1403, 2437, -1000, -48, -1000, 595, 116, 2069, -1000,
	-54, 101151, -1000, 888, -1000, -1000, -120, -1000, -1000, 334,
	-1000, 3033, 3031, -1000, 2621, 39932, 596, 591, 90645, 3029,
	-1000, -1000, -125, 2927, 2927, 61672, 48264, 61672, 1013, -1000,
	2233, -1000, -1000, -1000, -1000, -1000, 20608, 1644, -1000, 590,
	587, -1000, -1000, -1000, -1000, 3082, 8731, 8731, 39932, 39932,
	39932, 8731, 301, -127, -1000, 8731, 8731, -163, -1000, -1000,
	99860, -1000, -1000, -1000, 101151, -1000, 16239, 2005, -1000, 96819,
	-1000, 27191, -1000, -1000, 39932, 39932, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 42938, 2646, 586, 56836, -1000, -1000,
	330, 986, 39932, 39932, 2279, 986, 986, -1000, -128, -1000,
	-1000, -1000, 3338, 190, -1000, -1000, 3418, 20608, -1000, 61672,
	814, -1000, 3417, -1000, -1000, -1000, -1000, -1000, 90645, -1000,
	90645, -1000, 20608, 90645, 2610, 2184, -1000, -1000, 2369, 585,
	42938, 74982, 870, -1000, 3297, 2589, 1884, 39932, 2162, -145,
	-150, 2183, -1000, -1000, 2182, 39932, -1000, 56836, 584, 2202,
	2202, -151, -152, -1000, -1000, 39932, 1249, 90645, 28193, -1000,
	3414, 3070, -1000, -1000, -1000, -1000, 39932, 1221, -1000, -1000,
	-1000, 3373, 2202, 20608, -1000, 2202, 2202, 3134, 1130, 2097,
	2097, 61672, 48264, -1000, -81, 1012, 3247, 2003, 2555, -1000,
	-1000, -1000, -1000, 2359, -1000, -1000, 90645, 2353, 1001, -1000,
	-153, -1000, 886, 883, 63564, 994, 988, -1000, -1000, -1000,
	536, -1000, 3369, 582, 90645, 2115, 580, 20608, -1000, 881,
	62622, -1000, 2979, 1864, -1000, 2993, 90645, 3063, -1000, 2437,
	578, -1000, 1000, 576, 575, 3018, 3018, -158, 39932, 39932,
	-160, 571, 1000, -1000, -161, -1000, -1000, -1000, -1000, -94,
	-1000, 855, 847, -1000, -1000, 74982, 74982, 39932, 39932, -1000,
	8731, 8731, 8731, -1000, 329, -1000, -1000, 2069, 3155, -1000,
	-141, 96775, 14120, 239, 42938, 56836, -166, -1000, -1000, 90645,
	101151, -163, -1000, -1000, -1000, 594, -1000, -1000, 3412, -1000,
	-1000, 1966, -1000, -1000, -1000, 90645, 2175, -1000, 1090, 39932,
	895, 564, 39932, -1000, 3245, -1000, 2494, 2665, 2512, 560,
	-1000, -1000, -1000, -1000, -1000, 1083, 1882, -1000, -1000, 101151,
	3134, 39932, -1000, -1000, 557, 553, 101151, 548, 880, 2639,
	-1000, -1000, -1000, 101151, 546, 3219, -1000, -1000, -1000, -1000,
	2202, 74982, -1000, -167, -1000, -1000, 1895, 116, 994, -1000,
	2025, 2132, 544, -1000, -1000, 2105, 2435, -1000, 79712, 27692,
	27692, 328, 3243, 988, -1000, 3333, -1000, 3240, -1000, 39932,
	-1000, 74982, 39932, 2114, 62622, -1000, 2333, -1000, 1298, -168,
	90645, 1864, -1000, -1000, 61672, 61672, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1083, -173, -174,
	-1000, 61672, -1000, -1000, 2233, -1000, 90645, -1000, 90645, -1000,
	-1000, -175, -188, -1000, 1962, 39932, 27191, -1000, -1000, 239,
	-189, -1000, -147, -1000, 3237, -1000, -1000, -1000, -1000, 2822,
	2579, 13757, 2284, 90645, 13443, -1000, 2663, -1000, -1000, 2003,
	90645, 2512, 2573, 74982, 1089, -190, 2004, 2004, 39932, 26690,
	1970, 39932, -1000, -1000, 3134, -1000, 2618, 3347, -1000, 2105,
	74982, 90645, -1000, 3117, -1000, 3028, -1000, -1000, -1000, 2512,
	116, -1000, -1000, 116, -191, 1085, -207, 74982, -1000, 2337,
	1551, -1000, 990, -1000, -1000, -208, -213, 1884, 1083, 999,
	-214, -1000, -216, -221, -1000, -1000, 326, 40934, 40934, 40934,
	-163, -185, -1000, 90645, 542, 2789, 1004, -1000, 2108, 1940,
	161, 1086, -1000, -1000, 2589, -222, -1000, 1003, 536, -1000,
	39932, 1083, -224, -1000, 1072, -229, -1000, 1060, -230, -1000,
	2634, -1000, -231, 2202, 1002, 3187, -1000, -1000, -1000, -1000,
	530, -236, -1000, -1000, 2264, -1000, 2003, 1001, -1000, 1083,
	529, 1884, 528, -1000, 53517, -1000, 1000, 1000, 2512, 1884,
	990, 527, 1000, -1000, -1000, -1000, 2880, -1000, 43908, 2107,
	1825, 99076, 2880, 2880, -1000, -1000, 90645, 3186, -1000, 2113,
	2111, 1476, -1000, -1000, -1000, -1000, -1000, -1000, 990, -1000,
	3178, 2284, 101151, 2512, -1000, 2004, 2541, -1000, 2004, 2631,
	-1000, 1964, -1000, -1000, -1000, 2817, 3314, 90645, -1000, 90645,
	1808, 1794, 3411, 994, 2105, 1884, 39932, 2512, 39932, -232,
	-1000, -1000, 2003, 2512, -1000, -1000, -1000, 1724, 3279, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 876, -1000, 3008,
	-1000, 1117, 1910, 1910, -1000, 871, 2108, -1000, -1000, 526,
	-1000, 521, -1000, 1748, -1000, -1000, -237, -1000, -1000, 3408,
	-1000, 2105, -1000, 2512, -238, 2003, -239, -1000, 999, 2003,
	1754, -1000, -1000, 2056, 40433, 39932, -1000, 3313, -1000, -1000,
	2352, -1000, 39932, 2589, 39932, 39932, 2083, 2180, -1000, -1000,
	2003, 1083, 999, 1884, 990, 999, -1000, -1000, -1000, 101151,
	-1000, -1000, -1000, 101151, -1000, -244, -245, 52100, -1000, -1000,
	-1000, 999, 1884, 990, 2512, -1000, 990, 2003, 1210, -227,
	79237, 990, 2512, -1000, 2003, -1000, -1000, 517, -246, -1000,
	2003, 999, 39932, -1000, 999, 990, -255, 990, -1000, 2003,
	-1000, -1000,
}
var sqlPgo = [...]int{

	0, 4180, 4179, 4176, 4175, 4174, 4166, 4164, 4163, 4160,
	4157, 4155, 4153, 4152, 4149, 4148, 4147, 4146, 4145, 4144,
	4143, 4141, 4139, 4137, 4134, 4132, 4131, 4130, 4122, 4121,
	4120, 4114, 4111, 4108, 4107, 4104, 4103, 4102, 4101, 4100,
	4099, 4098, 4097, 4096, 4095, 4094, 4093, 4092, 4091, 4087,
	4086, 4085, 41, 4084, 4083, 4082, 4081, 4080, 4079, 4077,
	4075, 4071, 4068, 4067, 4066, 4061, 4056, 4050, 4047, 4046,
	4045, 48, 4044, 238, 4043, 4039, 4036, 4033, 4032, 4031,
	4027, 4023, 4020, 4019, 4007, 4005, 235, 4004, 134, 4003,
	4001, 3999, 3997, 3995, 233, 3993, 3992, 3988, 3987, 240,
	3985, 3984, 3983, 3975, 3974, 3972, 3970, 3969, 3968, 72,
	128, 3965, 3962, 198, 3960, 3958, 3954, 3952, 3951, 3949,
	3946, 3945, 3944, 3943, 213, 3941, 231, 3937, 3935, 3929,
	3928, 3927, 3925, 3923, 3921, 3920, 3916, 3912, 3910, 3907,
	3905, 3902, 3899, 3898, 3897, 3895, 3893, 3891, 3885, 3884,
	3883, 3882, 3880, 3878, 3877, 3876, 3873, 3871, 242, 145,
	3870, 3868, 230, 229, 3867, 3861, 3858, 3854, 3853, 100,
	10, 27, 3849, 3848, 61, 68, 62, 80, 79, 73,
	3847, 89, 3845, 101, 47, 3844, 6, 18, 209, 223,
	9626, 194, 3843, 3841, 3840, 204, 153, 3835, 205, 3834,
	3829, 3824, 3823, 78, 67, 147, 146, 135, 144, 28,
	3822, 3821, 85, 59, 43, 33, 3819, 3818, 3817, 3261,
	107, 3816, 228, 201, 138, 3812, 3811, 3808, 1834, 3806,
	38, 3805, 259, 63, 104, 40, 102, 3804, 130, 23,
	3803, 132, 45, 3802, 119, 77, 76, 8455, 8038, 3798,
	98, 51, 90, 1200, 152, 150, 169, 187, 163, 182,
	177, 170, 1063, 3796, 214, 3793, 3245, 49, 124, 3792,
	3788, 3787, 57, 166, 84, 3786, 3785, 55, 3, 14,
	7, 141, 13, 99, 19, 3784, 15, 3783, 3778, 3777,
	3776, 30, 133, 3775, 234, 3770, 161, 37, 17, 3769,
	25, 179, 3768, 185, 108, 3767, 3766, 219, 172, 165,
	3765, 75, 195, 3764, 3761, 3760, 3758, 3757, 110, 26,
	106, 3756, 3755, 115, 203, 159, 3753, 53, 3752, 142,
	83, 113, 239, 97, 190, 93, 183, 155, 193, 3751,
	3748, 3747, 164, 3745, 3744, 181, 139, 3742, 3741, 167,
	243, 34, 60, 202, 58, 158, 136, 3739, 168, 3738,
	3737, 3736, 241, 154, 175, 1, 8, 81, 103, 32,
	5, 200, 121, 263, 91, 3735, 5140, 140, 66, 3733,
	3726, 171, 96, 54, 95, 118, 227, 56, 3723, 3719,
	1442, 3718, 3714, 3713, 3712, 149, 3707, 3706, 3703, 120,
	114, 156, 3689, 82, 71, 12, 122, 294, 245, 92,
	189, 162, 216, 3686, 148, 3684, 46, 123, 3682, 160,
	218, 3678, 3677, 226, 3676, 116, 541, 52, 127, 3675,
	186, 3674, 3671, 3668, 3666, 3664, 3663, 3659, 206, 199,
	3657, 3654, 3650, 117, 157, 3643, 225, 270, 197, 105,
	36, 3642, 74, 912, 3638, 192, 196, 44, 129, 3634,
	1212, 39, 0, 10946, 9878, 6929, 10560, 3633, 2996, 3631,
	3630, 3629, 178, 111, 3627, 3626, 3621, 87, 3616, 64,
	3613, 3612, 50, 3611, 21, 2, 4, 22, 20, 1337,
	188, 3610, 3608, 86, 109, 125, 3603, 236, 191, 3602,
	3598, 3597, 3595, 88, 3593, 35, 3592, 31, 3590, 3587,
	42, 9, 24, 3583, 3582, 208, 3581, 210, 3580, 137,
	3579, 3226, 112, 3577, 3575, 224, 65, 3574, 217, 3573,
	3163, 3573, 3572, 3570, 16, 3569, 3568, 207, 143, 174,
	3567, 3566, 131, 3565, 3562, 3561, 215, 3560, 3559, 29,
	3557, 11, 3555, 3553, 173, 2956, 3552, 3551, 69, 3547,
	151,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 525, 525, 21, 33, 22, 34, 15, 526, 526,
	526, 526, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 524, 524, 208, 208, 207, 202, 202,
	527, 527, 209, 209, 209, 211, 211, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 427, 427, 427, 458,
	458, 458, 541, 541, 542, 542, 542, 542, 542, 112,
	112, 41, 41, 41, 41, 519, 519, 174, 174, 174,
	176, 176, 175, 175, 175, 175, 62, 62, 533, 533,
	534, 534, 532, 531, 531, 535, 535, 535, 173, 173,
	173, 108, 108, 108, 108, 109, 109, 110, 110, 177,
	177, 177, 179, 179, 178, 178, 178, 178, 178, 178,
	178, 178, 183, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 90, 90, 460, 460, 461, 461, 168, 168,
	169, 169, 169, 169, 170, 170, 171, 171, 171, 55,
	180, 180, 182, 182, 181, 181, 43, 43, 43, 43,
	43, 43, 43, 44, 44, 44, 44, 44, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 46,
	53, 53, 53, 53, 159, 159, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 544, 544, 545, 545, 546, 546,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 68, 68, 293, 293,
	265, 265, 69, 69, 69, 70, 70, 71, 71, 57,
	57, 517, 517, 308, 308, 418, 418, 73, 73, 328,
	328, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 83, 83,
	83, 84, 84, 84, 81, 81, 81, 78, 78, 78,
	77, 77, 77, 82, 82, 82, 256, 256, 80, 80,
	80, 258, 258, 79, 79, 79, 309, 309, 85, 85,
	85, 85, 266, 86, 86, 86, 86, 86, 86, 86,
	86, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 420, 420, 87, 87, 87, 388,
	388, 91, 91, 91, 343, 343, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 111, 111, 111, 111, 521,
	521, 301, 301, 222, 222, 222, 222, 101, 101, 101,
	101, 102, 102, 102, 103, 103, 164, 164, 118, 118,
	118, 118, 118, 117, 117, 117, 117, 117, 117, 47,
	47, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 52, 52, 52, 120, 120, 538, 538, 122,
	119, 119, 119, 121, 121, 121, 121, 123, 124, 124,
	124, 124, 124, 124, 124, 124, 125, 125, 452, 452,
	317, 317, 450, 450, 469, 469, 451, 451, 270, 270,
	270, 270, 270, 271, 271, 271, 459, 459, 459, 459,
	459, 459, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 165, 165, 166, 167, 167, 167, 167, 146,
	146, 146, 158, 158, 158, 158, 158, 158, 158, 149,
	149, 149, 136, 136, 127, 127, 127, 127, 127, 131,
	131, 131, 131, 131, 131, 131, 131, 128, 128, 138,
	138, 138, 138, 138, 132, 132, 133, 133, 135, 135,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 129,
	129, 129, 129, 140, 140, 140, 140, 350, 350, 350,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 157, 157, 157, 157, 157, 157, 536, 536, 537,
	537, 153, 153, 153, 153, 153, 153, 402, 402, 147,
	147, 147, 147, 152, 152, 152, 152, 333, 333, 144,
	144, 144, 145, 145, 145, 150, 150, 151, 148, 148,
	154, 154, 154, 154, 130, 130, 130, 548, 548, 548,
	155, 155, 143, 143, 156, 156, 156, 156, 156, 156,
	156, 156, 142, 142, 142, 141, 141, 141, 141, 134,
	518, 518, 515, 515, 515, 515, 515, 515, 515, 515,
	516, 516, 520, 520, 96, 96, 96, 96, 96, 104,
	104, 104, 104, 104, 97, 97, 97, 97, 97, 99,
	99, 98, 98, 98, 98, 63, 63, 63, 14, 14,
	14, 64, 64, 186, 186, 186, 187, 187, 278, 278,
	278, 278, 184, 184, 185, 185, 65, 65, 549, 549,
	549, 528, 528, 528, 529, 529, 529, 529, 529, 529,
	272, 272, 273, 273, 368, 368, 368, 368, 368, 276,
	276, 276, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 279, 279, 210, 210, 210, 282, 283, 283, 280,
	280, 281, 281, 281, 285, 285, 284, 287, 287, 286,
	367, 478, 478, 480, 480, 480, 480, 480, 480, 480,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 550, 550, 476, 476, 476, 477, 472, 472, 473,
	473, 473, 473, 473, 274, 274, 275, 275, 275, 275,
	474, 475, 299, 299, 405, 479, 479, 481, 481, 483,
	551, 551, 551, 551, 551, 551, 552, 552, 552, 366,
	366, 365, 365, 291, 291, 484, 484, 484, 484, 485,
	485, 485, 485, 485, 488, 487, 486, 486, 486, 486,
	486, 67, 67, 67, 330, 330, 329, 329, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 161, 161, 225, 225, 61, 61, 61,
	12, 12, 12, 530, 530, 530, 66, 66, 66, 66,
	66, 224, 224, 224, 224, 224, 224, 523, 523, 522,
	522, 226, 226, 554, 554, 72, 72, 72, 72, 72,
	72, 72, 421, 421, 422, 422, 60, 60, 60, 60,
	60, 351, 351, 349, 349, 348, 348, 298, 298, 404,
	230, 230, 203, 203, 203, 26, 19, 19, 24, 24,
	37, 37, 40, 40, 36, 36, 38, 38, 32, 32,
	539, 539, 540, 540, 100, 100, 105, 105, 105, 105,
	105, 106, 106, 106, 106, 107, 107, 107, 107, 116,
	116, 160, 160, 160, 160, 160, 160, 160, 42, 42,
	42, 42, 54, 54, 54, 54, 114, 556, 556, 556,
	115, 115, 115, 555, 555, 223, 223, 362, 362, 363,
	363, 557, 557, 364, 364, 364, 364, 217, 216, 218,
	218, 59, 59, 59, 212, 212, 213, 213, 214, 214,
	215, 215, 558, 558, 94, 94, 94, 163, 163, 264,
	264, 264, 358, 358, 358, 292, 292, 236, 236, 361,
	361, 359, 359, 359, 359, 327, 327, 327, 162, 162,
	306, 306, 319, 319, 320, 320, 415, 415, 321, 113,
	113, 190, 190, 188, 188, 188, 188, 188, 188, 188,
	188, 195, 195, 196, 196, 197, 197, 198, 199, 199,
	199, 199, 310, 310, 200, 200, 200, 189, 189, 189,
	191, 191, 191, 191, 191, 191, 191, 194, 194, 194,
	194, 201, 201, 201, 193, 193, 495, 495, 495, 497,
	497, 499, 499, 498, 498, 494, 494, 496, 496, 553,
	553, 332, 332, 332, 289, 290, 288, 288, 296, 296,
	294, 295, 295, 297, 297, 403, 403, 403, 204, 204,
	204, 324, 324, 324, 324, 325, 325, 354, 354, 352,
	352, 352, 352, 353, 353, 355, 355, 355, 356, 356,
	357, 357, 323, 323, 384, 384, 192, 192, 192, 303,
	303, 303, 304, 304, 374, 374, 374, 374, 374, 374,
	375, 375, 373, 373, 373, 373, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 407, 408, 408, 305, 305,
	409, 360, 360, 513, 513, 513, 514, 514, 401, 401,
	410, 410, 410, 410, 410, 410, 399, 399, 400, 400,
	416, 417, 417, 336, 336, 336, 336, 334, 334, 337,
	337, 337, 337, 335, 335, 411, 411, 411, 411, 326,
	326, 412, 412, 412, 412, 413, 369, 370, 370, 423,
	423, 423, 423, 425, 302, 302, 302, 302, 302, 471,
	470, 470, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 439, 439, 439, 439, 439, 439, 439, 439, 440,
	440, 440, 440, 440, 440, 440, 426, 426, 426, 426,
	426, 430, 430, 430, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 431, 431, 436, 436, 437,
	437, 437, 432, 433, 438, 438, 438, 438, 559, 559,
	442, 442, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 428, 428, 428, 435, 435, 435, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	344, 344, 346, 346, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 378, 378, 378, 378, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	489, 489, 489, 489, 489, 489, 489, 489, 380, 380,
	492, 492, 493, 493, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 500, 500, 501, 501, 503, 503, 504,
	504, 505, 506, 506, 506, 507, 508, 508, 502, 502,
	509, 509, 509, 509, 510, 510, 511, 511, 511, 511,
	511, 512, 512, 512, 512, 512, 390, 390, 391, 391,
	397, 397, 397, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 227,
	227, 227, 227, 227, 315, 315, 313, 313, 313, 316,
	316, 314, 314, 312, 312, 311, 311, 387, 387, 385,
	385, 389, 389, 338, 338, 441, 441, 441, 441, 441,
	441, 441, 441, 339, 339, 339, 347, 340, 340, 341,
	341, 341, 341, 341, 381, 382, 342, 342, 342, 383,
	383, 392, 396, 396, 395, 394, 394, 393, 393, 371,
	371, 372, 372, 322, 322, 560, 560, 318, 318, 414,
	414, 414, 414, 268, 268, 307, 307, 267, 267, 259,
	259, 260, 260, 260, 260, 300, 300, 398, 398, 443,
	443, 444, 444, 445, 445, 446, 446, 447, 448, 449,
	386, 386, 246, 245, 233, 234, 244, 243, 242, 232,
	235, 239, 240, 241, 237, 238, 252, 251, 250, 257,
	248, 249, 419, 231, 261, 261, 262, 262, 262, 263,
	263, 263, 263, 228, 228, 229, 229, 253, 253, 254,
	255, 255, 247, 247, 247, 219, 219, 219, 220, 220,
	221, 221, 457, 457, 454, 454, 454, 455, 455, 455,
	456, 456, 456, 456, 453, 453, 453, 453, 453, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 463, 463, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 465, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 468, 468,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 4,
	2, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 2, 1, 3, 3, 0, 5, 7,
	0, 5, 6, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	2, 0, 1, 2, 3, 1, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 3, 3, 4, 3, 4,
	7, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 3, 4, 6,
	3, 1, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 2, 6, 4, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 10, 10, 3, 5, 5, 5, 3, 5,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 6, 3, 6, 6,
	3, 11, 14, 1, 2, 3, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 1, 2, 8, 4, 2, 5, 5, 5,
	2, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	5, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 3,
	2, 0, 1, 1, 0, 6, 6, 8, 6, 8,
	6, 8, 6, 8, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 2, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 515, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 92, 76, 141, 116, 124,
	179, 328, 364, 375, 356, 345, -121, -122, 392, -42,
	-54, -115, -114, 69, 117, 351, -4, -12, 28, 44,
	-44, -45, -46, 59, -61, -58, -68, -62, -543, 94,
	-496, -76, -79, -107, -547, 129, 148, 197, -97, -98,
	317, -102, -103, 358, -105, -106, 360, 149, -49, -48,
	143, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 396, -151, 450, 46,
	410, 78, 133, 368, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -495, -77, -78, -81, -83, -84, -80,
	-82, 357, -191, -189, 512, 464, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 482, 490, -194, -192, -193, -201, 384, 472,
	426, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, -266, 2, -248, -253, -254, -255, -247, -219, -465,
	-468, 4, -462, -466, 154, 206, 282, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 50, 52, 56, 57, 58, 59, 60, 64,
	69, 70, 75, 76, 77, 78, 79, 80, 81, 87,
	84, 85, 86, 89, 91, 92, 93, 95, 97, 98,
	106, 107, 108, 109, 111, 116, 117, 120, 115, 119,
	122, 123, 124, 127, 128, 129, 131, 132, 134, 135,
	136, 138, 139, 141, 142, 143, 146, 144, 433, 145,
	147, 148, 149, 150, 160, 161, 162, 167, 169, 173,
	174, 177, 178, 180, 184, 186, 187, 188, 189, 190,
	196, 197, 199, 200, 201, 202, 207, 208, 212, 209,
	218, 219, 223, 224, 225, 227, 231, 232, 233, 234,
	235, 236, 238, 240, 239, 242, 245, 246, 249, 250,
	251, 254, 255, 256, 257, 259, 260, 263, 261, 264,
	262, 266, 267, 268, 265, 271, 269, 273, 274, 275,
	280, 278, 276, 277, 284, 287, 194, 289, 290, 293,
	311, 297, 298, 299, 302, 303, 306, 309, 310, 312,
	313, 314, 315, 316, 317, 318, 319, 321, 322, 326,
	328, 329, 331, 333, 334, 335, 336, 337, 338, 339,
	342, 341, 343, 345, 351, 356, 353, 354, 355, 357,
	358, 359, 360, 362, 363, 364, 366, 367, 368, 369,
	371, 373, 374, 377, 378, 393, 394, 412, 375, 376,
	379, 380, 381, 382, 383, 387, 385, 386, 388, 389,
	390, 392, 395, 396, 398, 399, 400, 401, 402, 403,
	406, 408, 409, 410, 411, 413, 416, 417, 418, 419,
	414, 425, 422, 423, 427, 428, 429, 430, 431, 432,
	434, 436, 444, 445, 447, 450, 451, 452, 442, 454,
	455, 458, 459, 460, 463, 461, 462, 464, 466, 469,
	470, 471, 477, 476, 483, 484, 486, 487, 488, 35,
	47, 48, 51, 53, 55, 65, 66, 67, 71, 112,
	113, 140, 151, 152, 163, 175, 176, 181, 183, 191,
	192, 193, 213, 214, 216, 221, 243, 286, 288, 304,
	308, 323, 324, 325, 327, 340, 370, 404, 415, 420,
	437, 438, 439, 440, 446, 448, 472, 473, 474, 478,
	485, -266, 2, -248, 295, -241, 2, -219, -219, 328,
	27, 2, 27, 322, 386, 428, 430, 2, -521, -301,
	2, 27, -222, -219, 94, 179, 384, -241, 2, -521,
	-301, 24, 2, -219, 2, -223, 2, 375, -219, 260,
	2, 515, 89, 251, 70, 370, 389, -124, 445, -123,
	437, 379, -125, -452, 2, 271, -219, 515, 515, 515,
	27, -231, -219, 426, 206, 108, 423, 515, 2, 426,
	314, 476, 385, 108, 337, 206, 452, 379, -530, 366,
	182, 465, -519, 2, -515, 4, -466, -462, -260, -259,
	426, 431, 108, -255, -247, 505, -254, 515, 515, 515,
	2, 224, 225, 336, 335, 389, 390, 515, 515, 515,
	377, 2, 26, 62, 88, 91, 114, 150, 170, 173,
	300, -544, 311, 334, 388, 425, 434, 447, -529, 411,
	64, 379, -528, -530, 260, 452, 127, -348, 108, 251,
	178, 459, 430, 428, 457, 120, 212, 462, 461, 515,
	515, 26, 62, 73, 91, 127, 150, 170, 173, -546,
	311, 334, 373, 388, 425, 434, 447, 2, 476, 385,
	426, 206, 108, 452, 379, -530, 377, 378, 332, -88,
	2, 512, 31, 30, 392, -183, 426, 217, 2, -219,
	515, 515, 2, 224, 225, 377, 378, 515, 515, 171,
	-515, 2, 515, 515, 2, 224, 225, 377, 378, 217,
	2, 64, 381, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 2, -158, 389, 411, 188, 44, 70,
	27, 333, 75, 315, 109, 135, 180, 206, 207, 232,
	88, 89, -350, 43, 225, 224, 378, -536, 377, -402,
	427, 380, 386, 422, 236, 375, 445, 94, 466, 367,
	488, 337, 338, 144, 4, 108, 271, 391, 437, 251,
	374, 318, 80, 515, -553, 2, 426, -555, 2, 445,
	445, 2, -555, 2, -555, 2, -555, 2, -556, 445,
	485, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, -189, -191,
	-190, 515, 515, 515, 515, 515, 515, 515, -158, 389,
	2, 70, 27, -294, -296, 456, 215, 137, 301, -188,
	-190, 2, -495, -450, 2, -376, -469, -378, 503, 504,
	496, 424, 63, 281, 489, -390, 114, 457, 295, -468,
	-379, -392, 140, 370, -316, 8, 9, 5, 6, 7,
	-228, -380, -386, 449, 153, 285, -263, 516, 10, 512,
	-492, -190, -391, 36, 183, 61, -454, -262, -229, -426,
	216, -261, -247, -489, -490, 4, -462, -463, -455, -429,
	-437, -433, -434, -440, -219, -465, 73, 100, 101, 99,
	104, 103, 253, 252, 105, 102, 391, 465, 62, 35,
	191, 192, 221, 286, 193, 71, -491, 128, -464, 213,
	214, 404, 48, 340, 163, 113, 112, 288, 53, 51,
	473, -438, 110, 437, 438, 439, 440, 175, 176, 55,
	151, 152, 308, 325, 420, 446, 448, 181, 243, 96,
	172, 211, 195, 220, 222, 226, 244, 247, 272, 279,
	283, 305, 307, 365, 397, -559, 474, 415, 65, 66,
	-497, 341, -498, -241, -497, 515, 515, 517, 515, -288,
	-289, -290, 2, 27, 125, 512, 2, -406, 2, -407,
	-411, -190, 237, -410, 512, -408, 510, -248, 296, -493,
	371, -489, -490, -228, -247, -262, 4, -462, -464, 514,
	-291, 512, 108, 426, 74, 206, -343, 512, -219, 27,
	295, 441, 517, -388, 512, 295, 171, 298, -219, 476,
	2, 2, 393, 2, 512, -124, 67, 445, 42, 389,
	-363, 2, -364, -216, -217, -218, -416, 223, 331, 339,
	491, 488, -450, -538, 171, 495, 441, -450, -317, 514,
	2, 2, 2, 2, 2, -411, 191, -248, 2, -245,
	-453, 4, -462, -466, -463, -467, -465, 27, 30, 31,
	32, 34, 36, 37, 38, 39, 54, 61, 62, 68,
	72, 74, 83, 88, 94, 99, 100, 102, 101, 103,
	104, 105, 114, 118, 121, 125, 126, 130, 133, 137,
	153, 155, 168, 170, 171, 179, 182, 185, 198, 210,
	215, 217, 237, 241, 248, 252, 253, 281, 285, 291,
	295, 296, 300, 301, 320, 330, 344, 361, 384, 391,
	407, 421, 426, 435, 441, 443, 449, 456, 457, 465,
	467, 475, 479, 480, 481, 482, -468, 73, 2, -411,
	191, 2, -250, 191, -411, -253, 2, -232, -219, 2,
	-244, -453, 2, -267, 191, -248, -249, -253, -251, 2,
	-253, -257, 2, -219, -460, 191, 2, -457, 10, -456,
	5, 4, -462, -466, -463, 217, 441, 517, -307, -259,
	-260, -449, 8, -300, -219, 514, -376, 2, -113, -99,
	2, 168, -376, 191, 2, -113, 191, 2, -376, 191,
	2, -113, 191, 2, -533, 2, -460, 2, 2, 447,
	2, 91, 191, -219, 426, 107, 2, 355, -545, 373,
	451, 2, 2, 2, 2, 2, 2, 426, -237, 2,
	-219, 168, -257, 191, 2, 385, -554, 341, -460, 191,
	2, 476, -251, 2, -251, 206, 219, -232, 191, 2,
	430, 428, 430, 428, 171, 2, 217, 2, 217, 2,
	-412, 2, -413, -407, -248, 510, 2, 2, 2, 2,
	2, 191, -219, 426, 107, 2, 235, 2, 2, 2,
	2, 2, 2, 2, -309, 191, 2, -248, -309, 191,
	2, -309, 191, 2, -349, 2, 83, -232, 191, 2,
	-256, 191, 2, -251, -258, 191, 2, -257, -461, 191,
	2, -460, -376, 2, -113, 2, -420, 2, -419, -456,
	472, -88, 512, -88, 512, 389, 512, -460, -248, -248,
	-376, 2, -113, -99, 2, -376, 2, -113, 2, -110,
	-109, -460, 512, 171, -376, 2, -113, -99, 2, -376,
	2, -113, 2, -183, 168, 2, 108, 426, -158, 2,
	168, 467, 2, 8, 2, -460, 380, 338, 160, 2,
	393, 2, 394, 70, -350, 488, 70, 171, 2, 171,
	2, -333, 2, 482, 2, -518, 2, 295, 171, 2,
	171, 2, 171, 2, 171, 2, 171, 2, 335, 390,
	225, 2, -113, 479, -99, -376, 479, 2, -537, 168,
	378, -376, 2, 444, 234, 145, 171, -333, 2, 171,
	2, 171, 2, 5, 2, 336, 412, 2, 223, 331,
	412, 2, -248, -548, 2, 426, 476, 385, 2, 2,
	84, 85, 171, 2, 171, 2, 171, 488, 2, -326,
	-411, -362, -363, -362, 441, -294, -296, -158, 393, 2,
	-195, -324, -197, 168, -352, -353, -198, 248, 155, 291,
	-199, -332, 27, 125, -332, -332, 57, 513, 513, 11,
	12, 72, 40, 503, 504, 505, 506, 166, 507, 508,
	501, 502, 500, 493, 494, 498, 229, 230, 90, 497,
	495, 82, 258, 372, 156, 157, 158, 159, 352, 204,
	33, 205, 14, 15, 16, 32, 300, 247, 489, 195,
	397, 496, 17, 18, 19, 220, 222, 283, 47, 198,
	-227, -269, -376, -376, -376, -376, -376, -376, -376, 307,
	512, -322, -371, 510, -190, 512, 512, 512, -449, -190,
	-376, -390, 513, -314, 512, -190, -390, -385, 512, 370,
	510, 512, -393, -376, 5, 5, 5, 512, 514, -500,
	483, 168, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 327, -431, 512,
	-430, 512, -430, -430, 477, -428, 512, 490, 484, 512,
	-428, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 477, 517, -497, -291, 512, -318,
	-414, -376, 505, -318, -318, 295, -311, -376, 96, -336,
	226, 272, 172, 244, 365, 211, -373, 516, -373, -401,
	490, -190, -408, -247, -190, -410, 512, -406, -401, -89,
	-449, -73, -86, -94, -113, -126, -162, -163, 505, -248,
	512, 171, 512, 514, -453, 171, -300, -232, -248, -261,
	-262, -267, 124, -311, -515, -300, -222, 37, -387, -423,
	-424, -471, 516, -470, -426, -436, -432, -435, 323, 324,
	-455, 51, 473, -438, 216, 4, -462, -464, 213, 214,
	404, 48, 340, 163, 113, 112, 288, 53, 437, 438,
	439, 440, 175, 176, 55, 474, 415, 65, 66, -515,
	-300, 168, -252, -248, -452, -311, 37, -363, 2, 114,
	-457, 42, -557, 517, 246, -271, 257, 280, 187, 296,
	486, 289, -459, 5, 4, -386, -398, 114, 251, 216,
	-443, -445, 8, -444, 9, -446, 503, 504, -451, -450,
	98, 514, -453, -206, 353, 392, -205, 23, 28, 129,
	470, 146, -281, 208, 310, 314, 140, 408, 460, -525,
	-526, 376, 432, 433, 86, 289, 392, 353, 140, -329,
	-331, 37, 106, 275, 309, 58, 201, 262, 263, 410,
	478, 140, 392, 353, -526, 353, -526, -208, 408, 460,
	-525, -526, 376, 353, -207, -281, 140, 516, 23, 353,
	392, 310, -541, -542, 129, 28, 353, 310, -522, -494,
	482, 140, -109, 238, -109, -307, 517, 517, -453, 505,
	378, 377, 140, 140, 140, 140, 168, 2, 2, 281,
	2, 2, 2, 173, -528, -546, 2, 2, -248, 191,
	-293, 295, -517, -308, 426, -248, 281, -250, 191, 2,
	-253, 476, -522, 281, -252, 37, 512, 2, -349, 2,
	206, -494, 281, -412, -264, -248, -407, -264, 392, -241,
	37, -373, -373, 140, 2, 2, 2, -219, -209, 517,
	60, 359, 140, -209, 140, -209, 140, -268, 191, -267,
	-209, 140, -209, 517, 140, -209, 517, 140, 517, 140,
	513, 517, -420, -420, -460, -171, 482, 171, 94, 512,
	512, -183, -417, 517, -416, -461, -110, -460, -460, -517,
	-232, 2, -248, 2, 426, 227, -171, -460, -460, -460,
	-452, 27, 394, 2, 335, 390, 85, 394, 2, -248,
	426, 108, 206, 76, -520, 168, -516, 366, -515, -248,
	108, -248, 108, -248, 108, -248, -248, 2, 2, 2,
	2, 81, 81, 2, 44, -537, 168, 2, 444, 2,
	444, 2, -219, -219, -219, 411, 246, -248, 168, 426,
	206, 426, 206, 108, 426, -209, 517, -223, -195, -324,
	-452, -325, -324, -196, -195, -198, 168, 339, 461, 275,
	395, 231, -353, -352, 27, -376, -357, 162, 274, -376,
	-355, -378, 503, 504, -444, -446, -310, 289, -189, -189,
	-189, -297, -403, -376, 330, 206, -425, -423, -423, -246,
	-453, 437, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, 247, 195, 397,
	47, 198, -376, 441, -376, -376, -376, -376, 269, 281,
	285, 449, 153, 458, 125, 289, -560, 421, 39, -383,
	-190, -315, 512, -397, 34, 407, 27, -390, 512, 2,
	-371, -376, -372, -312, -311, -311, 513, 475, 27, 125,
	505, 2, 513, 517, 37, 513, -376, -312, -389, -385,
	-311, -396, -395, 479, -344, -345, 487, 265, 111, 189,
	264, -346, 383, -447, 8, -453, 505, -501, 161, 182,
	512, 513, 2, 513, 2, 513, -376, 2, 513, -376,
	2, 513, -376, 2, 513, -376, 2, 513, 2, -376,
	-376, -376, -376, -376, -376, -376, -311, 8, -447, -447,
	437, 437, -447, -447, -447, -439, 323, 249, 324, 177,
	268, 266, 267, 176, -439, -338, 2, -441, -311, 4,
	487, 265, 111, 189, 264, 383, 5, -338, 2, -339,
	2, -376, -311, -340, -377, -378, 503, 504, 496, -390,
	-341, 2, -376, -312, -376, 54, 241, 443, -342, -376,
	171, -311, -311, 2, -311, 2, -498, 37, -311, -303,
	517, 171, 37, 4, -303, -303, 512, 513, 517, -337,
	186, 261, 256, -337, -406, -336, 226, -334, 305, -334,
	-334, -401, -233, 510, 518, -453, -401, -400, -399, 37,
	-241, 302, -401, -401, 514, 513, -400, 511, -513, 512,
	515, 515, 515, 515, 515, -248, 512, -311, -453, 514,
	413, 513, 220, 220, 220, 220, 371, 513, 441, 482,
	-88, 297, 513, 517, -302, 36, 510, 514, -447, 2,
	2, -442, 477, 512, 512, -345, 512, 171, -301, -538,
	513, 445, -364, -270, 339, 406, 354, 387, 423, 8,
	9, 8, 9, 517, -453, 517, -539, 88, 441, 74,
	379, -367, 191, 74, -472, -235, 88, -473, -219, 68,
	457, 330, 170, 138, -539, 88, 330, -539, 88, 88,
	392, 411, 441, 57, -411, 40, 40, 27, -113, 242,
	171, 488, 426, 206, 379, 441, -411, -331, -423, 106,
	262, 263, 57, -448, -443, 503, 504, -448, 57, -448,
	-448, -448, 482, -250, -411, 379, 441, 441, 517, 40,
	40, 27, -113, 242, 171, 441, -267, -233, 471, 41,
	471, 441, 41, 379, 441, 517, 41, 41, 441, 441,
	-523, -224, 95, 276, 255, 277, -225, -226, 316, 469,
	-460, -417, 198, -417, -259, -219, 514, -113, -376, -376,
	-113, -376, -113, 44, 140, 2, -554, 235, 512, -274,
	281, 171, -300, -418, 217, 517, -308, 140, -330, -329,
	281, -252, 191, 2, 140, -291, 134, 512, 337, 2,
	-234, 191, -220, -219, -349, -212, 429, 140, -328, 467,
	-358, -113, 512, 114, 37, -358, -319, -320, -415, -321,
	-235, 512, -241, -219, 2, -248, -309, -309, -309, -209,
	517, 140, -232, -251, -256, -257, -258, -460, -461, -88,
	-419, 513, 513, 513, -170, 299, -169, -219, 5, -183,
	467, -273, -368, -367, -476, -477, -472, 247, 206, 457,
	219, 154, -292, -236, -235, 107, -177, 482, -109, 513,
	-417, 198, -171, -171, -417, -417, -248, 168, -171, -171,
	-171, 2, 2, -333, -248, -232, -267, -248, -300, -300,
	-333, -232, -333, -232, -333, -232, -113, -376, 2, 389,
	168, 168, 514, -333, 337, 108, 426, 314, 206, -248,
	-267, -248, -267, -232, -248, -411, -325, -196, 296, 231,
	395, -355, -356, -378, 370, 371, -356, 370, 371, 8,
	9, 8, 9, -200, 399, 284, -309, 517, -203, 38,
	121, 231, -248, 488, 136, -376, -376, 441, -560, 421,
	-383, 136, -376, 269, 285, 449, 153, 458, 125, 289,
	171, 512, -377, -377, 513, -313, -376, -376, 511, 520,
	513, -296, 517, -294, -376, -311, -311, 513, 514, -311,
	-300, 511, 511, 517, 513, -394, -395, 130, -376, 441,
	441, 441, 441, 512, 513, 514, -506, 306, 512, 512,
	-376, 513, 513, 513, 513, 37, 517, 517, 517, 513,
	517, 517, 517, 513, 513, 513, 517, 513, 488, 488,
	513, 513, 513, 513, 517, 513, 517, 513, 171, 513,
	513, -347, 320, 513, 11, 12, 503, 504, 505, 506,
	166, 507, 508, 501, 502, 500, 493, 494, 495, 82,
	258, 372, 14, 15, 16, 220, 198, -377, -377, -377,
	513, -381, -382, 171, 168, 37, -342, -342, -342, 513,
	171, -311, 513, 513, 512, -499, 260, 281, 513, -370,
	-369, 480, -414, -304, 2, -406, -243, -453, -370, -370,
	-311, -376, 226, 226, -335, 467, 295, -337, -406, -400,
	-449, -375, -374, 169, 38, 121, 278, 194, -400, -241,
	-291, -400, -400, -453, -401, -401, -399, 513, -514, -449,
	513, -305, -409, -493, -296, 514, -453, -180, -494, -159,
	5, 285, -159, -159, -159, -300, 24, 321, -423, 510,
	511, 8, -453, 512, -447, -447, -447, -300, 171, -450,
	-363, 455, 79, 339, 437, -450, -205, 353, -235, -235,
	-248, -257, 281, -367, 191, -211, 281, -423, -242, -219,
	512, 512, 231, 231, 467, -235, -242, 231, 191, -235,
	191, -242, -242, -524, 339, 290, -376, -458, -457, 105,
	391, 250, 337, 282, -206, 353, 392, -113, -113, -113,
	512, -538, 467, 124, -248, -267, -248, -257, -252, 392,
	353, 279, -261, -448, -448, -329, 392, 353, -257, -250,
	-232, -207, -113, -113, -113, 512, -233, -208, 353, 5,
	191, -235, 5, -219, -235, -257, -458, -542, 23, -235,
	191, -235, -257, -458, -224, -460, 285, 463, -522, -174,
	482, -109, -168, 202, 505, -519, -219, 476, -219, -272,
	-275, -273, -235, -186, -187, 484, 482, 140, -265, -248,
	510, -171, -460, -248, -257, 140, -291, 281, -460, 37,
	512, 2, 2, 295, 281, -234, 191, -213, 131, -558,
	495, -232, -370, -304, -327, -361, 361, 295, -292, 472,
	-241, -327, -306, 517, 171, 495, 514, -292, 2, -209,
	-209, -209, -267, -268, -209, -209, -209, -88, -88, -171,
	517, 512, 495, 495, 512, -460, -460, 513, 517, -248,
	-234, 206, 206, -240, -220, 513, 517, 514, 512, -179,
	299, -178, 132, 233, 218, 400, 401, 402, 403, 123,
	-177, -110, 171, -50, 482, 426, 516, -333, -333, -333,
	389, 389, -219, -244, -232, -248, -245, -267, 168, 168,
	461, -356, 296, 254, -403, -204, 287, -248, 516, -376,
	-376, 136, 136, -376, -377, -377, -376, 136, 171, 512,
	-376, -387, 32, 32, 513, 517, -372, -376, 513, 475,
	-296, -296, 513, 505, -453, 516, 513, -385, 133, -376,
	435, 265, 189, 264, -346, 264, -346, -346, -447, 5,
	-453, 505, -507, -238, 512, -219, 480, -295, 301, 513,
	-425, -423, -376, -376, -376, -376, -376, -447, -428, -428,
	-443, -443, -376, -381, -376, -425, -423, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, 125, 281, 289, -377,
	-382, -381, -376, -376, -423, 513, 513, 513, -311, -88,
	512, 260, -323, 182, -376, -417, 517, -323, -323, 513,
	-406, -406, 512, -376, 226, 511, 517, 519, 495, -291,
	514, -399, -400, 511, 513, 517, 513, 517, -360, 37,
	513, -453, -182, -181, 122, 50, 298, 5, 8, 510,
	511, 514, -447, 513, 513, 513, -300, -376, 441, 441,
	140, 281, 469, -478, -473, 138, -376, -298, -404, -376,
	512, 512, 2, -202, 129, 392, -540, 2, 467, 140,
	-209, 140, -209, 486, 512, 512, 441, 379, 482, -311,
	-376, -172, 114, -452, -526, 516, -526, 516, 379, 441,
	379, 441, 482, -311, 441, -427, 45, 25, 281, -251,
	441, 441, -209, 140, 452, 392, -460, 285, -176, 299,
	-175, 132, 363, 123, 233, -417, -174, 171, 217, 2,
	-252, 2, 513, 513, 517, -479, 37, 293, 293, 512,
	-248, -69, 482, -416, -449, -250, 37, 140, -522, -113,
	-421, -422, 5, -248, 140, 295, 281, -214, 240, -558,
	-457, -494, -296, -327, -318, 282, 87, 513, -370, -320,
	-304, -376, 2, 513, -209, -169, -170, -460, -460, -460,
	-171, -183, -183, -368, -276, 512, -234, -220, 512, -183,
	-236, 2, -461, 517, 512, 495, 495, 495, -417, -113,
	299, -248, 505, -333, -283, -282, 314, 289, -283, 370,
	370, 296, 162, 236, -203, -233, -376, -376, 136, 32,
	32, -376, -376, -387, 513, -376, -376, -311, 511, 5,
	-376, 513, 513, 8, -376, 513, 514, -508, -219, -376,
	513, 57, 513, 513, 517, 517, 513, 513, 513, 513,
	513, 513, 513, -382, 171, 125, 289, 512, 513, 513,
	-88, -384, 185, 57, -406, -384, -384, -335, -300, -406,
	-374, -233, 510, -453, -449, -409, 512, 514, -181, 495,
	511, 2, 510, -453, 513, -235, -235, -367, 140, -480,
	88, -482, 72, 154, 94, 281, 285, 457, 330, 68,
	114, 344, -550, 37, 492, 513, 513, 517, -203, -298,
	-300, 281, 418, 114, 281, 114, 107, 452, 75, -235,
	-242, -300, -300, -248, -257, 147, 513, 517, 495, 2,
	505, 505, -257, -252, -257, -250, 147, 513, -233, 5,
	5, 140, -230, 72, 5, -235, -235, -251, 107, 517,
	512, 495, 495, -174, -461, -109, -291, -279, 209, -235,
	-477, -474, -475, 330, -481, -483, 154, 330, -113, 2,
	-185, -184, -219, 5, 512, -274, 299, 511, -330, -113,
	-252, 513, 517, -351, 467, -233, -248, 140, -215, 239,
	-558, -457, -212, -354, -352, -359, 512, 295, -113, -296,
	495, 513, 513, 107, 107, 200, 139, -298, 512, 512,
	-300, 107, 513, -178, -179, -460, -109, -460, -177, -51,
	-52, 206, 88, 319, -245, 426, 206, 512, 512, -203,
	-376, -376, -376, 513, -296, -453, 505, -502, 314, 513,
	-403, -376, -376, -377, 171, 512, -387, 513, -503, 481,
	-376, -311, -503, -503, 513, -449, 2, -460, 510, 2,
	-367, -242, -246, -239, -219, 154, 191, 285, 231, 512,
	-377, -248, 512, 2, 29, -551, 118, 210, -366, -552,
	93, 419, 199, -404, -204, 513, 513, 285, 285, -376,
	-423, 512, -209, -209, 513, 513, -376, 441, -452, 92,
	-450, 2, -526, -376, 441, 5, -209, -246, -209, -209,
	-230, 452, -175, -176, -460, -109, -174, 37, -280, -281,
	198, -479, 231, -239, 231, -549, 482, 513, 517, 495,
	495, -272, -186, -70, -71, 442, -416, -291, 5, 512,
	-219, 295, 512, -233, -558, -457, -213, -327, 126, -300,
	88, -354, -383, -171, 512, 512, -277, 77, 89, 115,
	190, 174, 207, 411, 416, 27, -277, 513, -298, -298,
	513, 512, -171, 513, 517, 27, 512, 27, 512, -248,
	-267, -311, -311, 513, -296, 57, 517, 513, 513, -377,
	-387, 513, -504, -505, -238, 511, 2, -482, -239, 281,
	467, -376, -221, 512, -376, 37, 210, 119, 196, -279,
	512, -365, 467, 344, -230, -298, 512, 512, 512, 495,
	171, 512, -427, -209, -251, 513, -532, 342, -113, -186,
	312, 512, -278, 295, 107, 275, -184, -450, -450, 513,
	37, -71, 9, 37, -298, -248, -298, 295, -457, -214,
	461, 282, 513, -242, -327, -461, -461, -365, 513, 513,
	-461, -52, -300, -300, 513, 513, -509, 337, 371, 184,
	-311, -297, 513, 517, 37, 140, 186, 513, -484, 259,
	-219, 513, 119, 196, -280, -300, -279, 186, -248, -527,
	467, 513, -285, -284, -282, -287, -286, -282, -311, -450,
	92, 312, -311, -230, -535, 172, -534, 5, 10, -278,
	-248, -299, -405, -235, 78, 107, -279, -113, -113, 513,
	-351, 513, -248, -215, 392, -369, 513, 513, -366, -365,
	-187, 482, 513, 513, 513, 513, -510, -511, 47, 454,
	98, -376, -510, -510, -505, -507, 154, 482, -485, -488,
	-487, 295, 398, 172, 313, 513, 418, 478, -551, 513,
	482, -291, -376, -365, 513, 517, 472, 513, 517, 472,
	513, 171, 513, -209, -173, 482, 44, 512, 513, 517,
	329, 120, 129, -280, -549, -365, 512, -366, 512, -319,
	-171, -171, -279, -366, -370, -171, -512, 138, -511, 326,
	167, 370, 326, 167, -512, -512, -239, 52, -487, 295,
	-488, 295, 461, 120, -370, 52, -484, -279, -284, 198,
	-286, 171, 312, 143, -534, 29, -300, -405, 371, 371,
	2, -186, -278, -366, -298, -279, -298, -370, -280, -279,
	98, 182, 436, 275, 32, 495, -486, 275, 359, 60,
	392, -486, 495, -485, 512, 512, 377, 513, 2, -278,
	-279, 513, -280, 513, -187, -280, 370, 303, -511, -376,
	22, 285, 114, -376, -551, -311, -311, 299, -210, 60,
	359, -280, -365, -187, -366, -370, -187, 513, 513, -170,
	512, -187, -366, -370, -279, -370, -280, 441, -170, -370,
	-279, -280, 512, 513, -280, -187, -311, -187, -370, 513,
	-370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 471, 472, 474, 475, 476, 478, 479, 481,
	483, 485, 486, 487, 489, 490, 492, 493, 494, 495,
	496, 498, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 560, 0, 1151,
	1153, 1155, 1157, 0, 694, 0, 32, 33, 0, -2,
	276, 278, 280, 0, 306, 308, 309, 311, 313, -2,
	0, 407, 408, 410, 412, -2, -2, 0, 854, 856,
	0, 547, 549, 0, 859, 861, 0, 0, 569, 570,
	0, 1239, -2, 563, 565, 567, 632, 634, 636, 638,
	640, 642, 644, 646, 647, 649, 651, 653, 655, 657,
	659, 661, 663, 664, 666, 668, 670, 672, 674, 676,
	678, 680, 682, 684, 686, 688, -2, 690, -2, -2,
	0, -2, -2, -2, 1169, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 358, 359, 361, 363, 365, 367,
	370, 372, 374, 1297, 414, 416, 418, 420, 422, 424,
	426, 0, -2, 1309, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1270, 1272, 1274, 1276, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 473, 477, 480, 482, 484, 488, 491, 497, 499,
	501, 458, 459, 462, 1930, 1947, 1948, 1949, 1952, 1953,
	1954, 1955, 1956, 1957, 2332, 2413, 2414, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 460, 461, 1014, 0, 525, 523, 1923, 526, 2152,
	528, 530, 401, 402, 403, 404, 405, 406, 0, 540,
	534, 539, 541, 543, 544, 545, 546, 520, 518, 0,
	540, 1982, 538, 1149, 1150, 1134, 1135, 2190, 1176, 0,
	190, 559, -2, -2, -2, 2298, -2, 591, -2, 598,
	2302, 2192, 603, 0, 605, -2, 608, 1152, 1154, 1156,
	692, 693, 1933, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1063,
	1064, 1065, 0, 194, 196, -2, -2, -2, -2, 0,
	0, 2230, 2024, 1891, 1949, 1894, 1889, 277, 279, 281,
	282, 0, 0, 0, 0, 0, 0, 307, 310, 312,
	-2, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 909, 901, 902, 1105, 0, 0, 0, 0, 409,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 338, 463,
	464, 0, 1298, 1298, 0, 0, 0, 0, 251, 242,
	855, 857, 858, 0, 0, 0, 0, 548, 550, 0,
	0, 224, 860, 862, 863, 0, 0, 0, 0, 0,
	253, 0, 0, 564, 566, 568, 633, 635, 637, 639,
	641, 643, 645, 648, 650, 652, 654, 656, 658, 660,
	662, 665, 667, 669, 671, 673, 675, 677, 679, 681,
	683, 685, 687, 689, 699, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 779, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 702, 704, 705, 706, 0, 759,
	777, 778, 787, 691, 0, 1054, 1299, 1178, 1159, 1173,
	1178, 1161, 1162, 1163, 1164, 1165, 1170, 1172, 1166, 1167,
	1168, 37, 39, 41, 43, 45, 47, 49, 51, 53,
	360, 362, 364, 366, 368, 371, 373, 375, -2, 1268,
	1269, 415, 417, 419, 421, 423, 425, 427, 551, 0,
	553, 0, 703, -2, 0, 1303, 1303, 1303, 0, 0,
	1269, 1267, 0, 556, 557, 612, 613, 1534, 0, 0,
	0, 0, 0, 0, 0, 1788, 1620, 0, 614, -2,
	1651, 1653, 2273, 2298, 1787, 1655, 1656, 1657, 1658, 1659,
	0, 1661, 1662, 1663, 1664, 1665, 1666, 0, 1668, 0,
	1673, 1674, 1675, 0, 2280, 1868, 1943, -2, 0, 0,
	2286, 1939, 0, 1754, 1691, -2, -2, 1966, 1945, 1466,
	1467, 1468, 1469, 1470, -2, -2, 2315, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 0, 2261,
	2281, 2282, 2287, 2289, 2283, 2270, 1716, 2036, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1493, 1502, -2, -2, -2, -2, -2, -2, -2,
	2274, 2275, 2292, 2295, 2301, 2306, 2307, 2279, 2288, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 1494, -2, -2, -2, -2,
	1286, 2163, 1289, 1014, 1287, 1271, 1273, 0, 1275, 0,
	0, 0, 1280, 1306, 1304, 0, 1347, 1284, 1285, 1365,
	1365, 1389, 0, 1370, 0, 1389, 1298, 1415, 0, 1376,
	2182, 1692, 1693, 0, 1949, 1944, -2, -2, 2313, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 527, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	561, 562, 0, 586, 0, 590, 2269, -2, 1990, 2201,
	-2, 594, 1179, 1183, 1184, 1185, 1186, 0, 0, 0,
	0, 0, 600, 0, 0, 587, 588, 606, 609, 0,
	695, 696, 697, 698, 63, 0, 2281, 1415, 65, 0,
	1913, 1974, 1975, 1976, 1977, 1978, 2314, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2315, 68, 0,
	2281, 72, 0, 2281, 0, -2, 77, 0, 1919, 79,
	0, 1916, 88, 0, 2281, 0, 1888, -2, 0, 175,
	1927, 0, 880, 1929, -2, 2281, 1062, 254, 255, 1962,
	1963, 1970, 1971, 1972, 1973, 0, 0, 0, 847, 1885,
	1890, 848, 1909, 849, 1895, 0, 283, 284, 285, 286,
	287, 0, 288, 2281, 290, 291, 0, 293, 294, 2281,
	296, 297, 0, 299, 0, 207, 208, 315, 316, 0,
	318, 0, 2281, 0, 0, 0, 324, -2, 339, 0,
	336, 327, 328, 330, 331, 332, 333, 0, 379, 377,
	1924, 0, 875, 2281, 877, 0, 0, 1084, -2, 2281,
	1059, 0, 1090, 1086, 0, -2, 0, 1296, 2281, 1193,
	905, 906, 907, 908, 0, 398, 0, 1206, 0, 1208,
	0, 1229, 1421, 1365, 1365, 0, 340, 341, 342, 343,
	344, 2281, 0, 0, 0, 349, 0, 351, 352, 353,
	354, 355, 356, 357, 164, 2281, 430, 456, 164, 2281,
	433, 164, 2281, 436, 0, 439, 1103, 164, 2281, 442,
	164, 2281, 445, 446, 164, 2281, 450, 451, 453, 2281,
	455, 256, 1145, 1146, 1147, 1148, 0, -2, 514, 1932,
	-2, 466, 0, 467, 0, -2, 0, 268, 0, 0,
	864, 865, 866, 867, 868, 871, 872, 873, 874, 1402,
	227, 225, 0, 0, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 0, 0, 571, 0, 0, 700, 701,
	0, 0, 711, 712, 713, 268, 2193, 2160, 2056, 718,
	0, 721, 724, -2, 0, 0, 0, 0, 728, 0,
	733, 734, 735, 0, 737, 853, 739, 0, 0, 741,
	0, 745, 0, 748, 0, 750, 0, 752, -2, -2,
	-2, 763, -2, 0, 766, 768, 0, 770, -2, 0,
	779, 775, 776, 0, 0, 0, 0, 795, 796, 0,
	801, 0, 804, 805, 806, 0, 808, 809, 0, 811,
	812, 813, 814, 0, 816, 817, -2, -2, 821, 823,
	0, 830, 0, 834, 0, 838, 0, 707, 708, 164,
	1419, 1158, -2, 1160, 0, -2, 0, 552, 0, 555,
	1326, 1254, 1251, 0, 1323, 1324, 1255, 0, 0, 0,
	1262, 0, 1301, 1302, 0, 0, 0, 1241, 1242, 0,
	0, 0, 0, 1793, 1794, 1795, 1796, 1797, 1798, 1801,
	1802, 1799, 1800, 1803, 1804, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1808, 0, 0, 1810, 0, 1812,
	0, 0, 0, 0, 0, 0, 1599, 1601, 1876, 0,
	0, 1809, 1539, 1540, 1541, 1542, 1543, 1578, 1579, 0,
	0, 1652, 1873, 1872, 1654, 0, 1824, 0, 1667, -2,
	0, 1788, 1819, 0, 0, 1676, 1677, 1678, 0, 0,
	1824, 0, 0, 1867, 1688, 1689, 1531, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1480, 1479, 0,
	1481, 0, 1482, 1483, 1490, 1503, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 1848, -2,
	0, 0, 0, 0, 1495, 0, 1288, 0, 0, 1351,
	1877, 1881, 1882, 1351, 1351, 0, 0, 1825, 1412, 1412,
	0, 0, 1408, 1408, 1408, 1406, 1389, 0, 1389, 1399,
	0, 1389, 1389, 0, -2, 1370, 0, 0, 1399, 0,
	1383, 502, 504, 506, 508, 509, 510, 512, 1416, 1417,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 532, 542, 1298, 0, 1827,
	1438, 1442, 0, 1444, 1445, 1446, 1447, 1448, 0, 0,
	1439, -2, 1491, 1493, 1514, 1967, 1968, 1969, 1474, 1475,
	1476, 1477, 1478, 1486, 1473, 1473, 1473, 1484, 1513, 1505,
	1513, 1509, 1459, 1460, 1461, 1496, 1497, 1498, 1499, 0,
	536, 0, 189, 1926, 0, 0, 0, -2, 596, 601,
	602, 0, 0, 1181, 0, 1187, 623, 624, 625, 1189,
	1190, 0, 599, 626, 627, 628, 629, 630, 631, 0,
	1897, 1898, 1899, 1900, 1903, 1904, 0, 0, 597, 616,
	604, 0, 610, 89, 1131, 0, 128, 0, 1131, 1131,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	113, 124, 101, 102, 0, 0, 0, 0, 0, 73,
	1036, 0, 1039, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 112, 0, 107, 91, 0, 0,
	0, 114, 126, 0, 155, 157, 0, 0, 0, 0,
	0, 0, 174, 182, 0, 0, 0, 0, 1060, 0,
	1295, 0, 1402, 2094, 1402, 846, 0, 0, 1950, 1893,
	0, 0, 0, 0, 0, 0, 0, 317, 319, 0,
	321, 322, 323, 0, 1083, 0, 329, 369, 985, 2281,
	0, 0, 396, 391, 0, 393, 0, 1035, 2281, 1033,
	1928, 0, 1057, 0, 1014, 0, 0, 1091, 1959, 1100,
	1104, 1195, 0, 400, 0, 1209, 1211, 0, 0, 1422,
	0, 1424, 1425, 0, 346, 347, 348, 0, 428, 0,
	162, 163, 0, 431, 0, 434, 0, 164, 2281, 1883,
	440, 0, 443, 0, 0, 448, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 231, 0, 1401, 0, 1402, 225, 268, 268,
	1402, 573, 1402, 575, 0, 0, 714, 268, 268, 268,
	719, 720, 722, 723, -2, -2, 831, 725, 726, 798,
	0, 0, 0, 797, 738, 0, 840, 2178, 851, 798,
	2024, 798, 2024, 798, 2024, 749, 751, 754, 790, 762,
	767, 0, 0, 772, 780, -2, 0, 782, 0, 784,
	0, 786, 798, 799, 802, 807, 810, 815, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 1171, 1326, 1254,
	554, 1245, 1325, 1246, 1253, 1256, 0, 0, 1258, 0,
	1260, 0, 1321, 1322, 1329, 1330, 0, 1340, 1341, 1333,
	0, -2, 0, 0, 1336, 1337, 1264, 0, 1281, 1282,
	1283, 1310, 1313, 1114, 0, 2413, 1535, 1433, 1536, 1537,
	1912, 0, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, -2, -2, -2, -2, -2, -2, -2, -2,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, -2, -2, -2, 1576, 1577, -2, 1811, 1813, 0,
	1876, 0, -2, 0, -2, -2, -2, -2, 1596, 0,
	1598, 1603, 1605, 1607, 0, 0, 0, 0, 1875, 1617,
	1859, 1860, 0, 0, 1790, 1791, 1792, 1602, 0, 1621,
	1874, 1871, 0, 0, 1823, 1309, 1680, 0, 0, 0,
	0, 1687, 1672, 1821, 0, 1820, 0, 0, 0, 1831,
	0, 1866, 1862, 0, 1910, 1530, 1517, 1518, 1519, 1520,
	1521, 1522, 1532, 0, 1907, 1936, 1942, 1764, 0, 0,
	0, 1717, 1718, 1719, 1720, 1721, 0, 1723, 1724, 0,
	1726, 1727, 0, 1729, 1730, 0, 1732, 1733, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 0, 0, 1736, 0, 1834, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1738, 0,
	1740, 1825, 1845, 0, 0, 1622, 0, 0, 0, 1788,
	0, 1743, 1825, 1853, 0, 0, 0, 0, 0, 1825,
	0, 1858, 0, 1750, 0, 1752, 1290, 0, 0, 1428,
	0, 0, 0, 1880, 1428, 1428, 0, 1346, 0, 0,
	1409, 1410, 1411, 0, 0, 1412, 0, 1403, 1407, 1404,
	1405, 1399, 1362, 0, 0, 1914, 1399, 1368, 1398, 0,
	1014, 1388, 1399, 1399, 0, -2, 1372, 1389, 0, 0,
	503, 505, 507, 511, 513, 0, 0, 1309, -2, 0,
	-2, 1013, 0, 0, 0, 0, 522, 524, 0, 0,
	516, 0, 519, 0, 1429, 1432, 0, 0, 1443, 1449,
	1450, 0, -2, 0, 0, 1515, 0, 0, 0, 0,
	589, 0, 1180, 1188, 0, 620, 0, 622, 0, 1901,
	1905, 1902, 1906, 0, 611, 0, 0, 0, 0, 1130,
	0, 132, 2281, 0, 166, 0, 0, 978, 1920, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1037, 1038, 1040,
	1047, 1049, 0, 1043, 1908, 0, 0, 1044, 0, 1046,
	1048, 1050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 104, 0, 0, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 1077, 1071, 1072, 1073, 1074, 1075, 1076, 0, 0,
	-2, 199, 0, 259, 1886, 1896, 0, 869, 870, 289,
	292, 295, 298, 195, 0, 325, 0, 0, 911, 886,
	0, 0, 378, 268, 0, 0, 392, 0, 1031, 1034,
	0, 1014, 2281, 1070, 0, 0, 0, 0, 0, 1089,
	0, 2281, 1915, 1958, 1959, 1197, 1203, 0, 1428, 0,
	1227, 1212, 0, 0, 0, 1227, 1231, 1232, 1234, 1235,
	0, 0, 1423, 0, 350, 457, 164, 164, 164, 437,
	0, 0, 164, 447, 164, 452, 164, 257, 454, 465,
	515, 1298, 1298, 268, 266, 2135, 264, 261, 263, 0,
	0, 0, 912, 914, 915, 916, 917, 0, 1959, 0,
	2083, 1959, 0, 1215, 1217, 0, 221, 0, 228, 226,
	231, 0, 0, 390, 572, 577, 709, 0, 715, 716,
	717, 756, 792, 727, 729, 730, 731, 0, 852, 850,
	740, 798, 743, 798, 746, 798, 765, 769, 774, 781,
	0, 0, 0, 794, 0, 0, 0, 0, 0, 0,
	0, 835, 836, 837, 839, 1420, 1249, 1250, 1252, 0,
	1261, 0, 0, 1335, -2, -2, 1334, 1338, 1339, -2,
	-2, -2, -2, 1257, 0, 1266, 1263, 0, 1320, 1112,
	1113, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1618, 0, -2, 1597, 1600, 1604, 1606, 1608, 0, 0,
	0, 0, 0, 0, 1814, 0, 1816, 1619, 1869, 1872,
	1786, 0, 0, 1308, 1309, 1309, 0, 1686, 0, 1822,
	0, 1829, 1830, 0, 1679, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 1722, 1725, 1728, 1731, 0, 0, 0, 0, 1711,
	0, 0, 0, 1715, 1485, 1471, 0, 1513, 1511, 1512,
	1506, 1513, 1510, 1463, 0, 1462, 0, 1735, 0, 1737,
	1739, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 1626, 1627,
	1742, 1851, 1852, 0, 0, 0, 0, 0, 0, 1748,
	0, 1857, 1749, 1751, 1298, 0, 1291, 0, 1348, 1343,
	1427, 0, 1878, 1402, 1350, 1352, 1879, 1917, 1343, 1343,
	0, 1826, 0, 0, 1393, 0, 0, 0, 1395, 1366,
	0, 0, 1360, 0, 1356, 1357, 1358, 1359, 1367, 1014,
	1397, 1369, 1373, 1936, 0, 1399, 0, 1384, 0, 1386,
	1418, 0, 1378, 1381, 0, 0, 1951, 269, 0, 300,
	304, 305, 301, 302, 303, 531, 0, 0, 1828, 0,
	1434, 0, 1440, 0, 0, 0, 0, 535, 0, 585,
	-2, 618, 619, 621, 0, 617, 129, 1131, 0, 0,
	1116, 1118, 0, 134, 2281, 143, 0, 952, 0, 1918,
	0, 0, 0, 0, 0, 1133, 0, 0, 2281, 164,
	2281, 164, 146, 149, 0, 154, 151, 152, 179, 180,
	181, 0, 0, 943, 90, 1131, 0, 93, 97, 105,
	0, 0, 0, 111, 0, 0, 0, 1120, 1124, 0,
	0, 1041, 1042, 1045, 1051, 74, 0, 0, 1122, 1126,
	1115, 156, 95, 99, 106, 0, 1128, 92, 0, 178,
	0, 0, 0, 170, 0, 171, 172, 183, 0, 164,
	2281, 0, 878, 879, 1078, 1055, 1056, 0, 1061, 191,
	0, 1402, 199, 0, 1892, 0, 0, 0, 0, 0,
	0, 910, 996, 0, 883, 0, 0, 0, 384, 380,
	0, 389, 395, 394, 876, 0, 0, 0, -2, 0,
	1093, 1087, 1088, 0, 0, 0, 2281, 1199, 1203, 0,
	1202, 1296, 1309, 399, 1204, 1227, 0, 0, 0, 1214,
	1210, 1207, 1428, 0, 0, 0, 0, 0, 345, 429,
	432, 435, 1884, 164, 441, 444, 449, 468, 469, 243,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 921,
	0, 1959, 1959, 0, 1922, 0, 0, 0, 0, 229,
	0, 232, 0, 0, 0, 237, 238, 239, 240, 241,
	222, 1402, 0, 574, 0, 0, 0, 742, 744, 747,
	783, 785, 798, 824, 825, 938, 0, 938, 0, 0,
	1259, 0, 1332, 1265, 1314, 1315, 0, 1114, 0, 1538,
	1581, 0, 0, -2, 0, 0, 1585, 0, 0, 0,
	-2, 0, 0, 0, 1815, 1817, 0, 1871, 1681, 0,
	0, 0, 1685, 1669, 1670, 0, 1789, 1832, 1861, 1865,
	0, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 0, 1911,
	1937, 1941, 1762, 1763, 1767, 1925, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1508,
	0, 0, 1833, 1844, 1846, 1623, 1624, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, -2, -2, -2,
	1641, 1642, 1643, -2, -2, -2, 0, 0, 0, 1847,
	1849, 1850, 1854, 1855, 0, 1745, 1746, 1747, 1856, 0,
	1298, 1292, 1345, 0, 1426, 1349, 0, 1345, 1345, 1305,
	1391, 0, 0, 1414, 0, 1363, 0, 1364, 0, 1396,
	0, 1371, 1374, 1375, 1385, 0, 1377, 0, 1380, 0,
	1681, -2, 270, 272, 0, 275, 533, 517, 0, 0,
	1436, 0, 0, 1488, 1492, 1516, 537, 1400, 0, 0,
	0, 0, 165, 950, 977, 0, 0, 0, 1107, 1114,
	0, 0, 983, 136, 0, 0, 0, 144, 0, 0,
	141, 0, 148, 153, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 115, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 1111,
	0, 0, 185, 0, 0, 0, 1081, 1082, 197, 0,
	200, 0, 203, 204, 0, 199, 193, 0, 0, 320,
	1014, 326, 932, 984, 0, 986, 0, 884, 0, 0,
	985, 376, 0, 383, 0, 1035, 0, 0, 1058, 1069,
	0, 1092, 1094, 1102, 0, 0, 0, 1201, 1203, 0,
	1194, 1195, 1328, 1205, 1225, -2, 1224, 0, 1309, 1233,
	1230, 1236, 1237, 0, 438, 265, 0, 260, 262, 0,
	246, 0, 0, 913, 918, 0, 0, 0, 0, 0,
	1216, 1218, 0, 0, 0, 0, 0, 0, 231, 252,
	0, 710, 732, 793, 826, 937, 0, 0, 828, 0,
	0, 1331, 1318, 1319, 1316, 1114, 1583, 1587, 0, 0,
	0, 1589, -2, 0, 1611, -2, -2, 1818, 1870, 1660,
	1309, 1682, 1684, 1671, 1864, 1533, 0, 1769, 1766, 0,
	1753, 0, 1706, 1707, 0, 0, 1710, 1712, 1713, 1714,
	1472, 1465, 1464, 1843, 0, 0, 0, 0, 1744, 1293,
	0, 1758, 0, 0, 1353, 1758, 1758, 1392, 0, 1394,
	1361, 1354, 0, 1937, 1387, 1379, 0, 0, 273, 0,
	1430, 1435, 0, 1441, 1487, 130, 131, 133, 0, 951,
	0, 954, 0, 0, 0, 0, 961, 962, 0, 0,
	0, 0, 0, 971, 0, 1000, 1010, 0, 1320, 0,
	0, 0, 138, 159, 0, 0, 1132, 0, 0, 164,
	164, 0, 0, 1117, 1119, 0, 0, 0, 0, 118,
	0, 0, 1121, 1125, 1123, 1127, 0, 0, 1129, 176,
	177, 0, 164, 0, 169, 164, 164, 1111, 0, 0,
	0, 0, 0, 192, 258, 199, 0, 940, 0, 996,
	988, 989, 990, 0, 995, 997, 0, 0, 898, 885,
	0, 894, 0, 0, 911, 886, 0, 381, 1032, 1066,
	1014, 1085, 0, 0, 0, 0, 0, 0, 1191, 1203,
	0, 1196, 1197, 1227, 1327, 0, 0, 0, 1213, 1328,
	0, 267, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 233, 0, 234, 235, 236, 223, 576,
	578, 0, 0, 584, 936, 0, 0, 0, 0, 1317,
	1591, -2, -2, 1612, 0, 1938, 1940, 1309, 0, 1755,
	1311, 0, 0, -2, 0, 0, 0, 1294, 1277, 0,
	1344, 1342, 1278, 1279, 1413, 0, 1382, 274, 0, 1437,
	135, 0, 955, 956, 1921, 958, 0, 960, 963, 0,
	966, 1961, 0, 970, 0, 979, 1001, 0, 932, 0,
	1006, 1007, 1008, 1108, 1109, 1012, 0, 137, 139, 158,
	1111, 0, 140, 147, 0, 0, 94, 0, 0, 2017,
	121, 119, 117, 96, 0, 178, 184, 1110, 173, 186,
	164, 0, 201, 0, 202, 205, 0, 0, 886, 939,
	0, 987, 0, 998, 999, 888, 0, 887, 0, 0,
	0, 0, 0, 382, 385, 0, 388, 0, 1095, 0,
	1101, 0, 0, 0, 0, 1198, 1199, 397, 0, 0,
	0, 1227, 1238, 245, 0, 0, 919, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 920, 1012, 0, 0,
	976, 0, 250, 230, 0, 580, 0, 582, 0, 827,
	829, 0, 0, 1683, 1773, 0, 0, 1708, 1709, -2,
	0, 1649, 1757, 1759, 0, 1355, 1431, 953, 957, 0,
	0, 0, 1018, 0, 0, 972, 0, 1004, 1005, 940,
	0, 932, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 168, 187, 1111, 198, 217, 0, 1067, 888,
	0, 0, 896, 0, 899, 0, 895, 892, 893, 932,
	0, 386, 387, 0, 0, 1102, 0, 0, 1200, 1201,
	0, 1220, 1221, 1223, 1228, 0, 0, 1010, 1012, 886,
	0, 579, 0, 0, 832, 833, 0, 0, 0, 0,
	1768, 1312, 1650, 0, 0, 0, 0, 965, 1023, 0,
	0, 0, 1002, 1003, 1000, 0, 981, 0, 1014, 142,
	0, 1012, 0, 944, 0, 0, 947, 0, 0, 122,
	2017, 120, 0, 164, 220, 0, 212, 210, 211, 881,
	0, 0, 992, 994, 0, 900, 940, 898, 1068, 1012,
	0, 1010, 0, 1192, 0, 1222, 268, 268, 932, 1010,
	1428, 0, 268, 581, 583, 1765, 1785, 1774, -2, 2241,
	2021, 0, 1785, 1785, 1760, 1761, 0, 0, 967, 1019,
	1020, 0, 1015, 1016, 1017, 1960, 968, 969, 1428, 1009,
	0, 1018, 160, 932, 941, 0, 0, 942, 0, 0,
	125, 0, 127, 188, 206, 0, 0, 0, 991, 0,
	0, 0, 0, 886, 888, 1010, 0, 932, 0, 1428,
	247, 248, 940, 932, 975, 249, 1770, 0, 0, 1776,
	1777, 1778, 1779, 1780, 1771, 1772, 959, 0, 1021, 0,
	1022, 0, 0, 0, 980, 0, 1023, 145, 945, 0,
	948, 0, 123, 0, 215, 216, 0, 993, 889, 0,
	891, 888, 897, 932, 0, 940, 0, 1219, 886, 940,
	0, 1782, 1783, 0, 0, 0, 1024, 0, 1027, 1028,
	0, 1025, 0, 1000, 0, 0, 0, 935, 890, 882,
	940, 1012, 886, 1010, 1428, 886, 1781, 1784, 1775, 964,
	1026, 1029, 1030, 1011, 982, 0, 0, 0, 931, 933,
	934, 886, 1010, 1428, 932, 973, 1428, 940, 0, 218,
	0, 1428, 932, 1098, 940, 974, 946, 0, 0, 1096,
	940, 886, 0, 219, 886, 1428, 0, 1428, 1099, 940,
	1097, 949,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 501, 3, 507, 502, 3,
	512, 513, 505, 503, 517, 504, 514, 506, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 520, 3,
	493, 495, 494, 498, 516, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 510, 3, 511, 508, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 518, 500, 519, 496,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 497, 57836, 499, 57837, 509, 57838, 515, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1209
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1371
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1454
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1556
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1620
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1650
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1682
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1687
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = nil
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2131
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2547
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2552
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2819
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2860
		{
			return helpWith(sqllex, "CREATE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "create cast")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "create publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2889
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop server")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3033
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{

			sqlVAL.union.val = nil
		}
	case 397:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "DELETE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3373
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3405
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "DELETE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3426
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "INSERT")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "DELETE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "INSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3482
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3515
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "GRANT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3627
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "RESET")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "RESET")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "USE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			return unimplemented(sqllex, "set from current")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.Low
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = tree.Normal
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = tree.High
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4098
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "SHOW")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.str = "client_encoding"
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.str = "timezone"
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4177
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4225
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4234
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4273
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4341
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4406
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = true
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = false
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = true
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = false
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = true
		}
	case 798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = false
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4669
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4695
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4738
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4746
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4783
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4822
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4962
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5067
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "RESUME")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5176
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5218
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5233
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{

			sqlVAL.union.val = nil
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = nil
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5267
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5288
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 896:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5315
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5329
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5344
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5435
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5436
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5442
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5458
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.str = ""
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 949:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5652
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5666
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
		}
	case 973:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5776
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5898
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6055
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6064
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = true
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{

			sqlVAL.union.val = true
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = false
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6191
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6205
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6217
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6229
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6291
		{
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6310
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6312
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6314
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6318
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6356
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6374
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6393
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6410
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6427
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = true
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = false
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = true
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.str = ""
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6532
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6538
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6588
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6594
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6602
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6608
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6626
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6630
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6659
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6737
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6741
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6796
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6817
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6845
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6860
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.str = ""
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.str = ""
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.str = ""
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.str = ""
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6973
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7079
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7175
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = false
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7537
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = nil
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7551
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = true
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = false
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = false
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = true
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7581
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7622
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7648
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7765
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7766
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7823
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7825
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7862
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7914
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7953
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7963
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7998
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8009
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8039
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8072
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = nil
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = true
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = false
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.str = tree.AstFull
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.str = tree.AstRight
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.str = tree.AstInner
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8192
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.str = tree.AstHash
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.str = ""
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8289
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8299
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8341
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8349
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8368
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8378
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8398
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = types.Geography
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8485
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8493
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8527
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = nil
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = types.Int2
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = types.Int
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = types.Float4
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = types.Float
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = types.Bool
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8600
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = types.Float
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8619
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8625
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8647
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = types.String
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = false
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = types.Date
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8704
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8718
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8727
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8735
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = true
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = false
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = false
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = types.Interval
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8776
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = nil
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8905
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9283
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9499
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9504
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9554
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9596
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9611
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9882
		{
			return unimplemented(sqllex, "treat")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.str = ""
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10154
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = tree.Any
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = tree.Some
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = tree.All
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.Div
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = tree.LT
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.GT
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = tree.LE
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = tree.GE
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = tree.NE
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = tree.Like
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10734
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10932
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.str = ""
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
