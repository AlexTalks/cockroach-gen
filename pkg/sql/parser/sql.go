// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13666

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1590,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	261, 414,
	-2, 0,
	-1, 74,
	243, 243,
	516, 243,
	-2, 0,
	-1, 88,
	231, 1326,
	245, 1326,
	261, 410,
	390, 410,
	401, 1080,
	440, 410,
	453, 1080,
	500, 1080,
	527, 410,
	553, 1080,
	-2, 0,
	-1, 94,
	133, 1590,
	238, 1590,
	538, 1590,
	539, 1590,
	-2, 0,
	-1, 112,
	151, 1561,
	170, 1561,
	183, 1561,
	241, 1561,
	274, 1561,
	341, 1561,
	351, 1561,
	533, 1561,
	-2, 1532,
	-1, 153,
	159, 921,
	260, 921,
	393, 882,
	458, 882,
	499, 882,
	519, 921,
	521, 882,
	-2, 0,
	-1, 157,
	4, 1592,
	21, 1592,
	22, 1592,
	23, 1592,
	24, 1592,
	25, 1592,
	26, 1592,
	27, 1592,
	29, 1592,
	30, 1592,
	36, 1592,
	41, 1592,
	42, 1592,
	44, 1592,
	45, 1592,
	46, 1592,
	47, 1592,
	48, 1592,
	49, 1592,
	50, 1592,
	51, 1592,
	53, 1592,
	54, 1592,
	55, 1592,
	56, 1592,
	58, 1592,
	59, 1592,
	60, 1592,
	61, 1592,
	62, 1592,
	63, 1592,
	64, 1592,
	68, 1592,
	69, 1592,
	70, 1592,
	71, 1592,
	73, 1592,
	74, 1592,
	75, 1592,
	79, 1592,
	80, 1592,
	81, 1592,
	82, 1592,
	83, 1592,
	84, 1592,
	85, 1592,
	88, 1592,
	89, 1592,
	90, 1592,
	91, 1592,
	92, 1592,
	94, 1592,
	96, 1592,
	97, 1592,
	98, 1592,
	99, 1592,
	100, 1592,
	101, 1592,
	103, 1592,
	104, 1592,
	105, 1592,
	107, 1592,
	108, 1592,
	109, 1592,
	117, 1592,
	118, 1592,
	119, 1592,
	120, 1592,
	121, 1592,
	123, 1592,
	124, 1592,
	125, 1592,
	126, 1592,
	128, 1592,
	129, 1592,
	130, 1592,
	132, 1592,
	133, 1592,
	134, 1592,
	136, 1592,
	137, 1592,
	138, 1592,
	141, 1592,
	142, 1592,
	143, 1592,
	145, 1592,
	146, 1592,
	148, 1592,
	149, 1592,
	150, 1592,
	152, 1592,
	153, 1592,
	154, 1592,
	155, 1592,
	156, 1592,
	157, 1592,
	158, 1592,
	159, 1592,
	160, 1592,
	161, 1592,
	162, 1592,
	163, 1592,
	164, 1592,
	165, 1592,
	166, 1592,
	167, 1592,
	169, 1592,
	175, 1592,
	176, 1592,
	177, 1592,
	178, 1592,
	182, 1592,
	184, 1592,
	185, 1592,
	189, 1592,
	190, 1592,
	191, 1592,
	192, 1592,
	193, 1592,
	194, 1592,
	195, 1592,
	196, 1592,
	197, 1592,
	198, 1592,
	199, 1592,
	200, 1592,
	201, 1592,
	202, 1592,
	204, 1592,
	205, 1592,
	207, 1592,
	208, 1592,
	210, 1592,
	211, 1592,
	212, 1592,
	213, 1592,
	214, 1592,
	215, 1592,
	216, 1592,
	217, 1592,
	218, 1592,
	220, 1592,
	221, 1592,
	223, 1592,
	224, 1592,
	225, 1592,
	226, 1592,
	227, 1592,
	231, 1592,
	232, 1592,
	233, 1592,
	234, 1592,
	235, 1592,
	238, 1592,
	239, 1592,
	240, 1592,
	242, 1592,
	244, 1592,
	245, 1592,
	247, 1592,
	249, 1592,
	250, 1592,
	251, 1592,
	253, 1592,
	257, 1592,
	258, 1592,
	259, 1592,
	260, 1592,
	261, 1592,
	262, 1592,
	264, 1592,
	265, 1592,
	266, 1592,
	268, 1592,
	269, 1592,
	271, 1592,
	272, 1592,
	275, 1592,
	279, 1592,
	280, 1592,
	281, 1592,
	284, 1592,
	285, 1592,
	286, 1592,
	287, 1592,
	289, 1592,
	290, 1592,
	291, 1592,
	292, 1592,
	293, 1592,
	294, 1592,
	295, 1592,
	296, 1592,
	297, 1592,
	298, 1592,
	299, 1592,
	300, 1592,
	301, 1592,
	302, 1592,
	303, 1592,
	304, 1592,
	305, 1592,
	306, 1592,
	307, 1592,
	308, 1592,
	309, 1592,
	310, 1592,
	312, 1592,
	314, 1592,
	315, 1592,
	316, 1592,
	317, 1592,
	318, 1592,
	319, 1592,
	320, 1592,
	321, 1592,
	322, 1592,
	323, 1592,
	324, 1592,
	325, 1592,
	326, 1592,
	328, 1592,
	329, 1592,
	331, 1592,
	333, 1592,
	334, 1592,
	336, 1592,
	337, 1592,
	338, 1592,
	339, 1592,
	340, 1592,
	343, 1592,
	346, 1592,
	347, 1592,
	348, 1592,
	349, 1592,
	352, 1592,
	353, 1592,
	354, 1592,
	356, 1592,
	358, 1592,
	359, 1592,
	360, 1592,
	361, 1592,
	362, 1592,
	363, 1592,
	364, 1592,
	365, 1592,
	366, 1592,
	367, 1592,
	368, 1592,
	369, 1592,
	370, 1592,
	372, 1592,
	373, 1592,
	374, 1592,
	375, 1592,
	376, 1592,
	377, 1592,
	378, 1592,
	379, 1592,
	380, 1592,
	381, 1592,
	382, 1592,
	383, 1592,
	384, 1592,
	385, 1592,
	386, 1592,
	388, 1592,
	389, 1592,
	391, 1592,
	392, 1592,
	393, 1592,
	394, 1592,
	395, 1592,
	396, 1592,
	397, 1592,
	398, 1592,
	399, 1592,
	400, 1592,
	401, 1592,
	402, 1592,
	403, 1592,
	405, 1592,
	407, 1592,
	408, 1592,
	409, 1592,
	415, 1592,
	417, 1592,
	418, 1592,
	419, 1592,
	420, 1592,
	421, 1592,
	422, 1592,
	423, 1592,
	424, 1592,
	425, 1592,
	426, 1592,
	428, 1592,
	429, 1592,
	430, 1592,
	432, 1592,
	433, 1592,
	434, 1592,
	435, 1592,
	436, 1592,
	437, 1592,
	438, 1592,
	440, 1592,
	441, 1592,
	442, 1592,
	443, 1592,
	444, 1592,
	445, 1592,
	446, 1592,
	447, 1592,
	448, 1592,
	449, 1592,
	450, 1592,
	451, 1592,
	453, 1592,
	454, 1592,
	455, 1592,
	456, 1592,
	457, 1592,
	458, 1592,
	460, 1592,
	461, 1592,
	462, 1592,
	463, 1592,
	464, 1592,
	465, 1592,
	467, 1592,
	468, 1592,
	469, 1592,
	470, 1592,
	471, 1592,
	472, 1592,
	473, 1592,
	474, 1592,
	476, 1592,
	478, 1592,
	479, 1592,
	480, 1592,
	481, 1592,
	482, 1592,
	483, 1592,
	484, 1592,
	485, 1592,
	486, 1592,
	487, 1592,
	488, 1592,
	489, 1592,
	490, 1592,
	491, 1592,
	492, 1592,
	493, 1592,
	495, 1592,
	496, 1592,
	498, 1592,
	499, 1592,
	501, 1592,
	502, 1592,
	503, 1592,
	504, 1592,
	505, 1592,
	506, 1592,
	507, 1592,
	508, 1592,
	509, 1592,
	511, 1592,
	512, 1592,
	513, 1592,
	514, 1592,
	515, 1592,
	517, 1592,
	519, 1592,
	520, 1592,
	521, 1592,
	522, 1592,
	523, 1592,
	524, 1592,
	526, 1592,
	527, 1592,
	528, 1592,
	529, 1592,
	531, 1592,
	532, 1592,
	535, 1592,
	536, 1592,
	537, 1592,
	538, 1592,
	539, 1592,
	540, 1592,
	541, 1592,
	543, 1592,
	546, 1592,
	547, 1592,
	548, 1592,
	549, 1592,
	550, 1592,
	551, 1592,
	553, 1592,
	554, 1592,
	555, 1592,
	556, 1592,
	558, 1592,
	563, 1592,
	564, 1592,
	565, 1592,
	566, 1592,
	567, 1592,
	568, 1592,
	-2, 0,
	-1, 158,
	1, 1443,
	131, 1443,
	249, 1443,
	330, 1443,
	388, 1443,
	397, 1443,
	572, 1443,
	601, 1443,
	-2, 0,
	-1, 160,
	1, 1443,
	601, 1443,
	-2, 0,
	-1, 161,
	1, 1443,
	601, 1443,
	-2, 0,
	-1, 162,
	1, 1443,
	516, 1443,
	601, 1443,
	-2, 0,
	-1, 191,
	151, 1560,
	170, 1560,
	183, 1560,
	241, 1560,
	274, 1560,
	341, 1560,
	351, 1560,
	533, 1560,
	-2, 1535,
	-1, 239,
	4, 1599,
	5, 1599,
	6, 1599,
	7, 1599,
	8, 1599,
	9, 1599,
	10, 1599,
	21, 1599,
	22, 1599,
	23, 1599,
	24, 1599,
	25, 1599,
	26, 1599,
	27, 1599,
	29, 1599,
	30, 1599,
	36, 1599,
	37, 1599,
	41, 1599,
	42, 1599,
	43, 1599,
	44, 1599,
	45, 1599,
	46, 1599,
	47, 1599,
	48, 1599,
	49, 1599,
	50, 1599,
	51, 1599,
	53, 1599,
	54, 1599,
	55, 1599,
	56, 1599,
	58, 1599,
	59, 1599,
	60, 1599,
	61, 1599,
	62, 1599,
	63, 1599,
	64, 1599,
	65, 1599,
	66, 1599,
	67, 1599,
	68, 1599,
	69, 1599,
	70, 1599,
	71, 1599,
	73, 1599,
	74, 1599,
	75, 1599,
	77, 1599,
	79, 1599,
	80, 1599,
	81, 1599,
	82, 1599,
	83, 1599,
	84, 1599,
	85, 1599,
	88, 1599,
	89, 1599,
	90, 1599,
	91, 1599,
	92, 1599,
	94, 1599,
	96, 1599,
	97, 1599,
	98, 1599,
	99, 1599,
	100, 1599,
	101, 1599,
	103, 1599,
	104, 1599,
	105, 1599,
	106, 1599,
	107, 1599,
	108, 1599,
	109, 1599,
	110, 1599,
	111, 1599,
	112, 1599,
	113, 1599,
	114, 1599,
	115, 1599,
	116, 1599,
	117, 1599,
	118, 1599,
	119, 1599,
	120, 1599,
	121, 1599,
	122, 1599,
	123, 1599,
	124, 1599,
	125, 1599,
	126, 1599,
	127, 1599,
	128, 1599,
	129, 1599,
	130, 1599,
	132, 1599,
	133, 1599,
	134, 1599,
	136, 1599,
	137, 1599,
	138, 1599,
	141, 1599,
	142, 1599,
	143, 1599,
	145, 1599,
	146, 1599,
	148, 1599,
	149, 1599,
	150, 1599,
	152, 1599,
	153, 1599,
	154, 1599,
	155, 1599,
	156, 1599,
	157, 1599,
	158, 1599,
	159, 1599,
	160, 1599,
	161, 1599,
	162, 1599,
	163, 1599,
	164, 1599,
	165, 1599,
	166, 1599,
	167, 1599,
	168, 1599,
	169, 1599,
	175, 1599,
	176, 1599,
	177, 1599,
	178, 1599,
	182, 1599,
	184, 1599,
	185, 1599,
	188, 1599,
	189, 1599,
	190, 1599,
	191, 1599,
	192, 1599,
	193, 1599,
	194, 1599,
	195, 1599,
	196, 1599,
	197, 1599,
	198, 1599,
	199, 1599,
	200, 1599,
	201, 1599,
	202, 1599,
	204, 1599,
	205, 1599,
	207, 1599,
	208, 1599,
	210, 1599,
	211, 1599,
	212, 1599,
	213, 1599,
	214, 1599,
	215, 1599,
	216, 1599,
	217, 1599,
	218, 1599,
	219, 1599,
	220, 1599,
	221, 1599,
	223, 1599,
	224, 1599,
	225, 1599,
	226, 1599,
	227, 1599,
	231, 1599,
	232, 1599,
	233, 1599,
	234, 1599,
	235, 1599,
	237, 1599,
	238, 1599,
	239, 1599,
	240, 1599,
	242, 1599,
	244, 1599,
	245, 1599,
	246, 1599,
	247, 1599,
	248, 1599,
	249, 1599,
	250, 1599,
	251, 1599,
	252, 1599,
	253, 1599,
	257, 1599,
	258, 1599,
	259, 1599,
	260, 1599,
	261, 1599,
	262, 1599,
	264, 1599,
	265, 1599,
	266, 1599,
	268, 1599,
	269, 1599,
	270, 1599,
	271, 1599,
	272, 1599,
	273, 1599,
	275, 1599,
	279, 1599,
	280, 1599,
	281, 1599,
	282, 1599,
	283, 1599,
	284, 1599,
	285, 1599,
	286, 1599,
	287, 1599,
	289, 1599,
	290, 1599,
	291, 1599,
	292, 1599,
	293, 1599,
	294, 1599,
	295, 1599,
	296, 1599,
	297, 1599,
	298, 1599,
	299, 1599,
	300, 1599,
	301, 1599,
	302, 1599,
	303, 1599,
	304, 1599,
	305, 1599,
	306, 1599,
	307, 1599,
	308, 1599,
	309, 1599,
	310, 1599,
	312, 1599,
	313, 1599,
	314, 1599,
	315, 1599,
	316, 1599,
	317, 1599,
	318, 1599,
	319, 1599,
	320, 1599,
	321, 1599,
	322, 1599,
	323, 1599,
	324, 1599,
	325, 1599,
	326, 1599,
	327, 1599,
	328, 1599,
	329, 1599,
	330, 1599,
	331, 1599,
	332, 1599,
	333, 1599,
	334, 1599,
	335, 1599,
	336, 1599,
	337, 1599,
	338, 1599,
	339, 1599,
	340, 1599,
	343, 1599,
	347, 1599,
	348, 1599,
	349, 1599,
	352, 1599,
	353, 1599,
	354, 1599,
	355, 1599,
	356, 1599,
	357, 1599,
	358, 1599,
	359, 1599,
	360, 1599,
	361, 1599,
	362, 1599,
	363, 1599,
	364, 1599,
	365, 1599,
	366, 1599,
	367, 1599,
	368, 1599,
	369, 1599,
	370, 1599,
	372, 1599,
	373, 1599,
	374, 1599,
	375, 1599,
	376, 1599,
	377, 1599,
	378, 1599,
	379, 1599,
	380, 1599,
	381, 1599,
	382, 1599,
	383, 1599,
	384, 1599,
	385, 1599,
	386, 1599,
	388, 1599,
	389, 1599,
	391, 1599,
	392, 1599,
	393, 1599,
	394, 1599,
	395, 1599,
	396, 1599,
	397, 1599,
	398, 1599,
	399, 1599,
	400, 1599,
	401, 1599,
	402, 1599,
	403, 1599,
	405, 1599,
	407, 1599,
	408, 1599,
	409, 1599,
	415, 1599,
	417, 1599,
	418, 1599,
	419, 1599,
	420, 1599,
	421, 1599,
	422, 1599,
	423, 1599,
	424, 1599,
	425, 1599,
	426, 1599,
	428, 1599,
	429, 1599,
	430, 1599,
	431, 1599,
	432, 1599,
	433, 1599,
	434, 1599,
	435, 1599,
	436, 1599,
	437, 1599,
	438, 1599,
	440, 1599,
	441, 1599,
	442, 1599,
	443, 1599,
	444, 1599,
	445, 1599,
	446, 1599,
	447, 1599,
	448, 1599,
	449, 1599,
	450, 1599,
	451, 1599,
	453, 1599,
	454, 1599,
	455, 1599,
	456, 1599,
	457, 1599,
	458, 1599,
	459, 1599,
	460, 1599,
	461, 1599,
	462, 1599,
	463, 1599,
	464, 1599,
	465, 1599,
	466, 1599,
	467, 1599,
	468, 1599,
	469, 1599,
	470, 1599,
	471, 1599,
	472, 1599,
	473, 1599,
	474, 1599,
	476, 1599,
	478, 1599,
	479, 1599,
	480, 1599,
	481, 1599,
	482, 1599,
	483, 1599,
	484, 1599,
	485, 1599,
	486, 1599,
	487, 1599,
	488, 1599,
	489, 1599,
	490, 1599,
	491, 1599,
	492, 1599,
	493, 1599,
	495, 1599,
	496, 1599,
	497, 1599,
	498, 1599,
	499, 1599,
	501, 1599,
	502, 1599,
	503, 1599,
	504, 1599,
	505, 1599,
	506, 1599,
	507, 1599,
	508, 1599,
	509, 1599,
	511, 1599,
	512, 1599,
	513, 1599,
	514, 1599,
	515, 1599,
	517, 1599,
	519, 1599,
	520, 1599,
	521, 1599,
	522, 1599,
	523, 1599,
	524, 1599,
	525, 1599,
	526, 1599,
	527, 1599,
	528, 1599,
	529, 1599,
	531, 1599,
	532, 1599,
	534, 1599,
	535, 1599,
	536, 1599,
	537, 1599,
	538, 1599,
	539, 1599,
	540, 1599,
	541, 1599,
	542, 1599,
	543, 1599,
	546, 1599,
	547, 1599,
	548, 1599,
	549, 1599,
	550, 1599,
	551, 1599,
	553, 1599,
	554, 1599,
	555, 1599,
	556, 1599,
	558, 1599,
	563, 1599,
	564, 1599,
	565, 1599,
	566, 1599,
	567, 1599,
	568, 1599,
	569, 1599,
	582, 1599,
	589, 1599,
	590, 1599,
	591, 1599,
	598, 1599,
	602, 1599,
	-2, 0,
	-1, 745,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	169, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	189, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	204, 1324,
	205, 1324,
	207, 1324,
	208, 1324,
	210, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	220, 1324,
	221, 1324,
	223, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	231, 1324,
	232, 1324,
	233, 1324,
	234, 1324,
	235, 1324,
	238, 1324,
	239, 1324,
	240, 1324,
	242, 1324,
	244, 1324,
	245, 1324,
	247, 1324,
	249, 1324,
	250, 1324,
	251, 1324,
	253, 1324,
	257, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	262, 1324,
	264, 1324,
	265, 1324,
	266, 1324,
	268, 1324,
	269, 1324,
	271, 1324,
	272, 1324,
	275, 1324,
	279, 1324,
	280, 1324,
	281, 1324,
	284, 1324,
	285, 1324,
	286, 1324,
	287, 1324,
	289, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	310, 1324,
	312, 1324,
	314, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	328, 1324,
	329, 1324,
	331, 1324,
	333, 1324,
	334, 1324,
	336, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	343, 1324,
	347, 1324,
	348, 1324,
	349, 1324,
	352, 1324,
	353, 1324,
	354, 1324,
	356, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	372, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	388, 1324,
	389, 1324,
	391, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	405, 1324,
	407, 1324,
	408, 1324,
	409, 1324,
	415, 1324,
	417, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	428, 1324,
	429, 1324,
	430, 1324,
	432, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	440, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	453, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	460, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	467, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	476, 1324,
	478, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	495, 1324,
	496, 1324,
	498, 1324,
	499, 1324,
	501, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	511, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	517, 1324,
	519, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	526, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	531, 1324,
	532, 1324,
	535, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	543, 1324,
	546, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	553, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	558, 1324,
	563, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	-2, 0,
	-1, 764,
	187, 2387,
	516, 2387,
	581, 2387,
	600, 2387,
	-2, 0,
	-1, 765,
	187, 2374,
	516, 2374,
	581, 2374,
	600, 2374,
	-2, 0,
	-1, 767,
	187, 2632,
	516, 2632,
	581, 2632,
	600, 2632,
	-2, 0,
	-1, 770,
	187, 2495,
	516, 2495,
	581, 2495,
	600, 2495,
	-2, 0,
	-1, 771,
	187, 2673,
	516, 2673,
	581, 2673,
	600, 2673,
	-2, 0,
	-1, 779,
	187, 2522,
	516, 2522,
	581, 2522,
	600, 2522,
	-2, 708,
	-1, 814,
	600, 2323,
	603, 2323,
	-2, 1001,
	-1, 815,
	600, 2325,
	603, 2325,
	-2, 1002,
	-1, 816,
	600, 2324,
	603, 2324,
	-2, 1003,
	-1, 817,
	603, 2249,
	-2, 1004,
	-1, 842,
	183, 264,
	-2, 0,
	-1, 866,
	43, 2296,
	-2, 0,
	-1, 867,
	553, 1302,
	-2, 1081,
	-1, 883,
	4, 1729,
	21, 1729,
	22, 1729,
	23, 1729,
	24, 1729,
	25, 1729,
	26, 1729,
	27, 1729,
	29, 1729,
	30, 1729,
	36, 1729,
	41, 1729,
	42, 1729,
	44, 1729,
	45, 1729,
	46, 1729,
	47, 1729,
	48, 1729,
	49, 1729,
	50, 1729,
	51, 1729,
	53, 1729,
	54, 1729,
	55, 1729,
	56, 1729,
	58, 1729,
	59, 1729,
	60, 1729,
	61, 1729,
	62, 1729,
	63, 1729,
	64, 1729,
	68, 1729,
	69, 1729,
	70, 1729,
	71, 1729,
	73, 1729,
	74, 1729,
	75, 1729,
	79, 1729,
	80, 1729,
	81, 1729,
	82, 1729,
	83, 1729,
	84, 1729,
	85, 1729,
	88, 1729,
	89, 1729,
	90, 1729,
	91, 1729,
	92, 1729,
	94, 1729,
	96, 1729,
	97, 1729,
	98, 1729,
	99, 1729,
	100, 1729,
	101, 1729,
	103, 1729,
	104, 1729,
	105, 1729,
	107, 1729,
	108, 1729,
	109, 1729,
	117, 1729,
	118, 1729,
	119, 1729,
	120, 1729,
	121, 1729,
	123, 1729,
	124, 1729,
	125, 1729,
	126, 1729,
	128, 1729,
	129, 1729,
	130, 1729,
	132, 1729,
	133, 1729,
	134, 1729,
	136, 1729,
	137, 1729,
	138, 1729,
	141, 1729,
	142, 1729,
	143, 1729,
	145, 1729,
	146, 1729,
	148, 1729,
	149, 1729,
	150, 1729,
	152, 1729,
	153, 1729,
	154, 1729,
	155, 1729,
	156, 1729,
	157, 1729,
	158, 1729,
	159, 1729,
	160, 1729,
	161, 1729,
	162, 1729,
	163, 1729,
	164, 1729,
	165, 1729,
	166, 1729,
	167, 1729,
	169, 1729,
	175, 1729,
	176, 1729,
	177, 1729,
	178, 1729,
	182, 1729,
	184, 1729,
	185, 1729,
	189, 1729,
	190, 1729,
	191, 1729,
	192, 1729,
	193, 1729,
	194, 1729,
	195, 1729,
	196, 1729,
	197, 1729,
	198, 1729,
	199, 1729,
	200, 1729,
	201, 1729,
	202, 1729,
	204, 1729,
	205, 1729,
	207, 1729,
	208, 1729,
	210, 1729,
	211, 1729,
	212, 1729,
	213, 1729,
	214, 1729,
	215, 1729,
	216, 1729,
	217, 1729,
	218, 1729,
	220, 1729,
	221, 1729,
	223, 1729,
	224, 1729,
	225, 1729,
	226, 1729,
	227, 1729,
	231, 1729,
	232, 1729,
	233, 1729,
	234, 1729,
	235, 1729,
	238, 1729,
	239, 1729,
	240, 1729,
	242, 1729,
	244, 1729,
	245, 1729,
	247, 1729,
	249, 1729,
	250, 1729,
	251, 1729,
	253, 1729,
	257, 1729,
	258, 1729,
	259, 1729,
	260, 1729,
	261, 1729,
	262, 1729,
	264, 1729,
	265, 1729,
	266, 1729,
	268, 1729,
	269, 1729,
	271, 1729,
	272, 1729,
	275, 1729,
	279, 1729,
	280, 1729,
	281, 1729,
	284, 1729,
	285, 1729,
	286, 1729,
	287, 1729,
	289, 1729,
	290, 1729,
	291, 1729,
	292, 1729,
	293, 1729,
	294, 1729,
	295, 1729,
	296, 1729,
	297, 1729,
	298, 1729,
	299, 1729,
	300, 1729,
	301, 1729,
	302, 1729,
	303, 1729,
	304, 1729,
	305, 1729,
	306, 1729,
	307, 1729,
	308, 1729,
	309, 1729,
	310, 1729,
	312, 1729,
	314, 1729,
	315, 1729,
	316, 1729,
	317, 1729,
	318, 1729,
	319, 1729,
	320, 1729,
	321, 1729,
	322, 1729,
	323, 1729,
	324, 1729,
	325, 1729,
	326, 1729,
	328, 1729,
	329, 1729,
	331, 1729,
	333, 1729,
	334, 1729,
	336, 1729,
	337, 1729,
	338, 1729,
	339, 1729,
	340, 1729,
	343, 1729,
	347, 1729,
	348, 1729,
	349, 1729,
	352, 1729,
	353, 1729,
	354, 1729,
	356, 1729,
	358, 1729,
	359, 1729,
	360, 1729,
	361, 1729,
	362, 1729,
	363, 1729,
	364, 1729,
	365, 1729,
	366, 1729,
	367, 1729,
	368, 1729,
	369, 1729,
	370, 1729,
	372, 1729,
	373, 1729,
	374, 1729,
	375, 1729,
	376, 1729,
	377, 1729,
	378, 1729,
	379, 1729,
	380, 1729,
	381, 1729,
	382, 1729,
	383, 1729,
	384, 1729,
	385, 1729,
	386, 1729,
	388, 1729,
	389, 1729,
	391, 1729,
	392, 1729,
	393, 1729,
	394, 1729,
	395, 1729,
	396, 1729,
	397, 1729,
	398, 1729,
	399, 1729,
	400, 1729,
	401, 1729,
	402, 1729,
	403, 1729,
	405, 1729,
	407, 1729,
	408, 1729,
	409, 1729,
	415, 1729,
	417, 1729,
	418, 1729,
	419, 1729,
	420, 1729,
	421, 1729,
	422, 1729,
	423, 1729,
	424, 1729,
	425, 1729,
	426, 1729,
	428, 1729,
	429, 1729,
	430, 1729,
	432, 1729,
	433, 1729,
	434, 1729,
	435, 1729,
	436, 1729,
	437, 1729,
	438, 1729,
	440, 1729,
	441, 1729,
	442, 1729,
	443, 1729,
	444, 1729,
	445, 1729,
	446, 1729,
	447, 1729,
	448, 1729,
	449, 1729,
	450, 1729,
	451, 1729,
	453, 1729,
	454, 1729,
	455, 1729,
	456, 1729,
	457, 1729,
	458, 1729,
	460, 1729,
	461, 1729,
	462, 1729,
	463, 1729,
	464, 1729,
	465, 1729,
	467, 1729,
	468, 1729,
	469, 1729,
	470, 1729,
	471, 1729,
	472, 1729,
	473, 1729,
	474, 1729,
	476, 1729,
	478, 1729,
	479, 1729,
	480, 1729,
	481, 1729,
	482, 1729,
	483, 1729,
	484, 1729,
	485, 1729,
	486, 1729,
	487, 1729,
	488, 1729,
	489, 1729,
	490, 1729,
	491, 1729,
	492, 1729,
	493, 1729,
	495, 1729,
	496, 1729,
	498, 1729,
	499, 1729,
	501, 1729,
	502, 1729,
	503, 1729,
	504, 1729,
	505, 1729,
	506, 1729,
	507, 1729,
	508, 1729,
	509, 1729,
	511, 1729,
	512, 1729,
	513, 1729,
	514, 1729,
	515, 1729,
	517, 1729,
	519, 1729,
	520, 1729,
	521, 1729,
	522, 1729,
	523, 1729,
	524, 1729,
	526, 1729,
	527, 1729,
	528, 1729,
	529, 1729,
	531, 1729,
	532, 1729,
	535, 1729,
	536, 1729,
	537, 1729,
	538, 1729,
	539, 1729,
	540, 1729,
	541, 1729,
	543, 1729,
	546, 1729,
	547, 1729,
	548, 1729,
	549, 1729,
	550, 1729,
	551, 1729,
	553, 1729,
	554, 1729,
	555, 1729,
	556, 1729,
	558, 1729,
	563, 1729,
	564, 1729,
	565, 1729,
	566, 1729,
	567, 1729,
	568, 1729,
	-2, 0,
	-1, 893,
	261, 414,
	-2, 0,
	-1, 970,
	393, 883,
	458, 883,
	499, 883,
	521, 883,
	-2, 0,
	-1, 971,
	393, 882,
	458, 882,
	499, 882,
	521, 882,
	-2, 818,
	-1, 975,
	1, 935,
	597, 935,
	599, 935,
	601, 935,
	-2, 0,
	-1, 977,
	1, 857,
	597, 857,
	599, 857,
	601, 857,
	-2, 0,
	-1, 978,
	1, 861,
	597, 861,
	599, 861,
	601, 861,
	-2, 0,
	-1, 979,
	1, 1000,
	183, 1000,
	597, 1000,
	599, 1000,
	601, 1000,
	-2, 0,
	-1, 987,
	1, 888,
	597, 888,
	599, 888,
	601, 888,
	-2, 0,
	-1, 994,
	1, 935,
	597, 935,
	599, 935,
	601, 935,
	-2, 0,
	-1, 995,
	1, 937,
	597, 937,
	599, 937,
	601, 937,
	-2, 0,
	-1, 996,
	1, 940,
	597, 940,
	599, 940,
	601, 940,
	-2, 0,
	-1, 1002,
	1, 964,
	597, 964,
	599, 964,
	601, 964,
	-2, 0,
	-1, 1003,
	1, 966,
	597, 966,
	599, 966,
	601, 966,
	-2, 0,
	-1, 1008,
	1, 994,
	597, 994,
	599, 994,
	601, 994,
	-2, 0,
	-1, 1058,
	170, 1603,
	183, 1603,
	274, 1603,
	341, 1603,
	-2, 1539,
	-1, 1073,
	170, 1602,
	183, 1602,
	274, 1602,
	341, 1602,
	-2, 1536,
	-1, 1100,
	600, 2322,
	-2, 716,
	-1, 1129,
	5, 2314,
	598, 2312,
	-2, 2303,
	-1, 1137,
	5, 2335,
	598, 2332,
	-2, 2323,
	-1, 1138,
	5, 2336,
	598, 2333,
	-2, 2324,
	-1, 1146,
	600, 2320,
	-2, 2302,
	-1, 1147,
	598, 2756,
	-2, 2321,
	-1, 1170,
	598, 2755,
	-2, 2337,
	-1, 1171,
	5, 1804,
	-2, 2726,
	-1, 1172,
	5, 1805,
	-2, 2727,
	-1, 1173,
	5, 1806,
	-2, 2741,
	-1, 1174,
	5, 1807,
	-2, 2705,
	-1, 1175,
	5, 1808,
	-2, 2739,
	-1, 1176,
	5, 1816,
	-2, 2718,
	-1, 1177,
	5, 1803,
	-2, 2714,
	-1, 1178,
	5, 1803,
	-2, 2713,
	-1, 1179,
	5, 1803,
	-2, 2732,
	-1, 1180,
	5, 1814,
	-2, 2707,
	-1, 1181,
	5, 1819,
	-2, 2706,
	-1, 1182,
	5, 1821,
	-2, 2751,
	-1, 1185,
	5, 1843,
	-2, 2744,
	-1, 1186,
	5, 1835,
	-2, 2745,
	-1, 1187,
	5, 1843,
	-2, 2746,
	-1, 1188,
	5, 1839,
	-2, 2747,
	-1, 1189,
	5, 1789,
	-2, 2719,
	-1, 1190,
	5, 1790,
	-2, 2720,
	-1, 1191,
	5, 1791,
	-2, 2708,
	-1, 1219,
	5, 1826,
	-2, 2752,
	-1, 1220,
	5, 1827,
	-2, 2742,
	-1, 1221,
	5, 1828,
	554, 1828,
	-2, 2709,
	-1, 1222,
	5, 1829,
	554, 1829,
	-2, 2710,
	-1, 1259,
	598, 2332,
	-2, 2323,
	-1, 1260,
	598, 2333,
	-2, 2324,
	-1, 1361,
	187, 2673,
	516, 2673,
	581, 2673,
	600, 2673,
	-2, 0,
	-1, 1366,
	1, 693,
	601, 693,
	-2, 1451,
	-1, 1495,
	360, 2297,
	417, 2297,
	460, 2297,
	591, 2297,
	-2, 2287,
	-1, 1506,
	602, 2297,
	-2, 2299,
	-1, 1514,
	1, 1299,
	422, 1263,
	460, 1263,
	575, 1263,
	597, 1299,
	599, 1299,
	601, 1299,
	-2, 1588,
	-1, 1520,
	203, 1396,
	222, 1396,
	430, 1396,
	-2, 0,
	-1, 1568,
	401, 1080,
	553, 1080,
	-2, 409,
	-1, 1585,
	43, 2295,
	-2, 1046,
	-1, 1592,
	1, 1299,
	597, 1299,
	599, 1299,
	601, 1299,
	-2, 1588,
	-1, 1600,
	4, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	27, 1324,
	29, 1324,
	30, 1324,
	36, 1324,
	41, 1324,
	42, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	50, 1324,
	51, 1324,
	53, 1324,
	54, 1324,
	55, 1324,
	56, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	68, 1324,
	69, 1324,
	70, 1324,
	71, 1324,
	73, 1324,
	74, 1324,
	75, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	83, 1324,
	84, 1324,
	85, 1324,
	88, 1324,
	89, 1324,
	90, 1324,
	91, 1324,
	92, 1324,
	94, 1324,
	96, 1324,
	97, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	121, 1324,
	123, 1324,
	124, 1324,
	125, 1324,
	126, 1324,
	128, 1324,
	129, 1324,
	130, 1324,
	132, 1324,
	133, 1324,
	134, 1324,
	136, 1324,
	137, 1324,
	138, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	145, 1324,
	146, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	158, 1324,
	159, 1324,
	160, 1324,
	161, 1324,
	162, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	167, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	182, 1324,
	184, 1324,
	185, 1324,
	189, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	201, 1324,
	202, 1324,
	204, 1324,
	205, 1324,
	207, 1324,
	208, 1324,
	210, 1324,
	211, 1324,
	212, 1324,
	213, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	218, 1324,
	220, 1324,
	221, 1324,
	223, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	232, 1324,
	233, 1324,
	234, 1324,
	235, 1324,
	238, 1324,
	239, 1324,
	240, 1324,
	242, 1324,
	244, 1324,
	245, 1324,
	247, 1324,
	249, 1324,
	250, 1324,
	251, 1324,
	253, 1324,
	257, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	261, 1324,
	262, 1324,
	264, 1324,
	265, 1324,
	266, 1324,
	268, 1324,
	269, 1324,
	271, 1324,
	272, 1324,
	275, 1324,
	279, 1324,
	280, 1324,
	281, 1324,
	284, 1324,
	285, 1324,
	286, 1324,
	287, 1324,
	289, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	295, 1324,
	296, 1324,
	297, 1324,
	298, 1324,
	299, 1324,
	300, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	304, 1324,
	305, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	310, 1324,
	312, 1324,
	314, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	324, 1324,
	325, 1324,
	326, 1324,
	328, 1324,
	329, 1324,
	333, 1324,
	334, 1324,
	336, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	343, 1324,
	345, 1324,
	347, 1324,
	348, 1324,
	349, 1324,
	352, 1324,
	353, 1324,
	354, 1324,
	356, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	365, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	372, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	376, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	388, 1324,
	389, 1324,
	391, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	405, 1324,
	407, 1324,
	408, 1324,
	409, 1324,
	415, 1324,
	417, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	425, 1324,
	426, 1324,
	428, 1324,
	429, 1324,
	430, 1324,
	432, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	440, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	445, 1324,
	446, 1324,
	447, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	453, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	457, 1324,
	458, 1324,
	460, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	467, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	471, 1324,
	472, 1324,
	473, 1324,
	474, 1324,
	476, 1324,
	478, 1324,
	479, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	483, 1324,
	484, 1324,
	485, 1324,
	486, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	495, 1324,
	496, 1324,
	498, 1324,
	499, 1324,
	501, 1324,
	502, 1324,
	503, 1324,
	504, 1324,
	505, 1324,
	506, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	511, 1324,
	512, 1324,
	513, 1324,
	514, 1324,
	515, 1324,
	517, 1324,
	519, 1324,
	520, 1324,
	521, 1324,
	522, 1324,
	523, 1324,
	524, 1324,
	526, 1324,
	527, 1324,
	528, 1324,
	529, 1324,
	531, 1324,
	532, 1324,
	535, 1324,
	536, 1324,
	537, 1324,
	538, 1324,
	539, 1324,
	540, 1324,
	541, 1324,
	543, 1324,
	546, 1324,
	547, 1324,
	548, 1324,
	549, 1324,
	550, 1324,
	551, 1324,
	553, 1324,
	554, 1324,
	555, 1324,
	556, 1324,
	558, 1324,
	563, 1324,
	564, 1324,
	565, 1324,
	566, 1324,
	567, 1324,
	568, 1324,
	-2, 0,
	-1, 1623,
	1, 554,
	597, 554,
	599, 554,
	601, 554,
	-2, 1559,
	-1, 1626,
	4, 2750,
	11, 2750,
	12, 2750,
	14, 2750,
	15, 2750,
	16, 2750,
	17, 2750,
	18, 2750,
	19, 2750,
	21, 2750,
	22, 2750,
	23, 2750,
	24, 2750,
	25, 2750,
	26, 2750,
	27, 2750,
	29, 2750,
	30, 2750,
	33, 2750,
	34, 2750,
	36, 2750,
	38, 2750,
	41, 2750,
	42, 2750,
	44, 2750,
	45, 2750,
	46, 2750,
	47, 2750,
	48, 2750,
	49, 2750,
	50, 2750,
	51, 2750,
	53, 2750,
	54, 2750,
	55, 2750,
	56, 2750,
	58, 2750,
	59, 2750,
	60, 2750,
	61, 2750,
	62, 2750,
	63, 2750,
	64, 2750,
	67, 2750,
	68, 2750,
	69, 2750,
	70, 2750,
	71, 2750,
	73, 2750,
	74, 2750,
	75, 2750,
	76, 2750,
	79, 2750,
	80, 2750,
	81, 2750,
	82, 2750,
	83, 2750,
	84, 2750,
	85, 2750,
	86, 2750,
	88, 2750,
	89, 2750,
	90, 2750,
	91, 2750,
	92, 2750,
	94, 2750,
	95, 2750,
	96, 2750,
	97, 2750,
	98, 2750,
	99, 2750,
	100, 2750,
	101, 2750,
	103, 2750,
	104, 2750,
	105, 2750,
	106, 2750,
	107, 2750,
	108, 2750,
	109, 2750,
	117, 2750,
	118, 2750,
	119, 2750,
	120, 2750,
	121, 2750,
	123, 2750,
	124, 2750,
	125, 2750,
	126, 2750,
	128, 2750,
	129, 2750,
	130, 2750,
	132, 2750,
	133, 2750,
	134, 2750,
	136, 2750,
	137, 2750,
	138, 2750,
	141, 2750,
	142, 2750,
	143, 2750,
	145, 2750,
	146, 2750,
	148, 2750,
	149, 2750,
	150, 2750,
	152, 2750,
	153, 2750,
	154, 2750,
	155, 2750,
	156, 2750,
	157, 2750,
	158, 2750,
	159, 2750,
	160, 2750,
	161, 2750,
	162, 2750,
	163, 2750,
	164, 2750,
	165, 2750,
	166, 2750,
	167, 2750,
	171, 2750,
	172, 2750,
	173, 2750,
	174, 2750,
	175, 2750,
	176, 2750,
	177, 2750,
	178, 2750,
	181, 2750,
	182, 2750,
	184, 2750,
	185, 2750,
	188, 2750,
	189, 2750,
	190, 2750,
	191, 2750,
	192, 2750,
	193, 2750,
	194, 2750,
	195, 2750,
	196, 2750,
	197, 2750,
	198, 2750,
	199, 2750,
	200, 2750,
	201, 2750,
	202, 2750,
	204, 2750,
	205, 2750,
	207, 2750,
	208, 2750,
	210, 2750,
	211, 2750,
	212, 2750,
	213, 2750,
	214, 2750,
	215, 2750,
	216, 2750,
	217, 2750,
	218, 2750,
	219, 2750,
	220, 2750,
	221, 2750,
	222, 2750,
	223, 2750,
	224, 2750,
	225, 2750,
	226, 2750,
	227, 2750,
	229, 2750,
	230, 2750,
	232, 2750,
	233, 2750,
	234, 2750,
	235, 2750,
	237, 2750,
	238, 2750,
	239, 2750,
	240, 2750,
	242, 2750,
	244, 2750,
	245, 2750,
	246, 2750,
	247, 2750,
	248, 2750,
	249, 2750,
	250, 2750,
	251, 2750,
	252, 2750,
	253, 2750,
	255, 2750,
	256, 2750,
	257, 2750,
	258, 2750,
	259, 2750,
	260, 2750,
	261, 2750,
	262, 2750,
	264, 2750,
	265, 2750,
	266, 2750,
	268, 2750,
	269, 2750,
	270, 2750,
	271, 2750,
	272, 2750,
	273, 2750,
	275, 2750,
	279, 2750,
	280, 2750,
	281, 2750,
	284, 2750,
	285, 2750,
	286, 2750,
	287, 2750,
	288, 2750,
	289, 2750,
	290, 2750,
	291, 2750,
	292, 2750,
	293, 2750,
	294, 2750,
	295, 2750,
	296, 2750,
	297, 2750,
	298, 2750,
	299, 2750,
	300, 2750,
	301, 2750,
	302, 2750,
	303, 2750,
	304, 2750,
	305, 2750,
	306, 2750,
	307, 2750,
	308, 2750,
	309, 2750,
	310, 2750,
	312, 2750,
	313, 2750,
	314, 2750,
	315, 2750,
	316, 2750,
	317, 2750,
	318, 2750,
	319, 2750,
	320, 2750,
	321, 2750,
	322, 2750,
	323, 2750,
	324, 2750,
	325, 2750,
	326, 2750,
	328, 2750,
	329, 2750,
	332, 2750,
	333, 2750,
	334, 2750,
	336, 2750,
	337, 2750,
	338, 2750,
	339, 2750,
	340, 2750,
	343, 2750,
	347, 2750,
	348, 2750,
	349, 2750,
	350, 2750,
	352, 2750,
	353, 2750,
	354, 2750,
	356, 2750,
	358, 2750,
	359, 2750,
	360, 2750,
	361, 2750,
	362, 2750,
	363, 2750,
	364, 2750,
	365, 2750,
	366, 2750,
	367, 2750,
	368, 2750,
	369, 2750,
	370, 2750,
	372, 2750,
	373, 2750,
	374, 2750,
	375, 2750,
	376, 2750,
	377, 2750,
	378, 2750,
	379, 2750,
	380, 2750,
	381, 2750,
	382, 2750,
	383, 2750,
	384, 2750,
	385, 2750,
	386, 2750,
	388, 2750,
	389, 2750,
	391, 2750,
	392, 2750,
	393, 2750,
	394, 2750,
	395, 2750,
	396, 2750,
	397, 2750,
	398, 2750,
	399, 2750,
	400, 2750,
	401, 2750,
	402, 2750,
	403, 2750,
	405, 2750,
	407, 2750,
	408, 2750,
	409, 2750,
	415, 2750,
	416, 2750,
	417, 2750,
	418, 2750,
	419, 2750,
	420, 2750,
	421, 2750,
	422, 2750,
	423, 2750,
	424, 2750,
	425, 2750,
	426, 2750,
	428, 2750,
	429, 2750,
	430, 2750,
	431, 2750,
	432, 2750,
	433, 2750,
	434, 2750,
	435, 2750,
	436, 2750,
	437, 2750,
	438, 2750,
	439, 2750,
	440, 2750,
	441, 2750,
	442, 2750,
	443, 2750,
	444, 2750,
	445, 2750,
	446, 2750,
	447, 2750,
	448, 2750,
	449, 2750,
	450, 2750,
	451, 2750,
	453, 2750,
	454, 2750,
	455, 2750,
	456, 2750,
	457, 2750,
	458, 2750,
	460, 2750,
	461, 2750,
	462, 2750,
	463, 2750,
	464, 2750,
	465, 2750,
	466, 2750,
	467, 2750,
	468, 2750,
	469, 2750,
	470, 2750,
	471, 2750,
	472, 2750,
	473, 2750,
	474, 2750,
	476, 2750,
	478, 2750,
	479, 2750,
	480, 2750,
	481, 2750,
	482, 2750,
	483, 2750,
	484, 2750,
	485, 2750,
	486, 2750,
	487, 2750,
	488, 2750,
	489, 2750,
	490, 2750,
	491, 2750,
	492, 2750,
	493, 2750,
	495, 2750,
	496, 2750,
	497, 2750,
	498, 2750,
	499, 2750,
	501, 2750,
	502, 2750,
	503, 2750,
	504, 2750,
	505, 2750,
	506, 2750,
	507, 2750,
	508, 2750,
	509, 2750,
	511, 2750,
	512, 2750,
	513, 2750,
	514, 2750,
	515, 2750,
	517, 2750,
	519, 2750,
	520, 2750,
	521, 2750,
	522, 2750,
	523, 2750,
	524, 2750,
	526, 2750,
	527, 2750,
	528, 2750,
	529, 2750,
	531, 2750,
	532, 2750,
	535, 2750,
	536, 2750,
	537, 2750,
	538, 2750,
	539, 2750,
	540, 2750,
	541, 2750,
	543, 2750,
	546, 2750,
	547, 2750,
	548, 2750,
	549, 2750,
	550, 2750,
	551, 2750,
	553, 2750,
	554, 2750,
	555, 2750,
	556, 2750,
	558, 2750,
	563, 2750,
	564, 2750,
	565, 2750,
	566, 2750,
	567, 2750,
	568, 2750,
	569, 2750,
	571, 2750,
	579, 2750,
	580, 2750,
	581, 2750,
	582, 2750,
	583, 2750,
	584, 2750,
	586, 2750,
	587, 2750,
	588, 2750,
	589, 2750,
	590, 2750,
	591, 2750,
	592, 2750,
	593, 2750,
	594, 2750,
	596, 2750,
	599, 2750,
	600, 2750,
	602, 2750,
	603, 2750,
	-2, 0,
	-1, 1631,
	187, 2632,
	516, 2632,
	581, 2632,
	600, 2632,
	-2, 0,
	-1, 1684,
	393, 883,
	458, 883,
	499, 883,
	521, 883,
	-2, 0,
	-1, 1695,
	1, 1396,
	597, 1396,
	599, 1396,
	601, 1396,
	-2, 0,
	-1, 1712,
	1, 878,
	597, 878,
	599, 878,
	601, 878,
	-2, 0,
	-1, 1713,
	1, 922,
	597, 922,
	599, 922,
	601, 922,
	-2, 0,
	-1, 1714,
	1, 930,
	597, 930,
	599, 930,
	601, 930,
	-2, 0,
	-1, 1717,
	1, 887,
	597, 887,
	599, 887,
	601, 887,
	-2, 0,
	-1, 1719,
	1, 893,
	597, 893,
	599, 893,
	601, 893,
	-2, 0,
	-1, 1722,
	1, 889,
	597, 889,
	599, 889,
	601, 889,
	-2, 0,
	-1, 1727,
	1, 903,
	597, 903,
	599, 903,
	601, 903,
	-2, 0,
	-1, 1758,
	1, 2615,
	597, 2615,
	599, 2615,
	600, 2615,
	601, 2615,
	-2, 0,
	-1, 1762,
	1, 975,
	597, 975,
	599, 975,
	601, 975,
	-2, 0,
	-1, 1777,
	1, 1446,
	601, 1446,
	-2, 1451,
	-1, 1780,
	170, 1602,
	183, 1602,
	274, 1602,
	341, 1602,
	-2, 1540,
	-1, 1880,
	151, 1561,
	170, 1561,
	183, 1561,
	241, 1561,
	274, 1561,
	341, 1561,
	351, 1561,
	533, 1561,
	-2, 2008,
	-1, 1941,
	599, 2183,
	-2, 0,
	-1, 1976,
	151, 1561,
	170, 1561,
	183, 1561,
	241, 1561,
	274, 1561,
	341, 1561,
	351, 1561,
	533, 1561,
	-2, 1690,
	-1, 2013,
	516, 2629,
	600, 2629,
	603, 2629,
	-2, 0,
	-1, 2030,
	598, 1831,
	-2, 1819,
	-1, 2062,
	187, 2629,
	600, 2629,
	603, 2629,
	-2, 0,
	-1, 2104,
	1, 695,
	601, 695,
	-2, 1451,
	-1, 2244,
	222, 259,
	-2, 2331,
	-1, 2245,
	222, 260,
	-2, 312,
	-1, 2355,
	1, 880,
	597, 880,
	599, 880,
	601, 880,
	-2, 0,
	-1, 2356,
	1, 924,
	597, 924,
	599, 924,
	601, 924,
	-2, 0,
	-1, 2357,
	1, 932,
	597, 932,
	599, 932,
	601, 932,
	-2, 0,
	-1, 2358,
	1, 977,
	597, 977,
	599, 977,
	601, 977,
	-2, 0,
	-1, 2399,
	1, 905,
	597, 905,
	599, 905,
	601, 905,
	-2, 0,
	-1, 2417,
	1, 960,
	597, 960,
	599, 960,
	601, 960,
	-2, 0,
	-1, 2462,
	437, 1629,
	438, 1629,
	-2, 1864,
	-1, 2493,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1884,
	-1, 2494,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1885,
	-1, 2495,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1886,
	-1, 2496,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1887,
	-1, 2497,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1888,
	-1, 2498,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1889,
	-1, 2499,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1890,
	-1, 2500,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1891,
	-1, 2512,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1903,
	-1, 2513,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1904,
	-1, 2514,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1905,
	-1, 2518,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1912,
	-1, 2524,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1916,
	-1, 2526,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1924,
	-1, 2527,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1925,
	-1, 2528,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1926,
	-1, 2529,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1927,
	-1, 2703,
	5, 2335,
	187, 2194,
	598, 2332,
	-2, 2323,
	-1, 2704,
	187, 2195,
	-2, 2701,
	-1, 2705,
	187, 2196,
	-2, 2521,
	-1, 2706,
	187, 2197,
	-2, 2405,
	-1, 2707,
	187, 2198,
	-2, 2461,
	-1, 2708,
	187, 2199,
	-2, 2506,
	-1, 2709,
	187, 2200,
	-2, 2627,
	-1, 2710,
	187, 2201,
	-2, 1991,
	-1, 2781,
	1, 1691,
	2, 1691,
	106, 1691,
	151, 1691,
	170, 1691,
	183, 1691,
	188, 1691,
	206, 1691,
	209, 1691,
	237, 1691,
	241, 1691,
	252, 1691,
	270, 1691,
	274, 1691,
	313, 1691,
	341, 1691,
	345, 1691,
	351, 1691,
	427, 1691,
	431, 1691,
	533, 1691,
	544, 1691,
	560, 1691,
	561, 1691,
	562, 1691,
	572, 1691,
	597, 1691,
	599, 1691,
	601, 1691,
	603, 1691,
	-2, 1690,
	-1, 2794,
	598, 2304,
	-2, 2318,
	-1, 2796,
	1, 329,
	560, 329,
	-2, 1588,
	-1, 2825,
	598, 1830,
	-2, 1820,
	-1, 3010,
	1, 1299,
	422, 1263,
	460, 1263,
	575, 1263,
	597, 1299,
	599, 1299,
	601, 1299,
	-2, 1588,
	-1, 3196,
	346, 1632,
	-2, 2740,
	-1, 3197,
	346, 1633,
	-2, 2612,
	-1, 3201,
	437, 2260,
	438, 2260,
	-2, 1989,
	-1, 3202,
	437, 2264,
	438, 2264,
	-2, 1990,
	-1, 3203,
	437, 2261,
	438, 2261,
	-2, 1989,
	-1, 3204,
	437, 2265,
	438, 2265,
	-2, 1990,
	-1, 3217,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1914,
	-1, 3218,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1918,
	-1, 3224,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1920,
	-1, 3447,
	1, 690,
	597, 690,
	599, 690,
	601, 690,
	-2, 1451,
	-1, 3612,
	43, 2295,
	-2, 1047,
	-1, 3617,
	1, 1299,
	597, 1299,
	599, 1299,
	601, 1299,
	-2, 1588,
	-1, 3728,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1922,
	-1, 3735,
	246, 0,
	248, 0,
	332, 0,
	-2, 1941,
	-1, 3803,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1970,
	-1, 3804,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1971,
	-1, 3805,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1972,
	-1, 3809,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1976,
	-1, 3810,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1977,
	-1, 3811,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1978,
	-1, 3858,
	598, 2305,
	-2, 2319,
	-1, 4032,
	600, 2858,
	-2, 1514,
	-1, 4093,
	246, 0,
	248, 0,
	332, 0,
	-2, 1942,
	-1, 4096,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1945,
	-1, 4097,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1947,
	-1, 4195,
	600, 2320,
	-2, 1334,
	-1, 4349,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1946,
	-1, 4350,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1948,
	-1, 4361,
	246, 0,
	-2, 1981,
	-1, 4548,
	246, 0,
	-2, 1982,
	-1, 4748,
	50, 0,
	219, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 2704,
}

const sqlPrivate = 57344

const sqlLast = 134516

var sqlAct = [...]int{
	275, 4865, 3601, 2073, 4944, 3355, 4741, 4852, 3085, 4617,
	4740, 3098, 4806, 4589, 4410, 4747, 4729, 4581, 3600, 4758,
	4881, 4638, 2154, 4613, 4716, 4694, 2241, 4674, 4697, 1252,
	4760, 4392, 4470, 4477, 2931, 4759, 4455, 4501, 3768, 4746,
	4552, 4191, 4304, 2318, 4240, 4299, 4819, 4415, 4265, 4076,
	3055, 3720, 4370, 1333, 2472, 4338, 4016, 4024, 2330, 3634,
	1129, 1263, 4286, 4486, 4288, 2887, 4279, 3952, 1337, 3468,
	705, 3210, 4192, 4172, 2736, 816, 1326, 4515, 2086, 1083,
	1789, 2541, 3596, 4309, 3628, 3528, 3979, 2969, 2480, 3997,
	2162, 1649, 1982, 3074, 3471, 3585, 3981, 2017, 776, 1400,
	4366, 3675, 2291, 816, 3677, 3109, 3107, 2956, 3041, 3122,
	3578, 1074, 3361, 3378, 3399, 4132, 3577, 3338, 4075, 895,
	3861, 3370, 1328, 3071, 3117, 716, 2473, 3069, 3100, 3106,
	3359, 1692, 2328, 1492, 3086, 1951, 891, 4, 2230, 2173,
	2228, 2189, 3017, 4853, 3490, 2889, 2774, 2477, 2773, 1082,
	182, 3829, 1140, 4553, 3337, 1888, 1858, 2619, 3194, 2554,
	1499, 1927, 3465, 886, 1587, 269, 3116, 811, 111, 2018,
	1243, 2776, 2986, 3045, 2229, 1331, 2212, 2205, 3056, 1381,
	3051, 2224, 772, 2621, 1133, 2930, 1183, 2142, 1777, 2146,
	2084, 1952, 3406, 2754, 2610, 1138, 2538, 2461, 1136, 2132,
	2442, 1319, 2444, 268, 3598, 1305, 749, 2808, 1624, 1647,
	3079, 2278, 817, 1590, 2912, 1971, 964, 2733, 813, 2807,
	4639, 692, 3110, 2875, 1368, 714, 818, 1922, 3973, 2613,
	2763, 1961, 1225, 1246, 1968, 1339, 2744, 2699, 1872, 2591,
	822, 2665, 1260, 1791, 182, 191, 1790, 2000, 757, 1712,
	2443, 1316, 1727, 2238, 1131, 2445, 2277, 768, 1524, 1615,
	2161, 2466, 2304, 1242, 4807, 1622, 4866, 192, 822, 1114,
	709, 3052, 1248, 1223, 44, 732, 43, 41, 825, 32,
	806, 706, 3247, 717, 30, 867, 1776, 28, 1796, 1535,
	985, 3843, 3241, 3844, 2075, 868, 4957, 3357, 1135, 2075,
	2753, 1528, 1258, 1718, 4947, 2075, 825, 2075, 3653, 4931,
	2075, 4930, 2075, 2753, 4920, 2753, 4901, 4787, 2250, 4899,
	4414, 912, 4838, 4414, 4795, 4784, 2250, 4782, 4796, 2753,
	4779, 2753, 4776, 4744, 4780, 4743, 4777, 2250, 4742, 2250,
	3643, 4737, 2096, 4736, 4727, 2096, 4725, 2096, 4414, 4722,
	4414, 1078, 4692, 4489, 1240, 1549, 4414, 4663, 2250, 4656,
	4382, 2816, 1079, 2753, 2567, 2568, 2569, 2586, 2587, 2588,
	4655, 4650, 4649, 4643, 2753, 4414, 4414, 2250, 4609, 4550,
	4153, 4532, 4256, 2816, 2589, 4061, 4529, 4526, 4479, 4433,
	2250, 4414, 4480, 2250, 4432, 4421, 4420, 4413, 2250, 2250,
	4414, 4414, 4385, 3644, 4377, 1226, 1226, 1068, 2250, 4351,
	4328, 4317, 4235, 2816, 2096, 3653, 2753, 1860, 4218, 4095,
	1377, 2250, 2753, 2816, 3415, 4040, 4034, 3995, 1059, 3670,
	3670, 3996, 1377, 1078, 3308, 3309, 2579, 3326, 3327, 3328,
	1255, 2836, 3853, 3653, 3851, 2575, 3854, 2093, 3852, 3836,
	1058, 2329, 3432, 2753, 3752, 94, 4091, 3748, 2250, 1658,
	1640, 2753, 3669, 3833, 3660, 3430, 3670, 3354, 3661, 3349,
	3348, 2753, 3299, 2753, 2753, 1073, 3300, 3297, 3289, 3287,
	3256, 3298, 3290, 2753, 1537, 3258, 3257, 2746, 3126, 2753,
	1804, 1805, 2096, 1837, 1838, 1839, 1848, 1849, 1850, 3096,
	3095, 2859, 2815, 2314, 2314, 2753, 2816, 2812, 1227, 3323,
	2805, 2093, 1841, 1835, 2753, 2798, 1229, 2250, 1230, 2250,
	1807, 2580, 2581, 2582, 2583, 1276, 2752, 3209, 2250, 1854,
	2753, 2574, 2753, 3308, 3309, 2313, 3326, 3327, 3328, 2314,
	1254, 4664, 4554, 1283, 4545, 4533, 1860, 239, 2250, 4489,
	2096, 3833, 2745, 4297, 4256, 1806, 2093, 1277, 1804, 1805,
	4219, 4061, 3661, 2959, 2166, 1826, 2874, 2111, 1548, 2074,
	2090, 3047, 2249, 2979, 1823, 2872, 1947, 3308, 3309, 1523,
	3935, 1835, 3723, 3697, 1969, 2217, 2790, 1694, 1807, 2789,
	2788, 3645, 2787, 2786, 1231, 241, 3308, 3309, 1228, 3326,
	3327, 3328, 1067, 2753, 3314, 2584, 2585, 1066, 3323, 1065,
	3646, 4148, 1277, 239, 1860, 1064, 1063, 1062, 4090, 1061,
	1057, 3308, 3309, 1806, 1112, 3168, 1897, 1056, 1055, 1054,
	1053, 1052, 1051, 1826, 1804, 1805, 1050, 1049, 2577, 1048,
	1537, 1537, 1823, 1047, 240, 1046, 3308, 3309, 1045, 1044,
	1829, 1830, 1831, 1832, 2076, 1043, 1042, 233, 1041, 2076,
	1812, 241, 1040, 1022, 1807, 2076, 234, 2076, 962, 3330,
	2076, 3323, 2076, 961, 960, 959, 958, 957, 956, 955,
	954, 953, 952, 1528, 951, 3246, 950, 949, 948, 947,
	946, 945, 944, 193, 943, 942, 3323, 4089, 1845, 1806,
	941, 1855, 940, 3314, 939, 938, 937, 936, 1834, 1836,
	240, 3324, 935, 934, 3308, 3309, 933, 932, 1829, 1830,
	1831, 1832, 931, 930, 929, 1851, 928, 1852, 1812, 927,
	916, 915, 914, 910, 1821, 1822, 909, 902, 901, 900,
	885, 884, 841, 840, 3331, 239, 839, 3314, 838, 829,
	1342, 1138, 1843, 239, 828, 827, 3308, 3309, 153, 193,
	826, 792, 2294, 783, 782, 781, 3314, 1827, 3330, 763,
	263, 1543, 262, 261, 260, 259, 1834, 1836, 1138, 1138,
	1138, 258, 257, 256, 1857, 255, 254, 253, 252, 2578,
	251, 3314, 2616, 241, 250, 249, 1403, 248, 247, 246,
	1403, 241, 1821, 1822, 1812, 239, 245, 1342, 244, 243,
	3324, 1853, 242, 4311, 1536, 2648, 3314, 4107, 2093, 3643,
	3875, 3847, 3671, 3402, 3269, 3252, 3243, 3150, 2391, 1842,
	1372, 3330, 1138, 2250, 1138, 1827, 1138, 3064, 2846, 3027,
	1857, 1930, 240, 1342, 2074, 2820, 2093, 1859, 1929, 2090,
	240, 2437, 2795, 241, 3324, 233, 1529, 1385, 1386, 1387,
	1720, 1662, 3325, 233, 234, 1972, 1256, 1930, 1277, 1342,
	2780, 2140, 234, 3324, 1929, 1933, 2646, 3352, 1507, 1502,
	3082, 2093, 2617, 1857, 3314, 2095, 2632, 2630, 1995, 1342,
	1899, 193, 1531, 1803, 4769, 1833, 1342, 2321, 3324, 193,
	4536, 1928, 240, 2745, 1389, 1138, 1262, 1138, 1857, 239,
	239, 4768, 1342, 1527, 4765, 233, 4745, 3353, 1828, 4724,
	1138, 4624, 1138, 3324, 234, 4542, 3314, 1857, 4365, 2564,
	2565, 2566, 2590, 2576, 2570, 1644, 2572, 2573, 2571, 2558,
	2559, 2560, 2561, 2562, 2563, 1846, 1857, 1596, 1599, 1310,
	1313, 193, 4951, 1364, 4318, 1323, 4405, 241, 241, 1277,
	1366, 3325, 1890, 1833, 2618, 1396, 2615, 1489, 1494, 4534,
	1342, 1857, 4296, 1350, 3308, 3309, 1859, 4159, 1081, 4130,
	4557, 1512, 2320, 4129, 1542, 822, 1828, 4123, 4122, 4121,
	1138, 3324, 4114, 1138, 4113, 1537, 1857, 4111, 4106, 4103,
	1497, 4102, 3320, 3321, 3322, 3325, 240, 240, 3994, 3319,
	3317, 3318, 3310, 3311, 3312, 3313, 3315, 3316, 4313, 233,
	233, 1804, 1805, 825, 3325, 1358, 4000, 3879, 234, 234,
	3878, 3877, 1526, 3324, 3857, 3824, 3823, 3308, 3309, 182,
	182, 3822, 1585, 1663, 1859, 3744, 1525, 3739, 1844, 3325,
	3397, 1807, 3345, 1627, 1629, 193, 193, 1079, 1818, 1819,
	1825, 1847, 1824, 1820, 1857, 1817, 1815, 1816, 1808, 1809,
	1810, 1811, 1813, 1814, 3325, 1602, 3933, 3336, 4117, 3307,
	3304, 3303, 4116, 3301, 3066, 1372, 1806, 3296, 1372, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 3295, 3294, 3291,
	3288, 3320, 3321, 3322, 3268, 3251, 1857, 3244, 3319, 3317,
	3318, 3310, 3311, 3312, 3313, 3315, 3316, 1892, 1890, 3242,
	2620, 1891, 1138, 1889, 1625, 3097, 1736, 2781, 1138, 2603,
	1824, 1820, 1803, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 3325, 1239, 3314, 2257, 4891, 1618, 2255, 1802,
	4890, 4001, 3319, 3317, 3318, 3310, 3311, 3312, 3313, 3315,
	3316, 4854, 4805, 4803, 3320, 3321, 3322, 1264, 3770, 4684,
	1781, 3319, 3317, 3318, 3310, 3311, 3312, 3313, 3315, 3316,
	4616, 4600, 1668, 3422, 3325, 3350, 4597, 4596, 4595, 4575,
	4574, 1812, 4572, 4556, 1775, 1639, 3319, 3317, 3318, 3310,
	3311, 3312, 3313, 3315, 3316, 239, 4555, 3314, 2818, 4530,
	1657, 4514, 1879, 4513, 1810, 1811, 1813, 1814, 2544, 1898,
	4499, 239, 3317, 3318, 3310, 3311, 3312, 3313, 3315, 3316,
	4496, 4495, 4490, 1138, 1138, 1138, 2614, 4429, 4400, 1138,
	4363, 4346, 4345, 4325, 4324, 4282, 1260, 4257, 1260, 4147,
	4128, 4062, 4054, 241, 4051, 3921, 3920, 3903, 3902, 3900,
	3839, 3827, 1685, 1403, 239, 3734, 1877, 2829, 3672, 241,
	3654, 4312, 3620, 1138, 3394, 3545, 816, 1721, 239, 2550,
	3503, 4001, 2035, 816, 3470, 3424, 1782, 3065, 1949, 3273,
	1079, 3318, 3310, 3311, 3312, 3313, 3315, 3316, 3272, 3267,
	3233, 1616, 240, 3040, 1936, 1935, 1258, 1934, 1258, 1931,
	1923, 239, 241, 1958, 2080, 233, 1778, 2082, 240, 1921,
	2827, 2826, 2295, 2087, 234, 1786, 241, 2089, 1059, 2004,
	1785, 233, 2092, 2792, 3310, 3311, 3312, 3313, 3315, 3316,
	234, 1780, 2785, 4221, 2751, 2628, 1876, 2008, 2005, 1932,
	1058, 3081, 1994, 1950, 1804, 1805, 1945, 1944, 1138, 241,
	1979, 240, 1943, 1342, 1942, 1799, 1800, 193, 1941, 1955,
	1956, 1857, 1940, 1939, 233, 240, 1938, 1937, 1918, 1917,
	1916, 1915, 1138, 234, 1807, 239, 1914, 1857, 233, 1913,
	1403, 1912, 1911, 2322, 1910, 1909, 1226, 234, 1908, 182,
	1907, 1906, 1905, 2156, 1904, 1903, 1924, 1925, 240, 1892,
	193, 4558, 2647, 1878, 1875, 2129, 1079, 1870, 1357, 1806,
	1372, 233, 1281, 239, 193, 1272, 4285, 4155, 239, 4099,
	234, 3874, 2102, 241, 2029, 3850, 3842, 3255, 2783, 4383,
	4157, 822, 3873, 1891, 1255, 1621, 1255, 3420, 822, 1873,
	4888, 3308, 3309, 2003, 2101, 3649, 1990, 193, 4880, 2131,
	2957, 2138, 1382, 1384, 1980, 4761, 4487, 1999, 2032, 4598,
	4537, 241, 4491, 2645, 4482, 4481, 241, 4316, 1970, 825,
	4259, 1977, 240, 2631, 2629, 3506, 825, 4258, 4220, 4150,
	4066, 4065, 4064, 4063, 2009, 233, 2131, 3845, 1948, 2131,
	3674, 2058, 3673, 3656, 234, 3655, 4834, 2123, 2122, 2214,
	4832, 2131, 2133, 3721, 1377, 2078, 1972, 1773, 1974, 3947,
	240, 1377, 1342, 1342, 1989, 240, 1988, 1987, 1383, 1985,
	2200, 193, 1403, 233, 1984, 1378, 2023, 1983, 233, 4535,
	3537, 3293, 234, 4004, 1254, 3292, 1254, 234, 2015, 2117,
	2104, 2935, 4404, 1377, 3312, 3313, 3315, 3316, 3215, 1930,
	2917, 1380, 3918, 1038, 3665, 3472, 1929, 1684, 2984, 193,
	3603, 2166, 3602, 4817, 193, 1737, 1901, 2319, 1693, 4478,
	4791, 4772, 4757, 2231, 2347, 3586, 3123, 1694, 2196, 1913,
	2204, 2232, 1913, 2209, 2616, 4008, 3991, 3949, 2108, 1808,
	1809, 1810, 1811, 1813, 1814, 2100, 3944, 3926, 1039, 3694,
	3445, 2326, 4367, 2242, 2247, 3310, 3311, 3312, 3313, 3315,
	3316, 3357, 3772, 2611, 4766, 2825, 1946, 1926, 3261, 1342,
	2126, 1342, 3594, 1342, 2107, 2288, 4206, 2191, 4424, 2965,
	2914, 1595, 2134, 4396, 4203, 1621, 1519, 1353, 1309, 4781,
	2124, 1342, 1342, 1374, 4778, 3639, 2976, 2973, 2971, 3895,
	4590, 4300, 4691, 4568, 1342, 3475, 1096, 3913, 3104, 3078,
	3569, 2172, 4835, 3449, 1672, 4427, 1342, 4870, 1342, 1342,
	1342, 4836, 4423, 2199, 2617, 4402, 3715, 4451, 4208, 822,
	2236, 4767, 2234, 2235, 2891, 1620, 1562, 3962, 2860, 2964,
	2913, 1570, 816, 2166, 2332, 2405, 4946, 1036, 1034, 3149,
	3019, 1032, 2197, 1030, 1027, 4604, 2403, 1521, 2194, 3451,
	2346, 4444, 4435, 2284, 1138, 4249, 2452, 825, 4248, 3960,
	3959, 3951, 2878, 2289, 1379, 3941, 1526, 3940, 3938, 1238,
	3937, 2301, 3925, 3890, 3889, 2128, 3575, 2876, 3574, 3414,
	1525, 2105, 3266, 880, 3265, 2324, 2192, 3264, 3263, 1138,
	1735, 2878, 2193, 2208, 2190, 3961, 2618, 2819, 2615, 2118,
	3219, 2982, 3421, 1018, 3898, 2981, 2876, 3075, 2436, 2978,
	2351, 2967, 2248, 2127, 2951, 2450, 2950, 2945, 1571, 2309,
	2944, 1384, 1375, 1138, 2943, 1138, 2922, 1079, 2921, 1079,
	1734, 1376, 1138, 2882, 2806, 2035, 2035, 1403, 2894, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 2270, 1138, 4202, 1138, 1138,
	1138, 1138, 2298, 2311, 2269, 1670, 1383, 1367, 881, 1665,
	4425, 2333, 4204, 1384, 1625, 4397, 1625, 822, 2339, 2303,
	1256, 2454, 1256, 1618, 1138, 2306, 2307, 2306, 1138, 1138,
	1378, 2525, 2441, 1779, 4871, 2661, 1138, 755, 755, 1358,
	1138, 3505, 1138, 1138, 2315, 1620, 2316, 3472, 2660, 1716,
	1403, 1733, 3535, 2482, 4344, 825, 1138, 1138, 1138, 1138,
	2833, 2810, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	2376, 2338, 2620, 2232, 2319, 2163, 2417, 1077, 1383, 2915,
	2915, 3695, 4222, 2451, 2268, 2355, 4460, 1814, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 2452, 1608, 2366,
	1607, 1138, 2592, 2593, 2429, 1566, 1295, 2029, 2029, 2159,
	1606, 4165, 1605, 1260, 2356, 3174, 2592, 2608, 2919, 2426,
	1403, 1024, 2434, 2188, 2478, 2479, 1377, 1666, 2363, 1260,
	1960, 2416, 2399, 2201, 1012, 704, 1378, 2343, 2164, 2165,
	1522, 2032, 2032, 2656, 2465, 1138, 1403, 4875, 1374, 1771,
	2203, 1579, 2540, 2867, 2202, 1715, 2450, 2449, 1072, 2893,
	3129, 699, 2702, 2702, 2716, 2797, 2592, 1076, 2160, 2737,
	2739, 4583, 1584, 1258, 4164, 2743, 2540, 2357, 2438, 3192,
	2198, 2446, 2440, 2556, 3316, 2200, 2453, 2439, 2614, 1258,
	2932, 2933, 1059, 2611, 1079, 1059, 1059, 2607, 2174, 1746,
	2939, 1716, 2718, 3163, 1079, 2905, 2409, 2768, 1079, 2023,
	2023, 1686, 1964, 3536, 2469, 2428, 4903, 2470, 2471, 2793,
	1682, 2178, 1990, 2195, 4205, 2760, 3177, 2932, 2933, 1379,
	2932, 2933, 2841, 1772, 2397, 2904, 4835, 2448, 2845, 2364,
	2308, 1979, 2135, 2136, 4876, 3704, 2522, 1342, 1342, 790,
	1013, 3207, 2856, 3703, 1374, 2202, 3165, 2658, 1784, 2360,
	2552, 1967, 2659, 754, 754, 2662, 1713, 2663, 2664, 1226,
	2536, 1998, 3448, 4247, 2354, 3910, 1962, 1078, 2175, 2782,
	2975, 2605, 2548, 2014, 2809, 1694, 2620, 1375, 1694, 2546,
	2063, 1403, 2065, 4585, 1965, 3761, 1376, 1079, 1750, 2534,
	1356, 2855, 39, 2813, 2451, 2759, 2892, 1715, 883, 882,
	1732, 1255, 2974, 2972, 2970, 4763, 182, 2849, 925, 1372,
	3922, 2166, 3939, 4343, 3936, 2035, 2711, 1255, 2698, 1714,
	2741, 2728, 4461, 2832, 2767, 1379, 2772, 1963, 2199, 2778,
	2779, 3882, 2749, 2750, 4459, 2761, 2765, 2766, 3869, 2877,
	4457, 1591, 4200, 2857, 4878, 2821, 3581, 4187, 2098, 3176,
	788, 1932, 1977, 3230, 1729, 4884, 1671, 2852, 1403, 3372,
	2881, 3573, 2404, 756, 756, 1028, 1028, 273, 2449, 1028,
	3533, 1029, 1028, 2402, 1342, 3206, 2179, 2918, 2425, 2977,
	3173, 4180, 3228, 1375, 3908, 4173, 2942, 4456, 878, 3970,
	877, 2920, 1376, 1589, 2883, 1138, 1138, 3758, 1138, 2881,
	3522, 1254, 4171, 2828, 2863, 2520, 1268, 4849, 2523, 2851,
	4187, 4175, 1924, 1925, 2435, 4458, 4857, 1254, 4856, 2831,
	2804, 2858, 816, 2840, 1342, 2865, 4906, 2843, 2880, 2844,
	2848, 2530, 1014, 2835, 3698, 2968, 4181, 3514, 4524, 2850,
	4824, 2620, 2180, 2181, 4180, 1966, 3971, 4660, 1265, 1075,
	4081, 2531, 2924, 2254, 2253, 1342, 2532, 3523, 2940, 2519,
	2537, 1377, 2866, 2147, 3199, 3200, 2176, 2029, 2148, 2908,
	1342, 3014, 1342, 2186, 2427, 2861, 1565, 1294, 4174, 3759,
	4764, 4080, 2923, 2864, 2925, 3175, 3582, 4934, 1342, 3969,
	3637, 4516, 1270, 3062, 3515, 2941, 700, 1667, 2362, 4181,
	3521, 2032, 3636, 3579, 4517, 2934, 2936, 2937, 2938, 2177,
	2886, 2983, 2896, 2899, 3089, 3022, 3011, 3012, 2949, 3171,
	3024, 3130, 3131, 1568, 3225, 1070, 3923, 1012, 3015, 3118,
	2187, 3058, 3137, 3138, 3139, 1747, 1138, 3513, 4518, 4877,
	2955, 2075, 4670, 4388, 1669, 4198, 1012, 3459, 2958, 3226,
	4584, 1072, 1015, 3231, 2227, 822, 2948, 2953, 3371, 1269,
	4201, 3124, 1100, 2963, 2169, 2879, 789, 1377, 2947, 2023,
	1072, 3013, 3636, 2185, 2215, 2946, 2147, 701, 4591, 1016,
	3103, 2148, 2149, 3147, 4762, 2215, 3020, 822, 3121, 4731,
	2218, 4732, 4611, 825, 1591, 2225, 3221, 1071, 1138, 2153,
	1960, 4520, 1526, 182, 1138, 1138, 3127, 4882, 3120, 1025,
	3450, 2226, 3132, 1744, 3133, 791, 3025, 3093, 3487, 787,
	2539, 2170, 3091, 3038, 4519, 825, 702, 3548, 703, 917,
	2182, 3048, 1017, 3144, 4658, 2620, 2796, 3153, 2211, 4176,
	3049, 753, 4521, 1013, 4177, 3179, 2533, 3181, 1695, 3155,
	1520, 3157, 2521, 3159, 4182, 918, 2535, 2398, 3084, 2108,
	1138, 1138, 1013, 3094, 2168, 2210, 1138, 3105, 1279, 1745,
	1681, 1683, 2150, 2155, 1748, 3486, 2203, 4659, 3169, 1138,
	1138, 3125, 1964, 4823, 4798, 1138, 1138, 3092, 3491, 926,
	1625, 1138, 3073, 4274, 4799, 2149, 4179, 1919, 2147, 2206,
	2201, 3909, 4176, 2148, 4199, 3146, 2183, 4177, 1783, 2219,
	2359, 2878, 2153, 4183, 3020, 4883, 3418, 4182, 2215, 4340,
	3156, 2547, 3158, 3154, 3160, 2353, 2897, 1256, 2164, 2165,
	3580, 1967, 2157, 4077, 4356, 4846, 1138, 1138, 1138, 3227,
	3493, 4714, 1138, 1256, 3984, 3222, 1962, 4702, 3187, 3229,
	1355, 4885, 1138, 3982, 3460, 2151, 4232, 1964, 2207, 4179,
	3198, 722, 1869, 3271, 1965, 4907, 2764, 2777, 1749, 1138,
	1078, 3182, 4289, 3774, 3184, 1266, 4183, 2602, 3984, 4894,
	3188, 267, 903, 3189, 4284, 2150, 2155, 3982, 1794, 4071,
	4892, 4252, 4290, 3870, 1284, 3193, 4082, 2465, 3717, 3497,
	3190, 830, 4618, 2157, 3492, 4707, 1967, 1963, 908, 1700,
	4637, 3249, 3250, 4498, 3208, 4251, 3253, 2149, 4250, 4022,
	3624, 2762, 4078, 2276, 1957, 1282, 1275, 837, 1267, 691,
	3999, 3986, 4126, 3813, 2153, 1014, 1793, 1793, 2954, 1965,
	4912, 2468, 2167, 4178, 2119, 3245, 4422, 4935, 4507, 1788,
	4567, 3407, 4023, 1079, 1014, 2116, 3495, 4339, 3955, 3220,
	3942, 1138, 1138, 1138, 1138, 3986, 3985, 3894, 2151, 3466,
	3625, 1138, 1138, 1138, 3616, 3462, 1138, 919, 920, 3063,
	3057, 2458, 4188, 4189, 4822, 3042, 1138, 1260, 1403, 3863,
	2302, 4522, 1138, 2296, 1138, 3364, 3365, 4523, 2290, 3496,
	3985, 2076, 3687, 1260, 2282, 2262, 4178, 2150, 2155, 2261,
	3757, 4275, 2145, 1559, 4619, 3685, 2157, 3886, 1286, 2926,
	762, 1403, 3828, 4675, 3678, 1966, 2222, 3718, 1882, 2755,
	2881, 2114, 1887, 1260, 4640, 1793, 1403, 4797, 4025, 3039,
	1792, 1792, 2410, 3864, 3260, 4188, 4189, 1258, 2112, 4305,
	3347, 1297, 4476, 4474, 4399, 1015, 3980, 2035, 4083, 3478,
	3474, 1403, 3400, 1258, 2758, 3473, 3366, 3213, 3191, 2143,
	3865, 2344, 3862, 2115, 1015, 3841, 3369, 1342, 3387, 3368,
	1069, 2336, 1016, 2220, 3435, 2327, 2152, 3437, 3438, 2259,
	2151, 1717, 3441, 1258, 3442, 4341, 3443, 1723, 1722, 1138,
	1966, 1016, 3376, 2803, 4287, 2757, 2802, 1794, 1794, 2801,
	2756, 1614, 2144, 1138, 2800, 3374, 2799, 3990, 3396, 2459,
	2898, 2156, 3680, 1342, 3814, 3046, 2221, 1600, 2035, 1612,
	904, 905, 4127, 3815, 924, 1017, 3983, 3679, 2157, 1792,
	4578, 1601, 4266, 4084, 1349, 3401, 1138, 1076, 4911, 831,
	832, 4411, 4471, 2902, 1017, 2156, 3375, 3901, 3666, 1372,
	2300, 3385, 1342, 4843, 3589, 3439, 3891, 3388, 3389, 4322,
	3983, 3393, 921, 922, 4615, 3405, 4386, 3358, 3446, 3018,
	3431, 3455, 3456, 3416, 1342, 1255, 1342, 3386, 3342, 3343,
	3344, 3454, 3452, 2927, 2928, 3373, 1869, 3128, 3023, 2152,
	3021, 1255, 3476, 2331, 2231, 3480, 2214, 3477, 1403, 2029,
	3482, 4620, 1675, 3484, 3887, 2214, 4407, 4681, 3549, 1342,
	4394, 4579, 4406, 1342, 4688, 1534, 3419, 1541, 4133, 1547,
	2004, 1255, 3463, 3409, 3410, 3411, 3412, 3391, 3508, 3392,
	4672, 4321, 3830, 2032, 2627, 1100, 1100, 1100, 1342, 4847,
	3425, 3426, 1701, 3427, 1767, 4709, 4412, 3433, 2421, 1769,
	1766, 1764, 1342, 1487, 1342, 3512, 4395, 1487, 1403, 4848,
	4845, 3866, 2401, 3531, 1741, 816, 1342, 3551, 3440, 3553,
	2029, 3408, 3557, 4783, 4607, 1254, 3563, 1342, 3436, 3447,
	1739, 4599, 834, 833, 4362, 3546, 4463, 3467, 1638, 1711,
	1643, 1254, 1342, 3461, 3453, 4682, 3538, 1709, 761, 4580,
	4125, 2023, 2108, 1656, 2032, 1661, 1707, 3989, 3526, 1260,
	1705, 2152, 1703, 3632, 1697, 906, 907, 1691, 3892, 3608,
	1689, 1254, 3339, 3733, 1610, 3380, 3494, 3504, 3692, 3691,
	3429, 3302, 3511, 3232, 1342, 1342, 3599, 3686, 3681, 3682,
	3683, 3684, 1613, 3584, 3517, 3587, 835, 836, 2108, 3520,
	3615, 3518, 3043, 2966, 3525, 3519, 3527, 3458, 2916, 1342,
	1611, 2830, 2430, 3044, 1997, 923, 3539, 1993, 1770, 1258,
	1719, 3652, 2023, 1651, 3641, 3623, 3547, 3118, 3340, 3713,
	3712, 3571, 1788, 3534, 3167, 3166, 3118, 2108, 3566, 3559,
	3135, 3560, 2368, 3565, 2240, 2447, 1728, 2949, 3510, 2371,
	2281, 2260, 2064, 3687, 1403, 1902, 1664, 1403, 1583, 2108,
	3696, 2108, 2626, 3630, 4756, 3572, 3685, 3576, 3550, 4233,
	3524, 3381, 3946, 3945, 1026, 3678, 2924, 4234, 4217, 2423,
	822, 3626, 3591, 2422, 1768, 1765, 1763, 4671, 4303, 3633,
	1138, 3570, 4239, 2400, 2108, 3613, 1138, 1138, 2108, 1740,
	1138, 1138, 1138, 3611, 1138, 3558, 3612, 4230, 3151, 3564,
	3152, 4169, 4298, 1138, 2035, 1738, 1087, 3689, 825, 3668,
	3664, 3379, 1138, 4021, 1710, 182, 182, 1138, 3638, 4012,
	1079, 3958, 1708, 1403, 3943, 3640, 3711, 3647, 3688, 3650,
	3651, 1706, 1138, 3916, 3914, 1704, 3893, 1702, 3619, 1696,
	1403, 3614, 1690, 3662, 3384, 1688, 3710, 1255, 3631, 1609,
	2035, 2035, 1138, 1138, 3604, 1138, 1138, 1138, 3700, 3076,
	3701, 3068, 3702, 3680, 3061, 3050, 3036, 3035, 3016, 2847,
	2842, 2258, 2256, 1138, 2233, 2216, 2184, 1138, 3679, 2035,
	2035, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	1138, 3736, 1138, 3786, 3707, 3787, 3719, 2171, 3690, 2158,
	1138, 1138, 2035, 2367, 2097, 2239, 2094, 1138, 2091, 2088,
	2083, 2081, 3716, 2077, 2068, 1031, 1033, 1035, 1138, 4820,
	3746, 3747, 3754, 3629, 1235, 4811, 1797, 2007, 4289, 1260,
	1260, 1256, 3211, 1138, 4836, 2120, 3708, 1254, 3561, 4577,
	2433, 3382, 3383, 2225, 3185, 3714, 2029, 1256, 4290, 1327,
	1236, 3183, 3009, 4719, 4327, 4320, 4319, 4246, 3676, 4161,
	3743, 3741, 1986, 1403, 3119, 2139, 1564, 4509, 2903, 2246,
	3859, 4502, 4033, 3753, 2166, 1761, 1762, 1256, 2358, 2878,
	2032, 3825, 3760, 3762, 3763, 3769, 2431, 3776, 2395, 1258,
	1258, 2878, 2029, 2029, 2876, 1318, 2390, 4718, 2299, 1495,
	3884, 1317, 1506, 1327, 3885, 2365, 2900, 4209, 3846, 2478,
	3777, 3764, 1138, 3784, 4241, 3817, 3791, 3785, 1687, 3254,
	3789, 2029, 2029, 4544, 1804, 1805, 2032, 2032, 3212, 4409,
	2906, 1138, 2432, 4134, 3783, 4112, 3489, 1798, 2478, 3792,
	2907, 3837, 3838, 2929, 3915, 1801, 3917, 3826, 2023, 1351,
	1487, 1285, 3832, 3818, 2029, 2032, 2032, 3562, 4839, 4830,
	182, 1237, 2907, 3954, 1138, 1138, 264, 1804, 1805, 4792,
	3034, 3821, 1327, 1327, 4009, 2283, 3834, 3835, 3686, 3681,
	3682, 3683, 3684, 1318, 1362, 3953, 1318, 2973, 2032, 1806,
	2971, 2980, 2962, 2960, 2023, 2023, 2549, 1807, 3848, 2909,
	4680, 3849, 2911, 4665, 4631, 2961, 1138, 4625, 4576, 2771,
	4493, 4469, 1882, 688, 4387, 2910, 4019, 3957, 4011, 3998,
	3856, 3618, 3083, 2023, 2023, 2742, 2103, 1255, 1255, 2016,
	1342, 4879, 1806, 4408, 2952, 1342, 4711, 1518, 3927, 1517,
	3417, 4712, 4910, 3308, 3309, 1804, 1805, 4711, 2870, 2871,
	4627, 1674, 4712, 2868, 2869, 1528, 2023, 1673, 3932, 3934,
	2035, 4851, 4104, 2622, 3931, 3872, 2870, 2724, 3876, 1100,
	2868, 2657, 1743, 4018, 3897, 1742, 4494, 1487, 4445, 4243,
	3950, 4238, 4237, 4100, 3948, 3871, 3765, 3555, 3956, 3552,
	1896, 1342, 1895, 4896, 3919, 4858, 4669, 1138, 4668, 4667,
	3924, 4606, 4605, 4560, 4472, 1260, 1138, 4439, 4035, 4384,
	3972, 3974, 4381, 4379, 4277, 4263, 1342, 1342, 1342, 4207,
	2924, 4156, 4057, 3413, 4005, 4039, 4042, 1254, 1254, 3993,
	3912, 3904, 3622, 1342, 1342, 1342, 3621, 3483, 3968, 3434,
	3172, 3164, 3143, 3142, 3988, 3141, 3140, 3428, 3067, 3037,
	2901, 2838, 1342, 2834, 2823, 4030, 2822, 3992, 1403, 4027,
	4006, 2811, 4046, 1256, 3976, 1258, 2551, 2424, 2396, 3089,
	2389, 2388, 2387, 2386, 3965, 2385, 2297, 3978, 2271, 2267,
	3987, 2266, 4015, 2265, 1403, 3977, 4058, 1138, 1138, 2264,
	2263, 2071, 2070, 1138, 1138, 2035, 3118, 4026, 1138, 1138,
	2069, 1138, 2067, 2006, 4029, 1760, 1138, 1759, 4010, 1698,
	1578, 1577, 2029, 1576, 1575, 3967, 1574, 1138, 4013, 1487,
	1573, 1572, 1567, 1563, 1561, 1560, 1511, 1510, 1509, 3467,
	4028, 1394, 4031, 1138, 1393, 4037, 1392, 1391, 4036, 4047,
	4048, 1390, 4041, 4069, 1354, 1304, 2032, 1303, 1302, 4055,
	4053, 4049, 1301, 4052, 4085, 4056, 1300, 1299, 4067, 1298,
	1296, 1291, 1290, 1289, 1288, 1287, 892, 8, 1218, 2110,
	2108, 4086, 1037, 1023, 4582, 4098, 4186, 4185, 4184, 2420,
	93, 3966, 1569, 4068, 854, 87, 2223, 3911, 4786, 991,
	4079, 4708, 4094, 4610, 1260, 1552, 862, 4074, 4690, 4007,
	3485, 2985, 1260, 1255, 2370, 1699, 1403, 2372, 1403, 3395,
	2784, 4657, 4108, 3270, 2023, 1260, 4551, 4355, 2625, 1900,
	3351, 89, 1122, 1168, 4273, 4272, 1342, 1342, 4170, 3896,
	3108, 4270, 4269, 2020, 2022, 2392, 1403, 3583, 1086, 1406,
	4730, 2121, 1128, 2137, 3400, 2130, 2824, 2029, 2701, 1145,
	1142, 2024, 2026, 1144, 1258, 1143, 2025, 1920, 1141, 2019,
	4017, 1260, 1258, 1260, 3087, 3648, 1619, 4124, 1617, 993,
	2125, 1506, 2545, 2609, 3259, 1258, 1893, 1102, 1124, 2606,
	1146, 2032, 1280, 1113, 1101, 3377, 1342, 3356, 3635, 3855,
	4193, 2457, 4193, 4142, 872, 3305, 1403, 2612, 1342, 1271,
	2725, 1342, 2717, 1254, 4196, 4145, 4135, 2713, 3444, 3077,
	4136, 4137, 1403, 1774, 4140, 4162, 4163, 4141, 1506, 4369,
	4138, 1258, 1871, 1258, 4131, 3088, 271, 271, 271, 4146,
	694, 695, 1388, 710, 694, 710, 720, 182, 4166, 760,
	4210, 4149, 1106, 780, 2543, 1884, 4211, 3237, 786, 2023,
	1342, 1342, 4154, 1256, 1256, 271, 2467, 3642, 3398, 2817,
	4168, 4715, 3773, 3170, 2275, 4160, 1234, 1233, 1278, 1232,
	1342, 4696, 4693, 2213, 4050, 3597, 899, 2113, 2862, 2555,
	3605, 1118, 1403, 271, 4242, 1505, 4244, 1342, 3706, 4231,
	2414, 3362, 1255, 3667, 1487, 1580, 785, 4416, 4245, 4236,
	1255, 4226, 1130, 4261, 1856, 3006, 3005, 4571, 1373, 1371,
	1370, 1369, 1260, 1255, 4264, 4867, 4933, 3907, 3906, 3905,
	238, 4292, 4267, 3205, 1342, 1342, 1342, 1342, 1795, 1787,
	235, 237, 236, 4278, 4255, 4229, 3860, 4295, 1403, 3404,
	4790, 4193, 4262, 4260, 3929, 3588, 23, 22, 4254, 21,
	1138, 1138, 1138, 4323, 4253, 4307, 116, 42, 20, 1255,
	155, 1255, 4268, 133, 152, 151, 4216, 125, 1403, 4301,
	4310, 4283, 1258, 1138, 150, 4294, 1138, 1138, 4225, 149,
	148, 4228, 4308, 147, 2724, 154, 1138, 1487, 146, 2035,
	145, 140, 1254, 4306, 1138, 1138, 144, 143, 142, 141,
	1254, 139, 137, 138, 132, 136, 135, 4315, 134, 1403,
	131, 1342, 130, 1254, 694, 694, 4332, 129, 4347, 1336,
	128, 2108, 271, 127, 4330, 126, 4329, 124, 156, 123,
	122, 4215, 121, 2108, 1403, 120, 2108, 4342, 4335, 119,
	118, 117, 1138, 773, 4224, 774, 61, 4227, 60, 115,
	4291, 113, 114, 19, 40, 1138, 14, 1487, 65, 1254,
	66, 1254, 4336, 18, 1138, 2724, 2724, 13, 35, 2035,
	92, 105, 104, 4352, 4430, 4431, 1514, 103, 1138, 36,
	101, 1138, 100, 1487, 34, 17, 4364, 16, 15, 98,
	97, 2287, 96, 33, 31, 1138, 4378, 4375, 4376, 4358,
	11, 4390, 1403, 4419, 4446, 2108, 4448, 9, 4449, 1342,
	1255, 37, 1554, 1981, 12, 5, 187, 186, 189, 1342,
	1342, 185, 4391, 188, 91, 184, 183, 90, 29, 1256,
	10, 3867, 3868, 4398, 179, 4485, 4389, 4003, 1592, 82,
	181, 2029, 180, 178, 177, 176, 3880, 3881, 4462, 3883,
	4450, 83, 80, 175, 86, 174, 81, 85, 84, 27,
	4438, 6, 4484, 64, 1403, 1633, 4475, 1342, 7, 4337,
	3693, 108, 109, 38, 4440, 2032, 4441, 78, 4436, 77,
	76, 1648, 75, 26, 63, 1260, 1260, 25, 173, 220,
	4447, 219, 218, 217, 216, 215, 214, 213, 208, 207,
	212, 210, 209, 4488, 4465, 1401, 1138, 1138, 3599, 1500,
	1254, 4467, 4454, 4464, 4193, 4193, 4492, 4473, 4468, 211,
	206, 2029, 4512, 1138, 2035, 4483, 4527, 4528, 1487, 4506,
	230, 229, 4531, 223, 222, 4504, 228, 227, 4428, 1676,
	226, 225, 224, 2023, 221, 1258, 1258, 2724, 2724, 2724,
	2724, 4500, 232, 4505, 205, 2032, 4310, 2415, 4511, 4510,
	4525, 1138, 204, 1138, 203, 1138, 3028, 201, 197, 3031,
	196, 3033, 200, 4503, 202, 1260, 199, 198, 195, 231,
	4540, 4541, 72, 4539, 171, 172, 4566, 71, 1138, 4453,
	1260, 170, 169, 168, 4442, 167, 166, 165, 164, 70,
	24, 2, 1, 0, 4193, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 4602, 0, 0, 3080, 1256, 4193,
	3080, 4549, 0, 2023, 4565, 0, 1256, 4543, 0, 0,
	0, 4594, 4562, 4593, 0, 1258, 0, 2156, 0, 1256,
	0, 0, 1138, 1138, 2108, 0, 0, 4586, 4587, 0,
	1258, 0, 1138, 4614, 0, 4452, 0, 1260, 0, 0,
	1260, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 4601, 1342, 1342, 2029, 0, 0, 0,
	0, 0, 0, 1255, 1255, 1256, 4193, 1256, 4603, 4193,
	0, 1342, 0, 0, 4608, 0, 0, 0, 4634, 0,
	4648, 4636, 0, 3161, 4488, 1138, 1138, 4621, 0, 4626,
	2032, 0, 4633, 4629, 4628, 1138, 0, 1258, 0, 0,
	1258, 4622, 4623, 4642, 0, 0, 0, 4646, 4647, 0,
	4645, 0, 4641, 0, 0, 0, 0, 0, 0, 4644,
	0, 0, 0, 0, 4651, 0, 0, 0, 0, 4652,
	0, 3234, 3235, 0, 0, 0, 0, 0, 1138, 1138,
	4662, 1138, 0, 0, 0, 0, 0, 4666, 0, 0,
	0, 0, 0, 1255, 4683, 0, 0, 1273, 2023, 4661,
	0, 0, 4687, 1254, 1254, 4678, 4679, 0, 1255, 0,
	0, 0, 4713, 0, 0, 0, 4686, 0, 4710, 4685,
	0, 0, 0, 0, 0, 4695, 4698, 0, 4704, 4735,
	1293, 0, 1327, 0, 0, 0, 0, 0, 0, 1138,
	1138, 1138, 271, 4739, 271, 271, 4738, 1322, 271, 1332,
	0, 0, 4699, 4720, 0, 4703, 1256, 0, 4700, 0,
	1352, 4726, 4717, 0, 0, 4734, 0, 0, 780, 0,
	0, 780, 1138, 0, 4770, 1255, 4139, 0, 1255, 4752,
	4753, 1327, 0, 0, 4755, 4754, 4775, 0, 4785, 0,
	4788, 0, 0, 1254, 0, 271, 0, 271, 271, 1322,
	0, 271, 271, 4793, 0, 0, 1332, 0, 1254, 0,
	0, 0, 1327, 1327, 0, 0, 0, 0, 0, 4802,
	271, 0, 1530, 4816, 4789, 4804, 0, 0, 4733, 1138,
	0, 4773, 0, 4800, 0, 4801, 0, 4815, 1550, 0,
	4197, 0, 0, 0, 4821, 1557, 0, 0, 4809, 0,
	0, 4814, 4810, 3332, 3333, 3334, 3335, 4212, 4213, 0,
	4812, 4813, 0, 0, 1582, 4837, 4818, 1332, 4829, 0,
	4831, 271, 271, 0, 1322, 1254, 4833, 0, 1254, 4827,
	4828, 4840, 0, 4842, 1260, 0, 1260, 2156, 4841, 4844,
	0, 4860, 1996, 0, 0, 780, 0, 271, 271, 4850,
	4861, 4855, 4874, 4614, 4859, 4872, 1495, 4695, 0, 1645,
	4698, 0, 4869, 4193, 0, 4193, 0, 4863, 4808, 1652,
	0, 0, 0, 4887, 899, 4862, 0, 4864, 4873, 0,
	0, 0, 0, 0, 0, 0, 0, 4886, 1506, 0,
	4889, 0, 4717, 0, 1258, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 4900, 4904, 0, 0, 4897, 0,
	1138, 1138, 0, 0, 4905, 0, 4902, 2724, 2724, 1138,
	0, 1138, 1138, 0, 4898, 4908, 0, 4917, 0, 0,
	0, 0, 0, 4924, 4914, 0, 4918, 4921, 4929, 4922,
	4928, 4326, 4927, 4923, 0, 4926, 0, 0, 0, 4925,
	0, 0, 271, 0, 0, 4937, 0, 0, 4941, 4936,
	4939, 4932, 0, 4942, 0, 4943, 0, 4945, 0, 2141,
	0, 4938, 0, 4948, 271, 0, 0, 0, 0, 1256,
	1256, 4950, 1138, 4953, 0, 4955, 0, 0, 4940, 4956,
	4952, 4958, 4959, 0, 4945, 4915, 4916, 0, 0, 3089,
	0, 4949, 0, 0, 0, 1487, 0, 2724, 2724, 2724,
	2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724,
	2724, 2724, 2724, 2724, 2724, 2724, 2724, 0, 2724, 0,
	0, 0, 1255, 0, 1255, 0, 1506, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 1487, 73, 0, 4954, 0, 0, 0,
	0, 2462, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 74, 2317, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 1256, 0, 0, 79, 0, 0,
	1336, 2334, 3498, 3499, 0, 3500, 3501, 3502, 1506, 0,
	1506, 0, 0, 2337, 0, 0, 0, 0, 0, 0,
	0, 2251, 0, 0, 0, 2345, 1100, 2348, 2349, 2350,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	1100, 0, 1254, 0, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 3540, 3541, 0, 3542, 3543, 3544, 0,
	0, 1256, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	0, 0, 0, 0, 0, 694, 0, 0, 0, 0,
	49, 0, 110, 0, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 271, 4508,
	0, 0, 271, 0, 0, 0, 0, 2719, 0, 0,
	0, 0, 0, 887, 0, 1530, 1322, 2001, 271, 0,
	271, 0, 0, 0, 0, 1487, 271, 1530, 710, 0,
	0, 0, 0, 271, 1530, 0, 1530, 0, 0, 0,
	73, 0, 890, 889, 0, 0, 95, 73, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	271, 0, 0, 0, 74, 0, 0, 271, 0, 4559,
	0, 0, 4561, 79, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 3729, 3730, 0, 780, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 0, 49, 0, 110, 0,
	0, 0, 0, 94, 107, 110, 0, 0, 0, 0,
	94, 107, 0, 0, 0, 0, 2481, 0, 0, 0,
	0, 0, 99, 3793, 3794, 3795, 3796, 3797, 3798, 3799,
	3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809,
	3810, 3811, 3812, 0, 3816, 0, 0, 0, 0, 0,
	0, 0, 4653, 0, 4654, 0, 0, 0, 0, 0,
	0, 1487, 95, 0, 1487, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 190, 102, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 1256, 0,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 271, 0, 0, 239, 0, 2623,
	73, 0, 0, 0, 0, 894, 0, 0, 0, 0,
	153, 4705, 0, 0, 4706, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 79, 0, 0, 0, 0, 1506, 1506,
	0, 0, 0, 0, 0, 241, 0, 1487, 0, 0,
	271, 0, 0, 0, 271, 0, 2854, 1336, 0, 0,
	271, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 157, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 271, 2814, 194, 0, 694, 0,
	271, 4771, 0, 0, 240, 2794, 0, 0, 99, 0,
	0, 0, 780, 0, 0, 99, 899, 233, 0, 0,
	0, 1506, 0, 0, 893, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 110, 0,
	0, 0, 0, 94, 107, 271, 2287, 1322, 271, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 190, 102, 0, 0, 106, 0, 271,
	190, 102, 0, 0, 106, 0, 0, 2369, 0, 0,
	0, 0, 271, 271, 0, 271, 0, 271, 0, 271,
	1487, 271, 0, 239, 0, 0, 0, 0, 0, 0,
	239, 894, 95, 3010, 0, 0, 153, 0, 894, 0,
	0, 0, 0, 153, 0, 0, 2406, 0, 0, 2407,
	0, 2408, 0, 0, 0, 4868, 0, 0, 0, 0,
	0, 0, 0, 271, 271, 271, 271, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 241, 0,
	2873, 0, 0, 0, 3195, 0, 0, 1804, 1805, 0,
	760, 0, 0, 0, 780, 4893, 0, 157, 0, 0,
	1327, 4895, 0, 0, 157, 0, 0, 0, 73, 0,
	1835, 0, 194, 0, 0, 0, 0, 1807, 0, 194,
	240, 0, 0, 0, 0, 74, 0, 240, 0, 0,
	0, 3308, 3309, 233, 3326, 3327, 3328, 0, 0, 0,
	233, 79, 234, 1860, 0, 0, 0, 3136, 0, 234,
	0, 0, 1806, 3738, 0, 0, 0, 0, 0, 0,
	0, 4014, 1826, 0, 0, 2719, 2719, 0, 0, 888,
	0, 1823, 0, 0, 0, 0, 193, 0, 99, 0,
	0, 88, 2724, 0, 0, 0, 0, 2557, 0, 0,
	0, 0, 0, 0, 0, 1804, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3323, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 893, 0, 0, 1807, 3732, 0, 0, 0,
	0, 0, 0, 190, 102, 4070, 110, 106, 2724, 0,
	0, 94, 107, 0, 0, 0, 0, 1829, 1830, 1831,
	1832, 1860, 0, 0, 0, 0, 0, 1812, 694, 0,
	1806, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1826, 894, 0, 271, 0, 0, 153, 0, 0, 1823,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 271,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 3314, 0, 271, 0, 1834, 1836, 0, 0, 0,
	0, 241, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 271, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 1822, 0, 3727, 0, 0, 157, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 2719, 2719, 2719,
	2719, 0, 194, 0, 0, 1829, 1830, 1831, 1832, 0,
	240, 0, 0, 0, 1827, 1812, 3330, 0, 0, 0,
	271, 1332, 0, 233, 0, 710, 0, 0, 0, 2837,
	0, 0, 234, 0, 0, 271, 0, 0, 271, 0,
	0, 0, 271, 0, 271, 0, 0, 0, 0, 1322,
	0, 271, 271, 0, 1332, 1332, 2853, 0, 3324, 1630,
	0, 271, 0, 1834, 1836, 0, 0, 0, 0, 2724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1821,
	1822, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2890, 2724,
	0, 0, 0, 1487, 0, 1487, 0, 0, 0, 271,
	0, 0, 1827, 3308, 3309, 0, 3326, 3327, 3328, 0,
	0, 1857, 271, 0, 2724, 0, 1804, 1805, 0, 0,
	0, 0, 1833, 1487, 0, 271, 0, 0, 0, 0,
	0, 190, 102, 0, 0, 106, 780, 0, 0, 1835,
	0, 0, 0, 0, 0, 1828, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 894,
	0, 4276, 1860, 0, 153, 1857, 0, 0, 3323, 0,
	0, 1806, 0, 1487, 4293, 0, 0, 0, 0, 3325,
	271, 3026, 0, 0, 0, 0, 0, 0, 4361, 1487,
	0, 0, 0, 1859, 0, 0, 0, 4314, 0, 241,
	0, 0, 0, 1327, 0, 0, 0, 1530, 0, 0,
	271, 0, 271, 0, 0, 0, 0, 0, 0, 271,
	1833, 0, 0, 0, 0, 157, 0, 0, 0, 3072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2890,
	194, 694, 0, 1828, 4401, 0, 0, 0, 240, 0,
	3101, 899, 0, 2890, 2890, 0, 0, 0, 0, 1487,
	0, 233, 0, 3314, 0, 0, 2287, 0, 0, 0,
	234, 0, 0, 0, 271, 0, 1812, 0, 0, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 0, 271, 1322, 271, 0, 193, 0, 0,
	0, 1859, 1530, 1093, 1530, 1332, 271, 3363, 0, 1322,
	0, 1322, 0, 1322, 0, 1487, 0, 0, 0, 3320,
	3321, 3322, 0, 0, 1834, 1836, 3319, 3317, 3318, 3310,
	3311, 3312, 3313, 3315, 3316, 0, 0, 0, 0, 0,
	3390, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3403, 271, 271, 271, 271,
	1322, 0, 0, 1322, 0, 271, 0, 0, 271, 0,
	3324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3423, 0, 0, 1827, 0, 0, 1487, 1824, 1820, 0,
	1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 271,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4548, 0, 3567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 1804, 1805,
	0, 0, 0, 0, 0, 3592, 1857, 0, 1100, 0,
	0, 0, 0, 0, 0, 4570, 3609, 2719, 2719, 0,
	0, 1835, 0, 1804, 1805, 0, 0, 0, 1807, 1487,
	0, 3617, 0, 0, 0, 0, 0, 0, 0, 0,
	4592, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 1807, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 3325, 0, 3658, 3659, 0, 0, 0, 0, 1860,
	0, 0, 0, 1530, 1828, 0, 0, 0, 1806, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2719, 2719, 2719,
	2719, 2719, 2719, 2719, 2719, 2719, 2719, 2719, 2719, 2719,
	2719, 2719, 2719, 2719, 2719, 2719, 2719, 0, 2719, 0,
	0, 0, 1804, 1805, 0, 0, 0, 3403, 0, 0,
	0, 0, 1859, 2287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 1807, 1327, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4612, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 1812, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 4632, 1826, 0, 0,
	0, 3320, 3321, 3322, 0, 0, 1834, 1836, 3319, 3317,
	3318, 3310, 3311, 3312, 3313, 3315, 3316, 271, 0, 0,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 1834, 1836, 271, 0, 0, 0, 0, 694, 0,
	0, 0, 0, 694, 0, 0, 694, 0, 0, 694,
	694, 0, 0, 0, 0, 694, 0, 0, 0, 1100,
	1100, 0, 0, 271, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 1401, 1530, 0, 0,
	0, 0, 1829, 1830, 1831, 1832, 0, 0, 0, 0,
	1827, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4721, 0,
	0, 0, 0, 0, 4723, 0, 0, 0, 1857, 0,
	1834, 1836, 0, 0, 0, 0, 2890, 2890, 271, 0,
	2001, 0, 3750, 0, 0, 0, 2890, 0, 0, 3469,
	0, 0, 0, 1857, 0, 0, 0, 2890, 3469, 3766,
	2890, 3469, 0, 0, 3469, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	271, 2001, 0, 271, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 271, 1828, 3530, 3530, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 2890, 0, 2890, 0, 3556, 2890, 2001, 0,
	0, 2890, 2001, 0, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 73, 1859, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	74, 1530, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 3858, 0, 0, 271, 79, 3593, 0, 0,
	3595, 2890, 0, 0, 271, 0, 0, 0, 271, 0,
	0, 1332, 0, 0, 0, 1804, 1805, 1833, 0, 3963,
	0, 1848, 1849, 1850, 0, 0, 1506, 0, 0, 271,
	0, 0, 0, 0, 3072, 0, 88, 1322, 1835, 271,
	1828, 0, 2890, 0, 694, 1807, 0, 0, 0, 0,
	0, 2890, 0, 0, 1854, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 271, 3072, 0, 0, 3072, 893, 0, 0,
	1806, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 49,
	1826, 110, 0, 0, 0, 0, 94, 107, 1859, 1823,
	0, 0, 0, 0, 0, 4043, 4044, 4045, 0, 0,
	0, 3699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 4059, 4060, 0, 0, 0, 0, 3705,
	0, 0, 1530, 1327, 0, 1322, 271, 0, 271, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1829, 1830, 1831, 1832, 3308,
	3309, 0, 3326, 3327, 3328, 1812, 0, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 0, 0,
	0, 3737, 0, 0, 0, 0, 0, 1804, 1805, 0,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 1855, 0, 0, 1841,
	1835, 0, 3771, 1834, 1836, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 3323, 0, 0, 0, 0, 1821,
	1822, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4151, 4152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3314,
	0, 0, 694, 694, 0, 0, 190, 102, 0, 0,
	106, 0, 0, 0, 0, 1857, 0, 1829, 1830, 1831,
	1832, 0, 0, 0, 0, 1530, 1530, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	1530, 1530, 0, 1530, 894, 0, 0, 0, 0, 153,
	0, 0, 2719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3330, 1845, 1250, 0, 1855, 1840,
	1833, 0, 0, 0, 0, 1834, 1836, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 4144, 0, 1336,
	0, 0, 1851, 1828, 1852, 0, 0, 0, 0, 0,
	0, 1821, 1822, 0, 0, 0, 3324, 0, 2719, 0,
	157, 0, 266, 266, 690, 4158, 780, 0, 0, 1843,
	1846, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 240, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 3530,
	0, 1859, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 271, 4331, 0, 4333, 4334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1857,
	0, 0, 1628, 0, 2001, 0, 271, 0, 0, 0,
	710, 710, 1332, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 271, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 271, 1847, 1824, 1820, 0,
	1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0,
	4380, 0, 0, 0, 2890, 271, 0, 3325, 0, 0,
	0, 0, 1833, 0, 3101, 3101, 0, 0, 0, 0,
	899, 899, 2890, 0, 0, 0, 3072, 3072, 0, 0,
	899, 2890, 0, 0, 0, 1828, 0, 0, 0, 2719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 1401, 0, 0,
	3308, 3309, 0, 3326, 3327, 3328, 0, 0, 0, 2719,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 4353, 0, 0,
	0, 0, 0, 0, 2719, 0, 0, 0, 4466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4109, 0, 0, 0, 0, 0, 0, 4353, 0,
	0, 0, 0, 0, 0, 3323, 0, 3320, 3321, 3322,
	0, 0, 0, 0, 3319, 3317, 3318, 3310, 3311, 3312,
	3313, 3315, 3316, 2481, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 3001, 0, 271, 3283, 0, 0, 0, 3284,
	1530, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2993, 2991, 0, 0, 0,
	1332, 2481, 2995, 2997, 2987, 0, 0, 0, 0, 0,
	3314, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	2890, 2890, 0, 3530, 2890, 0, 0, 0, 0, 0,
	0, 4195, 0, 4195, 1530, 0, 1840, 0, 1804, 1805,
	0, 0, 1840, 0, 0, 2890, 0, 3469, 1840, 0,
	0, 1530, 1530, 271, 2001, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 2001, 1807, 271,
	2001, 0, 271, 0, 3530, 3330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2890,
	0, 2890, 271, 0, 1860, 0, 0, 0, 0, 1804,
	1805, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 3324, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 2890, 0, 1807,
	0, 0, 4280, 1336, 1336, 0, 0, 1835, 0, 0,
	1840, 0, 0, 271, 1807, 1840, 0, 0, 0, 0,
	1336, 0, 0, 271, 0, 1860, 0, 0, 1840, 0,
	0, 0, 0, 1840, 1806, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 1826, 0, 0, 0, 0, 1806,
	0, 0, 4195, 1823, 2989, 1530, 0, 0, 0, 1826,
	1857, 0, 0, 0, 0, 3003, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 3002, 2994, 2992, 2996,
	2998, 2988, 2990, 3004, 0, 0, 0, 0, 1840, 0,
	0, 0, 3000, 0, 1840, 0, 0, 0, 3726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3223, 0, 0, 1834, 1836, 0, 1829,
	1830, 1831, 1832, 0, 0, 3007, 0, 0, 3325, 1812,
	0, 0, 0, 1959, 1829, 1830, 1831, 1832, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2890, 0, 3469, 0, 0, 4393, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1827, 0, 1834, 1836, 0,
	0, 0, 0, 0, 4417, 0, 4417, 0, 1308, 0,
	1308, 1308, 1834, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 1822, 0, 0, 0, 0, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	0, 3530, 0, 1322, 0, 1840, 1840, 1840, 1840, 1840,
	1840, 1840, 1840, 0, 0, 0, 1827, 0, 2001, 0,
	271, 1398, 0, 0, 0, 1840, 0, 1504, 1857, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 4393, 0, 0, 3320, 3321,
	3322, 0, 0, 2890, 0, 3319, 3317, 3318, 3310, 3311,
	3312, 3313, 3315, 3316, 0, 0, 0, 0, 0, 0,
	0, 4497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 2723, 3008, 0, 0, 0, 1857,
	0, 0, 0, 0, 2999, 4195, 4195, 1840, 0, 0,
	0, 0, 0, 1840, 1857, 0, 1828, 0, 1085, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3771, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1530, 3530, 4564, 1833,
	0, 0, 0, 0, 1859, 4393, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 4195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 1859, 0, 0, 1751, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4280, 0, 0, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 4195, 0, 271,
	4195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3469, 0, 0, 2694, 2695, 2696, 2697, 2690, 2691, 2692,
	2693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 1530, 0,
	0, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810,
	1811, 1813, 1814, 0, 0, 0, 1824, 1820, 0, 1817,
	1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0,
	0, 0, 0, 4676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4417,
	0, 0, 271, 0, 0, 2670, 2671, 2672, 2673, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1530, 793,
	0, 0, 0, 0, 0, 0, 0, 2890, 2682, 2683,
	2684, 2685, 2678, 2679, 2680, 2681, 2686, 2687, 2688, 2689,
	0, 0, 0, 0, 804, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1123, 112, 0,
	0, 0, 0, 0, 0, 3771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 2666, 2667, 2668, 2669, 2674, 2675,
	2676, 2677, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 2002, 0, 1504, 798, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 0,
	0, 0, 112, 0, 0, 0, 0, 4393, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 1840, 1804, 1805,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1840, 0, 0, 0, 802, 2890, 1807, 0,
	0, 0, 0, 0, 4195, 0, 4195, 0, 0, 1530,
	0, 0, 0, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	1840, 0, 0, 1806, 1840, 0, 0, 0, 800, 0,
	1060, 0, 0, 1826, 0, 0, 0, 0, 1840, 1530,
	0, 1080, 1823, 0, 0, 1530, 0, 1840, 1840, 1840,
	1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840,
	1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840,
	1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840, 1840,
	1840, 1840, 1840, 0, 1347, 3101, 0, 809, 1840, 1244,
	1840, 1840, 1840, 1840, 2890, 0, 0, 3216, 0, 0,
	0, 0, 2723, 2723, 0, 0, 0, 0, 0, 0,
	3101, 1085, 1085, 1085, 0, 0, 0, 1840, 1829, 1830,
	1831, 1832, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 795, 0, 0, 0, 1532, 0, 1538, 1840, 1544,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 0, 0, 0, 0, 0, 1840, 0,
	0, 1840, 1821, 1822, 1840, 0, 0, 1840, 0, 0,
	0, 0, 0, 1840, 1840, 1840, 1840, 1840, 1840, 1840,
	0, 0, 0, 0, 0, 0, 2273, 0, 0, 754,
	2280, 0, 0, 0, 0, 1827, 0, 0, 1636, 0,
	1641, 0, 2293, 0, 805, 0, 0, 0, 0, 0,
	797, 0, 0, 1654, 0, 1659, 0, 0, 2305, 0,
	2305, 0, 0, 0, 0, 0, 2312, 0, 0, 740,
	0, 0, 1804, 1805, 0, 0, 0, 0, 0, 1840,
	0, 0, 3329, 0, 2723, 2723, 2723, 2723, 0, 723,
	0, 1840, 0, 1840, 724, 1835, 0, 794, 1840, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 1857, 0,
	0, 2280, 0, 0, 2341, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 801, 1730, 0, 1860, 0,
	0, 0, 0, 725, 0, 2361, 0, 1806, 0, 756,
	0, 0, 0, 0, 726, 0, 0, 1826, 0, 2377,
	796, 2379, 0, 2381, 0, 2383, 1823, 2384, 0, 0,
	0, 0, 0, 1833, 0, 727, 0, 0, 0, 0,
	0, 0, 0, 807, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2411,
	2412, 2413, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	0, 729, 1829, 1830, 1831, 1832, 0, 0, 0, 0,
	0, 0, 1812, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 1881, 731, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 1836, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1953, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1840, 0, 1840, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 752, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	112, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	1828, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 750, 751, 748, 1085, 0, 0, 0, 0,
	743, 2839, 0, 736, 1308, 0, 1840, 0, 1308, 0,
	1308, 0, 0, 0, 0, 0, 1080, 112, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 2293, 0, 0,
	0, 0, 0, 112, 0, 112, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 737, 0, 744, 112, 0,
	112, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 1840, 1840, 0, 2723, 2723, 1170, 0, 1840, 0,
	739, 0, 0, 0, 0, 747, 0, 0, 3329, 3329,
	0, 0, 1840, 1840, 0, 0, 0, 0, 0, 756,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 1840, 0,
	0, 0, 0, 0, 1824, 1820, 0, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2723, 2723, 2723, 2723, 2723, 2723,
	2723, 2723, 2723, 2723, 2723, 2723, 2723, 2723, 2723, 2723,
	2723, 2723, 2723, 2723, 0, 2723, 3329, 3329, 3329, 3329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2280, 0, 0, 0,
	1060, 1840, 0, 0, 0, 2293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 1886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3145,
	0, 3148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3178, 1504, 3180, 1504, 0, 0, 0, 0,
	0, 3186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2418, 1973, 0, 1976, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 3214, 0, 0, 2456, 0, 2460, 0,
	0, 0, 0, 0, 0, 2474, 0, 0, 0, 0,
	0, 0, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 0, 2524,
	0, 2526, 2527, 2528, 2529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 2604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2634,
	2637, 2640, 2643, 0, 0, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2715, 0, 2727, 2729, 2734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1840,
	0, 0, 1840, 3329, 3329, 1840, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1840, 1840, 1840, 1840, 0, 0, 0,
	0, 0, 1840, 0, 1840, 0, 0, 3329, 3329, 3329,
	3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329,
	3329, 3329, 3329, 3329, 3329, 3329, 3329, 0, 0, 0,
	3329, 0, 0, 1840, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 1840, 1504, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3507, 3509, 0, 0, 2293,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 0, 1261, 0, 3029, 3030,
	0, 3032, 0, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 1060, 1060, 0,
	0, 1840, 1840, 0, 0, 1261, 1840, 1840, 0, 0,
	1840, 1840, 0, 0, 0, 1840, 0, 0, 0, 1840,
	0, 0, 0, 0, 1840, 1261, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 0, 0, 0, 0, 2723,
	3606, 0, 0, 0, 3610, 0, 0, 0, 1261, 0,
	0, 0, 0, 2542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 3162,
	0, 0, 0, 1880, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 2723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 3663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1805, 0,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1862, 1841,
	1835, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	1244, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 3709, 0, 1504, 0, 1976, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 3217, 3218, 0, 0, 0, 0, 3224,
	3722, 1823, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3238, 3239,
	0, 0, 0, 0, 2604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1840, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1840, 3329, 2723, 0, 0, 3248,
	0, 0, 1840, 0, 0, 1840, 0, 1829, 1830, 1831,
	1832, 0, 0, 0, 0, 3262, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3274, 0, 0, 3329, 2723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 1845, 0, 0, 1855, 0,
	1840, 2723, 0, 0, 0, 1834, 1836, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 1851, 0, 1852, 0, 0, 0, 0, 0,
	0, 1821, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 1261, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2734, 2734, 2734, 0, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 3367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 112, 0, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 3329, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 1840, 3329, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 112, 0, 0, 112, 3329, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 112, 3488,
	0, 2293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 2293, 0, 0, 0,
	0, 4020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 1261,
	0, 0, 0, 0, 0, 1840, 0, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 1840, 0,
	0, 0, 4072, 0, 0, 1818, 1819, 1825, 1847, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 0, 0, 0, 2600, 0, 0, 0, 2601,
	0, 2542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 0, 1261, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 1261, 0,
	0, 0, 0, 740, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 723, 1261, 1261, 1261, 0, 724, 0,
	0, 0, 0, 1840, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 2474, 0, 0, 0, 0, 0, 3724,
	3725, 0, 0, 3728, 0, 0, 0, 3731, 0, 0,
	0, 746, 0, 0, 0, 0, 3735, 0, 0, 4214,
	0, 0, 0, 0, 0, 3742, 0, 0, 0, 0,
	3367, 0, 728, 0, 0, 2293, 0, 0, 0, 0,
	0, 2036, 2036, 1261, 1244, 3755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 3778, 3779, 0, 3780, 3781,
	3782, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	731, 0, 0, 0, 0, 0, 3788, 0, 0, 0,
	3790, 0, 0, 0, 0, 0, 0, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4302,
	0, 0, 745, 3819, 3820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 3831, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 0, 3840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 1261,
	0, 0, 0, 0, 0, 0, 1261, 112, 112, 0,
	112, 112, 112, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 3888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 823, 3899, 0, 0, 0, 112, 112,
	0, 112, 112, 112, 1804, 1805, 0, 1837, 1838, 1839,
	1848, 1849, 1850, 0, 0, 0, 0, 0, 0, 0,
	4403, 753, 0, 734, 0, 0, 1841, 1835, 3928, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 754, 0, 0, 0, 0, 0, 1806,
	0, 735, 0, 1261, 1261, 0, 750, 751, 748, 1826,
	0, 0, 0, 0, 743, 0, 2293, 736, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 1261, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 744, 1257, 112, 112, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 739, 0, 0, 0, 0, 747,
	1953, 0, 0, 0, 1829, 1830, 1831, 1832, 0, 4038,
	0, 0, 0, 756, 1812, 0, 0, 0, 0, 0,
	4538, 1504, 0, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 1845, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 1834, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 1852, 0, 0, 0, 0, 0, 0, 1821, 1822,
	4087, 4088, 0, 0, 0, 0, 4092, 4093, 0, 0,
	1261, 4096, 4097, 0, 0, 0, 1843, 0, 0, 4101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4105, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 4110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4635, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 163,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 46,
	45, 0, 0, 0, 0, 0, 1244, 1244, 0, 1833,
	0, 0, 0, 0, 74, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4689, 0,
	79, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 48, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
	88, 0, 0, 0, 4728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 50, 68, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 0, 0,
	0, 57, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 110, 0, 0, 0, 0,
	94, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 1818, 1819, 1825, 1847, 1824, 1820, 0, 1817,
	1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 95,
	0, 0, 0, 0, 0, 0, 4115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4348, 4349, 4350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 270, 270, 2474, 0, 270, 4359,
	4360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 4368, 4371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 270, 0, 270, 270, 0,
	0, 270, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	823, 0, 0, 0, 0, 0, 0, 0, 4418, 0,
	0, 0, 0, 1261, 1261, 0, 0, 4426, 0, 0,
	112, 0, 0, 0, 0, 99, 0, 0, 0, 1261,
	0, 4434, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 1261, 4443, 0,
	0, 270, 270, 0, 0, 0, 0, 0, 56, 1261,
	0, 0, 1261, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 270, 270, 58,
	190, 102, 0, 2036, 106, 0, 0, 1261, 54, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 2036, 112, 0, 0, 241, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 157, 0, 0, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 270, 0, 0, 240, 0, 0,
	1261, 0, 1261, 0, 4569, 0, 0, 0, 4573, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 3,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	1261, 0, 0, 0, 1261, 1085, 1085, 0, 0, 0,
	0, 0, 1261, 0, 0, 4630, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2474,
	0, 0, 112, 0, 0, 0, 0, 0, 4371, 0,
	1261, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 1257, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 1261, 0, 0, 0, 0, 270, 1975,
	270, 0, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 823, 0, 0, 0, 0, 0, 0,
	0, 0, 4751, 4751, 4751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	270, 1837, 1838, 1839, 1848, 1849, 1850, 270, 0, 0,
	2036, 0, 0, 0, 0, 4774, 0, 0, 0, 0,
	1841, 1835, 0, 0, 0, 0, 0, 0, 1807, 1261,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 2036, 2036, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 4751, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 2036, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 1261, 0, 0, 0,
	0, 0, 0, 0, 2542, 0, 0, 0, 1829, 1830,
	1831, 1832, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4751, 4909, 0, 1845, 0, 0, 1855,
	270, 0, 4913, 0, 823, 0, 1834, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 270, 1827, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 270, 0, 0, 112, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 1857, 0,
	0, 1261, 0, 0, 0, 270, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 823, 270, 0, 270, 0, 270, 0, 270,
	0, 270, 0, 1833, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 1261, 1261, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 270, 270, 270, 0, 0, 1261,
	1261, 1261, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 1261, 112,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1147, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1825, 1847,
	1824, 1820, 272, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	3740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 1261, 0, 1261, 0, 0, 0, 0, 0,
	843, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 1261, 0, 0, 0, 0, 0, 0,
	845, 0, 1261, 1257, 0, 846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 1261,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 864, 0, 0, 0,
	0, 270, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 1261, 0, 0, 1261, 0, 0,
	0, 848, 0, 0, 0, 0, 849, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 873, 0,
	270, 0, 0, 0, 0, 850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1261, 1261, 270, 871,
	0, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 270, 270, 0, 0, 0, 1261, 0, 0, 0,
	0, 270, 844, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 875,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 0,
	1261, 1261, 1261, 1261, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2036, 0, 270, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 1261, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 823, 0, 0, 0, 0, 0, 853, 270,
	0, 0, 0, 0, 0, 2036, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	856, 0, 0, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 1261, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 0,
	0, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	754, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 842, 0, 866, 0, 0, 0, 0,
	1261, 0, 0, 1261, 857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 1261, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 270,
	0, 0, 0, 0, 0, 270, 858, 0, 270, 0,
	859, 878, 0, 877, 0, 0, 0, 860, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 870, 0, 0, 270,
	0, 0, 879, 0, 876, 0, 0, 270, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 272, 0, 0, 272, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 1261, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 1261, 272, 1345, 272, 272, 0, 1345, 272, 272,
	0, 0, 0, 0, 1345, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 1804, 1805, 0, 1837, 1838, 1839, 1848, 1849,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1835, 1345, 0, 272, 272,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 1345, 272, 272, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 1829, 1830, 1831, 1832, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	1834, 1836, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 1852,
	1261, 0, 1261, 0, 0, 0, 1821, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 270,
	270, 0, 0, 270, 0, 0, 0, 0, 0, 1827,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1345, 0, 0, 0, 0, 272, 272, 272, 0, 1257,
	1828, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	1818, 1819, 1825, 1847, 1824, 1820, 0, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 3286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 1345,
	1345, 272, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 0, 0, 276, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 272, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 1345, 1345, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 0, 272, 0, 272, 0, 272, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	272, 272, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 270, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 270, 0, 0, 0, 1139,
	0, 0, 0, 0, 0, 1804, 1805, 0, 1837, 1838,
	1839, 1848, 1849, 1850, 0, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1835, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 270, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1831, 1832, 0,
	272, 0, 0, 1345, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 0, 1257, 1845, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 1834, 1836, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	1851, 0, 1852, 0, 0, 0, 0, 0, 0, 1821,
	1822, 0, 272, 0, 0, 272, 0, 0, 0, 272,
	0, 272, 0, 0, 0, 0, 0, 1843, 272, 272,
	0, 1975, 0, 1975, 1345, 1345, 0, 0, 272, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 270, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 272,
	1846, 1345, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 272, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 1819, 1825, 1847, 1824, 1820, 0,
	1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0,
	1404, 0, 0, 0, 1404, 0, 0, 3285, 0, 0,
	0, 1343, 0, 272, 272, 272, 272, 0, 0, 0,
	0, 0, 272, 0, 0, 272, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 1975, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 1405,
	1975, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 1344, 270,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 1835, 0, 1345, 0, 0, 0, 0, 1807,
	272, 0, 0, 0, 272, 272, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 272, 0, 1404, 0, 0,
	1345, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	815, 0, 0, 1823, 0, 0, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 0, 1345,
	272, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 272, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 1829,
	1830, 1831, 1832, 0, 0, 0, 1345, 1343, 0, 1812,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 1404, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 1845, 0, 1345,
	1855, 1345, 0, 0, 0, 1345, 0, 1834, 1836, 0,
	0, 0, 272, 1345, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 1345, 272, 0, 0, 0, 0,
	0, 0, 0, 1821, 1822, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 1345, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 272, 1345, 272, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1805, 0, 1837, 1838,
	1839, 1848, 1849, 1850, 0, 0, 0, 0, 0, 1405,
	0, 272, 0, 0, 1833, 0, 0, 1841, 1835, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 1828, 0, 0,
	0, 0, 0, 1343, 0, 1343, 0, 1343, 0, 0,
	1345, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 1846, 1343, 1343, 1345, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 1343, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 1343, 1343, 1343, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 1829, 1830, 1831, 1832, 0,
	0, 0, 0, 0, 0, 1812, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 1819, 1825,
	1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810,
	1811, 1813, 1814, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 1845, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 1834, 1836, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 1852, 0, 0, 0, 0, 0, 0, 1821,
	1822, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	1344, 0, 1344, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 1344, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 1344, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 1345, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 272, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 272, 1828, 0, 0, 1405, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 1345, 1345, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 1345, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 272, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 1343, 0, 0, 0, 0, 0, 0, 1405,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 1404, 0, 0, 0, 0,
	0, 0, 0, 1818, 1819, 1825, 1847, 1824, 1820, 0,
	1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 3282, 0, 1405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 1345, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 1344, 0, 0,
	272, 0, 0, 1345, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 1345, 0, 1345, 272, 0, 1345, 272,
	0, 0, 0, 0, 1343, 0, 1343, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	1405, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 1345, 0,
	0, 0, 0, 1804, 1805, 0, 1837, 1838, 1839, 1848,
	1849, 1850, 0, 0, 0, 0, 0, 1345, 0, 0,
	272, 0, 0, 0, 0, 1841, 1835, 0, 0, 1345,
	272, 0, 0, 1807, 1345, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 1344, 0, 0, 0, 0, 1806, 0,
	0, 1345, 1345, 1345, 1345, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 1345, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 1344,
	0, 1344, 0, 1829, 1830, 1831, 1832, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 1344, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 1834, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	1852, 0, 0, 0, 0, 0, 0, 1821, 1822, 1345,
	0, 0, 0, 0, 0, 0, 1345, 272, 0, 0,
	0, 0, 0, 0, 0, 1843, 1345, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 272, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 272,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1343, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 1343, 0,
	1343, 1818, 1819, 1825, 1847, 1824, 1820, 1405, 1817, 1815,
	1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 0,
	0, 0, 1404, 0, 0, 3281, 0, 0, 0, 272,
	0, 0, 0, 1343, 0, 0, 0, 1343, 0, 0,
	1405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 1343, 0, 1343, 0,
	1405, 0, 1404, 0, 0, 0, 0, 0, 0, 815,
	1343, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	0, 1012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 971, 0, 0, 1343, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 986, 0, 969, 968, 0, 0, 0, 0, 0,
	0, 1344, 0, 1343, 0, 1804, 1805, 0, 1837, 1838,
	1839, 1848, 1849, 1850, 0, 988, 0, 0, 0, 0,
	0, 970, 0, 1344, 0, 1344, 973, 1841, 1835, 0,
	0, 1021, 0, 0, 0, 1807, 0, 0, 0, 0,
	983, 984, 0, 0, 1854, 0, 0, 1405, 1404, 1001,
	0, 1404, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 1860, 1344, 0, 0, 0, 0, 1013, 975, 0,
	1806, 0, 0, 0, 976, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 1344, 0, 1823,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 0,
	0, 1344, 0, 1344, 0, 1010, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 1404, 0, 0,
	0, 0, 0, 0, 0, 1011, 0, 0, 0, 0,
	0, 1344, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 979, 0, 0, 0, 0, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 1829, 1830, 1831, 1832, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 980, 981,
	0, 0, 0, 1344, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 987, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 1344, 998,
	0, 0, 0, 1845, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 1834, 1836, 0, 0, 1018, 1009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 1852, 0, 0, 0, 0, 0, 0, 1821,
	1822, 0, 0, 1405, 0, 0, 1405, 0, 0, 1014,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 1020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 972, 0,
	0, 0, 1005, 1006, 1842, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 1857, 1008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1015,
	1003, 0, 0, 0, 0, 0, 0, 0, 1019, 999,
	0, 0, 992, 990, 0, 995, 0, 0, 0, 0,
	0, 996, 0, 0, 965, 0, 1016, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	1007, 0, 997, 0, 1343, 0, 0, 0, 994, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1017,
	1846, 0, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	1002, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 1343, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 1343, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 1343, 0, 0, 0,
	0, 0, 1404, 1818, 1819, 1825, 1847, 1824, 1820, 0,
	1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 3280, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1344, 1344, 0, 0,
	1343, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 1344, 1344, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	1404, 0, 1343, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1343, 1343, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 1404, 0, 0, 0,
	0, 1343, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 1405, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 1343,
	1343, 1343, 0, 0, 0, 1344, 1344, 0, 0, 0,
	0, 0, 1404, 0, 0, 1405, 0, 1804, 1805, 0,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1835, 0, 1404, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 1829, 1830,
	1831, 1832, 0, 0, 0, 1344, 0, 0, 1812, 0,
	0, 0, 0, 1860, 0, 1405, 0, 1344, 0, 0,
	1344, 0, 1806, 1404, 0, 1343, 0, 0, 0, 0,
	0, 1405, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 1845, 0, 1404, 1855,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1344, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1405, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1404, 1829, 1830, 1831,
	1832, 0, 0, 1343, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 1343, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 1344, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1405, 0, 1853,
	0, 0, 0, 0, 0, 1845, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 1834, 1836, 1842, 1404, 0,
	0, 1343, 0, 0, 0, 0, 0, 1405, 1857, 0,
	0, 0, 1851, 0, 1852, 0, 0, 0, 0, 0,
	0, 1821, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 0,
	1344, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 1859, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 1405, 0, 1828, 1344, 0, 1343, 1343,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 1818, 1819, 1825, 1847,
	1824, 1820, 1846, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	2601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 0, 0, 0, 4677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1407, 287, 288, 1408, 1409, 1410,
	1344, 1411, 636, 1412, 1413, 1414, 1415, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 1416, 641, 299, 300, 301, 302, 303,
	304, 1417, 1418, 0, 305, 642, 643, 644, 1419, 306,
	307, 645, 1420, 1346, 1421, 308, 309, 310, 311, 312,
	313, 314, 0, 1422, 316, 317, 318, 315, 319, 1423,
	320, 0, 321, 322, 323, 324, 325, 326, 1424, 327,
	328, 329, 1202, 330, 331, 332, 1425, 1426, 1428, 1427,
	1429, 1430, 1431, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 1432, 343, 339, 341, 1433, 344, 342,
	345, 1434, 346, 347, 348, 1435, 1436, 349, 350, 351,
	1437, 352, 353, 1438, 354, 355, 356, 1439, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 1440, 277, 1441, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 1442,
	375, 376, 1443, 1444, 1203, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 1445,
	389, 654, 1446, 655, 390, 1447, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 1205, 396, 397, 1448, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 1449, 1204, 406, 659, 660, 1450, 661, 1451,
	408, 409, 1206, 662, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1452,
	420, 422, 421, 1453, 423, 663, 1209, 424, 425, 1210,
	1454, 426, 0, 0, 0, 427, 428, 431, 1455, 1456,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1457, 279, 1213, 472,
	473, 1458, 664, 474, 665, 476, 477, 1459, 0, 478,
	0, 1460, 1461, 480, 481, 482, 1462, 1463, 483, 484,
	666, 1214, 485, 1215, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 1464, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 1465, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	1466, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 1467, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 1468, 562,
	563, 561, 564, 565, 566, 1469, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 1470, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	1471, 594, 595, 0, 591, 582, 1472, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 1473, 604, 677, 678,
	679, 680, 1474, 613, 1475, 605, 606, 607, 681, 608,
	682, 1476, 609, 610, 611, 612, 0, 614, 615, 1477,
	1478, 616, 617, 618, 620, 621, 619, 622, 1479, 623,
	1480, 0, 624, 625, 626, 683, 684, 685, 1481, 628,
	627, 629, 686, 1482, 630, 1483, 1484, 1485, 1486, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 0, 0, 0,
	0, 0, 2769, 0, 0, 0, 0, 0, 0, 0,
	2770, 280, 282, 281, 283, 284, 285, 286, 1407, 287,
	288, 1408, 1409, 1410, 0, 1411, 636, 1412, 1413, 1414,
	1415, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 1416, 641, 299,
	300, 301, 302, 303, 304, 1417, 1418, 0, 305, 642,
	643, 644, 1419, 306, 307, 645, 1420, 1346, 1421, 308,
	309, 310, 311, 312, 313, 314, 0, 1422, 316, 317,
	318, 315, 319, 1423, 320, 0, 321, 322, 323, 324,
	325, 326, 1424, 327, 328, 329, 1202, 330, 331, 332,
	1425, 1426, 1428, 1427, 1429, 1430, 1431, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 1432, 343, 339,
	341, 1433, 344, 342, 345, 1434, 346, 347, 348, 1435,
	1436, 349, 350, 351, 1437, 352, 353, 1438, 354, 355,
	356, 1439, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 1440, 277,
	1441, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 1442, 375, 376, 1443, 1444, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 1445, 389, 654, 1446, 655, 390, 1447,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 1448, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 1449, 1204, 406, 659,
	660, 1450, 661, 1451, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1452, 420, 422, 421, 1453, 423, 663,
	1209, 424, 425, 1210, 1454, 426, 0, 0, 0, 427,
	428, 431, 1455, 1456, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1457, 279, 1213, 472, 473, 1458, 664, 474, 665, 476,
	477, 1459, 0, 478, 0, 1460, 1461, 480, 481, 482,
	1462, 1463, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 1464, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 1465, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 1466, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 1467, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 1468, 562, 563, 561, 564, 565, 566, 1469,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 1470, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 1471, 594, 595, 0, 591, 582,
	1472, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	1473, 604, 677, 678, 679, 680, 1474, 613, 1475, 605,
	606, 607, 681, 608, 682, 1476, 609, 610, 611, 612,
	0, 614, 615, 1477, 1478, 616, 617, 618, 620, 621,
	619, 622, 1479, 623, 1480, 0, 624, 625, 626, 683,
	684, 685, 1481, 628, 627, 629, 686, 1482, 630, 1483,
	1484, 1485, 1486, 631, 632, 687, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 0,
	0, 3749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3751, 280, 282, 281, 283, 284, 285, 286,
	1407, 287, 288, 1408, 1409, 1410, 0, 1411, 636, 1412,
	1413, 1414, 1415, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 1416,
	641, 299, 300, 301, 302, 303, 304, 1417, 1418, 0,
	305, 642, 643, 644, 1419, 306, 307, 645, 1420, 1346,
	1421, 308, 309, 310, 311, 312, 313, 314, 0, 1422,
	316, 317, 318, 315, 319, 1423, 320, 0, 321, 322,
	323, 324, 325, 326, 1424, 327, 328, 329, 1202, 330,
	331, 332, 1425, 1426, 1428, 1427, 1429, 1430, 1431, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 1432,
	343, 339, 341, 1433, 344, 342, 345, 1434, 346, 347,
	348, 1435, 1436, 349, 350, 351, 1437, 352, 353, 1438,
	354, 355, 356, 1439, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	1440, 277, 1441, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 1442, 375, 376, 1443, 1444,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 1445, 389, 654, 1446, 655,
	390, 1447, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 1205, 396, 397, 1448, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 1449, 1204,
	406, 659, 660, 1450, 661, 1451, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1452, 420, 422, 421, 1453,
	423, 663, 1209, 424, 425, 1210, 1454, 426, 0, 0,
	0, 427, 428, 431, 1455, 1456, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 1457, 279, 1213, 472, 473, 1458, 664, 474,
	665, 476, 477, 1459, 0, 478, 0, 1460, 1461, 480,
	481, 482, 1462, 1463, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 1464, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 1465,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 1466, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 1467,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 1468, 562, 563, 561, 564, 565,
	566, 1469, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 1470,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 1471, 594, 595, 0,
	591, 582, 1472, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 1473, 604, 677, 678, 679, 680, 1474, 613,
	1475, 605, 606, 607, 681, 608, 682, 1476, 609, 610,
	611, 612, 0, 614, 615, 1477, 1478, 616, 617, 618,
	620, 621, 619, 622, 1479, 623, 1480, 0, 624, 625,
	626, 683, 684, 685, 1481, 628, 627, 629, 686, 1482,
	630, 1483, 1484, 1485, 1486, 631, 632, 687, 633, 634,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4143, 280,
	282, 281, 283, 284, 285, 286, 1407, 287, 288, 1408,
	1409, 1410, 0, 1411, 636, 1412, 1413, 1414, 1415, 289,
	290, 1201, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 1416, 641, 299, 300, 301,
	302, 303, 304, 1417, 1418, 0, 305, 642, 643, 644,
	1419, 306, 307, 645, 1420, 1346, 1421, 308, 309, 310,
	311, 312, 313, 314, 0, 1422, 316, 317, 318, 315,
	319, 1423, 320, 0, 321, 322, 323, 324, 325, 326,
	1424, 327, 328, 329, 1202, 330, 331, 332, 1425, 1426,
	1428, 1427, 1429, 1430, 1431, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 1432, 343, 339, 341, 1433,
	344, 342, 345, 1434, 346, 347, 348, 1435, 1436, 349,
	350, 351, 1437, 352, 353, 1438, 354, 355, 356, 1439,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 1440, 277, 1441, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 1442, 375, 376, 1443, 1444, 1203, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 1445, 389, 654, 1446, 655, 390, 1447, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 1205, 396, 397,
	1448, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 1449, 1204, 406, 659, 660, 1450,
	661, 1451, 408, 409, 1206, 662, 1207, 410, 411, 412,
	1208, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1452, 420, 422, 421, 1453, 423, 663, 1209, 424,
	425, 1210, 1454, 426, 0, 0, 0, 427, 428, 431,
	1455, 1456, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 1211, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 1212, 471, 460, 1457, 279,
	1213, 472, 473, 1458, 664, 474, 665, 476, 477, 1459,
	0, 478, 0, 1460, 1461, 480, 481, 482, 1462, 1463,
	483, 484, 666, 1214, 485, 1215, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 1464,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 1465, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 1466, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 1467, 537, 538, 539, 1216,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	1468, 562, 563, 561, 564, 565, 566, 1469, 567, 568,
	550, 551, 569, 570, 1217, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 1470, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 1471, 594, 595, 0, 591, 582, 1472, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 1473, 604,
	677, 678, 679, 680, 1474, 613, 1475, 605, 606, 607,
	681, 608, 682, 1476, 609, 610, 611, 612, 0, 614,
	615, 1477, 1478, 616, 617, 618, 620, 621, 619, 622,
	1479, 623, 1480, 0, 624, 625, 626, 683, 684, 685,
	1481, 628, 627, 629, 686, 1482, 630, 1483, 1484, 1485,
	1486, 631, 632, 687, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4354,
	280, 282, 281, 283, 284, 285, 286, 1407, 287, 288,
	1408, 1409, 1410, 0, 1411, 636, 1412, 1413, 1414, 1415,
	289, 290, 1201, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 1416, 641, 299, 300,
	301, 302, 303, 304, 1417, 1418, 0, 305, 642, 643,
	644, 1419, 306, 307, 645, 1420, 1346, 1421, 308, 309,
	310, 311, 312, 313, 314, 0, 1422, 316, 317, 318,
	315, 319, 1423, 320, 0, 321, 322, 323, 324, 325,
	326, 1424, 327, 328, 329, 1202, 330, 331, 332, 1425,
	1426, 1428, 1427, 1429, 1430, 1431, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 1432, 343, 339, 341,
	1433, 344, 342, 345, 1434, 346, 347, 348, 1435, 1436,
	349, 350, 351, 1437, 352, 353, 1438, 354, 355, 356,
	1439, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 1440, 277, 1441,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 1442, 375, 376, 1443, 1444, 1203, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 1445, 389, 654, 1446, 655, 390, 1447, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 1205, 396,
	397, 1448, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 1449, 1204, 406, 659, 660,
	1450, 661, 1451, 408, 409, 1206, 662, 1207, 410, 411,
	412, 1208, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1452, 420, 422, 421, 1453, 423, 663, 1209,
	424, 425, 1210, 1454, 426, 0, 0, 0, 427, 428,
	431, 1455, 1456, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 1211, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 1212, 471, 460, 1457,
	279, 1213, 472, 473, 1458, 664, 474, 665, 476, 477,
	1459, 0, 478, 0, 1460, 1461, 480, 481, 482, 1462,
	1463, 483, 484, 666, 1214, 485, 1215, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	1464, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 1465, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 1466, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 1467, 537, 538, 539,
	1216, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 1468, 562, 563, 561, 564, 565, 566, 1469, 567,
	568, 550, 551, 569, 570, 1217, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 1470, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 1471, 594, 595, 0, 591, 582, 1472,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 1473,
	604, 677, 678, 679, 680, 1474, 613, 1475, 605, 606,
	607, 681, 608, 682, 1476, 609, 610, 611, 612, 0,
	614, 615, 1477, 1478, 616, 617, 618, 620, 621, 619,
	622, 1479, 623, 1480, 0, 624, 625, 626, 683, 684,
	685, 1481, 628, 627, 629, 686, 1482, 630, 1483, 1484,
	1485, 1486, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4223, 280, 282, 281, 283, 284, 285, 286, 1407, 287,
	288, 1408, 1409, 1410, 0, 1411, 636, 1412, 1413, 1414,
	1415, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 1416, 641, 299,
	300, 301, 302, 303, 304, 1417, 1418, 0, 305, 642,
	643, 644, 1419, 306, 307, 645, 1420, 1346, 1421, 308,
	309, 310, 311, 312, 313, 314, 0, 1422, 316, 317,
	318, 315, 319, 1423, 320, 0, 321, 322, 323, 324,
	325, 326, 1424, 327, 328, 329, 1202, 330, 331, 332,
	1425, 1426, 1428, 1427, 1429, 1430, 1431, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 1432, 343, 339,
	341, 1433, 344, 342, 345, 1434, 346, 347, 348, 1435,
	1436, 349, 350, 351, 1437, 352, 353, 1438, 354, 355,
	356, 1439, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 1440, 277,
	1441, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 1442, 375, 376, 1443, 1444, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 1445, 389, 654, 1446, 655, 390, 1447,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 1448, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 1449, 1204, 406, 659,
	660, 1450, 661, 1451, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1452, 420, 422, 421, 1453, 423, 663,
	1209, 424, 425, 1210, 1454, 426, 0, 0, 0, 427,
	428, 431, 1455, 1456, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1457, 279, 1213, 472, 473, 1458, 664, 474, 665, 476,
	477, 1459, 0, 478, 0, 1460, 1461, 480, 481, 482,
	1462, 1463, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 1464, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 1465, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 1466, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 1467, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 1468, 562, 563, 561, 564, 565, 566, 1469,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 1470, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 1471, 594, 595, 0, 591, 582,
	1472, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	1473, 604, 677, 678, 679, 680, 1474, 613, 1475, 605,
	606, 607, 681, 608, 682, 1476, 609, 610, 611, 612,
	0, 614, 615, 1477, 1478, 616, 617, 618, 620, 621,
	619, 622, 1479, 623, 1480, 0, 624, 625, 626, 683,
	684, 685, 1481, 628, 627, 629, 686, 1482, 630, 1483,
	1484, 1485, 1486, 631, 632, 687, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4073, 280, 282, 281, 283, 284, 285, 286, 1407,
	287, 288, 1408, 1409, 1410, 0, 1411, 636, 1412, 1413,
	1414, 1415, 289, 290, 1201, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 1416, 641,
	299, 300, 301, 302, 303, 304, 1417, 1418, 0, 305,
	642, 643, 644, 1419, 306, 307, 645, 1420, 1346, 1421,
	308, 309, 310, 311, 312, 313, 314, 0, 1422, 316,
	317, 318, 315, 319, 1423, 320, 0, 321, 322, 323,
	324, 325, 326, 1424, 327, 328, 329, 1202, 330, 331,
	332, 1425, 1426, 1428, 1427, 1429, 1430, 1431, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 1432, 343,
	339, 341, 1433, 344, 342, 345, 1434, 346, 347, 348,
	1435, 1436, 349, 350, 351, 1437, 352, 353, 1438, 354,
	355, 356, 1439, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 1440,
	277, 1441, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 1442, 375, 376, 1443, 1444, 1203,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 1445, 389, 654, 1446, 655, 390,
	1447, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	1205, 396, 397, 1448, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 1449, 1204, 406,
	659, 660, 1450, 661, 1451, 408, 409, 1206, 662, 1207,
	410, 411, 412, 1208, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1452, 420, 422, 421, 1453, 423,
	663, 1209, 424, 425, 1210, 1454, 426, 0, 0, 0,
	427, 428, 431, 1455, 1456, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 1211, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 1212, 471,
	460, 1457, 279, 1213, 472, 473, 1458, 664, 474, 665,
	476, 477, 1459, 0, 478, 0, 1460, 1461, 480, 481,
	482, 1462, 1463, 483, 484, 666, 1214, 485, 1215, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 1464, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 1465, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 1466, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 1467, 537,
	538, 539, 1216, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 1468, 562, 563, 561, 564, 565, 566,
	1469, 567, 568, 550, 551, 569, 570, 1217, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 1470, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 1471, 594, 595, 0, 591,
	582, 1472, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 1473, 604, 677, 678, 679, 680, 1474, 613, 1475,
	605, 606, 607, 681, 608, 682, 1476, 609, 610, 611,
	612, 0, 614, 615, 1477, 1478, 616, 617, 618, 620,
	621, 619, 622, 1479, 623, 1480, 0, 624, 625, 626,
	683, 684, 685, 1481, 628, 627, 629, 686, 1482, 630,
	1483, 1484, 1485, 1486, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3767, 280, 282, 281, 283, 284, 285, 286,
	1407, 287, 288, 1408, 1409, 1410, 0, 1411, 636, 1412,
	1413, 1414, 1415, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 1416,
	641, 299, 300, 301, 302, 303, 304, 1417, 1418, 0,
	305, 642, 643, 644, 1419, 306, 307, 645, 1420, 1346,
	1421, 308, 309, 310, 311, 312, 313, 314, 0, 1422,
	316, 317, 318, 315, 319, 1423, 320, 0, 321, 322,
	323, 324, 325, 326, 1424, 327, 328, 329, 1202, 330,
	331, 332, 1425, 1426, 1428, 1427, 1429, 1430, 1431, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 1432,
	343, 339, 341, 1433, 344, 342, 345, 1434, 346, 347,
	348, 1435, 1436, 349, 350, 351, 1437, 352, 353, 1438,
	354, 355, 356, 1439, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	1440, 277, 1441, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 1442, 375, 376, 1443, 1444,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 1445, 389, 654, 1446, 655,
	390, 1447, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 1205, 396, 397, 1448, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 1449, 1204,
	406, 659, 660, 1450, 661, 1451, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1452, 420, 422, 421, 1453,
	423, 663, 1209, 424, 425, 1210, 1454, 426, 0, 0,
	0, 427, 428, 431, 1455, 1456, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 1457, 279, 1213, 472, 473, 1458, 664, 474,
	665, 476, 477, 1459, 0, 478, 0, 1460, 1461, 480,
	481, 482, 1462, 1463, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 1464, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 1465,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 1466, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 1467,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 1468, 562, 563, 561, 564, 565,
	566, 1469, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 1470,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 1471, 594, 595, 0,
	591, 582, 1472, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 1473, 604, 677, 678, 679, 680, 1474, 613,
	1475, 605, 606, 607, 681, 608, 682, 1476, 609, 610,
	611, 612, 0, 614, 615, 1477, 1478, 616, 617, 618,
	620, 621, 619, 622, 1479, 623, 1480, 0, 624, 625,
	626, 683, 684, 685, 1481, 628, 627, 629, 686, 1482,
	630, 1483, 1484, 1485, 1486, 631, 632, 687, 633, 634,
	635, 0, 0, 0, 0, 0, 0, 1402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3590, 280, 282, 281, 283, 284, 285,
	286, 1407, 287, 288, 1408, 1409, 1410, 0, 1411, 636,
	1412, 1413, 1414, 1415, 289, 290, 1201, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	1416, 641, 299, 300, 301, 302, 303, 304, 1417, 1418,
	0, 305, 642, 643, 644, 1419, 306, 307, 645, 1420,
	1346, 1421, 308, 309, 310, 311, 312, 313, 314, 0,
	1422, 316, 317, 318, 315, 319, 1423, 320, 0, 321,
	322, 323, 324, 325, 326, 1424, 327, 328, 329, 1202,
	330, 331, 332, 1425, 1426, 1428, 1427, 1429, 1430, 1431,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	1432, 343, 339, 341, 1433, 344, 342, 345, 1434, 346,
	347, 348, 1435, 1436, 349, 350, 351, 1437, 352, 353,
	1438, 354, 355, 356, 1439, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 1440, 277, 1441, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 1442, 375, 376, 1443,
	1444, 1203, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 1445, 389, 654, 1446,
	655, 390, 1447, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 1205, 396, 397, 1448, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 1449,
	1204, 406, 659, 660, 1450, 661, 1451, 408, 409, 1206,
	662, 1207, 410, 411, 412, 1208, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1452, 420, 422, 421,
	1453, 423, 663, 1209, 424, 425, 1210, 1454, 426, 0,
	0, 0, 427, 428, 431, 1455, 1456, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 1211, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	1212, 471, 460, 1457, 279, 1213, 472, 473, 1458, 664,
	474, 665, 476, 477, 1459, 0, 478, 0, 1460, 1461,
	480, 481, 482, 1462, 1463, 483, 484, 666, 1214, 485,
	1215, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 1464, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	1465, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 1466, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	1467, 537, 538, 539, 1216, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 1468, 562, 563, 561, 564,
	565, 566, 1469, 567, 568, 550, 551, 569, 570, 1217,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	1470, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 1471, 594, 595,
	0, 591, 582, 1472, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 1473, 604, 677, 678, 679, 680, 1474,
	613, 1475, 605, 606, 607, 681, 608, 682, 1476, 609,
	610, 611, 612, 0, 614, 615, 1477, 1478, 616, 617,
	618, 620, 621, 619, 622, 1479, 623, 1480, 0, 624,
	625, 626, 683, 684, 685, 1481, 628, 627, 629, 686,
	1482, 630, 1483, 1484, 1485, 1486, 631, 632, 687, 633,
	634, 635, 0, 0, 0, 0, 0, 0, 1402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2624, 280, 282, 281, 283, 284,
	285, 286, 1407, 287, 288, 1408, 1409, 1410, 0, 1411,
	636, 1412, 1413, 1414, 1415, 289, 290, 1201, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 1416, 641, 299, 300, 301, 302, 303, 304, 1417,
	1418, 0, 305, 642, 643, 644, 1419, 306, 307, 645,
	1420, 1346, 1421, 308, 309, 310, 311, 312, 313, 314,
	0, 1422, 316, 317, 318, 315, 319, 1423, 320, 0,
	321, 322, 323, 324, 325, 326, 1424, 327, 328, 329,
	1202, 330, 331, 332, 1425, 1426, 1428, 1427, 1429, 1430,
	1431, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 1432, 343, 339, 341, 1433, 344, 342, 345, 1434,
	346, 347, 348, 1435, 1436, 349, 350, 351, 1437, 352,
	353, 1438, 354, 355, 356, 1439, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 1440, 277, 1441, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 1442, 375, 376,
	1443, 1444, 1203, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 1445, 389, 654,
	1446, 655, 390, 1447, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 1205, 396, 397, 1448, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	1449, 1204, 406, 659, 660, 1450, 661, 1451, 408, 409,
	1206, 662, 1207, 410, 411, 412, 1208, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1452, 420, 422,
	421, 1453, 423, 663, 1209, 424, 425, 1210, 1454, 426,
	0, 0, 0, 427, 428, 431, 1455, 1456, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 1211, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 1212, 471, 460, 1457, 279, 1213, 472, 473, 1458,
	664, 474, 665, 476, 477, 1459, 0, 478, 0, 1460,
	1461, 480, 481, 482, 1462, 1463, 483, 484, 666, 1214,
	485, 1215, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 1464, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 1465, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 1466, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 1467, 537, 538, 539, 1216, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 1468, 562, 563, 561,
	564, 565, 566, 1469, 567, 568, 550, 551, 569, 570,
	1217, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 1470, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 1471, 594,
	595, 0, 591, 582, 1472, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 1473, 604, 677, 678, 679, 680,
	1474, 613, 1475, 605, 606, 607, 681, 608, 682, 1476,
	609, 610, 611, 612, 0, 614, 615, 1477, 1478, 616,
	617, 618, 620, 621, 619, 622, 1479, 623, 1480, 0,
	624, 625, 626, 683, 684, 685, 1481, 628, 627, 629,
	686, 1482, 630, 1483, 1484, 1485, 1486, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 1498, 0, 1402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2252, 280, 282, 281, 283,
	284, 285, 286, 1407, 287, 288, 1408, 1409, 1410, 0,
	1411, 636, 1412, 1413, 1414, 1415, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 1416, 641, 299, 300, 301, 302, 303, 304,
	1417, 1418, 0, 305, 642, 643, 644, 1419, 306, 307,
	645, 1420, 1346, 1421, 308, 309, 310, 311, 312, 313,
	314, 0, 1422, 316, 317, 318, 315, 319, 1423, 320,
	0, 321, 322, 323, 324, 325, 326, 1424, 327, 328,
	329, 1202, 330, 331, 332, 1425, 1426, 1428, 1427, 1429,
	1430, 1431, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 1432, 343, 339, 341, 1433, 344, 342, 345,
	1434, 346, 347, 348, 1435, 1436, 349, 350, 351, 1437,
	352, 353, 1438, 354, 355, 356, 1439, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 1440, 277, 1441, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 1442, 375,
	376, 1443, 1444, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 1445, 389,
	654, 1446, 655, 390, 1447, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 1205, 396, 397, 1448, 398, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	407, 1449, 1204, 406, 659, 660, 1450, 661, 1451, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1452, 420,
	422, 421, 1453, 423, 663, 1209, 424, 425, 1210, 1454,
	426, 0, 0, 0, 427, 428, 431, 1455, 1456, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 1457, 279, 1213, 472, 473,
	1458, 664, 474, 665, 476, 477, 1459, 0, 478, 0,
	1460, 1461, 480, 481, 482, 1462, 1463, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 1464, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 1465, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 1466,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 1467, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 1468, 562, 563,
	561, 564, 565, 566, 1469, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 1470, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 1471,
	594, 595, 0, 591, 582, 1472, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 1473, 604, 677, 678, 679,
	680, 1474, 613, 1475, 605, 606, 607, 681, 608, 682,
	1476, 609, 610, 611, 612, 0, 614, 615, 1477, 1478,
	616, 617, 618, 620, 621, 619, 622, 1479, 623, 1480,
	0, 624, 625, 626, 683, 684, 685, 1481, 628, 627,
	629, 686, 1482, 630, 1483, 1484, 1485, 1486, 631, 632,
	687, 633, 634, 635, 1399, 0, 1402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1407, 287, 288, 1408, 1409, 1410, 0, 1411, 636, 1412,
	1413, 1414, 1415, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 1416,
	641, 299, 300, 301, 302, 303, 304, 1417, 1418, 0,
	305, 642, 643, 644, 1419, 306, 307, 645, 1420, 1346,
	1421, 308, 309, 310, 311, 312, 313, 314, 0, 1422,
	316, 317, 318, 315, 319, 1423, 320, 0, 321, 322,
	323, 324, 325, 326, 1424, 327, 328, 329, 1202, 330,
	331, 332, 1425, 1426, 1428, 1427, 1429, 1430, 1431, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 1432,
	343, 339, 341, 1433, 344, 342, 345, 1434, 346, 347,
	348, 1435, 1436, 349, 350, 351, 1437, 352, 353, 1438,
	354, 355, 356, 1439, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	1440, 277, 1441, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 1442, 375, 376, 1443, 1444,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 1445, 389, 654, 1446, 655,
	390, 1447, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 1205, 396, 397, 1448, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 1449, 1204,
	406, 659, 660, 1450, 661, 1451, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1452, 420, 422, 421, 1453,
	423, 663, 1209, 424, 425, 1210, 1454, 426, 0, 0,
	0, 427, 428, 431, 1455, 1456, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 1457, 279, 1213, 472, 473, 1458, 664, 474,
	665, 476, 477, 1459, 0, 478, 0, 1460, 1461, 480,
	481, 482, 1462, 1463, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 1464, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 1465,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 1466, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 1467,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 1468, 562, 563, 561, 564, 565,
	566, 1469, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 1470,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 1471, 594, 595, 0,
	591, 582, 1472, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 1473, 604, 677, 678, 679, 680, 1474, 613,
	1475, 605, 606, 607, 681, 608, 682, 1476, 609, 610,
	611, 612, 0, 614, 615, 1477, 1478, 616, 617, 618,
	620, 621, 619, 622, 1479, 623, 1480, 0, 624, 625,
	626, 683, 684, 685, 1481, 628, 627, 629, 686, 1482,
	630, 1483, 1484, 1485, 1486, 631, 632, 687, 633, 634,
	635, 1402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 1407, 287, 288, 1408, 1409,
	1410, 0, 1411, 636, 1412, 1413, 1414, 1415, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 1416, 641, 299, 300, 301, 302,
	303, 304, 1417, 1418, 0, 305, 642, 643, 644, 1419,
	306, 307, 645, 1420, 1346, 1421, 308, 309, 310, 311,
	312, 313, 314, 0, 1422, 316, 317, 318, 315, 319,
	1423, 320, 0, 321, 322, 323, 324, 325, 326, 1424,
	327, 328, 329, 1202, 330, 331, 332, 1425, 1426, 1428,
	1427, 1429, 1430, 1431, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 1432, 343, 339, 341, 1433, 344,
	342, 345, 1434, 346, 347, 348, 1435, 1436, 349, 350,
	351, 1437, 352, 353, 1438, 354, 355, 356, 1439, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 1440, 277, 1441, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	1442, 375, 376, 1443, 1444, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	1445, 389, 654, 1446, 655, 390, 1447, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 1205, 396, 397, 1448,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 1449, 1204, 406, 659, 660, 1450, 661,
	1451, 408, 409, 1206, 662, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1452, 420, 422, 421, 1453, 423, 663, 1209, 424, 425,
	1210, 1454, 426, 0, 0, 0, 427, 428, 431, 1455,
	1456, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1457, 279, 1213,
	472, 473, 1458, 664, 474, 665, 476, 477, 1459, 0,
	478, 0, 1460, 1461, 480, 481, 482, 1462, 1463, 483,
	484, 666, 1214, 485, 1215, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 1464, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 1465, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 1466, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 1467, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 1468,
	562, 563, 561, 564, 565, 566, 1469, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 1470, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 1471, 594, 595, 0, 591, 582, 1472, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 1473, 604, 677,
	678, 679, 680, 1474, 613, 1475, 605, 606, 607, 681,
	608, 682, 1476, 609, 610, 611, 612, 0, 614, 615,
	1477, 1478, 616, 617, 618, 620, 621, 619, 622, 1479,
	623, 1480, 0, 624, 625, 626, 683, 684, 685, 1481,
	628, 627, 629, 686, 1482, 630, 1483, 1484, 1485, 1486,
	631, 632, 687, 633, 634, 635, 2599, 0, 1137, 1109,
	1110, 1111, 1107, 1108, 1120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 2596, 287, 288, 0, 0, 0, 0, 0,
	1161, 1125, 0, 0, 0, 289, 290, 1201, 291, 292,
	293, 294, 295, 296, 637, 1174, 0, 297, 1181, 298,
	1180, 0, 1191, 299, 300, 301, 302, 303, 304, 1127,
	1160, 1092, 305, 1221, 1222, 644, 0, 306, 307, 1167,
	0, 1148, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1202, 330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152,
	1156, 333, 334, 335, 336, 337, 1184, 338, 340, 1178,
	1177, 1097, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 2597, 0, 349, 1169, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1103, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1192,
	1193, 370, 1116, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1176, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 1203, 377, 378, 379, 1189, 1190, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 1199,
	0, 1126, 390, 0, 391, 392, 393, 394, 395, 1162,
	1163, 1166, 475, 1205, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 1204, 406, 1171, 1172, 0, 1132, 0, 408, 409,
	1206, 1164, 1207, 410, 411, 412, 1208, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1200, 1209, 424, 425, 1210, 0, 426,
	0, 0, 0, 427, 428, 431, 1155, 1154, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 1211, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 1212, 471, 460, 1094, 279, 1213, 472, 473, 1117,
	1165, 474, 1179, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 1214,
	485, 1215, 1194, 486, 487, 1104, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 1195, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 1175, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 1216, 540, 541, 542, 543,
	544, 1105, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 1158, 567, 568, 550, 551, 569, 570,
	1217, 571, 572, 573, 574, 575, 576, 577, 1173, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	1220, 585, 586, 587, 588, 1196, 592, 593, 0, 594,
	595, 1091, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 1185, 1186, 1187, 1188,
	0, 613, 0, 605, 606, 607, 1197, 608, 1198, 1115,
	609, 610, 611, 612, 0, 614, 615, 0, 1098, 616,
	617, 618, 620, 621, 619, 622, 1159, 623, 0, 0,
	624, 625, 626, 683, 1182, 1219, 2595, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 1088, 1089, 2598, 0, 0, 0, 0,
	0, 0, 1121, 2594, 0, 1081, 1119, 1137, 1109, 1110,
	1111, 1107, 1108, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1161,
	1125, 0, 0, 0, 289, 290, 1201, 291, 292, 293,
	294, 295, 296, 637, 1174, 0, 297, 1181, 298, 1180,
	0, 1191, 299, 300, 301, 302, 303, 304, 1127, 1160,
	1092, 305, 1221, 1222, 644, 0, 306, 307, 1167, 0,
	1148, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1202,
	330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152, 1156,
	333, 334, 335, 336, 337, 1184, 338, 340, 1178, 1177,
	1097, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1169, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1103, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1192, 1193,
	370, 1116, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1176, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 1203, 377, 378, 379, 1189, 1190, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1199, 0,
	1126, 390, 0, 391, 392, 393, 394, 395, 1162, 1163,
	1166, 475, 1205, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	1204, 406, 1171, 1172, 0, 1132, 0, 408, 409, 1206,
	1164, 1207, 410, 411, 412, 1208, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1200, 1209, 424, 425, 1210, 0, 426, 0,
	0, 0, 427, 428, 431, 1155, 1154, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 1211, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	1212, 471, 460, 1094, 279, 1213, 472, 473, 1117, 1165,
	474, 1179, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 1214, 485,
	1215, 1194, 486, 487, 1104, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 1195, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 1175, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 1216, 540, 541, 542, 543, 544,
	1105, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 239, 562, 563, 561, 564,
	565, 566, 1158, 567, 568, 550, 551, 569, 570, 1217,
	571, 572, 573, 574, 575, 576, 577, 1173, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 1220,
	585, 586, 587, 588, 1196, 592, 593, 0, 594, 595,
	1091, 591, 582, 241, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 1185, 1186, 1187, 1188, 0,
	613, 0, 605, 606, 607, 1197, 608, 1198, 1115, 609,
	610, 611, 612, 0, 614, 615, 0, 1098, 616, 617,
	618, 620, 621, 619, 622, 1159, 623, 0, 0, 624,
	625, 626, 1626, 1182, 1219, 0, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 233, 631, 632, 687, 633,
	634, 635, 1095, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 1088, 1089, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 1885, 1883, 0, 0, 1119, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 239, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	241, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 1626,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 233, 631, 632, 687, 633, 634, 635, 1095,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 1885, 3236,
	0, 0, 1119, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 239,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 241, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 1626, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 233,
	631, 632, 687, 633, 634, 635, 1095, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 1137, 1109,
	1110, 1111, 1107, 1108, 1120, 1885, 1883, 0, 0, 1119,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1161, 1125, 0, 0, 0, 289, 290, 1201, 291, 292,
	293, 294, 295, 296, 637, 1174, 0, 297, 1181, 298,
	1180, 2730, 1191, 299, 300, 301, 302, 303, 304, 1127,
	1160, 1092, 305, 1221, 1222, 644, 0, 306, 307, 1167,
	0, 1148, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1202, 330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152,
	1156, 333, 334, 335, 336, 337, 1184, 338, 340, 1178,
	1177, 1097, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1169, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1103, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1192,
	1193, 370, 1116, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1176, 0, 0, 0, 374, 0, 375, 376,
	0, 2735, 1203, 377, 378, 379, 1189, 1190, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 1199,
	0, 1126, 390, 0, 391, 392, 393, 394, 395, 1162,
	1163, 1166, 475, 1205, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 1204, 406, 1171, 1172, 0, 1132, 0, 408, 409,
	1206, 1164, 1207, 410, 411, 412, 1208, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 2731, 423, 1200, 1209, 424, 425, 1210, 0, 426,
	0, 0, 0, 427, 428, 431, 1155, 1154, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 1211, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 1212, 471, 460, 1094, 279, 1213, 472, 473, 1117,
	1165, 474, 1179, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 1214,
	485, 1215, 1194, 486, 487, 1104, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 1195, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 1175, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 1216, 540, 541, 542, 543,
	544, 1105, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 1158, 567, 568, 550, 551, 569, 570,
	1217, 571, 572, 573, 574, 575, 576, 577, 1173, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	1220, 585, 586, 587, 588, 1196, 592, 593, 0, 594,
	595, 1091, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 1185, 1186, 1187, 1188,
	0, 613, 2732, 605, 606, 607, 1197, 608, 1198, 1115,
	609, 610, 611, 612, 0, 614, 615, 0, 1098, 616,
	617, 618, 620, 621, 619, 622, 1159, 623, 0, 0,
	624, 625, 626, 683, 1182, 1219, 0, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 1095, 0, 0, 2644, 0, 1137, 1109,
	1110, 1111, 1107, 1108, 1120, 0, 1090, 0, 0, 0,
	0, 0, 0, 1088, 1089, 280, 282, 281, 283, 284,
	285, 286, 1121, 287, 288, 0, 1119, 0, 0, 0,
	1161, 1125, 0, 0, 0, 289, 290, 1201, 291, 292,
	293, 294, 295, 296, 637, 1174, 0, 297, 1181, 298,
	1180, 0, 1191, 299, 300, 301, 302, 303, 304, 1127,
	1160, 1092, 305, 1221, 1222, 644, 0, 306, 307, 1167,
	0, 1148, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1202, 330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152,
	1156, 333, 334, 335, 336, 337, 1184, 338, 340, 1178,
	1177, 1097, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1169, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1103, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1192,
	1193, 370, 1116, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1176, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 1203, 377, 378, 379, 1189, 1190, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 1199,
	0, 1126, 390, 0, 391, 392, 393, 394, 395, 1162,
	1163, 1166, 475, 1205, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 1204, 406, 1171, 1172, 0, 1132, 0, 408, 409,
	1206, 1164, 1207, 410, 411, 412, 1208, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1200, 1209, 424, 425, 1210, 0, 426,
	0, 0, 0, 427, 428, 431, 1155, 1154, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 1211, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 1212, 471, 460, 1094, 279, 1213, 472, 473, 1117,
	1165, 474, 1179, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 1214,
	485, 1215, 1194, 486, 487, 1104, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 1195, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 1175, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 1216, 540, 541, 542, 543,
	544, 1105, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 1158, 567, 568, 550, 551, 569, 570,
	1217, 571, 572, 573, 574, 575, 576, 577, 1173, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	1220, 585, 586, 587, 588, 1196, 592, 593, 0, 594,
	595, 1091, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 1185, 1186, 1187, 1188,
	0, 613, 0, 605, 606, 607, 1197, 608, 1198, 1115,
	609, 610, 611, 612, 0, 614, 615, 0, 1098, 616,
	617, 618, 620, 621, 619, 622, 1159, 623, 0, 0,
	624, 625, 626, 683, 1182, 1219, 0, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 1088, 1089, 0, 0, 0, 0, 0,
	0, 0, 1121, 2642, 0, 2641, 1119, 1137, 1109, 1110,
	1111, 1107, 1108, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1161,
	1125, 0, 0, 0, 289, 290, 1201, 291, 292, 293,
	294, 295, 296, 637, 1174, 0, 297, 1181, 298, 1180,
	0, 1191, 299, 300, 301, 302, 303, 304, 1127, 1160,
	1092, 305, 1221, 1222, 644, 0, 306, 307, 1167, 0,
	1148, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1202,
	330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152, 1156,
	333, 334, 335, 336, 337, 1184, 338, 340, 1178, 1177,
	1097, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1169, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1103, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1192, 1193,
	370, 1116, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1176, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 1203, 377, 378, 379, 1189, 1190, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1199, 0,
	1126, 390, 0, 391, 392, 393, 394, 395, 1162, 1163,
	1166, 475, 1205, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	1204, 406, 1171, 1172, 0, 1132, 0, 408, 409, 1206,
	1164, 1207, 410, 411, 412, 1208, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1200, 1209, 424, 425, 1210, 0, 426, 0,
	0, 0, 427, 428, 431, 1155, 1154, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 1211, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	1212, 471, 460, 1094, 279, 1213, 472, 473, 1117, 1165,
	474, 1179, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 1214, 485,
	1215, 1194, 486, 487, 1104, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 1195, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 1175, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 1216, 540, 541, 542, 543, 544,
	1105, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 1158, 567, 568, 550, 551, 569, 570, 1217,
	571, 572, 573, 574, 575, 576, 577, 1173, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 1220,
	585, 586, 587, 588, 1196, 592, 593, 0, 594, 595,
	1091, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 1185, 1186, 1187, 1188, 0,
	613, 0, 605, 606, 607, 1197, 608, 1198, 1115, 609,
	610, 611, 612, 0, 614, 615, 0, 1098, 616, 617,
	618, 620, 621, 619, 622, 1159, 623, 0, 0, 624,
	625, 626, 683, 1182, 1219, 0, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 1088, 1089, 0, 0, 0, 0, 0, 0,
	0, 1121, 2639, 0, 2638, 1119, 1137, 1109, 1110, 1111,
	1107, 1108, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1161, 1125,
	0, 0, 0, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 1174, 0, 297, 1181, 298, 1180, 0,
	1191, 299, 300, 301, 302, 303, 304, 1127, 1160, 1092,
	305, 1221, 1222, 644, 0, 306, 307, 1167, 0, 1148,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1202, 330,
	331, 332, 1151, 1149, 1150, 1157, 1153, 1152, 1156, 333,
	334, 335, 336, 337, 1184, 338, 340, 1178, 1177, 1097,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1169, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1103, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1192, 1193, 370,
	1116, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1176, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	1203, 377, 378, 379, 1189, 1190, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 1199, 0, 1126,
	390, 0, 391, 392, 393, 394, 395, 1162, 1163, 1166,
	475, 1205, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 0, 1204,
	406, 1171, 1172, 0, 1132, 0, 408, 409, 1206, 1164,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1200, 1209, 424, 425, 1210, 0, 426, 0, 0,
	0, 427, 428, 431, 1155, 1154, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 1094, 279, 1213, 472, 473, 1117, 1165, 474,
	1179, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 1214, 485, 1215,
	1194, 486, 487, 1104, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 1195, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	1175, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 1105,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 1158, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 1173, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 1220, 585,
	586, 587, 588, 1196, 592, 593, 0, 594, 595, 1091,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 1185, 1186, 1187, 1188, 0, 613,
	0, 605, 606, 607, 1197, 608, 1198, 1115, 609, 610,
	611, 612, 0, 614, 615, 0, 1098, 616, 617, 618,
	620, 621, 619, 622, 1159, 623, 0, 0, 624, 625,
	626, 683, 1182, 1219, 0, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 0, 0, 0, 0,
	0, 1088, 1089, 0, 0, 0, 0, 0, 0, 0,
	1121, 2636, 0, 2635, 1119, 1137, 1109, 1110, 1111, 1107,
	1108, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1161, 1125, 0,
	0, 0, 289, 290, 1201, 291, 292, 293, 294, 295,
	296, 637, 1174, 0, 297, 1181, 298, 1180, 0, 1191,
	299, 300, 301, 302, 303, 304, 1127, 1160, 1092, 305,
	1221, 1222, 644, 0, 306, 307, 1167, 0, 1148, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1202, 330, 331,
	332, 1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334,
	335, 336, 337, 1184, 338, 340, 1178, 1177, 1097, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1169, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1103, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1192, 1193, 370, 1116,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1176,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 1203,
	377, 378, 379, 1189, 1190, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 1199, 0, 1126, 390,
	0, 391, 392, 393, 394, 395, 1162, 1163, 1166, 475,
	1205, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 1204, 406,
	1171, 1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207,
	410, 411, 412, 1208, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1200, 1209, 424, 425, 1210, 0, 426, 0, 0, 0,
	427, 428, 431, 1155, 1154, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 1211, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 1212, 471,
	460, 1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 1214, 485, 1215, 1194,
	486, 487, 1104, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 1195, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 1175,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 1216, 540, 541, 542, 543, 544, 1105, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	1158, 567, 568, 550, 551, 569, 570, 1217, 571, 572,
	573, 574, 575, 576, 577, 1173, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 1220, 585, 586,
	587, 588, 1196, 592, 593, 0, 594, 595, 1091, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 1185, 1186, 1187, 1188, 0, 613, 0,
	605, 606, 607, 1197, 608, 1198, 1115, 609, 610, 611,
	612, 0, 614, 615, 0, 1098, 616, 617, 618, 620,
	621, 619, 622, 1159, 623, 0, 0, 624, 625, 626,
	683, 1182, 1219, 0, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	1088, 1089, 0, 0, 0, 0, 0, 0, 0, 1121,
	2633, 0, 1726, 1119, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 1725,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 1084, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 1099, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4701, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 1099, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 2476, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 2475, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 1099, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4437, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 279, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 1099, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108,
	1120, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 280, 282, 281, 283, 284, 285, 286, 1121, 287,
	288, 0, 1119, 0, 0, 0, 1161, 1125, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 1174, 0, 297, 1181, 298, 1180, 0, 1191, 299,
	300, 301, 302, 303, 304, 1127, 1160, 1092, 305, 1221,
	1222, 644, 0, 306, 307, 1167, 0, 1148, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335,
	336, 337, 1184, 338, 340, 1178, 1177, 1097, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1103, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1192, 1193, 370, 1116, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1176, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 1189, 1190, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1199, 0, 1126, 390, 0,
	391, 392, 393, 394, 395, 1162, 1163, 1166, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 1204, 406, 1171,
	1172, 0, 1132, 0, 408, 409, 1206, 1164, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1200,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 1155, 1154, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	1094, 4032, 1213, 472, 473, 1117, 1165, 474, 1179, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 1194, 486,
	487, 1104, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 1195, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 1175, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 1105, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 1158,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 1173, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 1220, 585, 586, 587,
	588, 1196, 592, 593, 0, 594, 595, 1091, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 1185, 1186, 1187, 1188, 0, 613, 0, 605,
	606, 607, 1197, 608, 1198, 1115, 609, 610, 611, 612,
	0, 614, 615, 0, 1098, 616, 617, 618, 620, 621,
	619, 622, 1159, 623, 0, 0, 624, 625, 626, 683,
	1182, 1219, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 1088,
	1089, 1954, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 1119, 1137, 1109, 1110, 1111, 1107, 1108, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1161, 1125, 0, 0, 0,
	289, 290, 1201, 291, 292, 293, 294, 295, 296, 637,
	1174, 0, 297, 1181, 298, 1180, 0, 1191, 299, 300,
	301, 302, 303, 304, 1127, 1160, 1092, 305, 1221, 1222,
	644, 0, 306, 307, 1167, 0, 1148, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1202, 330, 331, 332, 1151,
	1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335, 336,
	337, 1184, 338, 340, 1178, 1177, 1097, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1169, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1103, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1192, 1193, 370, 1116, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1176, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 1203, 377, 378,
	379, 1189, 1190, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1199, 0, 1126, 390, 0, 391,
	392, 393, 394, 395, 1162, 1163, 1166, 475, 1205, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 1204, 406, 1171, 1172,
	0, 1132, 0, 408, 409, 1206, 1164, 1207, 410, 411,
	412, 1208, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1200, 1209,
	424, 425, 1210, 0, 426, 0, 0, 0, 427, 428,
	431, 1155, 1154, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 1211, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 1212, 471, 460, 1094,
	279, 1213, 472, 473, 1117, 1165, 474, 1179, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 1214, 485, 1215, 1194, 486, 487,
	1104, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 1195, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 1175, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	1216, 540, 541, 542, 543, 544, 1105, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 1158, 567,
	568, 550, 551, 569, 570, 1217, 571, 572, 573, 574,
	575, 576, 577, 1173, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 1220, 585, 586, 587, 588,
	1196, 592, 593, 0, 594, 595, 1091, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 1185, 1186, 1187, 1188, 0, 613, 0, 605, 606,
	607, 1197, 608, 1198, 1115, 609, 610, 611, 612, 0,
	614, 615, 0, 1098, 616, 617, 618, 620, 621, 619,
	622, 1159, 623, 0, 0, 624, 625, 626, 683, 1182,
	1219, 3745, 628, 627, 629, 686, 0, 630, 0, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 1095, 0,
	0, 0, 0, 1137, 1109, 1110, 1111, 1107, 1108, 1120,
	0, 1090, 0, 0, 0, 0, 0, 0, 1088, 1089,
	280, 282, 281, 283, 284, 285, 286, 1121, 287, 288,
	0, 1119, 0, 0, 0, 1161, 1125, 0, 0, 0,
	289, 290, 1201, 291, 292, 293, 294, 295, 296, 637,
	1174, 0, 297, 1181, 298, 1180, 0, 1191, 299, 300,
	301, 302, 303, 304, 1127, 1160, 1092, 305, 1221, 1222,
	644, 0, 306, 307, 1167, 0, 1148, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1202, 330, 331, 332, 1151,
	1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335, 336,
	337, 1184, 338, 340, 1178, 1177, 1097, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1169, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1103, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1192, 1193, 370, 1116, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1176, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 1203, 377, 378,
	379, 1189, 1190, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1199, 0, 1126, 390, 0, 391,
	392, 393, 394, 395, 1162, 1163, 1166, 475, 1205, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 1204, 406, 1171, 1172,
	0, 1132, 0, 408, 409, 1206, 1164, 1207, 410, 411,
	412, 1208, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1200, 1209,
	424, 425, 1210, 0, 426, 0, 0, 0, 427, 428,
	431, 1155, 1154, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 1211, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 1212, 471, 460, 1094,
	279, 1213, 472, 473, 1117, 1165, 474, 1179, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 1214, 485, 1215, 1194, 486, 487,
	1104, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 1195, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 1175, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	1216, 540, 541, 542, 543, 544, 1105, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 1158, 567,
	568, 550, 551, 569, 570, 1217, 571, 572, 573, 574,
	575, 576, 577, 1173, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 1220, 585, 586, 587, 588,
	1196, 592, 593, 0, 594, 595, 1091, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 1185, 1186, 1187, 1188, 0, 613, 0, 605, 606,
	607, 1197, 608, 1198, 1115, 609, 610, 611, 612, 0,
	614, 615, 0, 1098, 616, 617, 618, 620, 621, 619,
	622, 1159, 623, 0, 0, 624, 625, 626, 683, 1182,
	1219, 0, 628, 627, 629, 686, 0, 630, 0, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 0, 0, 0, 0, 0, 1088, 1089,
	1954, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 1119, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1161, 1125, 0, 0, 0, 289,
	290, 1201, 291, 292, 293, 294, 295, 296, 637, 1174,
	0, 297, 1181, 298, 1180, 0, 1191, 299, 300, 301,
	302, 303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644,
	0, 306, 307, 1167, 0, 1148, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1202, 330, 331, 332, 1151, 1149,
	1150, 1157, 1153, 1152, 1156, 333, 334, 335, 336, 337,
	1184, 338, 340, 1178, 1177, 1097, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1169, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1103, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1192, 1193, 370, 1116, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1176, 0, 0, 0,
	374, 0, 375, 376, 0, 2735, 1203, 377, 378, 379,
	1189, 1190, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 1199, 0, 1126, 390, 0, 391, 392,
	393, 394, 395, 1162, 1163, 1166, 475, 1205, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 0, 1204, 406, 1171, 1172, 0,
	1132, 0, 408, 409, 1206, 1164, 1207, 410, 411, 412,
	1208, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1200, 1209, 424,
	425, 1210, 0, 426, 0, 0, 0, 427, 428, 431,
	1155, 1154, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 1211, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 1212, 471, 460, 1094, 279,
	1213, 472, 473, 1117, 1165, 474, 1179, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 1214, 485, 1215, 1194, 486, 487, 1104,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	1195, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 1175, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 1216,
	540, 541, 542, 543, 544, 1105, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 1158, 567, 568,
	550, 551, 569, 570, 1217, 571, 572, 573, 574, 575,
	576, 577, 1173, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 1220, 585, 586, 587, 588, 1196,
	592, 593, 0, 594, 595, 1091, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	1185, 1186, 1187, 1188, 0, 613, 0, 605, 606, 607,
	1197, 608, 1198, 1115, 609, 610, 611, 612, 0, 614,
	615, 0, 1098, 616, 617, 618, 620, 621, 619, 622,
	1159, 623, 0, 0, 624, 625, 626, 683, 1182, 1219,
	0, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 1095, 0, 0,
	0, 0, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0,
	1090, 0, 0, 0, 0, 0, 0, 1088, 1089, 280,
	282, 281, 283, 284, 285, 286, 1121, 287, 288, 0,
	1119, 0, 0, 0, 1161, 1125, 0, 0, 0, 289,
	290, 1201, 291, 292, 293, 294, 295, 296, 637, 1174,
	0, 297, 1181, 298, 1180, 0, 1191, 299, 300, 301,
	302, 303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644,
	0, 306, 307, 1167, 0, 1148, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1202, 330, 331, 332, 1151, 1149,
	1150, 1157, 1153, 1152, 1156, 333, 334, 335, 336, 337,
	1184, 338, 340, 1178, 1177, 1097, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1169, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1103, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1192, 1193, 370, 1116, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1176, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 1203, 377, 378, 379,
	1189, 1190, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 1199, 0, 1126, 390, 0, 391, 392,
	393, 394, 395, 1162, 1163, 1166, 475, 1205, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 0, 1204, 406, 1171, 1172, 0,
	1132, 0, 408, 409, 1206, 1164, 1207, 410, 411, 412,
	1208, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1200, 1209, 424,
	425, 1210, 0, 426, 0, 0, 0, 427, 428, 431,
	1155, 1154, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 1211, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 1212, 471, 460, 1094, 279,
	1213, 472, 473, 1117, 1165, 474, 1179, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 1214, 485, 1215, 1194, 486, 487, 1104,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	1195, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 1175, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 1216,
	540, 541, 542, 543, 544, 1105, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 1158, 567, 568,
	550, 551, 569, 570, 1217, 571, 572, 573, 574, 575,
	576, 577, 1173, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 1220, 585, 586, 587, 588, 1196,
	592, 593, 0, 594, 595, 1091, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	1185, 1186, 1187, 1188, 0, 613, 0, 605, 606, 607,
	1197, 608, 1198, 1115, 609, 610, 611, 612, 0, 614,
	615, 0, 1098, 616, 617, 618, 620, 621, 619, 622,
	1159, 623, 0, 0, 624, 625, 626, 683, 1182, 1219,
	0, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 1088, 1089, 0,
	0, 0, 0, 0, 0, 0, 1121, 1883, 0, 2740,
	1119, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1095, 0, 0, 2738,
	0, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1095, 0, 0, 2726,
	0, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1095, 0, 0, 2714,
	0, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1095, 0, 0, 2712,
	0, 2703, 2710, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	2706, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	2707, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 2708, 441, 2705, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 2709, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 2704, 635, 1095, 0, 0, 2700,
	0, 2703, 2710, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	2706, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	2707, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 2708, 441, 2705, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 2709, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 2704, 635, 1095, 0, 0, 0,
	0, 1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 280, 282,
	281, 283, 284, 285, 286, 1121, 287, 288, 0, 1119,
	0, 0, 0, 1161, 1125, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 1174, 0,
	297, 1181, 298, 1180, 0, 1191, 299, 300, 301, 302,
	303, 304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 1184,
	338, 340, 1178, 1177, 1097, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1169,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1103, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 1116, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1176, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 1189,
	1190, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 1126, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 1171, 1172, 0, 1132,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 1094, 279, 1213,
	472, 473, 1117, 1165, 474, 1179, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 1104, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 1175, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 1105, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 1173, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 1220, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 1091, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 1185,
	1186, 1187, 1188, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 1115, 609, 610, 611, 612, 0, 614, 615,
	0, 1098, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 1182, 1219, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 1088, 1089, 0, 0,
	0, 0, 0, 1891, 0, 1121, 0, 0, 0, 1119,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 2455, 287, 288, 0, 0, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 2419, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 2394, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1731, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1660, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1655, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1642, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1637, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1546, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1545, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1540, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1539, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1533, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 1348, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 4750, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 4749, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 4748, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 4750, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 4749, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 4373, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 4374, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 4372, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 3203, 3204, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 3201, 3202, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 1095, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 1090, 0,
	0, 0, 0, 0, 0, 2463, 2464, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 0, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 0, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 2722, 0,
	0, 0, 0, 0, 0, 2720, 2721, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 0, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 0, 279, 1213, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 3196, 3197, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	1137, 1109, 1110, 1111, 1107, 1108, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 2135, 2136, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 1125, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 0, 1174, 0, 297,
	1181, 298, 1180, 0, 1191, 299, 300, 301, 302, 303,
	304, 1127, 1160, 1092, 305, 1221, 1222, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 4750, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 1184, 338,
	340, 1178, 1177, 1097, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1169, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1103, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 1116, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1176, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 1189, 1190,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 1126, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 1171, 1172, 0, 1132, 0,
	408, 409, 0, 1164, 0, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 1094, 279, 0, 472,
	473, 1117, 1165, 474, 1179, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 1104, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 1175, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 1105, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	1173, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 1220, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 1091, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 1185, 1186,
	1187, 1188, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 1115, 609, 610, 611, 612, 0, 4749, 615, 0,
	1098, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 683, 1182, 1219, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 1081, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1089, 280, 282, 281,
	283, 284, 285, 286, 1121, 287, 288, 0, 1119, 0,
	0, 0, 1161, 0, 0, 0, 0, 289, 290, 1201,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 1160, 0, 305, 642, 643, 644, 0, 306,
	307, 1167, 0, 1148, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157,
	1153, 1152, 1156, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1192, 1193, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 1203, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1199, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 1162, 1163, 1166, 475, 1205, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 1204, 406, 659, 660, 0, 661, 0,
	408, 409, 1206, 1164, 1207, 410, 411, 412, 1208, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1245,
	420, 422, 421, 0, 423, 1200, 1209, 424, 425, 1210,
	0, 426, 0, 0, 0, 427, 428, 431, 1155, 1154,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 1211,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 1212, 471, 460, 0, 279, 1213, 472,
	473, 0, 1165, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 1251, 480, 481, 482, 0, 0, 483, 484,
	666, 1214, 485, 1215, 1194, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 1195, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 1216, 540, 541,
	542, 543, 544, 673, 1253, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 239, 562,
	563, 561, 564, 565, 566, 1158, 567, 568, 550, 551,
	569, 570, 1217, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 1196, 592, 593,
	0, 594, 595, 0, 591, 582, 241, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 1197, 608,
	1198, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 1159, 623,
	0, 0, 624, 625, 626, 1626, 684, 685, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 233, 631,
	632, 687, 633, 634, 635, 1259, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 1249, 0, 1978, 0, 0, 1161, 0, 0,
	0, 0, 289, 290, 1201, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 1160, 0, 305,
	642, 643, 644, 0, 306, 307, 1167, 0, 1148, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1202, 330, 331,
	332, 1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1192, 1193, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 1203,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 1199, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 1162, 1163, 1166, 475,
	1205, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 1204, 406,
	659, 660, 0, 661, 0, 408, 409, 1206, 1164, 1207,
	410, 411, 412, 1208, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1245, 420, 422, 421, 0, 423,
	1200, 1209, 424, 425, 1210, 0, 426, 0, 0, 0,
	427, 428, 431, 1155, 1154, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 1211, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 1212, 471,
	460, 0, 279, 1213, 472, 473, 0, 1165, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 1251, 480, 481,
	482, 0, 0, 483, 484, 666, 1214, 485, 1215, 1194,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 1195, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 1216, 540, 541, 542, 543, 544, 673, 1253,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 239, 562, 563, 561, 564, 565, 566,
	1158, 567, 568, 550, 551, 569, 570, 1217, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 1196, 592, 593, 0, 594, 595, 0, 591,
	582, 241, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 1197, 608, 1198, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 1159, 623, 0, 0, 624, 625, 626,
	1626, 684, 685, 0, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 233, 631, 632, 687, 633, 634, 635,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 3360, 0, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 1978,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	289, 290, 1201, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 1160, 0, 305, 642, 643,
	644, 0, 306, 307, 1167, 0, 1148, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1202, 330, 331, 332, 1151,
	1149, 1150, 1157, 1153, 1152, 1156, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1192, 1193, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 1203, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1199, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1162, 1163, 1166, 475, 1205, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 1204, 406, 659, 660,
	0, 661, 0, 408, 409, 1206, 1164, 1207, 410, 411,
	412, 1208, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1245, 420, 422, 421, 0, 423, 1200, 1209,
	424, 425, 1210, 0, 426, 0, 0, 0, 427, 428,
	431, 1155, 1154, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 1211, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 1212, 471, 460, 0,
	279, 1213, 472, 473, 0, 1165, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 1251, 480, 481, 482, 0,
	0, 483, 484, 666, 1214, 485, 1215, 1194, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 1195, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	1216, 540, 541, 542, 543, 544, 673, 1253, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 1158, 567,
	568, 550, 551, 569, 570, 1217, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	1196, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 1197, 608, 1198, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 1159, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 0, 630, 0, 1241,
	0, 1259, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1161, 0, 1249, 0, 1247, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 1160, 0, 305, 642, 643, 644, 0,
	306, 307, 1167, 0, 1148, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 1151, 1149, 1150,
	1157, 1153, 1152, 1156, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1192, 1193, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1199, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 1162, 1163, 1166, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 1204, 406, 659, 660, 0, 661,
	0, 408, 409, 1206, 1164, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1245, 420, 422, 421, 0, 423, 1200, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 1155,
	1154, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 0, 279, 1213,
	472, 473, 0, 1165, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 1251, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 1194, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 1195,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 1253, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 1158, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 1196, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 1197,
	608, 1198, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 1159,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 1259,
	631, 632, 687, 633, 634, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1161, 0, 1249, 0, 1247, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 1160, 0, 305, 642, 643, 644, 0, 306, 307,
	1167, 0, 1148, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 1151, 1149, 1150, 1157, 1153,
	1152, 1156, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1192, 1193, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1199, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	1162, 1163, 1166, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 1164, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1245, 420,
	422, 421, 0, 423, 1200, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 1155, 1154, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 279, 1213, 472, 473,
	0, 1165, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 1251, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 1194, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 1195, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 1253, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 1158, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 1196, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 1197, 608, 1198,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 1159, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 1259, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1161,
	0, 1249, 0, 1247, 289, 290, 1201, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 1160,
	0, 305, 642, 643, 644, 0, 306, 307, 1167, 0,
	1148, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1202,
	330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152, 1156,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1192, 1193,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 1203, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1199, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 1162, 1163,
	1166, 475, 1205, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	1204, 406, 659, 660, 0, 661, 0, 408, 409, 1206,
	1164, 1207, 410, 411, 412, 1208, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1200, 1209, 424, 425, 1210, 0, 426, 0,
	0, 0, 427, 428, 431, 1155, 1154, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 1211, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	1212, 471, 460, 0, 279, 1213, 472, 473, 0, 1165,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 1214, 485,
	1215, 1194, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 1195, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 1216, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 1158, 567, 568, 550, 551, 569, 570, 1217,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 1196, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 1197, 608, 1198, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 1159, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 0, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 1259, 631, 632, 687, 633,
	634, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 4194, 289, 290, 1201, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 1160, 0, 305,
	642, 643, 644, 0, 306, 307, 1167, 0, 1148, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1202, 330, 331,
	332, 1151, 1149, 1150, 1157, 1153, 1152, 1156, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1192, 1193, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 1203,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 1199, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 1162, 1163, 1166, 475,
	1205, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 1204, 406,
	659, 660, 0, 661, 0, 408, 409, 1206, 1164, 1207,
	410, 411, 412, 1208, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1200, 1209, 424, 425, 1210, 0, 426, 0, 0, 0,
	427, 428, 431, 1155, 1154, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 1211, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 1212, 471,
	460, 0, 279, 1213, 472, 473, 0, 1165, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 1214, 485, 1215, 1194,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 1195, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 1216, 540, 541, 542, 543, 544, 673, 1253,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	1158, 567, 568, 550, 551, 569, 570, 1217, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 1196, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 1197, 608, 1198, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 1159, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 0, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	2567, 2568, 2569, 2586, 2587, 2588, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	2589, 0, 636, 0, 0, 0, 0, 289, 290, 1875,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 1860, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 2579, 0, 316, 317, 318, 315, 319, 0,
	320, 2575, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 2580, 2581, 2582,
	2583, 371, 372, 373, 651, 0, 0, 2574, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 2584, 2585, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 2577, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 2578, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 1859, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 1341, 2564, 2565, 2566, 2590, 2576,
	2570, 0, 2572, 2573, 2571, 2558, 2559, 2560, 2561, 2562,
	2563, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 1346, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 1204, 406, 659,
	660, 0, 661, 0, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	0, 0, 1213, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 239, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	241, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 1626,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 233, 631, 632, 687, 633, 634, 635, 0,
	0, 234, 1623, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 193, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 1346, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 1204, 406, 659,
	660, 0, 661, 0, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	0, 0, 1213, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 239, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	241, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 1626,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 233, 631, 632, 687, 633, 634, 635, 1341,
	1340, 234, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 193, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 1346, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 0, 1213, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 1341, 1340, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 1650, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 1346, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 1204, 406, 659,
	660, 0, 661, 0, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	0, 0, 1213, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1341,
	1340, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 3657, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 1346, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 0, 1213, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 2335, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 1341, 2244, 0, 0, 0, 0,
	2245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 1650, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 1346, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 1204, 406, 659,
	660, 0, 661, 0, 408, 409, 1206, 662, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 2243, 422, 421, 0, 423, 663,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	0, 0, 1213, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 1214, 485, 1215, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1341,
	1340, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 1650, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 1346, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 0, 1213, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 1081, 630, 274, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 1632, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 239, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	241, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 1626,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 274,
	0, 0, 233, 631, 632, 687, 633, 634, 635, 0,
	0, 234, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 193, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 279, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 1259, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 1992, 289, 290, 1201, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 1160,
	0, 305, 642, 643, 644, 0, 306, 307, 1167, 0,
	1148, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1202,
	330, 331, 332, 1151, 1149, 1150, 1157, 1153, 1152, 1156,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1192, 1193,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 1203, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1199, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 1162, 1163,
	1166, 475, 1205, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	1204, 406, 659, 660, 0, 661, 0, 408, 409, 1206,
	1164, 1207, 410, 411, 412, 1208, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1200, 1209, 424, 425, 1210, 0, 426, 0,
	0, 0, 427, 428, 431, 1155, 1154, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 1211, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	1212, 471, 460, 0, 279, 1213, 472, 473, 0, 1165,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 1214, 485,
	1215, 1194, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 1195, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 1216, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 1158, 567, 568, 550, 551, 569, 570, 1217,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 1196, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 1197, 608, 1198, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 1159, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 0, 628, 627, 629, 686,
	0, 630, 274, 3102, 0, 0, 631, 632, 687, 633,
	634, 635, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 0,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	0, 628, 627, 629, 686, 0, 630, 274, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 4919, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 279, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 0, 628, 627, 629, 686,
	274, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 3607,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 279, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 274, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 1620, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 0, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 3090, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 0, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 3770, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 913, 630, 814, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 2323, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 821, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 911, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 819, 596, 597, 598, 599, 600,
	820, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 814, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	2061, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 824, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 821, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 279, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 2060,
	557, 558, 559, 560, 0, 2062, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 819, 596, 597, 598, 599, 600, 820, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	2059, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 814, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 2012, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 824, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	821, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 279, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 2011, 557, 558,
	559, 560, 0, 2013, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	819, 596, 597, 598, 599, 600, 820, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 2010, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 812,
	0, 814, 0, 631, 632, 687, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 824, 0, 636, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 821, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 0, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 0, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 407, 0, 0, 406, 659, 660, 0, 661,
	0, 408, 409, 0, 662, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 0, 424, 425,
	0, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	0, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 0, 471, 460, 0, 279, 0,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 0, 485, 0, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 0, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 819, 596, 597,
	598, 599, 600, 820, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 0,
	628, 627, 629, 686, 2034, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 824, 0,
	0, 289, 290, 1201, 291, 292, 293, 294, 295, 296,
	0, 2040, 0, 297, 2030, 298, 2046, 0, 2053, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 2056,
	2057, 0, 0, 306, 307, 0, 0, 1346, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1202, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 1184, 338, 340, 2044, 2043, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1169, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 2042, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 1203, 377,
	378, 379, 2051, 2052, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 475, 1205,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 1204, 406, 2037,
	2038, 0, 2033, 0, 408, 409, 1206, 0, 1207, 410,
	411, 412, 1208, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	1209, 424, 425, 1210, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 1211, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 1212, 471, 460,
	0, 0, 1213, 472, 473, 0, 0, 474, 2045, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 0, 1214, 485, 1215, 0, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 2027, 499, 500, 501, 2028, 502,
	503, 504, 0, 505, 0, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 2041, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 1216, 540, 541, 542, 543, 544, 0, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 1217, 571, 572, 573,
	574, 575, 576, 577, 2039, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 2055, 585, 586, 587,
	588, 0, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 2047, 2048, 2049, 2050, 0, 613, 0, 605,
	606, 607, 0, 608, 0, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 0,
	2031, 2054, 0, 628, 627, 629, 0, 0, 630, 0,
	0, 0, 0, 631, 632, 0, 633, 634, 635, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 2021, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 821, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 279, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 819, 596, 597, 598, 599,
	600, 820, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 814, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 824, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 821, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 279, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 2373, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	2374, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 819, 596, 597, 598, 599, 600, 820,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 2375, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 274, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 824, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 279, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 0, 630,
	0, 1341, 2109, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 824, 636, 0, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 1346, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 3053, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 1204, 406, 659, 660, 0, 661,
	0, 408, 409, 1206, 662, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 0, 0, 1213,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 3054, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1341, 1340, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 1346,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1202, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 1205, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 1204,
	406, 659, 660, 0, 661, 0, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 1209, 424, 425, 1210, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 0, 0, 1213, 472, 473, 3964, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 0, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 1341, 1340, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 1346, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 1204, 406, 659, 660, 0, 661,
	0, 408, 409, 1206, 662, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 0, 0, 1213,
	472, 473, 3568, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 0,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 1680, 0, 1341, 1340,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 1201, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 1346, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1202, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 1679,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 1203, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 1205, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 1204, 406, 659, 660, 0, 661, 0, 408, 409,
	1206, 662, 1207, 410, 411, 412, 1208, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 1209, 424, 425, 1210, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 1211, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 1212, 471, 460, 0, 0, 1213, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 1214,
	485, 1215, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	1678, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 1216, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 1677, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	1217, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 1594, 0, 1341, 1340, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 1201, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 1346, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1202, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 1203,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 1593, 657, 658, 475,
	1205, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 1204, 406,
	659, 660, 0, 661, 0, 408, 409, 1206, 662, 1207,
	410, 411, 412, 1208, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 1209, 424, 425, 1210, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 1211, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 1212, 471,
	460, 0, 0, 1213, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 1214, 485, 1215, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 1216, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 1217, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	1553, 0, 1341, 1340, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 1201, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 1346, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1202, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 1203, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 1555, 657, 658, 475, 1205, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 1204, 406, 659, 660, 0,
	661, 0, 408, 409, 1206, 662, 1207, 410, 411, 412,
	1208, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 1209, 424,
	425, 1210, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 1211, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 1212, 471, 460, 0, 0,
	1213, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 1214, 485, 1215, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 1216,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 1217, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	0, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 1516, 0, 1341,
	1340, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 1346, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	1515, 657, 658, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 0, 1213, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 1335, 0, 1341, 1340, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 1346,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1202, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 1334, 657, 658,
	475, 1205, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 1204,
	406, 659, 660, 0, 661, 0, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 1209, 424, 425, 1210, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 0, 0, 1213, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 0, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 1341, 1340, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 1346, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 1204, 406, 659, 660, 0, 661,
	0, 408, 409, 1206, 662, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 0, 0, 1213,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 0,
	628, 627, 629, 686, 0, 630, 1341, 2109, 0, 0,
	631, 632, 687, 633, 634, 635, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 1201, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 1346,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1202, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 2106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	1203, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 1205, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 1204,
	406, 659, 660, 0, 661, 0, 408, 409, 1206, 662,
	1207, 410, 411, 412, 1208, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 1209, 424, 425, 1210, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 1211, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 1212,
	471, 460, 0, 0, 1213, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 1214, 485, 1215,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 1216, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 1217, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 0, 628, 627, 629, 686, 0,
	630, 1341, 1340, 0, 0, 631, 632, 687, 633, 634,
	635, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 289, 290,
	1201, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 1346, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1202, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 1203, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 1205, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 1204, 406, 659, 660, 0, 661,
	0, 408, 409, 1206, 662, 1207, 410, 411, 412, 1208,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 1209, 424, 425,
	1210, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	1211, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 1212, 471, 460, 0, 0, 1213,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 1214, 485, 1215, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 1216, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 1217, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 1341,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 1201, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 1346, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1202, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 1203, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 1205, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 1204, 406, 659, 660, 0, 661, 0, 408,
	409, 1206, 662, 1207, 410, 411, 412, 1208, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 1209, 424, 425, 1210, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 1211, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 1212, 471, 460, 0, 0, 1213, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	1214, 485, 1215, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 1216, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 1217, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 274, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 2891, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 2888, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 2895, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 3115, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 2894,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 3112, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 3114, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 3111, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 0, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	2893, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 3113, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 274, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 2891, 306, 307, 645, 0, 0, 2885,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 2888, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 2895, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 2894, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 2884, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 2893, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 2892, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 1757, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1756, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 1755, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 279, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 1758, 549, 556, 557, 558, 559, 560, 0, 1754,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 1752, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 1753,
	627, 629, 686, 1491, 630, 274, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 1493, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 279, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 1251, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 1488, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 1490, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 279, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 1251, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 1395, 630, 274, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 1397, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 279, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 1251, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 719, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 718, 285, 286, 708, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 711, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 712,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 713, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 707, 630, 274, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 708,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 711, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 712, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 713, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 274, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	280, 282, 281, 283, 284, 285, 286, 708, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 711, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 712, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 713, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 274, 628, 627, 629, 686, 0, 630, 0, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 280, 282,
	281, 283, 284, 285, 286, 708, 287, 288, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 711,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 0, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	3975, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 0, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 0, 406, 659, 660, 0, 661,
	0, 408, 409, 0, 662, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 0, 424, 425,
	0, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	0, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 0, 471, 460, 0, 0, 0,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 0, 485, 0, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 713,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 0, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 274,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 279, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 1251, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 274, 628, 627,
	629, 686, 0, 630, 0, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	3516, 471, 460, 0, 279, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 0, 628, 627, 629, 686,
	3060, 630, 274, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 3059, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 279,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	0, 628, 627, 629, 686, 2342, 630, 274, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 279, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 274, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 279, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 2279, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 2286, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 2285, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 279, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 2272, 630, 274, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 2274, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 279, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 274, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 2237, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	279, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 1251, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1598, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1597,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1508, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	279, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1501, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1503,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1325, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1324, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	279, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1315, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1314,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1312, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1311, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	279, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1307, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1306,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 689, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	279, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 265, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 279, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 711, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 712, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 713, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 2382, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 279,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	274, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2380, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 279, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 274, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 2378, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 279, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 2292, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 279, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 2085, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 279, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 2079, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 279,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	0, 628, 627, 629, 686, 898, 630, 274, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 897, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 0, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 482, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 896, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 274, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	3115, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 4271, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 1359, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 1362,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 1360, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 779, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 778, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 777, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 1363, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 775, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 1359, 630, 274, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 1362, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 1360, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 779, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 778, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 777, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 1363, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 775, 678, 679, 680, 0, 613, 0,
	605, 1361, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 698, 630,
	274, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 697, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 696, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 0, 628,
	627, 629, 686, 0, 630, 274, 3102, 0, 0, 631,
	632, 687, 633, 634, 635, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 0, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 556, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 677, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 0, 628, 627, 629, 686, 0, 630,
	274, 4281, 0, 0, 631, 632, 687, 633, 634, 635,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 274, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 4563, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 0, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 4167,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 3930, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 2775, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 0,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	0, 628, 627, 629, 686, 0, 630, 274, 3102, 0,
	0, 631, 632, 687, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 637, 638, 0, 297, 639, 298, 640,
	0, 641, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 642, 643, 644, 0, 306, 307, 645, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 646, 647,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 648, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 649, 650,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 651, 0, 0, 0, 374, 0, 375, 376, 0,
	0, 0, 377, 378, 379, 652, 653, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 654, 0,
	655, 390, 0, 391, 392, 393, 394, 395, 656, 657,
	658, 475, 0, 396, 397, 0, 398, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 407, 0,
	0, 406, 659, 660, 0, 661, 0, 408, 409, 0,
	662, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 663, 0, 424, 425, 0, 0, 426, 0,
	0, 0, 427, 428, 431, 0, 0, 429, 430, 432,
	433, 0, 434, 435, 437, 440, 436, 438, 439, 441,
	454, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 456, 0, 455, 0, 457, 458, 459,
	465, 467, 468, 463, 464, 466, 469, 470, 461, 462,
	0, 471, 460, 0, 0, 0, 472, 473, 0, 664,
	474, 665, 476, 477, 0, 0, 478, 0, 0, 0,
	480, 481, 3099, 0, 0, 483, 484, 666, 0, 485,
	0, 667, 486, 487, 479, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 497, 498, 668, 499, 500,
	501, 669, 502, 503, 504, 670, 505, 671, 506, 507,
	0, 508, 509, 0, 510, 511, 512, 513, 514, 515,
	516, 672, 517, 518, 520, 519, 521, 0, 522, 0,
	523, 524, 525, 0, 0, 0, 0, 0, 526, 0,
	528, 529, 530, 531, 527, 532, 533, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	673, 545, 0, 546, 547, 553, 554, 555, 548, 549,
	556, 557, 558, 559, 560, 0, 562, 563, 561, 564,
	565, 566, 0, 567, 568, 550, 551, 569, 570, 0,
	571, 572, 573, 574, 575, 576, 577, 674, 0, 578,
	0, 579, 580, 581, 583, 552, 584, 589, 590, 675,
	585, 586, 587, 588, 676, 592, 593, 0, 594, 595,
	0, 591, 582, 0, 596, 597, 598, 599, 600, 601,
	602, 364, 603, 0, 604, 677, 678, 679, 680, 0,
	613, 0, 605, 606, 607, 681, 608, 682, 0, 609,
	610, 611, 612, 0, 614, 615, 0, 0, 616, 617,
	618, 620, 621, 619, 622, 0, 623, 0, 0, 624,
	625, 626, 683, 684, 685, 274, 628, 627, 629, 686,
	0, 630, 0, 0, 0, 0, 631, 632, 687, 633,
	634, 635, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 637, 638, 0, 297, 639, 298, 640, 0, 641,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	642, 643, 644, 0, 306, 307, 645, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 646, 647, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 648, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 649, 650, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 651,
	0, 0, 0, 374, 0, 375, 376, 0, 0, 0,
	377, 378, 379, 652, 653, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 654, 0, 655, 390,
	0, 391, 392, 393, 394, 395, 656, 657, 658, 475,
	0, 396, 397, 0, 398, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 407, 0, 0, 406,
	659, 660, 0, 661, 0, 408, 409, 0, 662, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	663, 0, 424, 425, 0, 0, 426, 0, 0, 0,
	427, 428, 431, 0, 0, 429, 430, 432, 433, 0,
	434, 435, 437, 440, 436, 438, 439, 441, 454, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 456, 0, 455, 0, 457, 458, 459, 465, 467,
	468, 463, 464, 466, 469, 470, 461, 462, 0, 471,
	460, 0, 0, 0, 472, 473, 0, 664, 474, 665,
	476, 477, 0, 0, 478, 0, 0, 0, 480, 481,
	482, 0, 0, 483, 484, 666, 0, 485, 0, 667,
	486, 487, 479, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 497, 498, 668, 499, 500, 501, 669,
	502, 503, 504, 670, 505, 671, 506, 507, 2203, 508,
	509, 0, 510, 511, 512, 513, 514, 515, 516, 672,
	517, 518, 520, 519, 521, 0, 522, 0, 523, 524,
	525, 0, 0, 0, 0, 0, 526, 0, 528, 529,
	530, 531, 527, 532, 533, 534, 535, 536, 0, 537,
	538, 539, 0, 778, 541, 542, 543, 544, 673, 545,
	0, 546, 547, 553, 554, 555, 548, 549, 777, 557,
	558, 559, 560, 0, 562, 563, 561, 564, 565, 566,
	0, 567, 568, 550, 551, 569, 570, 0, 571, 572,
	573, 574, 575, 576, 577, 674, 0, 578, 0, 579,
	580, 581, 583, 552, 584, 589, 590, 675, 585, 586,
	587, 588, 676, 592, 593, 0, 594, 595, 0, 591,
	582, 0, 596, 597, 598, 599, 600, 601, 602, 364,
	603, 0, 604, 775, 678, 679, 680, 0, 613, 0,
	605, 606, 607, 681, 608, 682, 0, 609, 610, 611,
	612, 0, 614, 615, 0, 0, 616, 617, 618, 620,
	621, 619, 622, 0, 623, 0, 0, 624, 625, 626,
	683, 684, 685, 274, 628, 627, 629, 686, 0, 630,
	0, 0, 0, 0, 631, 632, 687, 633, 634, 635,
	280, 282, 281, 283, 284, 285, 286, 2352, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 2340, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 2099, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 2066, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1653, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1646, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 769, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 765, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 770,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 779, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 778, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 777, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 1631, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 775, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1604, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1603,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1588, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1586, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1581, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1558, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1556, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1551, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1513, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1496, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1365, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 656, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 778, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 777, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 775, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 0, 628, 627, 629, 686, 1330, 630, 274, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1329,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 0, 628, 627, 629,
	686, 1321, 630, 274, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 637,
	638, 0, 297, 639, 298, 640, 0, 641, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 642, 643,
	644, 0, 306, 307, 645, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 646, 647, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 648, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 649, 650, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 651, 0, 0,
	0, 374, 0, 375, 376, 0, 0, 0, 377, 378,
	379, 652, 653, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 654, 0, 655, 390, 0, 391,
	392, 393, 394, 395, 1320, 657, 658, 475, 0, 396,
	397, 0, 398, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 407, 0, 0, 406, 659, 660,
	0, 661, 0, 408, 409, 0, 662, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 663, 0,
	424, 425, 0, 0, 426, 0, 0, 0, 427, 428,
	431, 0, 0, 429, 430, 432, 433, 0, 434, 435,
	437, 440, 436, 438, 439, 441, 454, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 456,
	0, 455, 0, 457, 458, 459, 465, 467, 468, 463,
	464, 466, 469, 470, 461, 462, 0, 471, 460, 0,
	0, 0, 472, 473, 0, 664, 474, 665, 476, 477,
	0, 0, 478, 0, 0, 0, 480, 481, 482, 0,
	0, 483, 484, 666, 0, 485, 0, 667, 486, 487,
	479, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 497, 498, 668, 499, 500, 501, 669, 502, 503,
	504, 670, 505, 671, 506, 507, 0, 508, 509, 0,
	510, 511, 512, 513, 514, 515, 516, 672, 517, 518,
	520, 519, 521, 0, 522, 0, 523, 524, 525, 0,
	0, 0, 0, 0, 526, 0, 528, 529, 530, 531,
	527, 532, 533, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 673, 545, 0, 546,
	547, 553, 554, 555, 548, 549, 556, 557, 558, 559,
	560, 0, 562, 563, 561, 564, 565, 566, 0, 567,
	568, 550, 551, 569, 570, 0, 571, 572, 573, 574,
	575, 576, 577, 674, 0, 578, 0, 579, 580, 581,
	583, 552, 584, 589, 590, 675, 585, 586, 587, 588,
	676, 592, 593, 0, 594, 595, 0, 591, 582, 0,
	596, 597, 598, 599, 600, 601, 602, 364, 603, 0,
	604, 677, 678, 679, 680, 0, 613, 0, 605, 606,
	607, 681, 608, 682, 0, 609, 610, 611, 612, 0,
	614, 615, 0, 0, 616, 617, 618, 620, 621, 619,
	622, 0, 623, 0, 0, 624, 625, 626, 683, 684,
	685, 274, 628, 627, 629, 686, 0, 630, 0, 0,
	0, 0, 631, 632, 687, 633, 634, 635, 280, 282,
	281, 283, 284, 285, 286, 1274, 287, 288, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 637, 638, 0,
	297, 639, 298, 640, 0, 641, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 642, 643, 644, 0,
	306, 307, 645, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 646, 647, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 648, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 649, 650, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 651, 0, 0, 0, 374,
	0, 375, 376, 0, 0, 0, 377, 378, 379, 652,
	653, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 654, 0, 655, 390, 0, 391, 392, 393,
	394, 395, 656, 657, 658, 475, 0, 396, 397, 0,
	398, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 407, 0, 0, 406, 659, 660, 0, 661,
	0, 408, 409, 0, 662, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 663, 0, 424, 425,
	0, 0, 426, 0, 0, 0, 427, 428, 431, 0,
	0, 429, 430, 432, 433, 0, 434, 435, 437, 440,
	436, 438, 439, 441, 454, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 456, 0, 455,
	0, 457, 458, 459, 465, 467, 468, 463, 464, 466,
	469, 470, 461, 462, 0, 471, 460, 0, 0, 0,
	472, 473, 0, 664, 474, 665, 476, 477, 0, 0,
	478, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	484, 666, 0, 485, 0, 667, 486, 487, 479, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 497,
	498, 668, 499, 500, 501, 669, 502, 503, 504, 670,
	505, 671, 506, 507, 0, 508, 509, 0, 510, 511,
	512, 513, 514, 515, 516, 672, 517, 518, 520, 519,
	521, 0, 522, 0, 523, 524, 525, 0, 0, 0,
	0, 0, 526, 0, 528, 529, 530, 531, 527, 532,
	533, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 673, 545, 0, 546, 547, 553,
	554, 555, 548, 549, 556, 557, 558, 559, 560, 0,
	562, 563, 561, 564, 565, 566, 0, 567, 568, 550,
	551, 569, 570, 0, 571, 572, 573, 574, 575, 576,
	577, 674, 0, 578, 0, 579, 580, 581, 583, 552,
	584, 589, 590, 675, 585, 586, 587, 588, 676, 592,
	593, 0, 594, 595, 0, 591, 582, 0, 596, 597,
	598, 599, 600, 601, 602, 364, 603, 0, 604, 677,
	678, 679, 680, 0, 613, 0, 605, 606, 607, 681,
	608, 682, 0, 609, 610, 611, 612, 0, 614, 615,
	0, 0, 616, 617, 618, 620, 621, 619, 622, 0,
	623, 0, 0, 624, 625, 626, 683, 684, 685, 274,
	628, 627, 629, 686, 0, 630, 0, 0, 0, 0,
	631, 632, 687, 633, 634, 635, 280, 282, 281, 283,
	284, 285, 286, 784, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 0, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 769, 630, 274, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 765, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 764, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	770, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 779, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 778, 541, 542, 543, 544, 766, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 777, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 767, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 775, 678, 679, 680, 0, 613, 0, 605,
	771, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 758, 630, 274,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 0, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 759, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 721, 630, 274, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 715, 630, 274,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 637, 638, 0, 297, 639,
	298, 640, 0, 641, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 642, 643, 644, 0, 306, 307,
	645, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	646, 647, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 648,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	649, 650, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 651, 0, 0, 0, 374, 0, 375,
	376, 0, 0, 0, 377, 378, 379, 652, 653, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	654, 0, 655, 390, 0, 391, 392, 393, 394, 395,
	656, 657, 658, 475, 0, 396, 397, 0, 398, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	407, 0, 0, 406, 659, 660, 0, 661, 0, 408,
	409, 0, 662, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 663, 0, 424, 425, 0, 0,
	426, 0, 0, 0, 427, 428, 431, 0, 0, 429,
	430, 432, 433, 0, 434, 435, 437, 440, 436, 438,
	439, 441, 454, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 456, 0, 455, 0, 457,
	458, 459, 465, 467, 468, 463, 464, 466, 469, 470,
	461, 462, 0, 471, 460, 0, 0, 0, 472, 473,
	0, 664, 474, 665, 476, 477, 0, 0, 478, 0,
	0, 0, 480, 481, 482, 0, 0, 483, 484, 666,
	0, 485, 0, 667, 486, 487, 479, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 497, 498, 668,
	499, 500, 501, 669, 502, 503, 504, 670, 505, 671,
	506, 507, 0, 508, 509, 0, 510, 511, 512, 513,
	514, 515, 516, 672, 517, 518, 520, 519, 521, 0,
	522, 0, 523, 524, 525, 0, 0, 0, 0, 0,
	526, 0, 528, 529, 530, 531, 527, 532, 533, 534,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 673, 545, 0, 546, 547, 553, 554, 555,
	548, 549, 556, 557, 558, 559, 560, 0, 562, 563,
	561, 564, 565, 566, 0, 567, 568, 550, 551, 569,
	570, 0, 571, 572, 573, 574, 575, 576, 577, 674,
	0, 578, 0, 579, 580, 581, 583, 552, 584, 589,
	590, 675, 585, 586, 587, 588, 676, 592, 593, 0,
	594, 595, 0, 591, 582, 0, 596, 597, 598, 599,
	600, 601, 602, 364, 603, 0, 604, 677, 678, 679,
	680, 0, 613, 0, 605, 606, 607, 681, 608, 682,
	0, 609, 610, 611, 612, 0, 614, 615, 0, 0,
	616, 617, 618, 620, 621, 619, 622, 0, 623, 0,
	0, 624, 625, 626, 683, 684, 685, 0, 628, 627,
	629, 686, 693, 630, 274, 0, 0, 0, 631, 632,
	687, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 0,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	274, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 3627, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 274, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 656,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 778, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 777, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 775, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 3554, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 0, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 3532, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 3529, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 0,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	553, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	274, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 3481, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 567, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 274, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 3479,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 3464, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 0, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 520, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 390, 0,
	391, 392, 393, 394, 395, 3070, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 514, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 545, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 274, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 637, 638,
	0, 297, 639, 298, 640, 0, 641, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 642, 643, 644,
	0, 306, 307, 645, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 646, 647, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 648, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 649, 650, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 651, 0, 0, 0,
	374, 0, 375, 376, 0, 0, 0, 377, 378, 379,
	652, 653, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 654, 0, 655, 390, 0, 391, 392,
	393, 394, 395, 656, 657, 658, 475, 0, 396, 397,
	0, 398, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 407, 0, 0, 406, 659, 660, 0,
	661, 0, 408, 409, 0, 662, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 663, 0, 424,
	425, 0, 0, 426, 0, 0, 0, 427, 428, 431,
	0, 0, 429, 430, 432, 433, 0, 434, 435, 437,
	440, 436, 438, 439, 441, 454, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 456, 0,
	455, 0, 457, 458, 459, 465, 467, 468, 463, 464,
	466, 469, 470, 461, 462, 0, 471, 460, 0, 0,
	0, 472, 473, 0, 664, 474, 665, 476, 477, 0,
	0, 478, 0, 0, 0, 480, 481, 482, 0, 0,
	483, 484, 666, 0, 485, 0, 667, 486, 487, 479,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	497, 498, 668, 499, 500, 501, 669, 502, 503, 504,
	670, 505, 671, 506, 507, 0, 508, 509, 0, 510,
	511, 512, 513, 514, 515, 516, 672, 517, 518, 520,
	519, 521, 0, 522, 0, 523, 524, 525, 0, 0,
	0, 0, 0, 526, 0, 528, 529, 530, 531, 527,
	532, 533, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 673, 545, 0, 546, 547,
	759, 554, 555, 548, 549, 556, 557, 558, 559, 560,
	0, 562, 563, 561, 564, 565, 566, 0, 567, 568,
	550, 551, 569, 570, 0, 571, 572, 573, 574, 575,
	576, 577, 674, 0, 578, 0, 579, 580, 581, 583,
	552, 584, 589, 590, 675, 585, 586, 587, 588, 676,
	592, 593, 0, 594, 595, 0, 591, 582, 0, 596,
	597, 598, 599, 600, 601, 602, 364, 603, 0, 604,
	677, 678, 679, 680, 0, 613, 0, 605, 606, 607,
	681, 608, 682, 0, 609, 610, 611, 612, 0, 614,
	615, 0, 0, 616, 617, 618, 620, 621, 619, 622,
	0, 623, 0, 0, 624, 625, 626, 683, 684, 685,
	274, 628, 627, 629, 686, 0, 630, 0, 0, 0,
	0, 631, 632, 687, 633, 634, 635, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 636, 0, 2310, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 637, 638, 0, 297,
	639, 298, 640, 0, 641, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 642, 643, 644, 0, 306,
	307, 645, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 646, 647, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	648, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 649, 650, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 651, 0, 0, 0, 374, 0,
	375, 376, 0, 0, 0, 377, 378, 379, 652, 653,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 654, 0, 655, 390, 0, 391, 392, 393, 394,
	395, 656, 657, 658, 475, 0, 396, 397, 0, 398,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 407, 0, 0, 406, 659, 660, 0, 661, 0,
	408, 409, 0, 662, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 663, 0, 424, 425, 0,
	0, 426, 0, 0, 0, 427, 428, 431, 0, 0,
	429, 430, 432, 433, 0, 434, 435, 437, 440, 436,
	438, 439, 441, 454, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 456, 0, 455, 0,
	457, 458, 459, 465, 467, 468, 463, 464, 466, 469,
	470, 461, 462, 0, 471, 460, 0, 0, 0, 472,
	473, 0, 664, 474, 665, 476, 477, 0, 0, 478,
	0, 0, 0, 480, 481, 482, 0, 0, 483, 484,
	666, 0, 485, 0, 667, 486, 487, 479, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 497, 498,
	668, 499, 500, 501, 669, 502, 503, 504, 670, 505,
	671, 506, 507, 0, 508, 509, 0, 510, 511, 512,
	513, 514, 515, 516, 672, 517, 518, 520, 519, 521,
	0, 522, 0, 523, 524, 525, 0, 0, 0, 0,
	0, 526, 0, 528, 529, 530, 531, 527, 532, 533,
	534, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 673, 545, 0, 546, 547, 553, 554,
	555, 548, 549, 556, 557, 558, 559, 560, 0, 562,
	563, 561, 564, 565, 566, 0, 0, 568, 550, 551,
	569, 570, 0, 571, 572, 573, 574, 575, 576, 577,
	674, 0, 578, 0, 579, 580, 581, 583, 552, 584,
	589, 590, 675, 585, 586, 587, 588, 676, 592, 593,
	0, 594, 595, 0, 591, 582, 0, 596, 597, 598,
	599, 600, 601, 602, 364, 603, 0, 604, 677, 678,
	679, 680, 0, 613, 0, 605, 606, 607, 681, 608,
	682, 0, 609, 610, 611, 612, 0, 614, 615, 0,
	0, 616, 617, 618, 620, 621, 619, 622, 0, 623,
	0, 0, 624, 625, 626, 683, 684, 685, 274, 628,
	627, 629, 686, 0, 630, 0, 0, 0, 0, 631,
	632, 687, 633, 634, 635, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 637, 638, 0, 297, 639, 298,
	640, 0, 641, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 642, 643, 644, 0, 306, 307, 645,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 646,
	647, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 648, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 649,
	650, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 651, 0, 0, 0, 374, 0, 375, 376,
	0, 0, 0, 377, 378, 379, 652, 653, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 654,
	0, 655, 390, 0, 391, 392, 393, 394, 395, 1292,
	657, 658, 475, 0, 396, 397, 0, 398, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 407,
	0, 0, 406, 659, 660, 0, 661, 0, 408, 409,
	0, 662, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 663, 0, 424, 425, 0, 0, 426,
	0, 0, 0, 427, 428, 431, 0, 0, 429, 430,
	432, 433, 0, 434, 435, 437, 440, 436, 438, 439,
	441, 454, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 456, 0, 455, 0, 457, 458,
	459, 465, 467, 468, 463, 464, 466, 469, 470, 461,
	462, 0, 471, 460, 0, 0, 0, 472, 473, 0,
	664, 474, 665, 476, 477, 0, 0, 478, 0, 0,
	0, 480, 481, 482, 0, 0, 483, 484, 666, 0,
	485, 0, 667, 486, 487, 479, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 497, 498, 668, 499,
	500, 501, 669, 502, 503, 504, 670, 505, 671, 506,
	507, 0, 508, 509, 0, 510, 511, 512, 513, 514,
	515, 516, 672, 517, 518, 520, 519, 521, 0, 522,
	0, 523, 524, 525, 0, 0, 0, 0, 0, 526,
	0, 528, 529, 530, 531, 527, 532, 533, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 673, 545, 0, 546, 547, 553, 554, 555, 548,
	549, 556, 557, 558, 559, 560, 0, 562, 563, 561,
	564, 565, 566, 0, 567, 568, 550, 551, 569, 570,
	0, 571, 572, 573, 574, 575, 576, 577, 674, 0,
	578, 0, 579, 580, 581, 583, 552, 584, 589, 590,
	675, 585, 586, 587, 588, 676, 592, 593, 0, 594,
	595, 0, 591, 582, 0, 596, 597, 598, 599, 600,
	601, 602, 364, 603, 0, 604, 677, 678, 679, 680,
	0, 613, 0, 605, 606, 607, 681, 608, 682, 0,
	609, 610, 611, 612, 0, 614, 615, 0, 0, 616,
	617, 618, 620, 621, 619, 622, 0, 623, 0, 0,
	624, 625, 626, 683, 684, 685, 274, 628, 627, 629,
	686, 0, 630, 0, 0, 0, 0, 631, 632, 687,
	633, 634, 635, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 637, 638, 0, 297, 639, 298, 640, 0,
	641, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 642, 643, 644, 0, 306, 307, 645, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 646, 647, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 648, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 649, 650, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	651, 0, 0, 0, 374, 0, 375, 376, 0, 0,
	0, 377, 378, 379, 652, 653, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 654, 0, 655,
	390, 0, 391, 392, 393, 394, 395, 656, 657, 658,
	475, 0, 396, 397, 0, 398, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 407, 0, 0,
	406, 659, 660, 0, 661, 0, 408, 409, 0, 662,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 663, 0, 424, 425, 0, 0, 426, 0, 0,
	0, 427, 428, 431, 0, 0, 429, 430, 432, 433,
	0, 434, 435, 437, 440, 436, 438, 439, 441, 454,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 456, 0, 455, 0, 457, 458, 459, 465,
	467, 468, 463, 464, 466, 469, 470, 461, 462, 0,
	471, 460, 0, 0, 0, 472, 473, 0, 664, 474,
	665, 476, 477, 0, 0, 478, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 484, 666, 0, 485, 0,
	667, 486, 487, 479, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 497, 498, 668, 499, 500, 501,
	669, 502, 503, 504, 670, 505, 671, 506, 507, 0,
	508, 509, 0, 510, 511, 512, 513, 514, 515, 516,
	672, 517, 518, 1224, 519, 521, 0, 522, 0, 523,
	524, 525, 0, 0, 0, 0, 0, 526, 0, 528,
	529, 530, 531, 527, 532, 533, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 673,
	545, 0, 546, 547, 553, 554, 555, 548, 549, 556,
	557, 558, 559, 560, 0, 562, 563, 561, 564, 565,
	566, 0, 567, 568, 550, 551, 569, 570, 0, 571,
	572, 573, 574, 575, 576, 577, 674, 0, 578, 0,
	579, 580, 581, 583, 552, 584, 589, 590, 675, 585,
	586, 587, 588, 676, 592, 593, 0, 594, 595, 0,
	591, 582, 0, 596, 597, 598, 599, 600, 601, 602,
	364, 603, 0, 604, 677, 678, 679, 680, 0, 613,
	0, 605, 606, 607, 681, 608, 682, 0, 609, 610,
	611, 612, 0, 614, 615, 0, 0, 616, 617, 618,
	620, 621, 619, 622, 0, 623, 0, 0, 624, 625,
	626, 683, 684, 685, 274, 628, 627, 629, 686, 0,
	630, 0, 0, 0, 0, 631, 632, 687, 633, 634,
	635, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	637, 638, 0, 297, 639, 298, 640, 0, 641, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 642,
	643, 644, 0, 306, 307, 645, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 646, 647, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 648, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 649, 650, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 651, 0,
	0, 0, 374, 0, 375, 376, 0, 0, 0, 377,
	378, 379, 652, 653, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 654, 0, 655, 0, 0,
	391, 392, 393, 394, 395, 656, 657, 658, 475, 0,
	396, 397, 0, 398, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 407, 0, 0, 406, 659,
	660, 0, 661, 0, 408, 409, 0, 662, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 663,
	0, 424, 425, 0, 0, 426, 0, 0, 0, 427,
	428, 431, 0, 0, 429, 430, 432, 433, 0, 434,
	435, 437, 440, 436, 438, 439, 441, 454, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	456, 0, 455, 0, 457, 458, 459, 465, 467, 468,
	463, 464, 466, 469, 470, 461, 462, 0, 471, 460,
	0, 0, 0, 472, 473, 0, 664, 474, 665, 476,
	477, 0, 0, 478, 0, 0, 0, 480, 481, 482,
	0, 0, 483, 484, 666, 0, 485, 0, 667, 486,
	487, 479, 488, 489, 0, 491, 492, 493, 494, 495,
	496, 0, 497, 498, 668, 499, 500, 501, 669, 502,
	503, 504, 670, 505, 671, 506, 507, 0, 508, 509,
	0, 510, 511, 512, 513, 0, 515, 516, 672, 517,
	518, 520, 519, 521, 0, 522, 0, 523, 524, 525,
	0, 0, 0, 0, 0, 526, 0, 528, 529, 530,
	531, 527, 532, 533, 534, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 673, 0, 0,
	546, 547, 553, 554, 555, 548, 549, 556, 557, 558,
	559, 560, 0, 562, 563, 561, 564, 565, 566, 0,
	567, 568, 550, 551, 569, 570, 0, 571, 572, 573,
	574, 575, 576, 577, 674, 0, 578, 0, 579, 580,
	581, 583, 552, 584, 589, 590, 675, 585, 586, 587,
	588, 676, 592, 593, 0, 594, 595, 0, 591, 582,
	0, 596, 597, 598, 599, 600, 601, 602, 364, 603,
	0, 604, 677, 678, 679, 680, 0, 613, 0, 605,
	606, 607, 681, 608, 682, 0, 609, 610, 611, 612,
	0, 614, 615, 0, 0, 616, 617, 618, 620, 621,
	619, 622, 0, 623, 0, 0, 624, 625, 626, 683,
	684, 685, 0, 628, 627, 629, 686, 0, 630, 0,
	0, 0, 0, 631, 632, 687, 633, 634, 635, 1804,
	1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1835, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 1804, 1805, 1806, 1837, 1838, 1839, 1848, 1849,
	1850, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 1841, 1835, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1830, 1831, 1832, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1805, 0, 1837, 1838, 1839, 1848, 1849, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1835, 0, 0, 1845, 0, 0,
	1855, 1807, 0, 0, 0, 0, 0, 1834, 1836, 0,
	1854, 0, 1829, 1830, 1831, 1832, 0, 0, 0, 0,
	0, 0, 1812, 0, 1851, 0, 1852, 1860, 0, 0,
	0, 0, 0, 1821, 1822, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 1843, 0, 0, 0, 1823, 0, 0, 0, 0,
	1845, 0, 0, 1855, 0, 0, 1827, 0, 0, 0,
	1834, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 1852,
	0, 0, 0, 0, 0, 0, 1821, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 1827,
	0, 1829, 1830, 1831, 1832, 0, 0, 0, 0, 1857,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 1845,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 1834,
	1836, 1842, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 1851, 0, 1852, 0,
	0, 0, 0, 0, 0, 1821, 1822, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 1819, 1825,
	1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810,
	1811, 1813, 1814, 0, 0, 0, 1833, 4673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1819, 1825, 1847, 1824, 1820, 1846, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 1804, 1805,
	4588, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	1841, 1835, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	1819, 1825, 1847, 1824, 1820, 0, 1817, 1815, 1816, 1808,
	1809, 1810, 1811, 1813, 1814, 0, 0, 1804, 1805, 4547,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1835, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 1829, 1830,
	1831, 1832, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1804, 1805, 1806, 1837, 1838, 1839, 1848, 1849, 1850, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1841, 1835, 0, 0, 1845, 0, 0, 1855,
	1807, 0, 0, 0, 0, 0, 1834, 1836, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 1860, 0, 0, 0,
	0, 0, 1821, 1822, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	1843, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 1829, 1830, 1831,
	1832, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 1845, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 1834, 1836, 1842, 0, 0,
	1829, 1830, 1831, 1832, 0, 0, 0, 0, 1857, 0,
	1812, 0, 1851, 0, 1852, 0, 0, 0, 0, 0,
	0, 1821, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 1855, 0, 0, 1827, 0, 0, 0, 1834, 1836,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 1852, 0, 0,
	0, 0, 0, 0, 1821, 1822, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 1842, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1825, 1847,
	1824, 1820, 1846, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 1833, 4546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 0, 1837,
	1838, 1839, 1848, 1849, 1850, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 1818, 1819, 1825, 1847, 1824,
	1820, 1806, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 1826, 0, 0, 0, 4357, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1819,
	1825, 1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809,
	1810, 1811, 1813, 1814, 0, 0, 0, 0, 4190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1831, 1832,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807, 0,
	0, 0, 0, 0, 1834, 1836, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 1852, 1860, 0, 0, 0, 0, 0,
	1821, 1822, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1843, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 0, 1837,
	1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 0, 0, 0, 0, 1807, 1853, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 1829, 1830,
	1831, 1832, 1860, 0, 0, 0, 1857, 0, 1812, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1829, 1830, 1831, 1832,
	0, 1846, 0, 0, 0, 1827, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807, 1853,
	0, 0, 0, 0, 1834, 1836, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 1851, 0, 1852, 1860, 0, 0, 0, 1857, 0,
	1821, 1822, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1843, 0,
	0, 0, 1823, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 0, 1833, 4120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 1829, 1830,
	1831, 1832, 0, 1846, 0, 0, 1857, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1846, 0, 0, 0, 1827, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 4119, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 0, 1833, 4118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 1804, 1805, 0,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1835, 0, 0, 1846, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 1859, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 3775, 1829, 1830, 1831,
	1832, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807,
	0, 0, 0, 0, 0, 1834, 1836, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 1852, 1860, 0, 0, 0, 0,
	0, 1821, 1822, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1843,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1805, 0,
	1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1835, 0, 0, 0, 0, 0, 0, 1807, 1853, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 1829,
	1830, 1831, 1832, 1860, 0, 0, 0, 1857, 0, 1812,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 1834, 1836, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 1852, 0, 0, 0,
	0, 0, 0, 1821, 1822, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1829, 1830, 1831,
	1832, 0, 1846, 0, 0, 0, 1827, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807,
	1853, 0, 0, 0, 0, 1834, 1836, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 1851, 0, 1852, 1860, 0, 0, 0, 1857,
	0, 1821, 1822, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1843,
	0, 0, 0, 1823, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1818, 1819, 1825, 1847, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 0, 0, 1833, 3278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 1829,
	1830, 1831, 1832, 0, 1846, 0, 0, 1857, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 1834, 1836, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 1852, 0, 0, 0,
	0, 0, 0, 1821, 1822, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 1846, 0, 0, 0, 1827, 1818, 1819, 1825,
	1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810,
	1811, 1813, 1814, 0, 0, 0, 0, 3277, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824,
	1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813,
	1814, 0, 0, 0, 1833, 3276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1846, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 1859, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 1819, 1825,
	1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810,
	1811, 1813, 1814, 0, 0, 0, 0, 3275, 1829, 1830,
	1831, 1832, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1835, 0, 0, 1845, 0, 0, 1855,
	1807, 0, 0, 0, 0, 0, 1834, 1836, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 1860, 0, 0, 0,
	0, 0, 1821, 1822, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	1843, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 0, 0, 0, 0, 1807, 1853,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	1829, 1830, 1831, 1832, 1860, 0, 0, 0, 1857, 0,
	1812, 4826, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 1834, 1836,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 1852, 0, 0,
	0, 0, 0, 0, 1821, 1822, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 1829, 1830,
	1831, 1832, 0, 1846, 0, 0, 0, 1827, 1812, 0,
	3340, 0, 0, 0, 3339, 0, 0, 0, 0, 0,
	1804, 1805, 0, 1837, 1838, 1839, 1848, 1849, 1850, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 1841, 1835, 0, 0, 1845, 0, 3211, 1855,
	1807, 1853, 0, 0, 0, 0, 1834, 1836, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 1851, 0, 1852, 1860, 0, 0, 0,
	1857, 0, 1821, 1822, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	1843, 0, 4825, 0, 1823, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 3240, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 3212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	1829, 1830, 1831, 1832, 0, 1846, 0, 0, 1857, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 1834, 1836,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 1852, 0, 0,
	0, 0, 0, 0, 1821, 1822, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 1846, 0, 0, 0, 1827, 1818, 1819,
	1825, 1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809,
	1810, 1811, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2748,
	0, 0, 0, 0, 0, 0, 1804, 1805, 1828, 1837,
	1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 0, 2747, 0, 1846, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 1859, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1819,
	1825, 1847, 1824, 1820, 0, 1817, 1815, 1816, 1808, 1809,
	1810, 1811, 1813, 1814, 0, 0, 1829, 1830, 1831, 1832,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807, 0,
	0, 0, 0, 0, 1834, 1836, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 1852, 1860, 0, 0, 0, 0, 0,
	1821, 1822, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1843, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 0, 1837,
	1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 0, 0, 0, 0, 1807, 1853, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 1829, 1830,
	1831, 1832, 1860, 0, 0, 0, 1857, 0, 1812, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1829, 1830, 1831, 1832,
	0, 1846, 0, 0, 0, 1827, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1837, 1838, 1839, 1848, 1849, 1850, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	1841, 1835, 0, 0, 1845, 0, 0, 1855, 1807, 1853,
	0, 0, 0, 0, 1834, 1836, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 1078, 0,
	0, 1851, 0, 1852, 1860, 0, 0, 0, 1857, 0,
	1821, 1822, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1843, 0,
	0, 0, 1823, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 1829, 1830,
	1831, 1832, 0, 1846, 0, 0, 1857, 0, 1812, 0,
	0, 0, 0, 0, 3346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 1834, 1836, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1846, 0, 0, 0, 1827, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3756, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 1828, 1837, 1838, 1839,
	1848, 1849, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1835, 0, 0,
	0, 3341, 0, 1846, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 1859, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1825, 1847,
	1824, 1820, 0, 1817, 1815, 1816, 1808, 1809, 1810, 1811,
	1813, 1814, 0, 0, 1829, 1830, 1831, 1832, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 0, 1837,
	1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 1845, 0, 0, 1855, 1807, 0, 0, 0,
	0, 0, 1834, 1836, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 1852, 1860, 0, 0, 0, 0, 0, 1821, 1822,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 1843, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1837, 1838, 1839,
	1848, 1849, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1835, 0, 0,
	0, 3279, 0, 0, 1807, 1853, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 1829, 1830, 1831, 1832,
	1860, 0, 0, 0, 1857, 0, 1812, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 1834, 1836, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 1852, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 1829, 1830, 1831, 1832, 0, 1846,
	0, 0, 0, 1827, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 0, 1837,
	1838, 1839, 1848, 1849, 1850, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 1841, 1835,
	0, 0, 1845, 0, 0, 1855, 1807, 1853, 0, 0,
	0, 0, 1834, 1836, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 1851,
	0, 1852, 1860, 0, 0, 0, 1857, 0, 1821, 1822,
	0, 1806, 0, 0, 0, 0, 3306, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 1843, 0, 0, 0,
	1823, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1818, 1819, 1825, 1847, 1824, 1820, 0, 1817,
	1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 1829, 1830, 1831, 1832,
	0, 1846, 0, 0, 1857, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 1834, 1836, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 1852, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 1846,
	0, 0, 0, 1827, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1819, 1825, 1847, 1824, 1820, 0, 1817,
	1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1805, 1828, 1837, 1838, 1839, 1848, 1849,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1835, 0, 0, 0, 0,
	0, 1846, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 1859, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2325, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1819, 1825, 1847, 1824, 1820,
	0, 1817, 1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814,
	0, 0, 1829, 1830, 1831, 1832, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1837, 1838, 1839,
	1848, 1849, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1835, 0, 0,
	1845, 0, 0, 1855, 1807, 0, 0, 0, 0, 0,
	1834, 1836, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 1852,
	1860, 0, 0, 0, 0, 0, 1821, 1822, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 1843, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1805, 0, 1837, 1838, 1839, 1848, 1849,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 1807, 1853, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 1829, 1830, 1831, 1832, 1860, 0,
	0, 0, 1857, 0, 1812, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 1834, 1836, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 1852, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 1829, 1830, 1831, 1832, 0, 1846, 0, 0,
	0, 1827, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 1855, 0, 1853, 0, 0, 0, 0,
	1834, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 1852,
	0, 0, 0, 0, 1857, 0, 1821, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1818, 1819, 1825, 1847, 1824, 1820, 0, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 1818, 1819, 1825, 1847, 1824, 1820, 0, 1817,
	1815, 1816, 1808, 1809, 1810, 1811, 1813, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1819, 1825, 1847, 1824, 1820, 0, 1817, 1815, 1816,
	1808, 1809, 1810, 1811, 1813, 1814,
}

var sqlPact = [...]int{
	11908, -1000, -1000, -1000, -1000, 211, -1000, -1000, 208, 207,
	205, 198, 197, 196, 194, 193, 189, 187, 186, -1000,
	-1000, -1000, -1000, -1000, -1000, 185, -1000, -1000, 184, -1000,
	182, 181, 180, -1000, -1000, 174, -1000, 173, -1000, -1000,
	-1000, -1000, 172, 171, 169, 94224, 93669, 94772, 2344, 119080,
	101376, 1983, 83721, 118525, 83166, 117970, 2262, 8997, 117415, 2778,
	168, -1000, 116860, 164, 163, 162, -1000, 116305, -1000, 1979,
	-1000, 160, -1000, 8527, 70337, 159, 154, 153, 148, 2659,
	147, -1000, 145, 142, -1000, -1000, 141, -1000, 13368, 1620,
	-1000, 140, 139, -1000, 5181, 99163, 138, 137, 136, 2640,
	135, 132, 68684, 131, 130, 129, 2487, 2892, -1000, -1000,
	2100, -1000, -1000, 128, 125, 123, 122, 121, 116, 115,
	112, 111, 106, 105, 104, 103, -1000, 101, 99, 94,
	93, 91, -1000, 90, 89, 88, -1000, 87, -1000, 86,
	85, 83, 81, 80, 79, 78, 77, 76, 75, 74,
	73, 72, 67, 17927, -1000, -1000, 62, 1969, 1712, 1711,
	1709, 1706, 1705, 1043, 61, 57, 55, 54, 48, 47,
	44, 42, 38, 36, 35, 31, 30, 29, 28, 27,
	26, 19, 161, 18, 16, 15, 14, 8, 6, 1,
	2383, -1000, 1776, 976, 32890, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 126752, 119628, -3, -85, -7, -1000, 3362,
	1141, 56937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	569, 2188, 827, -1000, -1000, -1000, 115757, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2341, 9, -1000, 2139, -1000,
	-1000, -1000, -1000, -1000, 824, -1000, 2340, 356, 2306, -1000,
	-1000, -1000, 3431, 2484, 3803, 3802, 3801, 3800, 3799, 126204,
	1837, 3798, 2550, 3797, 3795, 3794, 3790, 3786, 3785, 3783,
	-1000, 93114, 1095, 92559, 92004, 3439, 115209, 91449, 114654, 77072,
	48966, 971, 3429, -1000, -1000, -1000, -1000, -1000, -1000, 119628,
	-1000, 1094, -1000, -1000, 3782, 2148, 820, 100821, -1000, -1000,
	114099, 1855, -1000, -1000, -1000, 993, 1275, 34600, 34600, 34600,
	304, -1000, -1000, -1000, -1000, -1000, -1000, 3779, 3775, 3774,
	3772, 3769, -1000, -1000, 82611, 25862, 82056, 81501, 113544, 25295,
	90894, 90339, 3766, 3765, 3764, 112989, 76505, 3551, 3549, 1093,
	2121, 1474, -1000, -1000, -1000, -1000, -1000, -1000, -24, 72551,
	3587, 119628, -1000, 292, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48396, 812, 47826, 769, 47256, 353, 112434, -1000, -1000,
	-1000, -1000, 75938, -1000, 111879, 2479, 3763, 3762, 1173, 3761,
	3308, 1836, 3760, 1964, 1261, 3759, 3758, 3754, 3752, 3751,
	3749, 3748, 1501, 111324, 2995, 1538, 110769, 1800, 75371, 1088,
	89784, 94772, 2656, 110214, 1457, 1445, -1000, -1000, -1000, -1000,
	3092, 2887, 2869, 1299, -1000, -1000, -1000, -1000, 60310, 6894,
	5421, -1000, -1000, 11171, 109659, 63135, 94772, 94772, -1000, -1000,
	-1000, -1000, -1000, -1000, 46686, 458, 46116, 933, 109104, -1000,
	-1000, 60875, 2956, -1000, -1000, -1000, -1000, -1000, 108549, 45546,
	457, 44976, 859, 119628, -1000, 2993, 1857, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2402, 1672, 3589, 2750, 74804,
	2068, 1493, 3384, 3088, 3085, 1576, 2119, 3082, 3747, 2667,
	3080, 3078, 3074, 3065, 3057, 1658, 2600, 301, 2607, 32320,
	2983, 1768, 44406, 1641, 1573, 3048, 3032, 3610, 2079, 2047,
	2146, 80946, 3745, 3743, 3327, 3019, 3018, 2812, 3017, -1000,
	2951, 1499, -1000, -1000, -1000, -1000, -1000, 1515, -1000, -1000,
	-1000, -1000, -1000, 85365, -1000, -1000, 1404, -1000, -1000, 1404,
	-1000, -1000, -1000, -1000, -1000, 1367, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1776, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1980,
	-1000, 2106, -1000, -1000, 2526, 3338, 3338, 3338, 3425, 550,
	533, -1000, 161, -1000, -1000, 133631, -1000, -1000, 49536, 49536,
	49536, 49536, 49536, 49536, 49536, 49536, 2265, -1000, 819, -1000,
	-1000, 853, -1000, 816, 748, 668, -1000, -1000, -1000, -1000,
	-1000, -1000, 815, -1000, -1000, -1000, -1000, -1000, -1000, 3587,
	-1000, 28767, -1000, -1000, -1000, 525, 811, 49536, -1000, -1000,
	3627, 3625, 621, -1000, 290, 1013, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2992, 807,
	806, -1000, 804, 803, 802, 800, 797, -1000, 796, -1000,
	794, 793, 791, 788, 783, 782, 781, 780, -1000, 2173,
	-1000, -1000, -1000, -1000, -1000, -1000, 721, 712, 712, 712,
	-1000, 1073, -1000, -1000, -1000, 303, 711, 277, 709, 707,
	706, -1000, 779, 778, 775, 774, 770, 766, 764, 759,
	758, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1072, -1000,
	-1000, -1000, -1000, -27, 119628, -1000, 569, -27, -1000, -1000,
	755, -1000, 36909, 36909, 36909, -1000, -1000, 2339, 49536, -1000,
	2354, -1000, -18, -18, 945, 58611, -1000, 55801, 945, 293,
	865, 64245, -1000, 2950, -1000, -1000, 754, 288, -1000, -1000,
	-1000, -1000, 26427, 2947, 119628, 119628, 119628, 94772, 94772, 94772,
	3741, 3229, 49536, -1000, -1000, 69780, 119628, 95320, -1000, -1000,
	3531, 70890, 69232, 119628, 2989, 107994, 3740, -1000, -1000, -1000,
	-1000, -1000, 3200, 3738, 3730, 3729, -1000, 119628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 241, 3199, -1000, -1000, 98608,
	241, 3197, -1000, 241, 3196, -1000, 98060, -1000, -1000, 2337,
	3195, -1000, -1000, 246, 3194, -1000, -1000, -1000, 243, 3192,
	-1000, -1000, 285, -53, 3190, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 133631, -1000, -1000,
	-1000, 107439, -1000, 3348, -1000, 119628, -1000, 49536, -1000, -1000,
	3528, 1749, 78192, 3481, -1000, -1000, -36, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2536, 2504, 1203, 2365, -1000, 3244,
	1503, 34600, 3296, -1000, -1000, -1000, -1000, -1000, 271, 26427,
	-1000, -1000, -1000, -1000, -1000, -1000, 2412, 3185, 1481, -1000,
	2363, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2064,
	3183, -1000, 2010, 3152, 1973, -1000, -1000, 1613, -1000, 3324,
	-1000, -1000, 2081, 3151, -17, -1000, -1000, 2426, -1000, -1000,
	-1000, -1000, 2054, -1000, 1361, 3150, -1000, 2742, 2742, 89229,
	3162, 62570, 60875, 72551, -31, -1000, -1000, -1000, -1000, -86,
	-1000, 24724, 133631, -1000, -1000, -1000, -1000, 1868, 133631, 994,
	-1000, -1000, 3148, -1000, 133631, 991, -1000, -1000, 3147, -1000,
	2598, -1000, 2988, -1000, -1000, 2439, 2435, -1000, -1000, 3728,
	-1000, -1000, 3727, -1000, 3721, 3719, 3717, -1000, 1745, 2111,
	3716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 88681,
	2338, -1000, -1000, 87571, 2987, -1000, 2434, 3472, -1000, 88126,
	1082, -1000, 1029, 2428, -1000, 97512, 724, 2423, -1000, 3714,
	3436, 2689, 1029, 2420, -1000, -1000, -1000, -1000, -1000, 1099,
	-1000, 66466, -1000, 66466, -1000, 1630, -1000, 125656, -18, 94772,
	3587, -1000, -64, -1000, -1000, -1000, 1141, -1000, 59740, -1000,
	59740, 100266, 77637, 1015, 795, 68129, 133205, -1000, 1049, -1000,
	-1000, 133631, -1000, -1000, -1000, 2594, -1000, -152, 2741, -1000,
	77637, 62005, 2590, -1000, 133631, -1000, -1000, -1000, -1000, 133631,
	-1000, -1000, -1000, 77637, 87571, -1000, 106884, 87023, -1000, -1000,
	1487, 2578, -1000, -1000, -1000, 77637, 1362, 77637, 77637, 77637,
	-1000, 106329, -1000, -1000, 2122, 1506, 3329, 2107, 94772, -1000,
	1858, -1000, -1000, -1000, 3365, 3160, 119628, -1000, -1000, 2986,
	-1000, 72003, 96964, -1000, 96416, -1000, 95868, -1000, 94772, -1000,
	94772, -1000, 3713, 3711, 3710, -1000, -1000, 3709, -1000, 3708,
	3351, -1000, 826, 43836, 133631, 3343, -1000, 3706, 2038, 2983,
	133631, -1000, 3030, 1714, 1703, 119628, -1000, -1000, 119628, -1000,
	119628, -1000, -1000, -1000, 1575, -1000, -1000, 2530, -1000, -1000,
	-1000, -1000, 94772, 94772, 94772, 94772, 1480, -1000, 43266, -1000,
	-1000, 3016, 3705, 1738, -1000, 1834, -1000, 2945, 3352, -1000,
	1472, 1831, -1000, -1000, 248, -1000, -1000, -36, -1000, 125108,
	-1000, 2526, -1000, 119628, -1000, 2527, 2969, 2982, 1690, 2307,
	2625, -1000, 42696, 2564, 52956, 2362, 161, -1000, -1000, 161,
	161, 34030, -1000, -1000, 70890, 70890, 26427, 1391, 49536, 49536,
	49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536,
	49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536,
	49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536,
	49536, 49536, 49536, 49536, 2046, 49536, 1365, 49536, 49536, 49536,
	49536, 1981, -1000, -1000, 1986, 620, 2104, 748, -1000, -1000,
	-1000, 3574, 3574, 3574, 1010, 1010, 1010, 133921, 133921, 681,
	3704, 853, -1000, 49536, -1000, 95, 59166, 49536, 26994, -1000,
	533, 10496, 2599, -1000, 530, 27593, -1000, -1000, -1000, 28767,
	668, 42097, 49536, 1064, 133631, -1000, -1000, 1471, 3595, 24153,
	3006, 2798, 747, 885, 884, 31721, 31122, 30523, 29924, 874,
	813, 49536, 49536, 49536, 49536, 49536, 49536, 49536, 49536, -1000,
	-1000, 3603, -1000, 3595, -1000, -1000, -1000, -1000, 3595, 1386,
	1373, 3595, -1000, 3595, 3595, 8240, 8240, 41527, 40957, 40387,
	53526, 39817, 49536, 29354, 39247, 38677, -1000, 119628, -27, 3527,
	49536, 300, -1000, 131835, -1000, 300, 300, 746, -73, 133631,
	2579, 2579, 57495, 2429, 2271, 2271, 2271, -1000, 945, 19556,
	945, 104678, 2275, 945, 945, 270, 294, 528, 55236, 2354,
	104678, 841, 744, -8, -9, -11, -1000, -1000, -12, -15,
	-1000, -1000, 94772, 735, 26994, 26427, 252, 2013, -84, 2630,
	2628, -1000, 2623, 2620, -1000, 2617, -1000, 1842, -89, 1288,
	94772, 119628, 1410, 3699, -55, -1000, 5188, -97, -1000, 1171,
	245, 3595, -1000, -1000, -1000, -1000, -1000, 3694, 3692, -1000,
	1071, 723, 722, 669, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 721, 712, 712, 712, -1000, 303, 711, 277,
	709, 707, 706, -1000, -1000, -1000, -1000, -1000, 2944, 94772,
	119628, 1409, 3691, -86, 95320, -75, -1000, -1000, 119628, -1000,
	-1000, -1000, 3689, -1000, 94772, -1000, -1000, 94772, 241, 3146,
	-1000, 94772, -1000, 94772, 235, 3145, -1000, -1000, 119628, -1000,
	94772, 94772, -1000, 119628, 119628, 119628, 77637, 77637, 230, -1000,
	94772, 947, -98, 1178, -36, -1000, -1000, -1000, -1000, -1000,
	1404, -1000, 1867, -1000, -1000, -1000, -1000, -1000, -1000, 1507,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 621, -1000,
	-1000, -1000, -1000, -1000, -1000, 3585, 3580, -28, -1000, -1000,
	26427, -1000, -37, 1683, 1978, 1287, -1000, 80391, 2493, 3353,
	3688, 2680, 3315, 1625, -1000, 1574, -1000, 3442, 85365, 3498,
	3514, 1372, -1000, 2941, -1000, -1000, 992, 1737, 1804, 1282,
	1280, 85365, 2010, -1000, 70890, -1000, 2661, 3423, 1451, 1491,
	1451, 1451, 1488, -1000, 85365, 1799, 1278, 1274, 1271, -1000,
	-1000, 2028, 2021, -1000, -1000, 105781, -1000, 1270, 1268, 3546,
	1980, 2273, 879, 2001, -1000, -40, 3492, 3504, 1371, -1000,
	2936, 1265, -1000, -1000, -1000, 3420, 94772, 26427, 1616, 1615,
	1614, 1792, 1263, -30, -1000, 3489, 1259, 1255, -1000, 1108,
	7689, 3272, -1000, 77637, 1108, 1108, 1971, 3144, 2717, 1682,
	-1000, 2738, 942, 2736, -1000, -1000, -1000, 942, -31, 72551,
	119628, 239, -1000, 95, 49536, 49536, 95, 49536, 95, -1000,
	3464, 3143, 3142, -1000, -1000, -1000, -1000, -1000, 3687, 2053,
	2538, -1000, -1000, 705, 2415, 2935, 119628, 2642, -32, 94772,
	-1000, 71455, 3141, 73107, 2010, 2410, -1000, -1000, 86468, -1000,
	3140, 569, 2409, -1000, 689, 3686, 3137, -1000, 124560, -1000,
	3348, 1273, 3135, 1125, 753, 3524, -1000, 753, 67019, -1000,
	119628, -1000, -18, 4995, 79295, -99, -100, 526, -1000, 105233,
	119628, 1124, 79843, 119628, 3285, 2069, 2049, -1000, 1024, 60875,
	-1000, 60875, -111, -152, 2735, 1526, -1000, 1015, 1015, 942,
	-1000, 942, -1000, 94772, 2977, -1000, -1000, 77637, 1015, 1015,
	1015, -1000, -1000, -1000, -1000, 3684, 3683, 3681, 3680, -1000,
	-1000, 1025, 94772, 119628, 94772, -1000, -1000, 1681, -1000, 227,
	-1000, 119628, -1000, 119628, 119628, 94772, -1000, 1025, 119628, 1025,
	119628, 1025, 119628, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	95, -1000, -1000, 133631, -1000, 49536, -1000, -1000, 1572, 3679,
	1649, -1000, 2972, -1000, 2971, -1000, 25, -1000, -1000, 1952,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3678, 133631, -1000,
	1845, -1000, -1000, -1000, -1000, 94772, 94772, 94772, 94772, 119628,
	3271, -1000, 119628, 3263, 94772, -1000, -1000, 85365, -1000, 2527,
	2969, -1000, -1000, -1000, -1000, -1000, -1000, 1469, 2314, -1000,
	2571, -1000, 1565, -1000, -1000, -1000, 133631, 54096, -1000, -1000,
	133631, 1887, -1000, 52386, 51816, -1000, -1000, 1767, 94772, 2666,
	-1000, 2666, -76, -1000, 131409, 2570, 94772, -1000, -1000, -1000,
	-1000, -1000, 990, 623, 623, 1343, 1343, 1343, 1343, 3496,
	6427, 6452, 7817, 6964, 6964, 6561, 6561, 6561, 6561, 6561,
	6964, 6085, 1010, 1010, 6085, 6085, 6085, 6085, 6085, 1010,
	1010, 1010, 6964, 6964, 6964, 1010, 133921, 133813, 8677, 49536,
	49536, 1254, 1962, 620, 7893, 49536, 8991, 8991, 8991, 8991,
	-1000, 2074, -1000, -1000, -1000, -1000, 2916, 702, 53526, 53526,
	-1000, -1000, -1000, -1000, 28180, 49536, -1000, -1000, -1000, -1000,
	38078, -1000, -1000, 130937, -314, 520, -1000, 226, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 508, -71, 82, -1000, 49536, 49536, 49536, 506, -1000,
	225, 49536, 119628, -1000, 18807, 840, -117, -1000, -114, 1484,
	-1000, 49536, -1000, -1000, 1242, -1000, 1241, 1238, 1236, -1000,
	701, 505, -1000, 224, -1000, 2267, 700, 691, 49536, -1000,
	-1000, -1000, -1000, -1000, 130508, -1000, -1000, 130326, -1000, -1000,
	130218, -1000, -1000, 130036, -1000, -1000, -1000, -1000, -1000, 133023,
	17974, 17222, 16424, 7156, 15054, 14071, -120, 501, -121, 500,
	977, 973, 499, 498, 488, -122, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -127, 484,
	-1000, 2914, -71, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 482, -1000, 481, -1000, 132915, -71, 480, 522, -1000,
	53526, 53526, 53526, 53526, -1000, 478, -1000, 131227, -1000, 132733,
	37508, 37508, 37508, 453, 132307, 49536, -71, -129, -1000, -130,
	-1000, -1000, 587, -132, 1061, 36909, 56379, 26427, -1000, 1061,
	1061, 49536, -1000, 49536, 2587, -1000, -1000, -1000, -1000, 2584,
	1874, 2579, 57495, -1000, -1000, -1000, -1000, 104678, -1000, 3587,
	3056, -1000, 104678, -1000, -1000, 119628, 569, -1000, 104678, 104678,
	26427, 945, -1000, 945, 104678, 675, -1000, -1000, -1000, -1000,
	-1000, 451, 64803, 82, 223, 26427, 1029, -1000, -1000, 2706,
	2706, 2706, 2706, 2706, -1000, -1000, 119628, 1233, -33, -92,
	2721, -1000, 3555, -1000, 2204, -1000, 70890, -1000, 851, 1175,
	26427, -1000, -1000, -1000, 687, -1000, 3595, 3595, -1000, 3595,
	119628, 2913, 278, 2718, -1000, 265, 73107, 3677, -1000, -1000,
	241, -1000, 94772, 241, 241, -1000, 94772, 94772, 2337, -1000,
	246, -1000, 243, -1000, -1000, -53, -1000, 1048, 34600, -1000,
	1404, -1000, -1000, 1590, -1000, 2073, -1000, 1207, -1000, -1000,
	-1000, -1000, 34600, -1000, 2534, 119628, 119628, 94772, -1000, 119628,
	-1000, 2206, 73107, -1000, 2405, 124012, 2399, 70890, 119628, -1000,
	-1000, 686, 1001, 2568, 2563, 1121, 119628, 119628, 2562, 123464,
	122916, -1000, 3675, 119628, 2138, 49536, 3416, 2269, 2299, 95,
	95, -1000, 95, 95, 95, -1000, 682, 1347, 94772, 94772,
	119628, 73107, 94772, 1937, -1000, -1000, -1000, -1000, -1000, 85913,
	-1000, -1000, 3602, 3598, -1000, 1451, -1000, -1000, -1000, 1451,
	2010, 1900, 119628, 73107, 94772, 73107, 122368, 121820, -1000, -1000,
	1783, 119628, -1000, -1000, -1000, -1000, 1495, -1000, 879, 2214,
	95, 95, -1000, 95, 95, 95, 677, 26427, 2070, -1000,
	2973, 119628, 3624, 121272, 3622, 119628, 119628, 119628, 73107, 3354,
	119628, 119628, 73107, -1000, 120724, 7689, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74237, 1130, 119628,
	1361, -1000, -1000, 1774, 1232, 1230, 85365, 2160, 1759, 1913,
	119628, 60875, 1023, 60875, 2697, -1000, -1000, 23582, -1000, 133631,
	133631, -1000, 133631, -1000, 71455, 77637, 119628, -1000, 1079, 119628,
	79843, 1008, 3130, 65913, -86, 1015, 77637, 94772, -32, 2642,
	119628, -1000, -1000, -1000, -1000, -1000, 2010, 3117, 569, 2404,
	-1000, 77637, 3523, 3114, 674, 3674, 3670, -1000, 94772, 2335,
	2400, -1000, -1000, 120176, 3218, 879, 119628, 1061, 57495, 2005,
	-1000, 63690, 1106, 119628, 1935, 216, -1000, -1000, -1000, 10,
	119628, -1000, 864, -1000, -1000, 4995, 4995, 1015, -160, 672,
	-1000, 924, 922, 61440, 77637, -135, -1000, -1000, -1000, -1000,
	2399, 94772, 119628, 1333, 2687, 119628, -137, -1000, 222, 670,
	921, 919, -1000, 3049, -1000, -152, -1000, 1024, 60875, 2912,
	2911, -1000, -1000, 1047, -1000, 1431, 1015, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -19, 1861,
	119628, -86, -86, -47, -33, -1000, 1025, -1000, 1025, -1000,
	1025, -1000, 133631, -1000, -1000, -1000, 1646, 1638, 119628, -1000,
	-1000, 119628, -1000, 26427, 119628, 94772, 26427, 94772, 2967, 2966,
	-1000, -1000, -1000, 119628, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1148, -1000, 1887, 2312, -1000, 668, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2503, -1000, -34, 34030,
	943, -1000, -1000, 94772, -20, 49536, 49536, 7878, 5794, 49536,
	53526, 53526, -1000, 49536, 5686, -1000, -1000, -1000, -1000, -1000,
	2906, 667, 49536, 70890, 7128, 5730, -1000, 448, 12727, 6085,
	-1000, 49536, -1000, 350, -1000, 446, 36339, -1000, 132017, 0,
	-142, -1000, 20140, -71, -145, -1000, -1000, 847, -1000, 3215,
	-1000, 49536, 132125, 2473, 2044, 1850, 1685, 3595, 3621, 23011,
	-1000, 67574, 1062, 2282, 129607, -1000, -1000, -1000, -1000, 70890,
	70890, 49536, 49536, -1000, 49536, 49536, 49536, -1000, -1000, -1000,
	3595, 995, -1000, -1000, -1000, 995, -1000, -1000, 1451, -1000,
	1451, -1000, 49536, -1000, -1000, 2905, 49536, -1000, 70890, 70890,
	53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526,
	53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526, 53526,
	2554, 53526, 3572, 3572, 3572, 1026, -1000, 2965, 2905, 49536,
	49536, 70890, 442, 437, 436, -1000, 49536, -71, -1000, -1000,
	5689, 663, -1000, 2492, -1000, 2796, -1000, 49536, -1000, -140,
	-1000, 2354, -1000, -1000, 2796, 2796, -150, 133631, 57495, 57495,
	-1000, 662, 49536, 2583, -1000, -1000, 839, -312, -1000, 916,
	-1000, -1000, -1000, -1000, -1000, -1000, 569, -1000, -1000, -1000,
	221, 104678, 104678, 838, -1000, -155, -1000, -1000, -157, -1000,
	3522, 435, 26427, -1000, 1061, 2696, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -86, 119628, 119628, 1751, 2305, 3620, -1000,
	3597, 846, 834, 220, 3595, 432, 431, 428, -86, 119628,
	119628, 1744, 119628, -1000, -1000, -1000, 241, -1000, -1000, -1000,
	235, -1000, -1000, -1000, -1000, 2658, -1000, -36, -1000, -1000,
	-1000, 49536, -1000, -1000, 3341, 1228, 1227, -1000, -1000, -1000,
	2866, -1000, 3112, -1000, 2397, -1000, 1113, -1000, 1622, -1000,
	49536, 661, 2686, 660, 659, 3669, 2101, 3668, 1123, 3110,
	2337, 3109, 2337, -1000, -1000, -1000, 996, -1000, 133631, 2269,
	-1000, 658, 657, -1000, -37, 1654, 1939, 1226, 1045, -1000,
	-1000, -1000, -1000, 49536, 49536, 104130, -1000, 474, 3324, -22,
	-1000, -1000, -1000, 1727, 1224, 1222, -1000, -1000, -1000, -1000,
	2010, 1725, 1221, 1219, -1000, -1000, -1000, -1000, -1000, 2390,
	-1000, -1000, 3100, 1044, -1000, 3026, 3025, 951, 119628, -1000,
	1035, -1000, -1000, -1000, -1000, 49536, -1000, -40, 1215, 3477,
	2388, 94772, -1000, 2337, 3097, 1214, -1000, 1213, -1000, -1000,
	-1000, 3488, 3485, 1237, -1000, -1000, -1000, -1000, -1000, 73672,
	-1000, -1000, 1108, 119628, 73107, 94772, 1889, -1000, -1000, 84269,
	84817, 119628, 2717, -86, 942, -1000, 2467, 942, 1023, 2890,
	-1000, 2634, -1000, 1034, 94772, 3667, 409, -172, -41, 70890,
	3521, -1000, 2347, 683, 94772, 981, -1000, 3587, -1000, -1000,
	-1000, 1033, -1000, 3471, 94772, 3520, 3095, 1029, 95, 94772,
	3608, -1000, -1000, 3518, 94772, 3089, 2334, 2382, 2532, 879,
	78747, 1029, 2279, -52, -1000, 1935, 35740, 3321, -173, -1000,
	-1000, -1000, 1061, 67019, 57495, 49536, 3663, -174, -1000, -1000,
	-1000, -1000, -1000, 101931, 101931, 77637, 77637, 77637, 1015, 119628,
	119628, 79843, -1000, -1000, 656, 119628, 119628, 654, -1000, 119628,
	119628, 3660, 77637, 77637, 77637, -42, 653, -1000, 912, 911,
	910, -1000, -1000, -1000, -1000, -1000, -1000, 909, 1024, -1000,
	-152, 60875, 95, -1000, 2300, 94772, -1000, 22440, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1025, -86, -1000, -1000, 2229,
	2343, 2229, 1904, 1873, -1000, -1000, 2310, -1000, -1000, -1000,
	-1000, 2641, 3333, 26427, 3453, 8991, 49536, 49536, 547, 585,
	423, 8991, 49536, 49536, 70890, 16038, -180, 49536, 49536, -1000,
	49536, 832, 133631, -1000, 3618, 49536, 402, 400, -1000, -1000,
	-1000, 3594, -1000, -1000, -1000, 133631, 49536, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 399, -1000, 217, -1000, -1000, -1000,
	127300, -1000, 49536, 398, 3415, -1000, 395, 393, 11533, 479,
	129425, 129317, 129135, 390, -1000, -1000, 389, 388, 133631, 2965,
	133631, -1000, -1000, 963, 963, 1440, 1440, 1440, 1440, 3572,
	703, 745, 635, 610, 610, 610, 566, 1026, 1026, 610,
	610, 610, 1026, 2883, 2553, 652, 7619, -1000, -1000, 133631,
	133631, 384, -1000, -1000, -1000, -71, 380, 5689, -1000, 2779,
	3413, 133631, -1000, 57495, 2779, 2779, -1000, -1000, 1874, 119628,
	133631, 57495, -1000, 3056, -1000, 20722, -1000, 26427, -1000, -1000,
	-1000, -1000, 3587, -1000, 64803, -1000, 651, -1000, 11, -1000,
	2696, -1000, 908, -1000, -1000, 77637, 77637, -86, -182, 119628,
	-1000, -1000, 830, 3659, 844, 26427, 378, -1000, -1000, -1000,
	-86, -86, 119628, -86, -1000, -1000, -1000, 3280, 133631, 119628,
	119628, 1524, 103582, 119628, 3077, -1000, 2169, -1000, 1121, 128689,
	58053, -1000, 58053, 119628, -1000, -1000, -1000, -1000, 2075, 1517,
	3657, 1160, -1000, 3368, 119628, -1000, 119628, -1000, -1000, -1000,
	119628, 119628, 94772, 119628, -1000, 73107, 3037, -181, 133631, -43,
	-1000, 907, -1000, 1341, -1000, 21869, 119628, 73107, 94772, 119628,
	73107, 94772, 3073, 119628, 2254, -1000, -1000, 3022, -1000, 3036,
	-187, 26427, -1000, 3617, 3616, 3058, 3378, -1000, 119628, 3614,
	119628, 94772, 3278, -1000, -1000, -1000, -1000, -1000, -1000, 1676,
	1212, 1209, 2333, -46, 2330, 2303, -47, 2160, 1023, -49,
	649, -1000, 906, -1000, -1000, 899, -1000, 1023, -1000, 77637,
	60875, 3653, 569, -1000, 2669, -1000, 99711, 2384, 95, -1000,
	3652, 102486, 647, -1000, 2295, -1000, 829, -1000, 2515, 73107,
	2010, 95, 94772, -1000, -1000, 569, 373, -50, -1000, 3084,
	1117, 26427, 94772, 3054, 2544, 879, 78747, -1000, 1273, 2625,
	-1000, -51, -1000, 673, 95, 2279, -1000, -52, 133631, -1000,
	896, -1000, -188, -1000, -1000, 355, -1000, 3277, 3276, -1000,
	2776, 58053, 646, 645, 119628, 3275, -1000, -1000, -189, -1000,
	-1000, 2638, 2638, 77637, 60875, 77637, 77637, -1000, 1024, 942,
	-1000, 2486, -1000, -1000, -1000, -1000, -1000, 26427, 1673, -1000,
	644, 643, -1000, -1000, -1000, -1000, 3333, 8991, 8991, 49536,
	49536, 49536, 8991, 16038, -190, -1000, 8991, 8991, -71, -1000,
	-1000, 132017, -1000, -1000, -1000, 133631, -1000, 21298, 2230, -1000,
	128626, -1000, 34030, -1000, -1000, 49536, 49536, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 53526, 2867, 642, 70890, -1000,
	-1000, 329, 1051, 49536, 51246, 2354, 1051, 1051, -1000, -195,
	-1000, -1000, -1000, 3587, 11, -1000, -1000, 3651, 26427, -1000,
	77637, -1000, -1000, 3650, -156, 843, -1000, 3647, -1000, -1000,
	215, -1000, -1000, -1000, 2714, 3516, -1000, 1996, -1000, 119628,
	-1000, 119628, -1000, 26427, 119628, 2811, 1308, -1000, 1001, 2557,
	640, 53526, 1147, 94772, 954, 2768, 2762, -1000, 3543, 3409,
	2780, -202, -1000, 119628, 49536, 119628, -203, -204, 2371, -1000,
	-1000, 1144, 1303, 49536, 1137, -1000, -1000, -1000, 70890, 639,
	2337, 2337, -205, -210, -1000, -1000, -1000, 49536, 1206, 119628,
	35170, -1000, 3645, 3324, -1000, -1000, -1000, -1000, -1000, -1000,
	119628, -1000, 119628, -1000, 49536, 1205, -1000, -1000, -1000, 3613,
	2337, 26427, 2337, -1000, 2337, 3378, 1159, 119628, 73107, 94772,
	1746, 1746, 2873, -1000, -1000, -1000, 2501, 2501, 77637, 60875,
	-1000, -53, 1023, -1000, 3513, 2677, 3642, -1000, -1000, -1000,
	-1000, 2556, -1000, -1000, 119628, 2555, 1017, -1000, -211, -1000,
	894, 893, 79843, 1008, 949, -1000, -54, 634, -1000, 891,
	-1000, -1000, -1000, -1000, 569, 3512, -1000, 3611, 633, 632,
	119628, 2328, 622, 26427, 3319, 879, 78747, -1000, 3218, 1935,
	-1000, 2377, 119628, 3314, -1000, 2625, 620, -1000, 1015, 615,
	613, 2270, 2270, -212, 58053, 58053, -213, 611, 1015, -1000,
	-218, -1000, -1000, -1000, -1000, -1000, -1000, -58, -1000, 941,
	872, -1000, -1000, 94772, 94772, 49536, 49536, -1000, 8991, 8991,
	8991, -1000, 326, -1000, -1000, 2279, 3403, -1000, -59, 128507,
	128040, 6072, 53526, 70890, -220, -1000, -1000, 119628, 133631, -61,
	-1000, 133631, 608, 595, 519, -1000, -1000, -1000, 814, -1000,
	-1000, -1000, 119628, 3641, -1000, 119628, 103034, 119628, -1000, -1000,
	2232, -1000, -1000, -1000, 119628, 2380, -1000, -1000, -1000, 1119,
	49536, 7619, 53526, 594, 49536, -1000, 592, 591, 3510, 3252,
	-1000, 2664, 2849, 1920, 58053, -1000, 3333, -1000, 127921, -1000,
	1116, 2034, -1000, -1000, -1000, -1000, 133631, 53526, 3378, 58053,
	-1000, -1000, 590, 589, 133631, 588, 888, 2864, -1000, -1000,
	-1000, -1000, -1000, 133631, 583, 3477, -1000, -1000, -1000, -1000,
	2337, 94772, -1000, -1000, -1000, 1199, -1000, -1000, -1000, -1000,
	3640, 3639, 2857, 84269, -1000, -221, -1000, -1000, 2050, 95,
	2228, 2712, -1000, 2384, 582, -1000, -1000, 2317, 2655, -1000,
	102486, 34600, 34600, 322, 3509, 949, -1000, 3581, -1000, 3251,
	3251, 49536, 3506, 95, -1000, 3608, 58053, -1000, 94772, 58053,
	2325, 2149, 2520, 78747, -1000, 2532, -1000, -1000, -226, 119628,
	1935, -1000, -1000, 77637, 77637, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1116, -227, -228, -1000,
	77637, -1000, -1000, 2486, -1000, 119628, -1000, 119628, -1000, -1000,
	-229, -240, -1000, 2099, 49536, 34030, -1000, -1000, 6072, -242,
	-1000, -62, -1000, 3505, 51246, 3637, 3636, 3634, -1000, -86,
	-1000, -86, -1000, 1995, -1000, -1000, -1000, 3053, 2790, 127858,
	7619, 2494, 119628, 18926, 2010, 2010, -1000, 3502, 2845, -1000,
	-1000, 2677, 571, -1000, -1000, -1000, -1000, 943, 119628, 2677,
	2774, 94772, 7619, 1118, -247, 2229, 2229, 49536, 33460, 2245,
	49536, -1000, -1000, 3378, 119628, -1000, -1000, 119628, 2320, -1000,
	2827, 3582, -1000, 1008, -1000, 2239, 119628, -1000, 3355, -1000,
	3274, -1000, -1000, -1000, 2669, 95, -1000, -1000, -1000, -250,
	133631, 95, -1000, 320, -253, 1117, -255, 94772, 2042, -1000,
	879, -1000, 2544, 1061, -1000, -1000, -256, -258, 1920, 1116,
	2214, -261, -1000, -264, -266, -1000, -1000, 317, 50676, 50676,
	50676, -71, -76, -1000, 119628, 570, -1000, -1000, -1000, -1000,
	-1000, 3015, 1020, -1000, 887, 1977, 315, 1135, 312, 295,
	-1000, -1000, -1000, 2214, 119628, -1000, -1000, -1000, 1019, 569,
	-1000, 49536, 1116, -267, -1000, 1105, -269, -1000, 1100, -272,
	-1000, 2856, -1000, -274, 2337, -245, 230, 1746, 1018, 3463,
	-1000, -1000, -1000, 2317, 94772, -275, -1000, -1000, 2411, -1000,
	2677, 1017, -1000, -1000, -1000, 1116, 565, 1920, 564, 1512,
	879, -1000, -1000, 1451, 3319, 3225, 1015, 1015, 2677, 1920,
	1011, -1000, 1015, -1000, -1000, -1000, 3207, -1000, 54666, 2361,
	1863, 131119, 3207, 3207, -1000, -1000, 119628, 3444, -1000, 932,
	928, 1548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2780, -277, 3443, 2494, 133631, 2677, -1000, 2229, 2701, -1000,
	2229, 2843, -1000, 2233, -1000, -1000, -1000, 2806, -1000, 2842,
	-1000, 1822, 3571, 2509, 563, -1000, 119628, 1840, 1838, 3633,
	2228, 2317, 1920, 58053, 2677, 58053, 2190, -1000, 119628, -1000,
	2149, 1346, -1000, -1000, 2214, 2677, 1061, 553, -1000, -1000,
	1888, 3538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	877, -1000, 3241, -1000, 1134, 2151, 2151, 1061, -1000, 869,
	887, -1000, -1000, 552, -1000, 548, -1000, 2302, 119628, 2290,
	-1000, -1000, -1000, -1000, 119628, -1000, -1000, 3631, -1000, 1008,
	-1000, 2677, -280, 2214, -283, -1000, -1000, -1000, -86, 2042,
	-1000, 1606, 1011, 2214, -1000, 1849, -1000, -1000, 2272, 50106,
	49536, -1000, 3559, -1000, -1000, 2573, -1000, -1000, 49536, 2780,
	49536, 49536, -1000, 230, 65358, -285, -1000, 2317, 2214, 1116,
	1011, 1920, 1512, 67019, 1061, 1011, -1000, -1000, -1000, 133631,
	-1000, -1000, -1000, 133631, -1000, -288, -290, -1000, -160, 101931,
	2283, 2509, 1011, 1920, 1061, 2677, 2190, -263, -1000, 1061,
	2214, 1190, -295, -1000, -1000, -1000, -1000, 1061, 2677, -1000,
	2214, -1000, -1000, -1000, -1000, -1000, 354, -1000, -1000, 2214,
	1011, 49536, 1011, 1061, -303, 1061, -1000, 2214, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4442, 4441, 4440, 4439, 4438, 4437, 4436, 4435, 4433,
	4432, 4431, 4427, 141, 4425, 4424, 4422, 4419, 4418, 4417,
	4416, 4414, 4412, 4410, 4408, 4407, 4404, 4402, 4394, 4392,
	4384, 4382, 4381, 4380, 4377, 4376, 4374, 4373, 4371, 4370,
	4360, 4359, 4342, 4341, 4340, 4339, 4338, 4337, 4336, 4335,
	4334, 4333, 4332, 4331, 4329, 4328, 4327, 4324, 4323, 4322,
	4320, 4319, 4317, 4313, 4312, 4311, 4310, 4309, 55, 4308,
	4303, 4301, 4299, 4298, 4297, 4296, 4295, 4294, 4293, 4292,
	4291, 4285, 4284, 4283, 4282, 4280, 4279, 4277, 4275, 63,
	4274, 287, 4270, 4268, 4267, 4266, 4265, 4264, 4263, 4261,
	4258, 4257, 4256, 4255, 284, 4254, 136, 163, 4253, 4251,
	3806, 4247, 4240, 279, 4234, 4233, 4232, 4230, 4229, 289,
	4228, 4227, 4225, 4224, 4222, 4220, 4219, 4217, 4212, 4211,
	4210, 4208, 91, 209, 4207, 4203, 2152, 4200, 4198, 4196,
	4194, 4193, 4192, 4191, 4189, 4188, 4186, 4185, 257, 182,
	4183, 277, 4181, 4180, 4179, 4175, 4172, 4170, 4169, 4168,
	4167, 4165, 4163, 4160, 4157, 4152, 4150, 4148, 4146, 4145,
	4144, 4143, 4142, 4141, 4139, 4138, 4137, 4136, 4131, 4130,
	4128, 4125, 4123, 4120, 4119, 4114, 4107, 4105, 4104, 4103,
	4100, 249, 216, 192, 4098, 4097, 276, 274, 4096, 4089,
	4087, 4086, 4085, 128, 11, 43, 4084, 4080, 95, 96,
	86, 109, 104, 101, 4079, 120, 4076, 119, 66, 4073,
	18, 2, 168, 267, 8577, 245, 4072, 4071, 4070, 255,
	202, 4069, 243, 4068, 4063, 4060, 4059, 4058, 4057, 71,
	51, 189, 187, 176, 177, 3, 4056, 162, 93, 84,
	57, 42, 16, 85, 220, 21, 1, 266, 4055, 264,
	12, 143, 7, 37, 4051, 4050, 4049, 4048, 3920, 123,
	4047, 270, 248, 172, 4046, 4045, 4044, 624, 4042, 4037,
	44, 4036, 201, 87, 127, 65, 124, 4035, 153, 174,
	31, 4033, 171, 69, 4031, 160, 99, 88, 11430, 7376,
	4030, 4025, 133, 76, 102, 2641, 203, 165, 207, 247,
	175, 164, 122, 226, 212, 184, 60, 4021, 262, 4020,
	3506, 78, 190, 156, 6293, 4019, 4018, 4017, 82, 204,
	108, 4015, 4014, 77, 9, 32, 4, 6, 144, 23,
	22, 10, 4013, 49, 118, 48, 25, 4012, 28, 4011,
	4009, 4008, 4007, 4006, 61, 166, 4004, 4003, 282, 4002,
	111, 54, 41, 4001, 856, 228, 3999, 236, 130, 3998,
	3997, 258, 211, 205, 3996, 74, 239, 3987, 3985, 3984,
	3982, 3972, 135, 8, 134, 3965, 3962, 151, 3959, 52,
	250, 200, 3953, 59, 3949, 3948, 178, 50, 139, 288,
	131, 230, 121, 231, 193, 237, 3947, 3942, 3940, 217,
	3939, 3937, 229, 157, 3935, 3934, 251, 290, 94, 45,
	80, 246, 83, 197, 158, 3931, 210, 3929, 3928, 286,
	188, 224, 13, 17, 106, 129, 3927, 5, 238, 159,
	234, 113, 3925, 8063, 2052, 3236, 3924, 3923, 154, 117,
	81, 115, 155, 269, 97, 3922, 3919, 1666, 3918, 3917,
	3916, 3914, 194, 3913, 3912, 3910, 146, 148, 215, 3909,
	126, 72, 47, 24, 112, 263, 272, 114, 233, 170,
	259, 3908, 3906, 3905, 191, 3904, 58, 132, 173, 208,
	265, 56, 3900, 169, 3899, 147, 254, 67, 161, 3898,
	227, 3897, 3896, 3895, 3893, 3892, 3891, 3890, 186, 241,
	3889, 3888, 3886, 34, 199, 3885, 261, 183, 185, 92,
	79, 3883, 98, 3549, 3882, 152, 235, 68, 271, 180,
	3881, 3409, 53, 3880, 0, 15059, 9516, 13237, 14854, 3879,
	2227, 3878, 3874, 3873, 222, 145, 3872, 3871, 3870, 105,
	3869, 89, 3868, 3865, 73, 3864, 27, 19, 20, 30,
	35, 298, 198, 3863, 3862, 29, 138, 149, 3861, 273,
	232, 3860, 3859, 3858, 3857, 100, 3856, 40, 3853, 38,
	3852, 3851, 39, 15, 46, 3850, 3849, 218, 3847, 219,
	256, 3845, 167, 3844, 70, 140, 3841, 3840, 3839, 64,
	62, 260, 90, 3838, 285, 3836, 206, 3835, 3833, 3833,
	26, 3831, 3829, 252, 116, 110, 3828, 253, 142, 36,
	214, 179, 223, 3827, 3826, 181, 3825, 3824, 3822, 275,
	3820, 3819, 33, 3818, 3817, 3816, 14, 3814, 3813, 213,
	3194, 3812, 3809, 107, 3808, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 529, 529, 529, 528, 528, 624, 624, 625, 625,
	625, 625, 625, 135, 135, 395, 395, 395, 56, 56,
	56, 56, 56, 592, 592, 208, 208, 208, 210, 210,
	209, 209, 209, 209, 209, 80, 80, 609, 609, 610,
	610, 608, 607, 607, 607, 611, 611, 611, 207, 207,
	207, 131, 131, 131, 131, 131, 131, 132, 132, 133,
	133, 211, 211, 211, 213, 213, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 109,
	109, 531, 531, 532, 532, 202, 202, 203, 203, 203,
	203, 204, 204, 205, 205, 205, 71, 71, 214, 214,
	216, 216, 215, 215, 215, 215, 215, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 69, 69, 69, 69, 69,
	69, 193, 193, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 77, 77, 77, 77,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 627,
	627, 628, 628, 629, 629, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 86, 86, 356, 356, 319, 319, 87, 87, 87,
	88, 88, 89, 89, 73, 73, 590, 590, 372, 372,
	488, 488, 74, 598, 598, 598, 600, 600, 599, 599,
	91, 91, 394, 394, 92, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 93, 93, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 101, 101, 101, 101, 101, 102, 102, 102, 99,
	99, 99, 96, 96, 96, 95, 95, 95, 100, 100,
	100, 589, 308, 308, 98, 98, 98, 97, 97, 97,
	373, 373, 103, 103, 103, 103, 320, 104, 104, 104,
	104, 104, 104, 104, 104, 107, 107, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	490, 490, 105, 105, 105, 455, 455, 110, 110, 110,
	410, 410, 111, 111, 111, 111, 111, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 134, 134, 134, 134,
	134, 134, 134, 134, 594, 594, 365, 365, 271, 271,
	271, 271, 123, 123, 123, 123, 124, 124, 124, 125,
	125, 198, 198, 141, 141, 141, 141, 140, 140, 140,
	140, 140, 140, 140, 140, 63, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 68, 68, 68, 68,
	68, 144, 144, 621, 621, 146, 143, 143, 143, 143,
	143, 142, 142, 145, 145, 145, 145, 147, 149, 149,
	149, 149, 149, 148, 148, 148, 148, 150, 150, 522,
	522, 381, 381, 520, 520, 541, 541, 521, 521, 326,
	326, 326, 326, 326, 327, 327, 327, 530, 530, 530,
	530, 530, 530, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 199, 199, 200, 201,
	201, 201, 201, 201, 176, 176, 176, 192, 192, 192,
	192, 192, 192, 192, 192, 179, 179, 179, 163, 163,
	152, 152, 152, 152, 152, 152, 152, 157, 157, 157,
	157, 157, 157, 157, 157, 153, 153, 165, 165, 165,
	165, 165, 158, 158, 159, 159, 159, 160, 160, 160,
	160, 186, 186, 162, 162, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 154, 154, 154, 154, 167, 167,
	167, 167, 417, 417, 417, 191, 191, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 189, 189, 189, 189, 189, 189, 612,
	612, 613, 613, 613, 183, 183, 183, 183, 183, 183,
	469, 469, 177, 177, 177, 177, 182, 182, 182, 182,
	185, 185, 185, 185, 400, 400, 174, 174, 174, 175,
	175, 175, 180, 180, 181, 357, 357, 178, 178, 184,
	184, 184, 184, 155, 155, 155, 155, 155, 155, 155,
	156, 156, 156, 156, 187, 187, 173, 173, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 631,
	631, 169, 169, 169, 168, 168, 168, 168, 171, 171,
	172, 172, 172, 172, 172, 172, 170, 161, 190, 591,
	591, 587, 587, 587, 587, 587, 587, 587, 587, 588,
	588, 588, 588, 593, 593, 115, 115, 115, 115, 115,
	115, 115, 126, 126, 126, 126, 126, 126, 126, 129,
	129, 116, 116, 116, 116, 116, 116, 116, 119, 119,
	117, 117, 117, 117, 118, 118, 81, 81, 81, 81,
	81, 15, 15, 15, 82, 82, 262, 262, 220, 220,
	220, 345, 345, 221, 221, 334, 334, 334, 334, 218,
	218, 219, 219, 83, 83, 632, 632, 632, 604, 604,
	604, 605, 605, 605, 605, 605, 605, 328, 328, 329,
	329, 435, 435, 435, 435, 435, 332, 332, 332, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 335, 335,
	246, 246, 246, 343, 344, 344, 336, 336, 342, 341,
	341, 340, 340, 339, 339, 337, 338, 338, 338, 347,
	347, 346, 349, 349, 348, 434, 550, 550, 552, 552,
	552, 552, 552, 552, 552, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 418, 418, 633, 633, 634, 635, 548, 548,
	548, 549, 544, 544, 545, 545, 545, 545, 545, 330,
	330, 331, 331, 331, 331, 546, 547, 363, 363, 473,
	551, 551, 553, 553, 555, 636, 636, 636, 636, 636,
	636, 637, 637, 637, 433, 433, 432, 432, 354, 354,
	556, 556, 556, 556, 557, 557, 557, 557, 557, 560,
	559, 558, 558, 558, 558, 558, 85, 85, 85, 397,
	397, 396, 396, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 195, 195,
	274, 274, 79, 79, 79, 12, 12, 12, 12, 12,
	12, 12, 289, 289, 13, 13, 13, 606, 606, 606,
	84, 84, 84, 84, 84, 84, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 596, 596, 595, 595,
	275, 275, 639, 639, 90, 90, 90, 90, 90, 90,
	90, 90, 491, 491, 492, 492, 78, 78, 78, 78,
	78, 419, 419, 416, 416, 415, 415, 362, 362, 471,
	471, 471, 472, 279, 279, 280, 280, 239, 239, 239,
	31, 30, 21, 21, 26, 26, 27, 27, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 28, 28, 49,
	49, 49, 49, 50, 50, 50, 50, 53, 53, 54,
	54, 48, 48, 48, 48, 51, 51, 44, 44, 55,
	55, 55, 55, 55, 614, 616, 616, 615, 615, 619,
	619, 619, 619, 619, 619, 617, 617, 618, 618, 622,
	622, 623, 623, 122, 122, 127, 127, 127, 127, 127,
	128, 128, 128, 128, 130, 130, 130, 130, 139, 139,
	194, 194, 194, 194, 194, 194, 194, 57, 57, 57,
	57, 70, 70, 70, 70, 137, 641, 641, 641, 138,
	138, 138, 640, 640, 272, 272, 429, 429, 430, 430,
	642, 642, 431, 431, 431, 431, 431, 265, 264, 266,
	266, 267, 267, 76, 76, 76, 255, 255, 254, 256,
	256, 257, 257, 252, 252, 533, 533, 259, 259, 259,
	260, 260, 248, 248, 249, 249, 250, 250, 251, 251,
	263, 263, 643, 643, 113, 113, 113, 197, 197, 318,
	318, 318, 426, 426, 426, 355, 355, 286, 286, 428,
	428, 428, 428, 393, 393, 393, 196, 196, 370, 370,
	383, 383, 384, 384, 485, 485, 385, 120, 120, 121,
	121, 136, 136, 224, 224, 222, 222, 222, 222, 222,
	222, 222, 222, 229, 229, 230, 230, 231, 231, 232,
	233, 233, 233, 233, 374, 374, 234, 234, 234, 223,
	223, 223, 225, 225, 225, 225, 225, 225, 225, 228,
	228, 228, 228, 235, 235, 235, 227, 227, 567, 567,
	567, 569, 569, 571, 571, 570, 570, 566, 566, 568,
	568, 638, 638, 399, 399, 399, 352, 353, 350, 350,
	351, 351, 360, 360, 358, 359, 359, 361, 361, 470,
	470, 470, 240, 240, 240, 390, 390, 390, 390, 391,
	391, 422, 422, 420, 420, 420, 420, 421, 421, 423,
	423, 423, 424, 424, 425, 425, 387, 387, 388, 388,
	389, 389, 389, 389, 451, 451, 226, 226, 226, 367,
	367, 367, 368, 368, 441, 441, 441, 441, 441, 441,
	441, 442, 442, 440, 440, 440, 440, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 475, 476, 476, 369,
	369, 477, 427, 427, 585, 585, 585, 586, 586, 468,
	468, 478, 478, 478, 478, 478, 478, 466, 466, 467,
	467, 486, 487, 487, 403, 403, 403, 403, 401, 401,
	404, 404, 404, 404, 404, 402, 402, 479, 479, 479,
	479, 392, 392, 480, 480, 480, 480, 481, 482, 482,
	483, 483, 436, 437, 437, 493, 493, 493, 493, 495,
	366, 366, 366, 366, 366, 543, 542, 542, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 510,
	510, 510, 510, 510, 510, 510, 496, 496, 496, 496,
	496, 500, 500, 500, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 501, 501, 506, 506, 507,
	507, 507, 502, 503, 508, 508, 508, 508, 644, 644,
	512, 512, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 498, 498, 498, 505, 505, 505, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	411, 411, 413, 413, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 445, 445, 445, 445, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 561, 561, 561, 561, 561, 561,
	561, 561, 447, 447, 564, 564, 565, 565, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 572,
	572, 573, 573, 575, 575, 576, 576, 577, 578, 578,
	578, 579, 580, 580, 574, 574, 581, 581, 581, 581,
	582, 582, 583, 583, 583, 583, 583, 584, 584, 584,
	584, 584, 457, 457, 458, 458, 464, 464, 464, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 325, 325, 324, 276, 276, 276,
	276, 276, 276, 379, 379, 377, 377, 377, 380, 380,
	378, 378, 376, 376, 375, 375, 454, 454, 452, 452,
	456, 456, 405, 405, 511, 511, 511, 511, 511, 511,
	511, 511, 406, 406, 406, 414, 407, 407, 408, 408,
	408, 408, 408, 448, 449, 409, 409, 409, 450, 450,
	459, 463, 463, 462, 461, 461, 460, 460, 438, 438,
	439, 439, 386, 386, 645, 645, 382, 382, 484, 484,
	484, 484, 322, 322, 371, 371, 321, 321, 313, 313,
	314, 314, 314, 314, 364, 364, 465, 465, 513, 513,
	514, 514, 515, 515, 516, 516, 517, 518, 519, 453,
	453, 297, 296, 283, 284, 295, 294, 293, 282, 285,
	290, 291, 292, 287, 288, 304, 303, 302, 253, 258,
	309, 310, 310, 312, 312, 311, 311, 299, 300, 301,
	489, 281, 315, 315, 316, 316, 316, 317, 317, 317,
	317, 277, 277, 278, 278, 305, 305, 306, 307, 307,
	298, 298, 298, 268, 268, 268, 269, 269, 270, 270,
	527, 527, 524, 524, 524, 525, 525, 525, 526, 526,
	526, 526, 523, 523, 523, 523, 523, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 535, 535, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 537, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 10, 5, 2, 6, 4, 7, 7,
	7, 10, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 4, 6, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 601, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 203, 385, 430, 442, 400, 143, 421, 405,
	-145, -146, 460, -57, -70, -138, -137, 73, 130, 415,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -568,
	-94, -97, -130, -630, 162, 221, -116, -117, -118, 367,
	-124, -125, 423, -127, -128, -129, 426, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 465, -181, -190, -159, 526, 49, 480,
	82, 147, 434, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	422, -225, -223, 598, 541, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 562, 571, -228, -226, -227, -235, 452,
	549, 500, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 231, 331,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 508, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 189, 190, 191,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 204,
	208, 210, 211, 212, 213, 214, 220, 221, 223, 224,
	225, 226, 227, 232, 233, 234, 238, 235, 244, 245,
	249, 250, 251, 253, 257, 258, 259, 260, 261, 262,
	264, 266, 265, 268, 271, 272, 275, 279, 280, 284,
	285, 281, 286, 287, 289, 290, 293, 291, 294, 295,
	292, 296, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 297, 312, 310, 314, 315, 316,
	329, 325, 326, 320, 321, 317, 322, 318, 319, 323,
	324, 328, 333, 334, 337, 218, 339, 340, 343, 361,
	347, 348, 349, 352, 353, 356, 359, 360, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 372, 373, 375,
	376, 377, 379, 380, 381, 383, 385, 386, 388, 389,
	391, 392, 393, 394, 395, 396, 397, 399, 400, 402,
	401, 403, 405, 407, 408, 409, 415, 421, 417, 418,
	419, 420, 422, 423, 424, 425, 426, 428, 429, 430,
	432, 433, 434, 435, 436, 438, 440, 441, 445, 446,
	462, 463, 482, 442, 443, 444, 447, 448, 449, 450,
	451, 455, 453, 454, 456, 457, 458, 460, 461, 464,
	465, 467, 468, 469, 470, 471, 472, 473, 476, 478,
	479, 480, 499, 481, 483, 487, 488, 489, 490, 484,
	485, 498, 492, 493, 495, 496, 501, 502, 503, 504,
	505, 506, 507, 509, 511, 519, 520, 521, 523, 526,
	527, 528, 529, 517, 531, 532, 535, 536, 537, 540,
	538, 539, 541, 543, 546, 547, 548, 554, 553, 555,
	558, 563, 564, 566, 567, 568, 36, 50, 51, 54,
	56, 58, 69, 70, 71, 75, 125, 126, 154, 165,
	166, 178, 192, 193, 205, 207, 215, 216, 217, 239,
	240, 242, 247, 269, 336, 338, 354, 358, 374, 378,
	382, 384, 398, 437, 474, 486, 491, 512, 513, 514,
	515, 522, 524, 549, 550, 551, 556, 565, -320, 2,
	-299, 345, -292, 2, -268, -268, 385, 28, 2, 28,
	373, 454, 503, 505, 2, -594, -365, 2, 28, -271,
	-268, 102, 203, 452, -292, 2, -594, -365, 25, 2,
	-268, 2, 359, 22, 27, 66, 77, 98, 141, 164,
	186, 189, -629, 361, 392, 440, 456, 498, 509, 523,
	2, 553, 290, 453, 500, 231, 120, 528, 447, -606,
	445, 446, 359, 390, 432, 206, 542, -272, 2, 442,
	-268, 290, 2, 601, 94, 74, 437, 457, -148, 2,
	280, 520, -149, -150, -147, 512, -522, 447, 432, 312,
	-268, 601, 601, 601, 28, -281, -268, 500, 231, 447,
	120, 496, 601, 2, 500, 364, 553, 453, 120, 395,
	231, 528, 189, 141, 27, 447, -606, 576, 577, 290,
	127, -592, 2, -587, 4, -538, -534, -314, -313, 500,
	506, 120, -307, -298, 591, -306, 601, 601, 601, 601,
	2, 250, 251, 394, 393, 457, 458, 28, 601, 601,
	601, 601, 445, 2, 164, 22, 27, 66, 93, 98,
	127, 186, 189, 350, -627, 361, 392, 456, 498, 502,
	509, 523, -605, 481, 68, 420, 447, -604, -606, 290,
	528, 141, -415, 120, 280, 201, 536, 505, 503, 534,
	133, 238, 539, 538, 601, 601, -107, 2, 598, 32,
	31, -106, -110, 143, 460, -217, 500, 243, 2, -268,
	601, 601, 601, 2, 250, 251, 445, 446, 28, 601,
	601, 187, -587, 2, 601, 601, 601, 2, 28, 250,
	251, 445, 446, 243, 2, 68, 449, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 2, -192, 457, 481, 212, 47, 46,
	74, 28, 391, 79, 365, 121, 127, 149, 529, 204,
	231, 232, 258, 93, 94, -417, 44, 251, 68, 250,
	446, -612, 445, -469, 501, 448, 454, 495, 262, 442,
	520, 102, 543, 433, 568, 395, 396, 493, 409, 281,
	158, 188, 4, 120, 312, 432, 459, 512, 280, 441,
	368, 84, 601, -638, 2, 500, -640, 2, 520, 520,
	2, -640, 2, -640, 2, -640, 2, -641, 520, 565,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, -223, -225,
	-224, 601, 601, 601, 601, 601, 601, 601, -192, 457,
	2, 74, 28, -358, -360, 533, 241, 151, 351, -222,
	-224, 2, -567, -520, 2, -443, -541, -445, 589, 590,
	582, 497, 67, -324, 330, 569, -457, 127, 534, 345,
	-540, -446, -459, 154, 361, 437, -380, 8, 9, 5,
	6, 7, -277, -447, -453, 525, 168, 335, -317, 602,
	10, 598, -564, -224, -458, 37, 207, 65, -524, -316,
	-278, -496, 242, -315, -298, -561, -562, 4, -534, -535,
	-525, -499, -507, -503, -504, -510, -268, -537, 77, 111,
	112, 110, 115, 114, 283, 282, 116, 113, 459, 542,
	66, 36, 215, 216, 247, 336, 217, 75, -563, 142,
	-536, 239, 240, 474, 51, 398, 178, 126, 125, 338,
	56, 54, 550, -508, 122, 512, 513, 514, 515, 192,
	193, 58, 165, 166, 358, 382, 491, 522, 524, 205,
	269, 43, 106, 188, 237, 219, 246, 248, 252, 270,
	273, 313, 327, 332, 355, 357, 431, 466, -644, 551,
	486, 69, 70, -569, 401, -570, -292, -569, 601, 601,
	603, 601, -350, -352, -353, 2, 28, 139, 598, 2,
	-474, 2, -475, -479, -224, 263, -478, 598, -476, 596,
	-299, 346, -565, 438, -561, -562, -277, -298, -316, 4,
	-534, -536, 600, -354, 598, 120, 447, 500, 78, 231,
	164, -410, 598, -268, 28, 345, 516, 603, -351, 389,
	-455, 598, 345, 187, 348, 60, 294, 2, 2, 2,
	2, 2, 215, -268, 500, 119, 2, 261, 2, 2,
	2, 2, 2, 2, 2, -373, 215, 2, -299, 553,
	-373, 215, 2, -373, 215, 2, -416, 2, 87, -282,
	215, 2, -268, -308, 215, 2, -303, -305, -312, 215,
	2, -310, -268, -532, 215, 2, -531, -527, 10, -526,
	5, 4, -534, -538, -535, -537, 77, -443, 2, -136,
	2, 60, -268, 553, 2, 462, 2, 598, -148, 2,
	71, 520, 43, 457, -149, 2, -430, 2, -431, -264,
	-265, -266, -486, -267, 249, 388, 397, 572, 131, 330,
	568, -621, 187, 581, 516, -520, -520, -520, -381, 600,
	2, 2, 2, 2, 2, 2, -479, 215, -299, 2,
	-296, -523, 4, -534, -538, -535, -539, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 127, 131, 135, 139, 140, 144, 147, 151,
	168, 170, 183, 186, 187, 203, 206, 209, 222, 236,
	241, 243, 263, 267, 274, 282, 283, 330, 335, 341,
	345, 346, 350, 351, 371, 387, 404, 427, 452, 459,
	477, 494, 500, 510, 516, 518, 525, 533, 534, 542,
	544, 552, 557, 559, 560, 561, 562, -540, 2, -479,
	215, 2, -302, 215, -479, -305, 2, -282, 2, -295,
	-523, 2, -321, 215, -299, -301, -305, -303, 2, 2,
	2, 2, -310, 2, -531, 215, 2, 28, 28, 553,
	389, 243, 516, 603, -371, -313, -314, -519, 8, -364,
	-268, 600, -443, 2, -136, -119, 2, 183, -443, 215,
	2, -136, 215, 2, -443, 215, 2, -136, 215, 2,
	-268, 2, -607, 2, -531, 215, 215, -268, 2, 294,
	2, 2, 523, 2, 98, 500, 119, 2, 419, -628,
	440, 527, 2, 2, 2, 2, 2, 2, 2, 500,
	-287, 2, -268, 183, 484, -310, 215, -311, 2, 453,
	-639, 401, -531, 215, 2, 553, -303, 215, 2, -303,
	231, 245, -282, 215, 2, 505, 503, 505, 503, 187,
	2, 243, 2, 243, 2, -480, 2, -481, -475, -482,
	596, 346, -490, 2, -489, -526, 549, -107, 598, -107,
	598, 457, 598, -531, -299, -299, -443, 2, -136, -119,
	2, -443, 2, -136, 2, -268, 2, -133, -531, -132,
	598, 187, -268, 2, -443, 2, -136, -119, 2, -443,
	2, -136, 2, -217, 183, 2, 120, 500, -192, 2,
	183, 544, 2, 8, 2, 222, -531, 448, 396, 175,
	2, 462, 2, 463, 74, -417, 568, 74, 187, 2,
	187, 2, -400, 2, 562, 389, 187, 2, 2, -591,
	2, 345, 187, 2, 187, 2, 187, 2, 187, 2,
	187, 2, -191, 458, 521, 499, 393, 251, 2, -136,
	559, -119, 251, 250, -443, 559, 2, -613, 183, 446,
	-443, 2, 519, 260, 159, 187, -400, 2, 187, 2,
	187, 2, 5, 2, 394, 482, 2, 249, 388, 482,
	2, -299, 500, 553, 453, 120, 28, 2, 445, 2,
	2, 88, 89, 187, 2, 187, 2, 202, 187, 2,
	187, 500, 568, 2, -392, -479, -429, -430, -429, 516,
	-358, -360, -192, 462, 2, -229, -390, -231, 183, -420,
	-421, -232, 274, 170, 341, -233, -399, 28, 139, -399,
	-399, 60, 599, 599, 11, 12, 76, 41, 589, 590,
	591, 592, 181, 593, 594, 587, 588, 586, 579, 580,
	584, 255, 256, 95, 583, 581, 86, 288, 439, 171,
	172, 173, 174, 416, 229, 34, 230, 14, 15, 16,
	-324, 33, 350, 273, 569, 219, 466, 582, 17, 18,
	19, 246, 248, 332, 50, 222, -276, 361, -323, 497,
	67, -443, -443, -443, -443, -443, -443, -443, -443, 357,
	598, -386, -438, 596, -224, 598, 598, 598, 598, -519,
	-224, -443, -457, 599, -378, 598, -224, -457, -452, 598,
	437, 596, 598, -460, -443, 5, 5, 5, 598, 600,
	-572, 563, 183, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 384,
	-501, 598, -500, 598, -500, -500, 554, -498, 598, 571,
	564, 598, -498, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 554, 603, -569, -354,
	598, -382, -484, -443, 591, -382, -382, 345, -375, -443,
	106, -403, 252, 313, 188, 270, 431, 237, -440, 602,
	-440, -468, 571, -224, -476, -298, -224, -478, 598, -474,
	-468, -108, -519, -91, -104, -113, -136, -151, -196, -197,
	591, -299, 598, 187, 598, 600, -523, 187, -364, -282,
	-309, -268, -299, -315, -316, -321, 2, 138, -375, -587,
	528, 447, 28, 453, -364, -271, 38, -454, -493, -494,
	-543, 602, -542, -496, -506, -502, -505, 374, 378, -525,
	54, 550, -508, 242, 4, -534, -536, 239, 240, 474,
	51, 398, 178, 126, 125, 338, 56, 512, 513, 514,
	515, 192, 193, 58, 551, 486, 69, 70, -587, 528,
	447, 28, 453, -364, 183, -364, 2, 2, 154, 2,
	2, 2, -268, -245, 603, 64, 424, 154, -373, 215,
	-245, 154, -245, 154, -322, 215, -321, -245, 154, -245,
	603, 154, -245, 603, 154, 600, 603, 154, -364, 2,
	-416, -522, -375, 38, -430, 2, 127, -528, -526, 5,
	-642, 603, 272, -327, 287, 329, 211, 346, 566, 339,
	131, -530, 5, 4, -453, -465, 127, 280, 242, -513,
	-515, 8, -514, 9, -516, 589, 590, -521, -520, 109,
	600, -523, -242, 417, 460, 360, -241, 24, 29, 143,
	233, 316, 547, 160, -340, 234, -337, 364, 154, 478,
	537, -601, -602, 444, 507, 508, 90, 339, 460, 360,
	417, 154, -396, -398, 38, 118, 316, 359, 61, 226,
	292, 293, 480, 556, 154, 460, 360, 417, 360, -13,
	-257, 24, 143, -259, -254, 460, -602, 99, 417, 575,
	422, 370, 492, 387, -602, -244, 478, 537, -601, -602,
	444, 417, -243, -342, -337, 364, 154, 602, 24, 143,
	417, 460, 360, -624, -625, 29, 417, 360, -595, -289,
	-566, 222, 562, 154, -289, -289, -479, 215, -617, 183,
	2, -610, -132, 264, 5, 10, -531, -132, -371, 603,
	603, -523, 591, 446, 445, 154, 154, 154, 154, 251,
	183, 330, 330, 2, 2, 2, 2, 2, 189, -604,
	-629, 2, 2, -299, 215, -356, 345, -590, -372, 500,
	-299, 183, 330, 43, -302, 215, 2, -305, 553, -595,
	330, -304, 215, -299, 38, 598, 330, 2, -416, 2,
	231, -566, 330, -480, -318, -299, -475, -318, 460, -292,
	38, -440, -299, 599, 603, -490, -490, -531, -205, 562,
	187, 102, 598, 598, -217, 562, 562, 251, -487, 603,
	-486, 222, -532, -133, -531, 420, 251, -531, -590, -282,
	2, -299, 2, 500, 253, -531, -205, 222, -531, -531,
	-531, -522, 28, 463, 2, -191, 458, 521, 89, 463,
	2, -299, 500, 120, 231, 80, -617, 183, 2, -268,
	-593, 183, -588, 432, 447, 528, -587, -299, 120, -299,
	120, -299, 120, -299, -299, 2, 2, 2, 2, 2,
	85, 2, -136, -443, 2, 85, 2, 46, 479, -613,
	183, 2, 519, 2, 519, 2, -268, -268, -268, 481,
	272, -299, -299, -299, -300, -305, 501, 446, -443, 2,
	-631, 2, 187, 183, 2, 500, 231, 500, 231, 120,
	187, 74, 120, 28, 500, 443, -245, 603, -272, -229,
	-390, -522, -391, -390, -230, -229, -232, 183, 397, 538,
	316, 464, 257, -421, -420, 28, -443, -425, 177, 315,
	-443, -423, -445, 589, 590, -514, -516, -374, 339, -223,
	-223, -223, -361, -470, -443, 387, 231, -495, -493, -493,
	-297, -523, 512, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, 273,
	219, 466, 50, 222, -443, 516, -443, -443, -443, -443,
	310, 330, 335, 525, 168, 535, 139, 339, -645, 494,
	40, -450, -224, -379, 598, -464, 35, 477, 28, -457,
	598, 2, -438, -443, -439, -325, -323, -268, 589, 590,
	591, 592, 593, 594, 579, 580, 581, 14, 15, 16,
	584, 588, 586, 587, 181, 95, 583, 288, 439, 86,
	171, 172, 173, 174, 255, 256, 17, 18, 19, 34,
	582, -376, -375, -375, 599, 552, 28, 139, 591, 2,
	599, 603, 38, 599, -443, -376, -456, -452, -375, -463,
	-462, 559, -411, -412, 567, 297, 123, 213, 295, -413,
	451, -517, 8, -523, 591, -573, 176, 206, 598, 599,
	2, 599, 2, 599, -443, 2, 599, -443, 2, 599,
	-443, 2, 599, -443, 2, 599, 2, 599, 2, -443,
	-443, -443, -443, -443, -443, -443, -375, 8, -517, -517,
	512, 512, -517, -517, -517, -509, 374, 375, 376, 377,
	275, 276, 277, 278, 378, 379, 380, 381, 302, 303,
	304, 305, 298, 299, 300, 301, 306, 307, 308, 309,
	197, 198, 199, 200, 193, 194, 195, 196, -509, -405,
	2, -511, -375, 4, 567, 297, 123, 213, 295, 451,
	5, -405, 2, -406, 2, -443, -375, -407, -444, -445,
	589, 590, 582, -324, -457, -408, 2, -443, -376, -443,
	57, 267, 518, -409, -443, 187, -375, -375, 2, -375,
	2, -570, 38, -375, -367, 603, 187, 38, 4, -367,
	-367, 598, 599, 603, -404, 210, 291, 286, 245, -404,
	-474, -403, 252, -401, 355, -401, -401, -468, -283, 596,
	604, -523, -468, -467, -466, 38, -292, 352, -468, -468,
	600, 599, -467, 597, -585, 598, 601, 601, 601, 601,
	601, -299, 598, -375, -523, 600, 483, 2, 599, 246,
	246, 246, 246, 246, 438, 599, 516, -589, -308, -312,
	501, 2, 562, -106, 347, 599, 603, -366, 37, 596,
	600, -517, 2, 2, -512, 554, 598, 598, -412, 598,
	187, -589, -312, 501, 2, -365, 516, -268, 2, -299,
	-373, -245, 154, -373, -373, -245, 603, 154, -282, -303,
	-308, -310, -312, -268, -531, -532, -245, -304, -621, 599,
	520, -431, -326, 397, 476, 418, 455, 496, 8, 9,
	8, 9, 603, -523, 603, -622, 93, 516, 78, 447,
	-261, 281, 516, -434, 215, 78, -544, -285, 93, -545,
	-268, 72, 534, 387, 186, 152, -622, 93, 387, -622,
	93, 2, 233, 93, 460, 481, 28, 60, -479, 41,
	41, 28, -620, 328, 268, 558, 187, 568, 500, 231,
	447, 516, 516, -479, -398, -493, 118, 292, 293, 60,
	-518, -513, 589, 590, -518, 60, -518, -518, -518, 562,
	-302, -479, 447, 516, 516, 516, 407, 407, -254, -149,
	516, 516, 28, -192, 425, 127, -643, 581, 407, 603,
	41, 41, 28, -620, 328, 268, 187, 516, -321, -283,
	548, 42, 548, 42, 548, 516, 42, 447, 516, 603,
	42, 516, 516, -13, 460, -596, -273, 105, 322, 285,
	323, 97, 319, 96, 318, 103, 320, 104, 321, 555,
	333, 63, 317, 296, 324, -274, -275, 366, 546, 120,
	-531, -13, -13, 460, 360, 417, 154, -618, 222, 28,
	-606, 222, -487, 222, -487, -313, -268, 600, -136, -443,
	-443, -136, -443, -136, 46, 154, 154, 2, -639, 261,
	598, -330, 330, 187, -364, -488, 243, 603, -372, -587,
	154, -529, -528, 116, 459, -397, -396, 330, -304, 215,
	2, 154, -354, 330, 148, 598, 395, 2, 154, -284,
	215, -269, -268, -416, -248, 504, 154, -394, 544, -426,
	-136, 598, 127, 38, -426, -383, -384, -485, -385, -285,
	598, -292, -440, -107, -489, 599, 599, 599, -204, 349,
	-203, -268, 5, -217, 544, -329, -435, -434, -548, -549,
	-544, 273, 231, 534, 245, 169, -355, -286, -285, 119,
	399, 399, -211, 562, -132, -133, 599, -487, 222, 484,
	-205, -205, -487, -487, -299, 183, -531, -205, -205, -205,
	2, 2, 2, 2, -400, -299, -282, -321, -299, 28,
	600, -364, -364, -312, -308, -400, -282, -400, -282, -400,
	-282, -136, -443, 481, 2, 457, 183, 183, 600, -400,
	-357, 427, 2, 395, 120, 500, 364, 231, -299, -321,
	-299, -321, -282, 120, -282, 121, -299, -479, -391, -230,
	346, 257, 464, -423, -424, -445, 437, 438, -424, 437,
	438, 8, 9, 8, 9, -234, 468, 334, -373, 603,
	-239, 39, 135, 257, -299, 568, 150, -443, -443, 516,
	-645, 494, -450, 150, -443, 310, 335, 525, 168, 535,
	139, 339, 187, 598, -444, -444, 599, -377, -443, -443,
	597, 606, 599, 600, 599, -360, 603, -358, -443, -375,
	-375, 599, 600, -375, -364, 597, 597, 603, 599, -461,
	-462, 144, -443, 516, 516, 516, 516, 598, 599, 600,
	-578, 356, 598, 598, -443, 599, 599, 599, 599, 38,
	603, 603, 603, 599, 603, 603, 603, 599, 599, 599,
	603, 599, 568, 568, 599, 599, 599, 599, 603, 599,
	603, 599, 187, 599, 599, -414, 371, 599, 11, 12,
	589, 590, 591, 592, 181, 593, 594, 587, 588, 586,
	579, 580, 581, 86, 288, 439, 14, 15, 16, -324,
	246, 222, -444, -444, -444, -444, 599, -448, -449, 187,
	183, 38, -409, -409, -409, 599, 187, -375, 599, 599,
	598, -571, 290, 330, 599, -437, -436, 560, -484, -368,
	2, -474, -294, -523, -437, -437, -375, -443, 252, 252,
	-402, 544, 345, -404, -474, -467, -519, -442, -441, 185,
	39, 135, 325, 326, 218, -467, -292, -354, -467, -467,
	-523, -468, -468, -466, 599, -586, -519, 599, -369, -477,
	-565, -360, 600, -523, -214, -566, -193, 5, 335, -193,
	-193, -193, -193, -364, 516, 516, 222, 25, 372, -493,
	596, 597, 8, -523, 598, -517, -517, -517, -364, 187,
	187, 222, 187, -529, 2, -245, -373, -245, -245, -321,
	-322, -245, -245, -245, -395, 562, -520, -430, 532, 83,
	397, 512, -520, -241, 417, -285, -285, -299, -309, 201,
	408, -529, 330, -434, 215, -247, 330, -493, -293, -268,
	598, -418, 564, 257, 257, 544, -285, -293, 257, 215,
	-285, 215, -293, 2, -293, -597, 397, 340, -443, 60,
	-338, 279, 395, 331, -242, 417, 460, 360, -136, -136,
	-136, -136, -136, 598, -621, 544, 138, -299, -321, -299,
	-309, -529, -304, 460, 360, 417, 327, -315, -518, -518,
	-396, 460, 360, 417, -309, -529, -302, -529, -253, 215,
	-268, -253, 215, 447, -282, 407, 568, 45, -643, -243,
	-136, -136, -136, -136, -136, 598, -283, -244, 417, 5,
	215, -285, 5, -285, 215, 5, -268, -285, -309, -529,
	-625, 24, 143, -285, -309, -529, -273, -531, 335, 540,
	-282, -595, -289, 447, 516, 516, -479, -614, -615, 203,
	430, 447, 433, -364, -132, -208, 562, -132, -202, 227,
	591, -592, -531, -268, 553, -268, -328, -331, -329, -285,
	-220, -221, 564, 562, 154, -319, -299, 596, -205, -531,
	-299, -488, -310, -311, 154, -354, 330, -531, 38, 154,
	598, 2, 2, -303, 345, 330, -284, 215, -249, 145,
	-643, -282, -437, -368, -393, -428, 427, 345, -355, 549,
	-292, -393, -370, 603, 187, 581, 600, -355, -483, 591,
	-107, -107, -205, 603, 598, 581, 581, 598, -531, -531,
	599, 603, -247, -299, -284, 231, 231, -291, -269, 599,
	603, 600, 598, 581, 581, -213, 349, -212, 146, 259,
	244, 470, 471, 472, 473, 137, 469, 124, -487, -211,
	-133, 187, 187, -66, 562, 500, -205, 602, 433, -268,
	-400, -400, -400, 457, 457, -268, -364, -295, -282, -299,
	-296, -321, 183, 183, -282, 538, -424, 346, 284, -470,
	-240, 570, -299, 602, -443, -443, 150, 150, -443, -444,
	-444, -443, 150, 187, 598, -443, -454, 33, 33, 599,
	603, -439, -443, -323, 599, 552, -360, -360, 599, 591,
	-523, 602, 599, -452, 147, -443, 510, 297, 213, 295,
	-413, 295, -413, -413, -517, 5, -523, 591, -579, -288,
	598, -268, 560, -359, 351, 599, -495, -493, -443, -443,
	-443, -443, -443, -517, -498, -498, -513, -513, -443, -448,
	-443, -495, -493, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, 139, 330, 339, -444, -449, -448, -443,
	-443, -493, 599, 599, 599, -375, -106, 598, 290, -387,
	206, -443, -487, 603, -387, -387, 599, -474, -474, 598,
	-443, 252, 597, 603, 605, 581, -354, 600, -466, -467,
	597, 599, 603, 599, 603, -427, 38, 599, -523, -437,
	-216, -215, 136, 53, 107, 134, 335, -364, -364, 447,
	348, 5, 8, 596, 597, 600, -517, 599, 599, 599,
	-364, -364, 447, -364, -245, -245, 119, 316, -443, 516,
	516, 60, 222, 154, 330, 546, -550, -545, 152, -443,
	598, 231, 598, 598, 2, -236, -237, -238, 143, 460,
	24, -623, 2, 544, 154, -245, 154, -245, 566, -338,
	598, 598, 516, 447, -261, 516, 562, -375, -443, -206,
	127, -522, -602, 602, -602, 602, 447, 516, 516, 447,
	516, 516, 330, 154, 562, 167, 167, 568, -253, 562,
	-375, 516, -497, 48, 26, 330, -303, -245, 154, 516,
	516, 528, 460, -531, 335, -13, -309, -529, -304, 460,
	360, 417, -594, -365, -594, 203, -312, -618, -487, -210,
	349, -209, 146, 429, 137, 259, 224, -487, -208, 187,
	243, 562, -304, 2, 599, 599, 603, -551, 38, 343,
	343, 598, -299, -87, 562, -486, -519, -598, 562, 43,
	-302, 38, 154, -595, -136, -304, -491, -492, 5, 38,
	-299, 154, 345, 330, -250, 266, -643, -527, -566, -360,
	-393, -382, 331, 91, 599, -437, -384, -368, -443, 2,
	599, -203, -204, -531, -531, -531, -205, -217, -217, -435,
	-332, 598, -284, -269, 598, -217, -286, 2, -532, -531,
	-531, 603, 598, 581, 581, 581, 581, -211, -487, -132,
	-136, 349, -299, 591, -400, -344, -343, 364, 339, -344,
	437, 437, 346, 177, 262, -239, -283, -443, -443, 150,
	33, 33, -443, -443, -454, 599, -443, -443, -375, 597,
	5, -443, 599, 599, 8, -443, 599, 600, -580, -268,
	-443, 599, 60, 599, 599, 603, 603, 599, 599, 599,
	599, 599, 599, 599, -449, 187, 139, 339, 598, 599,
	599, -106, -451, 209, 60, -474, -451, -451, -402, -364,
	-474, -441, -283, 596, -523, -519, -477, 598, 600, -215,
	581, -531, -531, 562, -312, 597, 2, 596, -523, 599,
	-312, 119, -285, -285, 500, 437, -253, 387, -434, 154,
	-552, 93, -554, 76, 169, 102, 330, 335, 534, 387,
	72, 127, 345, 404, -633, -634, -635, 38, 573, 574,
	599, -362, -471, -565, 598, -268, -362, -364, 330, 489,
	127, 345, 330, 127, 345, 557, 119, 2, 528, 79,
	-285, -293, -364, -364, -299, -309, -529, 161, 599, 603,
	581, 2, 591, 591, -309, -529, -304, -309, -529, -302,
	154, -253, 362, 167, 161, 599, -283, 5, 5, 154,
	-280, 76, -285, 5, -285, -303, 119, 447, 516, 516,
	345, 345, 348, -614, -615, -208, 603, 598, 581, 581,
	-208, -532, -132, 2, -354, -345, 233, -285, -549, -546,
	-547, 387, -553, -555, 169, 387, -136, 2, -219, -218,
	-268, 5, 598, -330, 349, 597, -600, 349, -599, 117,
	137, -529, -397, -136, -304, -354, 599, 603, 148, -419,
	544, -283, -299, 154, -251, 265, -643, -527, -248, -422,
	-420, 140, 598, 345, -136, -360, 581, 599, 599, 119,
	119, 225, 153, -362, 598, 598, -364, 119, 599, -212,
	-213, -531, -132, -531, -531, -211, -487, -67, -68, 231,
	93, 369, -296, 500, 231, 598, 598, -239, -443, -443,
	-443, 599, -360, -523, 591, -574, 364, 599, -470, -443,
	-443, -444, 187, 598, -454, 599, -575, 561, -443, -388,
	-389, -443, 435, 108, 207, -575, -575, 599, -519, 2,
	-531, 2, 516, 596, 2, 187, 222, 38, 407, -434,
	-293, -297, -290, -268, 169, 215, 335, 557, -418, 257,
	598, -444, 538, -299, 598, 2, 214, 214, 30, 60,
	-636, 131, 236, 599, 603, -472, -279, -268, -443, -472,
	599, 599, 335, 538, 335, 557, -443, 538, -493, 598,
	-245, -245, 599, 599, -443, 516, -522, 100, -520, 2,
	-602, -253, -282, -443, 516, 5, -245, -297, -245, -245,
	-280, 528, -309, -529, -304, -619, 501, 454, 529, 448,
	190, 436, -619, 183, -209, -210, -531, -132, -208, 38,
	-335, 235, 2, -551, 257, -290, 257, -632, 562, 599,
	603, 581, 581, -328, -220, -88, -89, 517, -486, 603,
	598, 581, -354, 38, 5, 598, 598, -268, 345, 598,
	-283, -263, 92, -643, -527, -249, -393, 331, -364, 93,
	-422, -450, -205, 598, 598, -333, 81, 94, 128, 214,
	191, 232, 481, 487, 28, -333, 599, -362, -362, 599,
	598, -205, 599, 603, 28, 598, 28, 598, -299, -321,
	-375, -375, 599, -360, 60, 603, 599, 599, -444, -454,
	599, -576, -577, -288, 603, 598, 598, 461, 597, -364,
	2, -364, -253, 387, -268, -554, -290, 330, 544, -443,
	-444, -270, 598, -443, 598, 598, 38, 127, 236, 132,
	220, -433, -637, 101, 490, 223, -471, -239, 599, -432,
	544, 404, -444, -280, -362, 598, 598, 598, 581, 187,
	598, -497, -245, -303, 516, 2, 2, 187, -594, 599,
	-608, 402, -136, -339, -340, 222, 598, -334, 345, 119,
	316, -218, -520, -520, 599, 38, -89, 9, -599, -600,
	-443, 38, -136, -491, -362, -299, -362, 345, -255, -254,
	274, -527, -250, 599, -293, -393, -532, -532, -432, 599,
	599, -532, -68, -364, -364, 599, 599, -581, 395, 438,
	208, -375, -361, 599, 603, 38, -389, 2, 2, 2,
	407, 154, 210, 599, -556, 289, -268, 599, -397, -397,
	38, 132, 220, -335, 598, -240, -472, -335, 210, -299,
	-603, 544, 599, -347, -346, -343, -349, -348, -343, -375,
	-520, 100, 362, -375, -280, -364, -364, 345, -611, 188,
	-610, 5, 10, -220, 362, -363, -473, -285, 82, 119,
	-345, -136, 599, -136, 599, 599, -419, 599, -299, -252,
	-533, 407, 409, -643, -251, -437, 599, 599, -433, -432,
	-341, -337, 599, 599, 599, 599, -582, -583, 50, 531,
	109, -443, -582, -582, -577, -579, 169, 562, -557, -560,
	-559, 578, 467, 188, 363, 599, 489, 556, 599, 599,
	-341, -364, 562, -354, -443, -432, 599, 603, 549, 599,
	603, 549, 599, 187, 599, -245, -616, 562, -245, -619,
	-207, 562, 46, -334, -299, 599, 603, 386, 133, 143,
	-335, -632, -432, 598, -433, 598, -260, -259, -643, -513,
	-263, 140, -205, -205, -335, -433, -221, 562, -205, -584,
	152, -583, 383, 182, 437, 383, 182, -584, -584, -290,
	55, -559, 578, -560, 578, 538, 133, -636, 599, 55,
	-556, -335, -346, 222, -348, 187, 362, 203, 187, 445,
	-610, 30, -262, -261, 598, -473, 438, 438, 2, -339,
	-334, -433, -362, -335, -362, -256, -257, -258, -364, -255,
	331, 538, -341, -335, -437, 109, 206, 511, 316, 33,
	581, -558, 316, 424, 64, 460, -558, -437, 581, -557,
	598, 598, 348, -364, 349, -364, 2, -220, -335, 599,
	-341, 599, -252, 460, -221, -341, 437, 353, -583, -443,
	23, 335, 127, -443, -636, -375, -375, -245, -204, 598,
	599, -334, -341, -432, -221, -433, -260, -383, -437, -221,
	599, 599, -204, -246, 64, 424, -262, -221, -433, -437,
	-335, -256, -437, -437, -336, -337, 516, 599, -437, -335,
	-341, 598, -341, -221, -375, -221, -437, 599, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 557, 558, 560, 561, 562, 564,
	565, 567, 569, 571, 572, 573, 575, 576, 578, 579,
	580, 581, 582, 584, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	653, 655, 0, 1420, 1422, 1424, 1426, 0, 808, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 343, 0,
	373, 375, 376, 378, 380, 381, 382, 384, -2, 0,
	490, 491, 493, 495, -2, 0, 1015, 1017, 1019, 0,
	642, 644, 0, 1022, 1024, 1026, 0, 0, 665, 666,
	0, 1531, -2, 657, 659, 661, 663, 733, 735, 737,
	739, 741, 743, 745, 747, 749, 751, 752, 754, 756,
	758, 760, 762, 763, 765, 767, 769, 770, 772, 773,
	775, 777, 779, 781, 783, 785, 787, 789, 791, 793,
	795, 797, 799, -2, 802, 803, 804, -2, -2, 0,
	-2, -2, -2, 1438, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 434, 436, 438, 440, 442, 445,
	447, 449, 1589, 497, 499, 501, 503, 505, 507, 509,
	0, -2, 1603, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1562, 1564, 1566, 1568, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 559, 563, 566, 568, 570, 574,
	577, 583, 585, 587, 542, 543, 546, 2297, 2315, 2316,
	2317, 2320, 2321, 2322, 2323, 2324, 2325, 2775, 2857, 2858,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 544, 545,
	1209, 0, 611, 609, 2282, 612, 2573, 614, 616, 484,
	485, 486, 487, 488, 489, 0, 635, 625, 1601, 636,
	638, 639, 640, 641, 606, 604, 0, 635, 2351, 633,
	1418, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 413, 1267, 1268, 1269, 1403, 1404, 2620,
	1445, 0, 234, 654, -2, -2, 2740, -2, 688, 689,
	-2, -2, 703, 706, 698, 2744, 0, 2623, 2607, -2,
	709, 1421, 1423, 1425, 806, 807, 2301, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, -2, -2, -2, -2, 0, 0,
	2668, 2403, 2250, 2317, 2253, 2248, 338, 340, 342, 344,
	345, 0, 0, 0, 0, 0, 0, 0, 374, 377,
	379, 383, -2, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 1078, 1079, 1325,
	0, 0, 0, -2, 492, 494, 547, 548, 0, 1590,
	1590, 555, 556, -2, 0, 0, 0, 0, 308, 296,
	1016, 1018, 1020, 1021, 0, 0, 0, 0, 0, 643,
	645, 0, 0, 276, 1023, 1025, 1027, 1028, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 658, 660, 662,
	664, 734, 736, 738, 740, 742, 744, 746, 748, 750,
	753, 755, 757, 759, 761, 764, 766, 768, 771, 774,
	776, 778, 780, 782, 784, 786, 788, 790, 792, 794,
	796, 798, 800, 801, 814, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	911, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 996,
	0, 0, 817, 819, 820, 821, 822, 0, 884, 909,
	910, 920, 805, 0, 1249, 1591, 1447, 1428, 1442, 1447,
	1430, 1431, 1432, 1433, 1434, 1439, 1441, 1435, 1436, 1437,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	435, 437, 439, 441, 443, 446, 448, 450, -2, 1560,
	1561, 498, 500, 502, 504, 506, 508, 510, 646, 0,
	648, 0, 818, -2, 0, 1595, 1595, 1595, 0, 0,
	1561, 1559, 0, 651, 652, 713, 714, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 2124, 1952, 0, 715,
	-2, 1985, 1987, 2715, 2546, 2740, 2123, 1989, 1990, 1991,
	1992, 1993, 0, 1995, 1996, 1997, 1998, 1999, 2000, 0,
	2002, 0, 2007, 2008, 2009, 0, 2722, 2227, 2311, -2,
	0, 0, 2728, 2307, 0, 2090, 2025, -2, -2, 2334,
	2313, 1796, 1797, 1798, 1799, 1800, -2, -2, 2758, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	0, 2703, 2723, 2724, 2729, 2731, 2725, 2712, 2050, 2417,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1823, 1832, -2, -2, -2, -2, -2,
	-2, -2, 2716, 2717, 2734, 2737, 2743, 2748, 2749, 2721,
	2730, 2757, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 1824, -2,
	-2, -2, -2, 1578, 2587, 1581, 1209, 1579, 1563, 1565,
	0, 1567, 0, 0, 0, 1572, 1598, 1596, 0, 1647,
	1576, 1577, 1666, 1666, 1690, 0, 1671, 0, 1690, 1590,
	1717, 0, 1677, 2612, 2026, 2027, 0, 2317, 2312, -2,
	-2, 2755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 607, 0, 613, 615, 0, 0, 0, 634, 1600,
	0, 0, 0, 0, 0, 0, 0, 416, 417, 418,
	419, 420, 2723, 0, 0, 0, 425, 0, 427, 428,
	429, 430, 431, 432, 433, 205, 2723, 515, 540, 0,
	205, 2723, 518, 205, 2723, 521, 0, 524, 1323, 205,
	2723, 527, 2278, 205, 2723, 530, 532, 2286, 205, 2723,
	536, 2293, 2291, 537, 2723, 539, 313, 311, 312, 2330,
	2331, 2338, 2339, 2340, 2341, 2756, 2758, 1414, 1415, 1416,
	1417, 0, 1444, 1324, 656, 0, 682, 0, 686, 687,
	2711, -2, 0, 2632, 691, 692, -2, 694, 1448, 1452,
	1453, 1454, 1455, 1456, 0, 0, 0, 0, 1461, 0,
	0, 0, 0, 683, 684, 701, 702, 707, 710, 0,
	809, 810, 811, 812, 813, 72, 0, 2723, 1717, 74,
	0, 2272, 2342, 2343, 2344, 2345, 2346, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 78, 0,
	2723, 83, 0, 2723, 0, -2, 96, 0, 108, 0,
	2275, 117, 0, 2723, 0, 2247, -2, 0, 217, 297,
	298, 299, 0, 1053, -2, 2723, 1261, 1263, 1263, 0,
	-2, 0, 0, 0, 1006, 2244, 2249, 1007, 2268, 1008,
	2254, 0, 346, 347, 348, 349, 350, 0, 351, 2723,
	353, 354, 0, 356, 357, 2723, 359, 360, 0, 362,
	0, 364, 0, 256, 262, 2723, 2723, 387, 389, 0,
	391, 392, 0, 394, 0, 0, 0, 398, -2, 414,
	0, 411, 401, 402, 404, 405, 406, 407, 408, 0,
	454, 452, 2283, 0, 0, -2, 2723, 0, 1050, 0,
	0, 1303, -2, 2723, 1254, 0, 1310, 2723, 1306, 0,
	-2, 0, 1588, 2723, 1465, 1082, 1083, 1084, 1085, 1729,
	481, 0, 1496, 0, 1498, 0, 1517, 1723, 1666, 0,
	0, 1728, 0, -2, 600, 2300, -2, 550, 0, 551,
	0, -2, 0, 325, 0, 0, 1031, 1033, 1034, 1036,
	1037, 1040, 1041, 1042, 1043, 0, 1045, 1703, 277, 279,
	0, 0, 0, 1030, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 0, 0, 667, 0, 0, 815, 816,
	0, 0, 827, 828, 829, 0, 325, 2624, 2582, 2438,
	836, 0, 839, 842, -2, 0, 0, 0, 0, 846,
	0, 851, 852, 853, 0, -2, 0, 860, 862, 1014,
	864, 0, 0, 866, 0, 870, 0, 873, 0, 875,
	0, 877, -2, -2, -2, 885, 886, -2, 891, -2,
	0, 895, -2, 0, 898, 0, 901, -2, 0, 911,
	907, 908, 0, 0, 0, 0, 928, 929, 0, 938,
	0, 941, 942, 943, 0, 947, 948, 0, 950, 951,
	952, 953, 0, 2695, 2629, 2403, 0, 959, -2, 965,
	967, 0, -2, 0, 983, 0, 987, 0, 0, 995,
	0, 0, 823, 824, 205, 1721, 1427, -2, 1429, 0,
	-2, 0, 647, 0, 650, 1620, 1546, 1543, 0, 1617,
	1618, 1547, 0, 0, 0, 1554, 0, 1593, 1594, 0,
	0, 0, 1533, 1534, 0, 0, 0, 0, 2129, 2130,
	2131, 2132, 2145, 2133, 2134, 2144, 2142, 2143, 2135, 2136,
	2141, 2155, 2156, 2146, 2147, 2137, 2150, 2148, 2149, 2151,
	2152, 2153, 2154, 0, 0, 2160, 0, 2138, 2139, 2140,
	2168, 0, 0, 2169, 0, 2171, 0, 2161, 2157, 2158,
	2159, 0, 1931, 1933, 2235, 0, 0, 0, 2167, 2162,
	2163, 1869, 1870, 1871, 1872, 1873, 1906, 1910, 1911, 0,
	0, 1986, 2232, 2231, 1988, 0, 0, 2183, 0, 2001,
	-2, 0, 2124, 2178, 0, 0, 2010, 2011, 2012, 0,
	0, 2183, 0, 0, 2226, 2022, 2023, 1861, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1809, 0, 1811, 0, 1812, 1813, 1820, 1833, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	2207, -2, 0, 0, 0, 0, 1825, 0, 1580, 0,
	0, 1651, 2236, 2240, 2241, 1651, 1651, 0, 0, 2184,
	1714, 1714, 0, 0, 1709, 1709, 1709, 1707, 1690, 0,
	1690, 1700, 0, 1690, 1690, 0, -2, 1671, 0, 0,
	1700, 0, 1684, 588, 590, 592, 594, 595, 596, 598,
	1718, 1719, 0, 0, 0, 0, 2318, 0, 0, 0,
	0, 2290, 0, 0, 2303, 0, 370, 0, 0, 0,
	2678, 2623, 0, -2, 618, 637, 1590, 0, 2186, 1744,
	1748, 0, 1750, 1751, 1752, 1753, 1754, 0, 0, 1745,
	-2, 1821, 1823, 1844, 2335, 2336, 2337, 1804, 1805, 1806,
	1807, 1808, 1816, 1803, 1803, 1803, 1814, 1843, 1835, 1843,
	1839, 1789, 1790, 1791, 1826, 1827, 1828, 1829, 0, 2678,
	2623, 0, -2, 627, 0, 0, 1528, 415, 0, 422,
	423, 424, 0, 511, 0, 203, 204, 0, 205, 2723,
	516, 0, 519, 0, 205, 2723, 2242, 525, 0, 528,
	0, 0, 534, 0, 0, 0, 0, 0, 205, 1530,
	0, 0, 0, 0, -2, 696, 704, 705, 224, 225,
	0, 1450, 0, 1457, 724, 725, 726, 1459, 1460, 0,
	1462, 699, 727, 728, 729, 730, 731, 732, 0, 2256,
	2257, 2258, 2259, 2262, 2263, 0, 0, 697, 717, 700,
	0, 711, 118, 1400, 0, 0, 161, 0, 1400, 1400,
	0, 0, 0, 0, 188, 0, 1121, 0, 0, 0,
	0, 133, 146, 157, 130, 131, 0, 0, 0, 0,
	0, 0, 84, 1231, 0, 1234, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 98,
	99, 0, 0, 104, 105, 0, 145, 0, 0, 0,
	0, 0, 1493, 0, 140, 120, 0, 0, 133, 147,
	159, 0, 192, 194, 1118, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 226, 0, 0, 0, 1255, 0,
	0, 0, 1587, 0, 0, 0, 0, 2723, 1398, 0,
	1383, 0, 1703, 2487, -2, -2, 277, 1703, 1005, 0,
	0, 2318, 2252, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 390, 393, 395, 396, 397, 0, 1302,
	0, 403, 444, 1180, 2723, 0, 0, 471, 466, 0,
	468, 0, 0, 0, 1230, 2723, 1228, 2287, 0, 1252,
	0, 1209, 2723, 2285, 0, 0, 0, 1311, 2327, 1320,
	1324, 1483, 0, 483, 0, 1499, 1501, 0, 0, 1724,
	0, 1726, 1666, 1590, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 283, 0,
	1702, 0, 0, 1703, 277, 2598, 1029, 325, 325, 1703,
	669, 1703, 671, 0, 0, 830, 831, 0, 325, 325,
	325, 837, 838, 840, 841, -2, -2, -2, -2, 843,
	844, 935, 0, 0, 0, 934, 854, 0, 856, 859,
	863, 0, 999, 2607, 2623, 2678, 1012, 935, 2403, 935,
	2403, 935, 2403, 874, 876, 879, 923, 931, 890, 897,
	0, 892, 896, 899, 902, 0, 904, 912, 0, -2,
	0, 915, 0, 917, 0, 919, 935, 936, 939, 946,
	949, 954, 955, 956, 957, 2298, 958, -2, 962, 963,
	0, 974, 979, 980, 976, 0, 0, 0, 0, 0,
	0, 990, 991, 0, 0, 998, 1248, 0, 1440, 1620,
	1546, 649, 1537, 1619, 1538, 1545, 1548, 0, 0, 1550,
	0, 1552, 0, 1615, 1616, 1623, 1624, 0, 1634, 1635,
	1627, 0, -2, 0, 0, 1630, 1631, 1556, 0, 1573,
	1574, 1575, 1604, 1607, 1339, 0, 2857, 1865, 1739, 1866,
	1867, 2271, 0, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, -2, -2, -2, -2, -2, -2, -2,
	-2, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, -2, -2, -2, 1907, 1908, 1909, -2, 2170,
	2172, 0, 2235, 0, -2, 0, -2, -2, -2, -2,
	1928, 0, 1930, 1935, 1937, 1939, 0, 0, 0, 0,
	2234, 1949, 2218, 2219, 0, 0, 2126, 2127, 2128, 1934,
	0, 1953, 2233, 2230, 0, 0, 2164, 0, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 0, 2182, 1603, 2014, 0, 0, 0, 0, 2021,
	2006, 2180, 0, 2179, 0, 0, 0, 2190, 0, 2225,
	2221, 0, 2269, 1860, 1847, 1848, 1849, 1850, 1851, 1852,
	1862, 0, 2266, 2304, 2310, 2100, 0, 0, 0, 2051,
	2052, 2053, 2054, 2055, 0, 2057, 2058, 0, 2060, 2061,
	0, 2063, 2064, 0, 2066, 2067, 2068, 2069, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 0, 0,
	2072, 0, 2193, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2074, 0, 2076, 2184, 2204, 0, 0, 1954,
	0, 0, 0, 0, 2124, 0, 2079, 2184, 2212, 0,
	0, 0, 0, 0, 2184, 0, 2217, 0, 2086, 0,
	2088, 1582, 0, 0, 1734, 0, 0, 0, 2239, 1734,
	1734, 0, 1646, 0, 0, 1710, 1711, 1712, 1713, 0,
	0, 1714, 0, 1704, 1708, 1705, 1706, 1700, 1663, 0,
	0, 2273, 1700, 1669, 1699, 0, 1209, 1689, 1700, 1700,
	0, -2, 1673, 1690, 0, 0, 589, 591, 593, 597,
	599, 0, 0, 1603, -2, 0, -2, 327, 1208, 0,
	0, 0, 0, 0, 608, 610, 0, 0, 531, 0,
	0, 624, 0, 602, 0, 605, 0, 1735, 1738, 0,
	0, 1749, 1755, 1756, 0, -2, 0, 0, 1845, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 426, 541,
	205, 513, 0, 205, 205, 522, 0, 0, 205, 533,
	205, 2294, 205, 2292, 314, 538, 1529, 237, 0, 685,
	0, 1449, 1458, 0, 721, 0, 723, 0, 2260, 2264,
	2261, 2265, 0, 712, 0, 0, 0, 0, 1399, 0,
	1346, 0, 0, 165, 2723, 0, 207, 0, 0, 1173,
	2279, 0, 1163, 0, 0, 2424, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 1232, 1233, 1235, 1242, 1244, 0,
	1238, 2267, 0, 0, 1239, 0, 1241, 1243, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 1264,
	0, 0, 1265, 1266, 1471, 1472, 0, 1492, 1493, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 2246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 0, 1298, 1296, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 0, 0, 0,
	-2, 1259, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 316, 2245, 2255, 0, 1038, 1039,
	352, 355, 358, 361, 243, 0, 0, 399, 0, 0,
	1088, 1063, 0, 0, 453, 325, 0, 0, 467, 471,
	2296, 1048, 221, 222, 223, 1226, 1229, 0, 1209, 2723,
	1275, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	2723, 2274, 2326, 2327, 1485, 1493, 0, 1734, 0, 1515,
	1502, 0, 0, 0, 1515, 1519, 1520, 1522, 1523, 0,
	0, 1725, 1731, 549, 601, 1590, 1590, 325, 323, 2549,
	321, 318, 320, 0, 0, 0, 1089, 1091, 1092, 1093,
	207, 0, 2327, 1163, 2476, 2327, 0, 1505, 1507, 0,
	0, 0, 271, 0, 280, 1703, 278, 283, 0, 0,
	0, 465, 668, 673, 825, 0, 325, 833, 834, 835,
	881, 925, 933, 978, 845, 847, 848, 849, 0, 0,
	0, 1013, 1009, 1010, 1011, 865, 935, 868, 935, 871,
	935, 894, 900, 913, 906, 914, 0, 0, 0, 927,
	944, 0, 961, 0, 0, 0, 0, 0, 0, 0,
	984, 985, 986, 988, 993, 992, 997, 1722, 1541, 1542,
	1544, 0, 1553, 0, 0, 1629, -2, -2, 1628, 1632,
	1633, -2, -2, -2, -2, 1549, 0, 1558, 1555, 0,
	1614, 1337, 1338, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1950, 0, -2, 1929, 1932, 1936, 1938, 1940,
	0, 0, 0, 0, 0, 0, 2173, 0, 2175, 1951,
	2228, 2231, 2166, 0, 2122, 0, 0, 1602, 1603, 1603,
	0, 2020, 0, 2181, 0, 2188, 2189, 0, 2013, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 2056, 2059, 2062, 2065, 0,
	0, 0, 0, 2045, 0, 0, 0, 2049, 1815, 1801,
	0, 1843, 1841, 1842, 1836, 1843, 1840, 1793, 0, 1792,
	0, 2071, 0, 2073, 2075, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1958, 1959, 1979, 2078, 2210, 2211, 0,
	0, 0, 0, 0, 0, 2084, 0, 2216, 2085, 2087,
	1590, 0, 1583, 0, 1648, 1637, 1733, 0, 2237, 1703,
	1650, 1652, 2238, 2276, 1637, 1637, 0, 2185, 0, 0,
	1694, 0, 0, 0, 1696, 1667, 0, 0, 1661, 0,
	1656, 1657, 1658, 1659, 1660, 1668, 1209, 1698, 1670, 1674,
	2304, 0, 1700, 0, 1685, 0, 1687, 1720, 0, 1679,
	1682, 0, 0, 2319, 1734, 0, 365, 371, 372, 366,
	367, 368, 369, 617, 0, 0, 0, 0, 0, 2187,
	0, 1740, 0, 1746, 0, 0, 0, 0, 626, 0,
	0, 0, 0, 1527, 421, 512, 205, 517, 520, 2243,
	205, 526, 529, 535, 233, 0, 681, -2, 719, 720,
	722, 0, 718, 162, 1400, 0, 0, 1342, 1344, 1348,
	1354, 1357, 0, 167, 2723, 179, 0, 1137, 0, 2277,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 2723,
	205, 2723, 205, 182, 184, 187, 0, 191, 189, 0,
	1125, 0, 0, 1128, 119, 1400, 0, 0, 122, 126,
	134, 135, 138, 0, 0, 0, 144, 0, 0, 0,
	1359, 1363, 1371, 0, 0, 0, 1236, 1237, 1240, 1246,
	85, 0, 0, 0, 1367, 1369, 1375, 97, 100, 2723,
	2288, 102, 2723, 0, 1341, 0, 0, 0, 0, 193,
	124, 128, 136, 137, 139, 0, 1377, 121, 0, 220,
	0, 0, 210, 205, 2723, 0, 212, 0, 213, 214,
	227, 0, 0, 0, 1051, 1052, 1297, 1250, 1251, 0,
	1262, 1256, 0, 0, 0, 0, 0, 1379, 1380, 0,
	0, 0, 1398, 1395, 1703, 239, 0, 1703, 247, 0,
	2251, 0, 263, 386, 0, 0, 0, 0, 1087, 1191,
	0, 1058, 0, 0, 0, 459, 455, 0, 464, 470,
	469, 475, -2, 0, 0, 0, 0, -2, 0, 0,
	1313, 1307, 1308, 0, 0, 0, 0, 2723, 1487, 1493,
	0, 1588, 1603, 482, 1494, 1515, 0, 0, 0, 1504,
	1500, 1497, 1734, 0, 0, 0, 0, 0, 1727, 1730,
	552, 553, 300, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 1094, 1098, 0, 2327, 2327, 0, 2281, 0,
	0, 0, 0, 0, 0, 281, 0, 284, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 0, 283, 273,
	1703, 0, 0, 670, 0, 0, 832, 0, 855, 858,
	867, 869, 872, 916, 918, 935, 945, 968, 969, 1115,
	0, 1115, 0, 0, 989, 1551, 0, 1626, 1557, 1608,
	1609, 0, 1339, 0, 1868, 1913, 0, 0, -2, 0,
	0, 1917, 0, 0, 0, -2, 0, 0, 0, 2174,
	2176, 0, 2230, 2165, 2015, 0, 0, 0, 2019, 2003,
	2004, 0, 2125, 2191, 2220, 2224, 0, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 0, 2270, 2305, 2309, 2098, 2099,
	2103, 2284, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 1838, 0, 0, 2192, 2203,
	2205, 1955, 1956, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, -2, -2, -2, 1973, 1974, 1975, -2,
	-2, -2, 1980, 0, 0, 0, 2206, 2208, 2209, 2213,
	2214, 0, 2081, 2082, 2083, 2215, 0, 1590, 1584, 1645,
	0, 1732, 1649, 0, 1645, 1645, 1597, 1692, 0, 0,
	1716, 0, 1664, 0, 1665, 0, 1697, 0, 1672, 1675,
	1676, 1686, 0, 1678, 0, 1681, 0, 2015, -2, 326,
	328, 330, 0, 333, 334, 0, 0, 620, 621, 0,
	619, 603, 0, 0, 1742, 0, 0, 1818, 1822, 1846,
	629, 630, 0, 628, 514, 523, 235, 0, 1701, 0,
	0, 0, 0, 0, 0, 206, 1135, 1172, 0, 0,
	0, 1162, 0, 0, 1178, 169, 170, 171, 0, 0,
	0, 0, 180, 0, 0, 177, 0, 186, 190, 1122,
	0, 0, 0, 0, 1347, 0, 0, 0, 141, 142,
	143, 0, 148, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1477, 1478, 0, 1468, 0,
	0, 0, 208, 0, 0, 0, 1336, 229, 0, 0,
	0, 0, 0, 1300, 1301, 1258, 1360, 1364, 1372, 0,
	0, 0, 0, 635, 0, 640, 1397, 0, 247, 245,
	0, 248, 0, 251, 252, 0, 254, 247, 241, 0,
	0, 0, 1209, 400, 1061, 1179, 0, 1181, 0, 1059,
	0, 0, 1180, 451, 0, 458, 0, 472, 0, 0,
	1230, 0, 0, 1253, 1273, 1209, 0, 1312, 1314, 0,
	1322, 0, 0, 0, 1489, 1493, 0, 1482, 1483, 1622,
	1495, 1513, -2, 0, 0, 1603, 1521, 1518, 1524, 1525,
	0, 322, 0, 317, 319, 0, 303, 0, 0, 1090,
	1095, 0, 0, 0, 0, 0, 1506, 1508, 0, 1032,
	1035, 0, 0, 0, 0, 0, 0, 272, 283, 1703,
	309, 0, 826, 850, 926, 970, 1114, 0, 0, 972,
	0, 0, 1625, 1612, 1613, 1610, 1339, 1915, 1919, 0,
	0, 0, 1921, -2, 0, 1943, -2, -2, 2177, 2229,
	1994, 1603, 2016, 2018, 2005, 2223, 1863, 0, 2105, 2102,
	0, 2089, 0, 2040, 2041, 0, 0, 2044, 2046, 2047,
	2048, 1802, 1795, 1794, 2202, 0, 0, 0, 0, 2080,
	1585, 0, 2094, 0, 0, 1653, 2094, 2094, 1693, 0,
	1695, 1662, 1654, 0, 2305, 1688, 1680, 0, 0, 331,
	0, 335, 336, 0, 0, 1736, 1741, 0, 1747, 1817,
	0, 236, 163, 164, 1351, 1355, 1352, 0, 166, 0,
	1136, 0, 1139, 0, 0, 0, 0, 1146, 1163, 0,
	0, 0, 0, 0, 0, 1165, 0, 1164, 0, 0,
	1195, 0, 1327, 1334, 0, -2, 0, 0, 0, 173,
	196, 0, 0, 0, 0, 199, 1401, 175, 0, 0,
	205, 205, 0, 0, 1343, 1345, 1358, 0, 0, 0,
	0, 151, 0, 0, 1361, 1365, 1373, 1368, 1370, 1376,
	0, 103, 0, 1479, 0, 0, 1378, 218, 219, 0,
	205, 0, 205, 211, 205, 1336, 0, 0, 0, 0,
	0, 0, 0, 1381, 1382, 238, 0, 0, 0, 0,
	240, 315, 247, 388, 0, 1109, 0, 1191, 1183, 1184,
	1185, 0, 1190, 1192, 0, 0, 1075, 1060, 0, 1071,
	0, 0, 1088, 1063, 0, 456, 473, 0, 476, 0,
	479, 1049, 1227, 1270, 1209, 0, 1304, 0, 0, 0,
	0, 0, 0, 0, 1491, 1493, 0, 1484, 1485, 1515,
	1621, 0, 0, 0, 1503, 1622, 0, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 285,
	0, 286, 287, 288, 295, 274, 275, 672, 674, 0,
	0, 680, 1113, 0, 0, 0, 0, 1611, 1923, -2,
	-2, 1944, 0, 2306, 2308, 1603, 0, 2091, 1605, 0,
	0, -2, 0, 0, 0, 1586, 1569, 0, 1644, 1636,
	1638, 1640, 2610, 2398, 2722, 1570, 1571, 1715, 0, 1683,
	332, 622, 0, 0, 1743, 0, 0, 0, 1353, 168,
	0, 1140, 1141, 2280, 1143, 0, 1145, 1147, 1148, 1149,
	0, 1152, 0, 2329, 0, 1157, 1160, 1161, 0, 0,
	1174, 1196, 0, 1205, 0, 1329, 1339, 1333, 0, 1331,
	1207, 0, 172, 198, 174, 200, 195, 0, 1336, 0,
	176, 185, 0, 0, 123, 0, 0, 2392, 154, 152,
	150, 101, 1340, 125, 0, 220, 228, 1335, 230, 215,
	205, 0, 1362, 1366, 1374, 0, 1389, 1390, 1391, 1392,
	0, 0, 0, 0, 249, 0, 250, 253, 0, 0,
	1124, 0, 1062, 1182, 0, 1193, 1194, 1065, 0, 1064,
	0, 0, 0, 0, 0, 457, 460, 0, 463, 0,
	0, 0, 0, 0, 1315, 1313, 0, 1321, 0, 0,
	0, 1467, 0, 0, 1486, 1487, 480, 1509, 0, 0,
	1515, 1526, 302, 0, 0, 1096, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1097, 1207, 0, 0, 1171,
	0, 307, 282, 0, 676, 0, 678, 0, 971, 973,
	0, 0, 2017, 2109, 0, 0, 2042, 2043, -2, 0,
	1983, 2093, 2095, 0, 0, 0, 0, 0, 1655, 623,
	1737, 631, 1349, 0, 1356, 1138, 1142, 0, 0, 0,
	1153, 1213, 0, 0, 1230, 1230, 1166, 0, 0, 1199,
	1200, 1109, 0, 1201, 1202, 1203, 1328, 1614, 1334, 1109,
	0, 0, 197, 202, 0, 0, 0, 0, 0, 0,
	0, 209, 231, 1336, 0, 1393, 1394, 0, 0, 246,
	267, 0, 1271, 1063, 1123, 0, 0, 1073, 0, 1076,
	0, 1072, 1069, 1070, 1061, 0, 461, 462, 477, 0,
	478, 0, 1274, 0, 0, 1322, 0, 0, 1474, 1466,
	1493, 1488, 1489, 1734, 1512, 1516, 0, 0, 1205, 1207,
	1120, 0, 675, 0, 0, 981, 982, 0, 0, 0,
	0, 2104, 1606, 1984, 0, 0, 1639, 1641, 1642, 1643,
	1350, 0, 0, 1151, 1218, 0, 0, 0, 0, 0,
	1167, 1197, 1198, 1120, 0, 1332, 1330, 1176, 0, 1209,
	178, 0, 1207, 0, 1129, 0, 0, 1132, 0, 0,
	155, 2392, 153, 0, 205, 1386, 205, 0, 270, 0,
	261, 259, 260, 1065, 0, 0, 1187, 1189, 0, 1077,
	1109, 1075, 474, 1272, 1305, 1207, 0, 1205, 0, 1481,
	1493, 1475, 1476, 0, 1491, 0, 325, 325, 1109, 1205,
	1063, 1119, 325, 677, 679, 2101, 2121, 2110, -2, 2681,
	2399, 0, 2121, 2121, 2096, 2097, 0, 0, 1154, 1214,
	1215, 0, 1210, 1211, 1212, 2328, 1155, 1156, 1158, 1159,
	1195, 0, 0, 1213, 201, 1109, 1126, 0, 0, 1127,
	0, 0, 158, 0, 160, 232, 1384, 0, 1387, 0,
	255, 0, 0, 1057, 0, 1186, 0, 0, 0, 0,
	1124, 1065, 1205, 0, 1109, 0, 1470, 1480, 0, 1490,
	1467, 0, 304, 305, 1120, 1109, 1734, 0, 306, 2106,
	0, 0, 2112, 2113, 2114, 2115, 2116, 2107, 2108, 1144,
	0, 1216, 0, 1217, 0, 0, 0, 1734, 1204, 0,
	1218, 183, 1130, 0, 1133, 0, 156, 0, 0, 0,
	265, 266, 1054, 1056, 0, 1188, 1066, 0, 1068, 1063,
	1074, 1109, 0, 1120, 0, 1463, 1469, 1473, 2289, 1474,
	1510, 0, 1063, 1120, 1170, 0, 2118, 2119, 0, 0,
	0, 1219, 0, 1222, 1223, 0, 1220, 1175, 0, 1195,
	0, 0, 1385, 205, 0, 0, 1067, 1065, 1120, 1207,
	1063, 1205, 1481, 0, 1734, 1063, 2117, 2120, 2111, 1150,
	1221, 1224, 1225, 1206, 1177, 0, 0, 1388, 268, 0,
	1112, 1057, 1063, 1205, 1734, 1109, 1470, 1734, 1168, 1734,
	1117, 0, 0, 1108, 1110, 1111, 1055, 1734, 1109, 1318,
	1120, 1464, 1511, 1169, 1131, 1116, 0, 269, 1316, 1120,
	1063, 0, 1063, 1734, 0, 1734, 1319, 1117, 1317, 1134,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 587, 3, 593, 588, 3,
	598, 599, 591, 589, 603, 590, 600, 592, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 606, 3,
	579, 581, 580, 584, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 596, 3, 597, 594, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 604, 586, 605, 582,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 583, 57922, 585, 57923, 595, 57924, 601,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1692
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1788
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1820
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1853
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1874
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1906
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1919
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1990
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1998
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2009
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2019
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2029
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2038
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2049
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2055
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2081
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2086
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2177
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2220
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2223
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2464
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2468
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2547
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2666
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2801
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3039
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3089
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3095
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3100
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3105
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3110
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3115
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3222
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3438
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3443
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3462
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CREATE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "create access method")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create cast")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create publication")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create rule")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create server")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3502
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3506
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3509
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3510
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop server")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3692
		{

			sqlVAL.union.val = nil
		}
	case 472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "DELETE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3779
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3805
		{
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "DROP")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4005
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4071
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DELETE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "INSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "DELETE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "INSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4184
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4217
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4307
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "GRANT")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4385
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4397
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESET")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "USE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			return unimplemented(sqllex, "set from current")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4741
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = tree.Low
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = tree.Normal
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = tree.High
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4921
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.str = "client_encoding"
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.str = "timezone"
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4991
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5054
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5063
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = true
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = false
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5446
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = true
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = false
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5511
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5563
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5574
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5596
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5624
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5629
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5639
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5707
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5715
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5750
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5759
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5782
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5853
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5863
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5870
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6010
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6211
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6333
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6349
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{

			sqlVAL.union.val = nil
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.str = ""
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = nil
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6417
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6421
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6447
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6461
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6476
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6583
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.str = ""
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6851
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{

			sqlVAL.union.val = true
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = false
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6906
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6913
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7013
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7051
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7066
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7292
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7301
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7309
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7421
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = true
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{

			sqlVAL.union.val = true
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = false
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7470
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7484
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7496
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7518
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7528
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = nil
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7638
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7666
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7668
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7670
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7674
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7712
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7730
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7749
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7766
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7783
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = true
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7847
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.str = ""
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7920
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7926
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8151
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8157
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8169
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8175
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8189
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8195
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8254
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = true
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = false
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.Types
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8314
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8318
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8343
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8347
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8385
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8435
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8497
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8534
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8562
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8577
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8693
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{

		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8730
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = ""
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = ""
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8859
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9030
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9045
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9225
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = false
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9400
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9401
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = nil
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9415
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9445
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9516
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9542
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9703
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9740
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9797
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9837
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9847
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9923
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = nil
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = true
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.str = tree.AstFull
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.str = tree.AstRight
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.str = tree.AstInner
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10076
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.str = tree.AstHash
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.str = ""
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10145
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10180
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10190
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = true
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = false
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10252
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10260
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10279
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10289
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10309
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = types.Geography
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10420
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10428
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10462
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = nil
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = types.Int2
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = types.Int
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = types.Float4
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = types.Float
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10505
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10513
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = types.Bool
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = types.Float
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10554
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10560
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = types.String
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = types.Date
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10631
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10639
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10653
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10662
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10670
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10687
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = true
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = false
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = false
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = types.Interval
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10711
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = nil
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10840
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11049
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11236
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11475
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11501
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11525
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11555
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11566
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11567
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11591
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11657
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11858
		{
			return unimplemented(sqllex, "treat")
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.str = ""
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12033
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12101
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12130
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12206
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12547
		{
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12619
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12700
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12716
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12725
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12745
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12753
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12770
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12989
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13002
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13009
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.str = ""
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
