// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13792

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1601,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 417,
	-2, 0,
	-1, 74,
	245, 248,
	520, 248,
	-2, 0,
	-1, 88,
	234, 1337,
	247, 1337,
	263, 413,
	394, 413,
	405, 1095,
	445, 413,
	458, 1095,
	505, 1095,
	531, 413,
	557, 1095,
	-2, 0,
	-1, 94,
	133, 1601,
	240, 1601,
	542, 1601,
	543, 1601,
	-2, 0,
	-1, 112,
	152, 1572,
	172, 1572,
	185, 1572,
	243, 1572,
	276, 1572,
	345, 1572,
	355, 1572,
	537, 1572,
	-2, 1543,
	-1, 153,
	160, 934,
	262, 934,
	397, 895,
	463, 895,
	504, 895,
	523, 934,
	525, 895,
	-2, 0,
	-1, 157,
	4, 1603,
	21, 1603,
	22, 1603,
	23, 1603,
	24, 1603,
	25, 1603,
	26, 1603,
	27, 1603,
	29, 1603,
	30, 1603,
	36, 1603,
	41, 1603,
	42, 1603,
	44, 1603,
	45, 1603,
	46, 1603,
	47, 1603,
	48, 1603,
	49, 1603,
	50, 1603,
	51, 1603,
	53, 1603,
	54, 1603,
	55, 1603,
	56, 1603,
	58, 1603,
	59, 1603,
	60, 1603,
	61, 1603,
	62, 1603,
	63, 1603,
	64, 1603,
	68, 1603,
	69, 1603,
	70, 1603,
	71, 1603,
	73, 1603,
	74, 1603,
	75, 1603,
	79, 1603,
	80, 1603,
	81, 1603,
	82, 1603,
	83, 1603,
	84, 1603,
	85, 1603,
	88, 1603,
	89, 1603,
	90, 1603,
	91, 1603,
	92, 1603,
	94, 1603,
	96, 1603,
	97, 1603,
	98, 1603,
	99, 1603,
	100, 1603,
	101, 1603,
	103, 1603,
	104, 1603,
	105, 1603,
	107, 1603,
	108, 1603,
	109, 1603,
	117, 1603,
	118, 1603,
	119, 1603,
	120, 1603,
	121, 1603,
	123, 1603,
	124, 1603,
	125, 1603,
	126, 1603,
	128, 1603,
	129, 1603,
	130, 1603,
	132, 1603,
	133, 1603,
	134, 1603,
	136, 1603,
	137, 1603,
	138, 1603,
	141, 1603,
	142, 1603,
	143, 1603,
	145, 1603,
	146, 1603,
	147, 1603,
	149, 1603,
	150, 1603,
	151, 1603,
	153, 1603,
	154, 1603,
	155, 1603,
	156, 1603,
	157, 1603,
	158, 1603,
	159, 1603,
	160, 1603,
	161, 1603,
	162, 1603,
	163, 1603,
	164, 1603,
	165, 1603,
	166, 1603,
	167, 1603,
	168, 1603,
	169, 1603,
	171, 1603,
	177, 1603,
	178, 1603,
	179, 1603,
	180, 1603,
	184, 1603,
	186, 1603,
	187, 1603,
	188, 1603,
	192, 1603,
	193, 1603,
	194, 1603,
	195, 1603,
	196, 1603,
	197, 1603,
	198, 1603,
	199, 1603,
	200, 1603,
	201, 1603,
	202, 1603,
	203, 1603,
	204, 1603,
	205, 1603,
	207, 1603,
	208, 1603,
	210, 1603,
	211, 1603,
	213, 1603,
	214, 1603,
	215, 1603,
	216, 1603,
	217, 1603,
	218, 1603,
	219, 1603,
	220, 1603,
	221, 1603,
	223, 1603,
	224, 1603,
	226, 1603,
	227, 1603,
	228, 1603,
	229, 1603,
	230, 1603,
	234, 1603,
	235, 1603,
	236, 1603,
	237, 1603,
	240, 1603,
	241, 1603,
	242, 1603,
	244, 1603,
	246, 1603,
	247, 1603,
	249, 1603,
	251, 1603,
	252, 1603,
	253, 1603,
	255, 1603,
	259, 1603,
	260, 1603,
	261, 1603,
	262, 1603,
	263, 1603,
	264, 1603,
	266, 1603,
	267, 1603,
	268, 1603,
	270, 1603,
	271, 1603,
	273, 1603,
	274, 1603,
	277, 1603,
	278, 1603,
	279, 1603,
	280, 1603,
	281, 1603,
	282, 1603,
	283, 1603,
	286, 1603,
	287, 1603,
	288, 1603,
	289, 1603,
	291, 1603,
	292, 1603,
	293, 1603,
	294, 1603,
	295, 1603,
	296, 1603,
	297, 1603,
	298, 1603,
	299, 1603,
	300, 1603,
	301, 1603,
	302, 1603,
	303, 1603,
	304, 1603,
	305, 1603,
	306, 1603,
	307, 1603,
	308, 1603,
	309, 1603,
	310, 1603,
	311, 1603,
	312, 1603,
	314, 1603,
	316, 1603,
	317, 1603,
	318, 1603,
	319, 1603,
	320, 1603,
	321, 1603,
	322, 1603,
	323, 1603,
	324, 1603,
	325, 1603,
	326, 1603,
	327, 1603,
	328, 1603,
	329, 1603,
	330, 1603,
	332, 1603,
	333, 1603,
	335, 1603,
	337, 1603,
	338, 1603,
	340, 1603,
	341, 1603,
	342, 1603,
	343, 1603,
	344, 1603,
	347, 1603,
	350, 1603,
	351, 1603,
	352, 1603,
	353, 1603,
	356, 1603,
	357, 1603,
	358, 1603,
	360, 1603,
	362, 1603,
	363, 1603,
	364, 1603,
	365, 1603,
	366, 1603,
	367, 1603,
	368, 1603,
	369, 1603,
	370, 1603,
	371, 1603,
	372, 1603,
	373, 1603,
	374, 1603,
	376, 1603,
	377, 1603,
	378, 1603,
	379, 1603,
	380, 1603,
	381, 1603,
	382, 1603,
	383, 1603,
	384, 1603,
	385, 1603,
	386, 1603,
	387, 1603,
	388, 1603,
	389, 1603,
	390, 1603,
	392, 1603,
	393, 1603,
	395, 1603,
	396, 1603,
	397, 1603,
	398, 1603,
	399, 1603,
	400, 1603,
	401, 1603,
	402, 1603,
	403, 1603,
	404, 1603,
	405, 1603,
	406, 1603,
	407, 1603,
	409, 1603,
	411, 1603,
	412, 1603,
	413, 1603,
	419, 1603,
	420, 1603,
	422, 1603,
	423, 1603,
	424, 1603,
	425, 1603,
	426, 1603,
	427, 1603,
	428, 1603,
	429, 1603,
	430, 1603,
	431, 1603,
	433, 1603,
	434, 1603,
	435, 1603,
	437, 1603,
	438, 1603,
	439, 1603,
	440, 1603,
	441, 1603,
	442, 1603,
	443, 1603,
	445, 1603,
	446, 1603,
	447, 1603,
	448, 1603,
	449, 1603,
	450, 1603,
	451, 1603,
	452, 1603,
	453, 1603,
	454, 1603,
	455, 1603,
	456, 1603,
	458, 1603,
	459, 1603,
	460, 1603,
	461, 1603,
	462, 1603,
	463, 1603,
	465, 1603,
	466, 1603,
	467, 1603,
	468, 1603,
	469, 1603,
	470, 1603,
	472, 1603,
	473, 1603,
	474, 1603,
	475, 1603,
	476, 1603,
	477, 1603,
	478, 1603,
	479, 1603,
	481, 1603,
	483, 1603,
	484, 1603,
	485, 1603,
	486, 1603,
	487, 1603,
	488, 1603,
	489, 1603,
	490, 1603,
	491, 1603,
	492, 1603,
	493, 1603,
	494, 1603,
	495, 1603,
	496, 1603,
	497, 1603,
	498, 1603,
	500, 1603,
	501, 1603,
	503, 1603,
	504, 1603,
	506, 1603,
	507, 1603,
	508, 1603,
	509, 1603,
	510, 1603,
	511, 1603,
	512, 1603,
	513, 1603,
	515, 1603,
	516, 1603,
	517, 1603,
	518, 1603,
	519, 1603,
	521, 1603,
	523, 1603,
	524, 1603,
	525, 1603,
	526, 1603,
	527, 1603,
	528, 1603,
	530, 1603,
	531, 1603,
	532, 1603,
	533, 1603,
	535, 1603,
	536, 1603,
	539, 1603,
	540, 1603,
	541, 1603,
	542, 1603,
	543, 1603,
	544, 1603,
	545, 1603,
	547, 1603,
	550, 1603,
	551, 1603,
	552, 1603,
	553, 1603,
	554, 1603,
	555, 1603,
	557, 1603,
	558, 1603,
	559, 1603,
	560, 1603,
	561, 1603,
	562, 1603,
	567, 1603,
	568, 1603,
	569, 1603,
	570, 1603,
	571, 1603,
	572, 1603,
	-2, 0,
	-1, 158,
	1, 1454,
	131, 1454,
	251, 1454,
	334, 1454,
	392, 1454,
	401, 1454,
	576, 1454,
	605, 1454,
	-2, 0,
	-1, 160,
	1, 1454,
	605, 1454,
	-2, 0,
	-1, 161,
	1, 1454,
	605, 1454,
	-2, 0,
	-1, 162,
	1, 1454,
	520, 1454,
	605, 1454,
	-2, 0,
	-1, 191,
	152, 1571,
	172, 1571,
	185, 1571,
	243, 1571,
	276, 1571,
	345, 1571,
	355, 1571,
	537, 1571,
	-2, 1546,
	-1, 238,
	4, 1610,
	5, 1610,
	6, 1610,
	7, 1610,
	8, 1610,
	9, 1610,
	10, 1610,
	21, 1610,
	22, 1610,
	23, 1610,
	24, 1610,
	25, 1610,
	26, 1610,
	27, 1610,
	29, 1610,
	30, 1610,
	36, 1610,
	37, 1610,
	41, 1610,
	42, 1610,
	43, 1610,
	44, 1610,
	45, 1610,
	46, 1610,
	47, 1610,
	48, 1610,
	49, 1610,
	50, 1610,
	51, 1610,
	53, 1610,
	54, 1610,
	55, 1610,
	56, 1610,
	58, 1610,
	59, 1610,
	60, 1610,
	61, 1610,
	62, 1610,
	63, 1610,
	64, 1610,
	65, 1610,
	66, 1610,
	67, 1610,
	68, 1610,
	69, 1610,
	70, 1610,
	71, 1610,
	73, 1610,
	74, 1610,
	75, 1610,
	77, 1610,
	79, 1610,
	80, 1610,
	81, 1610,
	82, 1610,
	83, 1610,
	84, 1610,
	85, 1610,
	88, 1610,
	89, 1610,
	90, 1610,
	91, 1610,
	92, 1610,
	94, 1610,
	96, 1610,
	97, 1610,
	98, 1610,
	99, 1610,
	100, 1610,
	101, 1610,
	103, 1610,
	104, 1610,
	105, 1610,
	106, 1610,
	107, 1610,
	108, 1610,
	109, 1610,
	110, 1610,
	111, 1610,
	112, 1610,
	113, 1610,
	114, 1610,
	115, 1610,
	116, 1610,
	117, 1610,
	118, 1610,
	119, 1610,
	120, 1610,
	121, 1610,
	122, 1610,
	123, 1610,
	124, 1610,
	125, 1610,
	126, 1610,
	127, 1610,
	128, 1610,
	129, 1610,
	130, 1610,
	132, 1610,
	133, 1610,
	134, 1610,
	136, 1610,
	137, 1610,
	138, 1610,
	141, 1610,
	142, 1610,
	143, 1610,
	145, 1610,
	146, 1610,
	147, 1610,
	149, 1610,
	150, 1610,
	151, 1610,
	153, 1610,
	154, 1610,
	155, 1610,
	156, 1610,
	157, 1610,
	158, 1610,
	159, 1610,
	160, 1610,
	161, 1610,
	162, 1610,
	163, 1610,
	164, 1610,
	165, 1610,
	166, 1610,
	167, 1610,
	168, 1610,
	169, 1610,
	170, 1610,
	171, 1610,
	177, 1610,
	178, 1610,
	179, 1610,
	180, 1610,
	184, 1610,
	186, 1610,
	187, 1610,
	188, 1610,
	191, 1610,
	192, 1610,
	193, 1610,
	194, 1610,
	195, 1610,
	196, 1610,
	197, 1610,
	198, 1610,
	199, 1610,
	200, 1610,
	201, 1610,
	202, 1610,
	203, 1610,
	204, 1610,
	205, 1610,
	207, 1610,
	208, 1610,
	210, 1610,
	211, 1610,
	213, 1610,
	214, 1610,
	215, 1610,
	216, 1610,
	217, 1610,
	218, 1610,
	219, 1610,
	220, 1610,
	221, 1610,
	222, 1610,
	223, 1610,
	224, 1610,
	226, 1610,
	227, 1610,
	228, 1610,
	229, 1610,
	230, 1610,
	234, 1610,
	235, 1610,
	236, 1610,
	237, 1610,
	239, 1610,
	240, 1610,
	241, 1610,
	242, 1610,
	244, 1610,
	246, 1610,
	247, 1610,
	248, 1610,
	249, 1610,
	250, 1610,
	251, 1610,
	252, 1610,
	253, 1610,
	254, 1610,
	255, 1610,
	259, 1610,
	260, 1610,
	261, 1610,
	262, 1610,
	263, 1610,
	264, 1610,
	266, 1610,
	267, 1610,
	268, 1610,
	270, 1610,
	271, 1610,
	272, 1610,
	273, 1610,
	274, 1610,
	275, 1610,
	277, 1610,
	278, 1610,
	279, 1610,
	280, 1610,
	281, 1610,
	282, 1610,
	283, 1610,
	284, 1610,
	285, 1610,
	286, 1610,
	287, 1610,
	288, 1610,
	289, 1610,
	291, 1610,
	292, 1610,
	293, 1610,
	294, 1610,
	295, 1610,
	296, 1610,
	297, 1610,
	298, 1610,
	299, 1610,
	300, 1610,
	301, 1610,
	302, 1610,
	303, 1610,
	304, 1610,
	305, 1610,
	306, 1610,
	307, 1610,
	308, 1610,
	309, 1610,
	310, 1610,
	311, 1610,
	312, 1610,
	314, 1610,
	315, 1610,
	316, 1610,
	317, 1610,
	318, 1610,
	319, 1610,
	320, 1610,
	321, 1610,
	322, 1610,
	323, 1610,
	324, 1610,
	325, 1610,
	326, 1610,
	327, 1610,
	328, 1610,
	329, 1610,
	330, 1610,
	331, 1610,
	332, 1610,
	333, 1610,
	334, 1610,
	335, 1610,
	336, 1610,
	337, 1610,
	338, 1610,
	339, 1610,
	340, 1610,
	341, 1610,
	342, 1610,
	343, 1610,
	344, 1610,
	347, 1610,
	351, 1610,
	352, 1610,
	353, 1610,
	356, 1610,
	357, 1610,
	358, 1610,
	359, 1610,
	360, 1610,
	361, 1610,
	362, 1610,
	363, 1610,
	364, 1610,
	365, 1610,
	366, 1610,
	367, 1610,
	368, 1610,
	369, 1610,
	370, 1610,
	371, 1610,
	372, 1610,
	373, 1610,
	374, 1610,
	376, 1610,
	377, 1610,
	378, 1610,
	379, 1610,
	380, 1610,
	381, 1610,
	382, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	386, 1610,
	387, 1610,
	388, 1610,
	389, 1610,
	390, 1610,
	392, 1610,
	393, 1610,
	395, 1610,
	396, 1610,
	397, 1610,
	398, 1610,
	399, 1610,
	400, 1610,
	401, 1610,
	402, 1610,
	403, 1610,
	404, 1610,
	405, 1610,
	406, 1610,
	407, 1610,
	409, 1610,
	411, 1610,
	412, 1610,
	413, 1610,
	419, 1610,
	420, 1610,
	422, 1610,
	423, 1610,
	424, 1610,
	425, 1610,
	426, 1610,
	427, 1610,
	428, 1610,
	429, 1610,
	430, 1610,
	431, 1610,
	433, 1610,
	434, 1610,
	435, 1610,
	436, 1610,
	437, 1610,
	438, 1610,
	439, 1610,
	440, 1610,
	441, 1610,
	442, 1610,
	443, 1610,
	445, 1610,
	446, 1610,
	447, 1610,
	448, 1610,
	449, 1610,
	450, 1610,
	451, 1610,
	452, 1610,
	453, 1610,
	454, 1610,
	455, 1610,
	456, 1610,
	458, 1610,
	459, 1610,
	460, 1610,
	461, 1610,
	462, 1610,
	463, 1610,
	464, 1610,
	465, 1610,
	466, 1610,
	467, 1610,
	468, 1610,
	469, 1610,
	470, 1610,
	471, 1610,
	472, 1610,
	473, 1610,
	474, 1610,
	475, 1610,
	476, 1610,
	477, 1610,
	478, 1610,
	479, 1610,
	481, 1610,
	483, 1610,
	484, 1610,
	485, 1610,
	486, 1610,
	487, 1610,
	488, 1610,
	489, 1610,
	490, 1610,
	491, 1610,
	492, 1610,
	493, 1610,
	494, 1610,
	495, 1610,
	496, 1610,
	497, 1610,
	498, 1610,
	500, 1610,
	501, 1610,
	502, 1610,
	503, 1610,
	504, 1610,
	506, 1610,
	507, 1610,
	508, 1610,
	509, 1610,
	510, 1610,
	511, 1610,
	512, 1610,
	513, 1610,
	515, 1610,
	516, 1610,
	517, 1610,
	518, 1610,
	519, 1610,
	521, 1610,
	523, 1610,
	524, 1610,
	525, 1610,
	526, 1610,
	527, 1610,
	528, 1610,
	529, 1610,
	530, 1610,
	531, 1610,
	532, 1610,
	533, 1610,
	535, 1610,
	536, 1610,
	538, 1610,
	539, 1610,
	540, 1610,
	541, 1610,
	542, 1610,
	543, 1610,
	544, 1610,
	545, 1610,
	546, 1610,
	547, 1610,
	550, 1610,
	551, 1610,
	552, 1610,
	553, 1610,
	554, 1610,
	555, 1610,
	557, 1610,
	558, 1610,
	559, 1610,
	560, 1610,
	561, 1610,
	562, 1610,
	567, 1610,
	568, 1610,
	569, 1610,
	570, 1610,
	571, 1610,
	572, 1610,
	573, 1610,
	586, 1610,
	593, 1610,
	594, 1610,
	595, 1610,
	602, 1610,
	606, 1610,
	-2, 0,
	-1, 753,
	4, 1335,
	21, 1335,
	22, 1335,
	23, 1335,
	24, 1335,
	25, 1335,
	26, 1335,
	27, 1335,
	29, 1335,
	30, 1335,
	36, 1335,
	41, 1335,
	42, 1335,
	44, 1335,
	45, 1335,
	46, 1335,
	47, 1335,
	48, 1335,
	49, 1335,
	50, 1335,
	51, 1335,
	53, 1335,
	54, 1335,
	55, 1335,
	56, 1335,
	58, 1335,
	59, 1335,
	60, 1335,
	61, 1335,
	62, 1335,
	63, 1335,
	64, 1335,
	68, 1335,
	69, 1335,
	70, 1335,
	71, 1335,
	73, 1335,
	74, 1335,
	75, 1335,
	79, 1335,
	80, 1335,
	81, 1335,
	82, 1335,
	83, 1335,
	84, 1335,
	85, 1335,
	88, 1335,
	89, 1335,
	90, 1335,
	91, 1335,
	92, 1335,
	94, 1335,
	96, 1335,
	97, 1335,
	98, 1335,
	99, 1335,
	100, 1335,
	101, 1335,
	103, 1335,
	104, 1335,
	105, 1335,
	107, 1335,
	108, 1335,
	109, 1335,
	117, 1335,
	118, 1335,
	119, 1335,
	120, 1335,
	121, 1335,
	123, 1335,
	124, 1335,
	125, 1335,
	126, 1335,
	128, 1335,
	129, 1335,
	130, 1335,
	132, 1335,
	133, 1335,
	134, 1335,
	136, 1335,
	137, 1335,
	138, 1335,
	141, 1335,
	142, 1335,
	143, 1335,
	145, 1335,
	146, 1335,
	147, 1335,
	149, 1335,
	150, 1335,
	151, 1335,
	153, 1335,
	154, 1335,
	155, 1335,
	156, 1335,
	157, 1335,
	158, 1335,
	159, 1335,
	160, 1335,
	161, 1335,
	162, 1335,
	163, 1335,
	164, 1335,
	165, 1335,
	166, 1335,
	167, 1335,
	168, 1335,
	169, 1335,
	171, 1335,
	177, 1335,
	178, 1335,
	179, 1335,
	180, 1335,
	184, 1335,
	186, 1335,
	187, 1335,
	188, 1335,
	192, 1335,
	193, 1335,
	194, 1335,
	195, 1335,
	196, 1335,
	197, 1335,
	198, 1335,
	199, 1335,
	200, 1335,
	201, 1335,
	202, 1335,
	203, 1335,
	204, 1335,
	205, 1335,
	207, 1335,
	208, 1335,
	210, 1335,
	211, 1335,
	213, 1335,
	214, 1335,
	215, 1335,
	216, 1335,
	217, 1335,
	218, 1335,
	219, 1335,
	220, 1335,
	221, 1335,
	223, 1335,
	224, 1335,
	226, 1335,
	227, 1335,
	228, 1335,
	229, 1335,
	230, 1335,
	234, 1335,
	235, 1335,
	236, 1335,
	237, 1335,
	240, 1335,
	241, 1335,
	242, 1335,
	244, 1335,
	246, 1335,
	247, 1335,
	249, 1335,
	251, 1335,
	252, 1335,
	253, 1335,
	255, 1335,
	259, 1335,
	260, 1335,
	261, 1335,
	262, 1335,
	263, 1335,
	264, 1335,
	266, 1335,
	267, 1335,
	268, 1335,
	270, 1335,
	271, 1335,
	273, 1335,
	274, 1335,
	277, 1335,
	278, 1335,
	279, 1335,
	280, 1335,
	281, 1335,
	282, 1335,
	283, 1335,
	286, 1335,
	287, 1335,
	288, 1335,
	289, 1335,
	291, 1335,
	292, 1335,
	293, 1335,
	294, 1335,
	295, 1335,
	296, 1335,
	297, 1335,
	298, 1335,
	299, 1335,
	300, 1335,
	301, 1335,
	302, 1335,
	303, 1335,
	304, 1335,
	305, 1335,
	306, 1335,
	307, 1335,
	308, 1335,
	309, 1335,
	310, 1335,
	311, 1335,
	312, 1335,
	314, 1335,
	316, 1335,
	317, 1335,
	318, 1335,
	319, 1335,
	320, 1335,
	321, 1335,
	322, 1335,
	323, 1335,
	324, 1335,
	325, 1335,
	326, 1335,
	327, 1335,
	328, 1335,
	329, 1335,
	330, 1335,
	332, 1335,
	333, 1335,
	335, 1335,
	337, 1335,
	338, 1335,
	340, 1335,
	341, 1335,
	342, 1335,
	343, 1335,
	344, 1335,
	347, 1335,
	351, 1335,
	352, 1335,
	353, 1335,
	356, 1335,
	357, 1335,
	358, 1335,
	360, 1335,
	362, 1335,
	363, 1335,
	364, 1335,
	365, 1335,
	366, 1335,
	367, 1335,
	368, 1335,
	369, 1335,
	370, 1335,
	371, 1335,
	372, 1335,
	373, 1335,
	374, 1335,
	376, 1335,
	377, 1335,
	378, 1335,
	379, 1335,
	380, 1335,
	381, 1335,
	382, 1335,
	383, 1335,
	384, 1335,
	385, 1335,
	386, 1335,
	387, 1335,
	388, 1335,
	389, 1335,
	390, 1335,
	392, 1335,
	393, 1335,
	395, 1335,
	396, 1335,
	397, 1335,
	398, 1335,
	399, 1335,
	400, 1335,
	401, 1335,
	402, 1335,
	403, 1335,
	404, 1335,
	405, 1335,
	406, 1335,
	407, 1335,
	409, 1335,
	411, 1335,
	412, 1335,
	413, 1335,
	419, 1335,
	420, 1335,
	422, 1335,
	423, 1335,
	424, 1335,
	425, 1335,
	426, 1335,
	427, 1335,
	428, 1335,
	429, 1335,
	430, 1335,
	431, 1335,
	433, 1335,
	434, 1335,
	435, 1335,
	437, 1335,
	438, 1335,
	439, 1335,
	440, 1335,
	441, 1335,
	442, 1335,
	443, 1335,
	445, 1335,
	446, 1335,
	447, 1335,
	448, 1335,
	449, 1335,
	450, 1335,
	451, 1335,
	452, 1335,
	453, 1335,
	454, 1335,
	455, 1335,
	456, 1335,
	458, 1335,
	459, 1335,
	460, 1335,
	461, 1335,
	462, 1335,
	463, 1335,
	465, 1335,
	466, 1335,
	467, 1335,
	468, 1335,
	469, 1335,
	470, 1335,
	472, 1335,
	473, 1335,
	474, 1335,
	475, 1335,
	476, 1335,
	477, 1335,
	478, 1335,
	479, 1335,
	481, 1335,
	483, 1335,
	484, 1335,
	485, 1335,
	486, 1335,
	487, 1335,
	488, 1335,
	489, 1335,
	490, 1335,
	491, 1335,
	492, 1335,
	493, 1335,
	494, 1335,
	495, 1335,
	496, 1335,
	497, 1335,
	498, 1335,
	500, 1335,
	501, 1335,
	503, 1335,
	504, 1335,
	506, 1335,
	507, 1335,
	508, 1335,
	509, 1335,
	510, 1335,
	511, 1335,
	512, 1335,
	513, 1335,
	515, 1335,
	516, 1335,
	517, 1335,
	518, 1335,
	519, 1335,
	521, 1335,
	523, 1335,
	524, 1335,
	525, 1335,
	526, 1335,
	527, 1335,
	528, 1335,
	530, 1335,
	531, 1335,
	532, 1335,
	533, 1335,
	535, 1335,
	536, 1335,
	539, 1335,
	540, 1335,
	541, 1335,
	542, 1335,
	543, 1335,
	544, 1335,
	545, 1335,
	547, 1335,
	550, 1335,
	551, 1335,
	552, 1335,
	553, 1335,
	554, 1335,
	555, 1335,
	557, 1335,
	558, 1335,
	559, 1335,
	560, 1335,
	561, 1335,
	562, 1335,
	567, 1335,
	568, 1335,
	569, 1335,
	570, 1335,
	571, 1335,
	572, 1335,
	-2, 0,
	-1, 772,
	190, 2402,
	520, 2402,
	585, 2402,
	604, 2402,
	-2, 0,
	-1, 773,
	190, 2389,
	520, 2389,
	585, 2389,
	604, 2389,
	-2, 0,
	-1, 775,
	190, 2654,
	520, 2654,
	585, 2654,
	604, 2654,
	-2, 0,
	-1, 778,
	190, 2514,
	520, 2514,
	585, 2514,
	604, 2514,
	-2, 0,
	-1, 779,
	190, 2695,
	520, 2695,
	585, 2695,
	604, 2695,
	-2, 0,
	-1, 787,
	190, 2541,
	520, 2541,
	585, 2541,
	604, 2541,
	-2, 716,
	-1, 822,
	604, 2338,
	607, 2338,
	-2, 1016,
	-1, 823,
	604, 2340,
	607, 2340,
	-2, 1017,
	-1, 824,
	604, 2339,
	607, 2339,
	-2, 1018,
	-1, 825,
	607, 2264,
	-2, 1019,
	-1, 850,
	185, 267,
	-2, 0,
	-1, 874,
	43, 2311,
	-2, 0,
	-1, 875,
	557, 1313,
	-2, 1096,
	-1, 891,
	4, 1744,
	21, 1744,
	22, 1744,
	23, 1744,
	24, 1744,
	25, 1744,
	26, 1744,
	27, 1744,
	29, 1744,
	30, 1744,
	36, 1744,
	41, 1744,
	42, 1744,
	44, 1744,
	45, 1744,
	46, 1744,
	47, 1744,
	48, 1744,
	49, 1744,
	50, 1744,
	51, 1744,
	53, 1744,
	54, 1744,
	55, 1744,
	56, 1744,
	58, 1744,
	59, 1744,
	60, 1744,
	61, 1744,
	62, 1744,
	63, 1744,
	64, 1744,
	68, 1744,
	69, 1744,
	70, 1744,
	71, 1744,
	73, 1744,
	74, 1744,
	75, 1744,
	79, 1744,
	80, 1744,
	81, 1744,
	82, 1744,
	83, 1744,
	84, 1744,
	85, 1744,
	88, 1744,
	89, 1744,
	90, 1744,
	91, 1744,
	92, 1744,
	94, 1744,
	96, 1744,
	97, 1744,
	98, 1744,
	99, 1744,
	100, 1744,
	101, 1744,
	103, 1744,
	104, 1744,
	105, 1744,
	107, 1744,
	108, 1744,
	109, 1744,
	117, 1744,
	118, 1744,
	119, 1744,
	120, 1744,
	121, 1744,
	123, 1744,
	124, 1744,
	125, 1744,
	126, 1744,
	128, 1744,
	129, 1744,
	130, 1744,
	132, 1744,
	133, 1744,
	134, 1744,
	136, 1744,
	137, 1744,
	138, 1744,
	141, 1744,
	142, 1744,
	143, 1744,
	145, 1744,
	146, 1744,
	147, 1744,
	149, 1744,
	150, 1744,
	151, 1744,
	153, 1744,
	154, 1744,
	155, 1744,
	156, 1744,
	157, 1744,
	158, 1744,
	159, 1744,
	160, 1744,
	161, 1744,
	162, 1744,
	163, 1744,
	164, 1744,
	165, 1744,
	166, 1744,
	167, 1744,
	168, 1744,
	169, 1744,
	171, 1744,
	177, 1744,
	178, 1744,
	179, 1744,
	180, 1744,
	184, 1744,
	186, 1744,
	187, 1744,
	188, 1744,
	192, 1744,
	193, 1744,
	194, 1744,
	195, 1744,
	196, 1744,
	197, 1744,
	198, 1744,
	199, 1744,
	200, 1744,
	201, 1744,
	202, 1744,
	203, 1744,
	204, 1744,
	205, 1744,
	207, 1744,
	208, 1744,
	210, 1744,
	211, 1744,
	213, 1744,
	214, 1744,
	215, 1744,
	216, 1744,
	217, 1744,
	218, 1744,
	219, 1744,
	220, 1744,
	221, 1744,
	223, 1744,
	224, 1744,
	226, 1744,
	227, 1744,
	228, 1744,
	229, 1744,
	230, 1744,
	234, 1744,
	235, 1744,
	236, 1744,
	237, 1744,
	240, 1744,
	241, 1744,
	242, 1744,
	244, 1744,
	246, 1744,
	247, 1744,
	249, 1744,
	251, 1744,
	252, 1744,
	253, 1744,
	255, 1744,
	259, 1744,
	260, 1744,
	261, 1744,
	262, 1744,
	263, 1744,
	264, 1744,
	266, 1744,
	267, 1744,
	268, 1744,
	270, 1744,
	271, 1744,
	273, 1744,
	274, 1744,
	277, 1744,
	278, 1744,
	279, 1744,
	280, 1744,
	281, 1744,
	282, 1744,
	283, 1744,
	286, 1744,
	287, 1744,
	288, 1744,
	289, 1744,
	291, 1744,
	292, 1744,
	293, 1744,
	294, 1744,
	295, 1744,
	296, 1744,
	297, 1744,
	298, 1744,
	299, 1744,
	300, 1744,
	301, 1744,
	302, 1744,
	303, 1744,
	304, 1744,
	305, 1744,
	306, 1744,
	307, 1744,
	308, 1744,
	309, 1744,
	310, 1744,
	311, 1744,
	312, 1744,
	314, 1744,
	316, 1744,
	317, 1744,
	318, 1744,
	319, 1744,
	320, 1744,
	321, 1744,
	322, 1744,
	323, 1744,
	324, 1744,
	325, 1744,
	326, 1744,
	327, 1744,
	328, 1744,
	329, 1744,
	330, 1744,
	332, 1744,
	333, 1744,
	335, 1744,
	337, 1744,
	338, 1744,
	340, 1744,
	341, 1744,
	342, 1744,
	343, 1744,
	344, 1744,
	347, 1744,
	351, 1744,
	352, 1744,
	353, 1744,
	356, 1744,
	357, 1744,
	358, 1744,
	360, 1744,
	362, 1744,
	363, 1744,
	364, 1744,
	365, 1744,
	366, 1744,
	367, 1744,
	368, 1744,
	369, 1744,
	370, 1744,
	371, 1744,
	372, 1744,
	373, 1744,
	374, 1744,
	376, 1744,
	377, 1744,
	378, 1744,
	379, 1744,
	380, 1744,
	381, 1744,
	382, 1744,
	383, 1744,
	384, 1744,
	385, 1744,
	386, 1744,
	387, 1744,
	388, 1744,
	389, 1744,
	390, 1744,
	392, 1744,
	393, 1744,
	395, 1744,
	396, 1744,
	397, 1744,
	398, 1744,
	399, 1744,
	400, 1744,
	401, 1744,
	402, 1744,
	403, 1744,
	404, 1744,
	405, 1744,
	406, 1744,
	407, 1744,
	409, 1744,
	411, 1744,
	412, 1744,
	413, 1744,
	419, 1744,
	420, 1744,
	422, 1744,
	423, 1744,
	424, 1744,
	425, 1744,
	426, 1744,
	427, 1744,
	428, 1744,
	429, 1744,
	430, 1744,
	431, 1744,
	433, 1744,
	434, 1744,
	435, 1744,
	437, 1744,
	438, 1744,
	439, 1744,
	440, 1744,
	441, 1744,
	442, 1744,
	443, 1744,
	445, 1744,
	446, 1744,
	447, 1744,
	448, 1744,
	449, 1744,
	450, 1744,
	451, 1744,
	452, 1744,
	453, 1744,
	454, 1744,
	455, 1744,
	456, 1744,
	458, 1744,
	459, 1744,
	460, 1744,
	461, 1744,
	462, 1744,
	463, 1744,
	465, 1744,
	466, 1744,
	467, 1744,
	468, 1744,
	469, 1744,
	470, 1744,
	472, 1744,
	473, 1744,
	474, 1744,
	475, 1744,
	476, 1744,
	477, 1744,
	478, 1744,
	479, 1744,
	481, 1744,
	483, 1744,
	484, 1744,
	485, 1744,
	486, 1744,
	487, 1744,
	488, 1744,
	489, 1744,
	490, 1744,
	491, 1744,
	492, 1744,
	493, 1744,
	494, 1744,
	495, 1744,
	496, 1744,
	497, 1744,
	498, 1744,
	500, 1744,
	501, 1744,
	503, 1744,
	504, 1744,
	506, 1744,
	507, 1744,
	508, 1744,
	509, 1744,
	510, 1744,
	511, 1744,
	512, 1744,
	513, 1744,
	515, 1744,
	516, 1744,
	517, 1744,
	518, 1744,
	519, 1744,
	521, 1744,
	523, 1744,
	524, 1744,
	525, 1744,
	526, 1744,
	527, 1744,
	528, 1744,
	530, 1744,
	531, 1744,
	532, 1744,
	533, 1744,
	535, 1744,
	536, 1744,
	539, 1744,
	540, 1744,
	541, 1744,
	542, 1744,
	543, 1744,
	544, 1744,
	545, 1744,
	547, 1744,
	550, 1744,
	551, 1744,
	552, 1744,
	553, 1744,
	554, 1744,
	555, 1744,
	557, 1744,
	558, 1744,
	559, 1744,
	560, 1744,
	561, 1744,
	562, 1744,
	567, 1744,
	568, 1744,
	569, 1744,
	570, 1744,
	571, 1744,
	572, 1744,
	-2, 0,
	-1, 901,
	263, 417,
	-2, 0,
	-1, 978,
	397, 896,
	463, 896,
	504, 896,
	525, 896,
	-2, 0,
	-1, 979,
	397, 895,
	463, 895,
	504, 895,
	525, 895,
	-2, 827,
	-1, 983,
	1, 948,
	601, 948,
	603, 948,
	605, 948,
	-2, 0,
	-1, 985,
	1, 870,
	601, 870,
	603, 870,
	605, 870,
	-2, 0,
	-1, 986,
	1, 874,
	601, 874,
	603, 874,
	605, 874,
	-2, 0,
	-1, 987,
	1, 1015,
	185, 1015,
	601, 1015,
	603, 1015,
	605, 1015,
	-2, 0,
	-1, 995,
	1, 901,
	601, 901,
	603, 901,
	605, 901,
	-2, 0,
	-1, 1002,
	1, 948,
	601, 948,
	603, 948,
	605, 948,
	-2, 0,
	-1, 1003,
	1, 950,
	601, 950,
	603, 950,
	605, 950,
	-2, 0,
	-1, 1004,
	1, 953,
	601, 953,
	603, 953,
	605, 953,
	-2, 0,
	-1, 1010,
	1, 979,
	601, 979,
	603, 979,
	605, 979,
	-2, 0,
	-1, 1011,
	1, 981,
	601, 981,
	603, 981,
	605, 981,
	-2, 0,
	-1, 1016,
	1, 1009,
	601, 1009,
	603, 1009,
	605, 1009,
	-2, 0,
	-1, 1068,
	172, 1614,
	185, 1614,
	276, 1614,
	345, 1614,
	-2, 1550,
	-1, 1083,
	172, 1613,
	185, 1613,
	276, 1613,
	345, 1613,
	-2, 1547,
	-1, 1110,
	604, 2337,
	-2, 724,
	-1, 1139,
	5, 2329,
	602, 2327,
	-2, 2318,
	-1, 1147,
	5, 2350,
	602, 2347,
	-2, 2338,
	-1, 1148,
	5, 2351,
	602, 2348,
	-2, 2339,
	-1, 1156,
	604, 2335,
	-2, 2317,
	-1, 1157,
	602, 2779,
	-2, 2336,
	-1, 1180,
	602, 2778,
	-2, 2352,
	-1, 1181,
	5, 1819,
	-2, 2749,
	-1, 1182,
	5, 1820,
	-2, 2750,
	-1, 1183,
	5, 1821,
	-2, 2764,
	-1, 1184,
	5, 1822,
	-2, 2728,
	-1, 1185,
	5, 1823,
	-2, 2762,
	-1, 1186,
	5, 1831,
	-2, 2741,
	-1, 1187,
	5, 1818,
	-2, 2737,
	-1, 1188,
	5, 1818,
	-2, 2736,
	-1, 1189,
	5, 1818,
	-2, 2755,
	-1, 1190,
	5, 1829,
	-2, 2730,
	-1, 1191,
	5, 1834,
	-2, 2729,
	-1, 1192,
	5, 1836,
	-2, 2774,
	-1, 1195,
	5, 1858,
	-2, 2767,
	-1, 1196,
	5, 1850,
	-2, 2768,
	-1, 1197,
	5, 1858,
	-2, 2769,
	-1, 1198,
	5, 1854,
	-2, 2770,
	-1, 1199,
	5, 1804,
	-2, 2742,
	-1, 1200,
	5, 1805,
	-2, 2743,
	-1, 1201,
	5, 1806,
	-2, 2731,
	-1, 1229,
	5, 1841,
	-2, 2775,
	-1, 1230,
	5, 1842,
	-2, 2765,
	-1, 1231,
	5, 1843,
	558, 1843,
	-2, 2732,
	-1, 1232,
	5, 1844,
	558, 1844,
	-2, 2733,
	-1, 1269,
	602, 2347,
	-2, 2338,
	-1, 1270,
	602, 2348,
	-2, 2339,
	-1, 1367,
	190, 2695,
	520, 2695,
	585, 2695,
	604, 2695,
	-2, 0,
	-1, 1372,
	1, 700,
	605, 700,
	-2, 1462,
	-1, 1502,
	364, 2312,
	422, 2312,
	465, 2312,
	595, 2312,
	-2, 2302,
	-1, 1510,
	90, 2691,
	-2, 129,
	-1, 1511,
	90, 2447,
	-2, 130,
	-1, 1512,
	90, 2616,
	-2, 131,
	-1, 1519,
	606, 2312,
	-2, 2314,
	-1, 1527,
	1, 1310,
	427, 1274,
	465, 1274,
	579, 1274,
	601, 1310,
	603, 1310,
	605, 1310,
	-2, 1599,
	-1, 1533,
	206, 1407,
	225, 1407,
	435, 1407,
	-2, 0,
	-1, 1588,
	405, 1095,
	557, 1095,
	-2, 412,
	-1, 1605,
	43, 2310,
	-2, 1061,
	-1, 1612,
	1, 1310,
	601, 1310,
	603, 1310,
	605, 1310,
	-2, 1599,
	-1, 1620,
	4, 1335,
	21, 1335,
	22, 1335,
	23, 1335,
	24, 1335,
	25, 1335,
	26, 1335,
	27, 1335,
	29, 1335,
	30, 1335,
	36, 1335,
	41, 1335,
	42, 1335,
	44, 1335,
	45, 1335,
	46, 1335,
	47, 1335,
	48, 1335,
	49, 1335,
	50, 1335,
	51, 1335,
	53, 1335,
	54, 1335,
	55, 1335,
	56, 1335,
	58, 1335,
	59, 1335,
	60, 1335,
	61, 1335,
	62, 1335,
	63, 1335,
	64, 1335,
	68, 1335,
	69, 1335,
	70, 1335,
	71, 1335,
	73, 1335,
	74, 1335,
	75, 1335,
	79, 1335,
	80, 1335,
	81, 1335,
	82, 1335,
	83, 1335,
	84, 1335,
	85, 1335,
	88, 1335,
	89, 1335,
	90, 1335,
	91, 1335,
	92, 1335,
	94, 1335,
	96, 1335,
	97, 1335,
	98, 1335,
	99, 1335,
	100, 1335,
	101, 1335,
	103, 1335,
	104, 1335,
	105, 1335,
	107, 1335,
	108, 1335,
	109, 1335,
	117, 1335,
	118, 1335,
	119, 1335,
	120, 1335,
	121, 1335,
	123, 1335,
	124, 1335,
	125, 1335,
	126, 1335,
	128, 1335,
	129, 1335,
	130, 1335,
	132, 1335,
	133, 1335,
	134, 1335,
	136, 1335,
	137, 1335,
	138, 1335,
	141, 1335,
	142, 1335,
	143, 1335,
	145, 1335,
	146, 1335,
	147, 1335,
	149, 1335,
	150, 1335,
	151, 1335,
	153, 1335,
	154, 1335,
	155, 1335,
	156, 1335,
	157, 1335,
	158, 1335,
	159, 1335,
	160, 1335,
	161, 1335,
	162, 1335,
	163, 1335,
	164, 1335,
	165, 1335,
	166, 1335,
	167, 1335,
	168, 1335,
	169, 1335,
	177, 1335,
	178, 1335,
	179, 1335,
	180, 1335,
	184, 1335,
	186, 1335,
	187, 1335,
	188, 1335,
	192, 1335,
	193, 1335,
	194, 1335,
	195, 1335,
	196, 1335,
	197, 1335,
	198, 1335,
	199, 1335,
	200, 1335,
	201, 1335,
	202, 1335,
	203, 1335,
	204, 1335,
	205, 1335,
	207, 1335,
	208, 1335,
	210, 1335,
	211, 1335,
	213, 1335,
	214, 1335,
	215, 1335,
	216, 1335,
	217, 1335,
	218, 1335,
	219, 1335,
	220, 1335,
	221, 1335,
	223, 1335,
	224, 1335,
	226, 1335,
	227, 1335,
	228, 1335,
	229, 1335,
	230, 1335,
	235, 1335,
	236, 1335,
	237, 1335,
	240, 1335,
	241, 1335,
	242, 1335,
	244, 1335,
	246, 1335,
	247, 1335,
	249, 1335,
	251, 1335,
	252, 1335,
	253, 1335,
	255, 1335,
	259, 1335,
	260, 1335,
	261, 1335,
	262, 1335,
	263, 1335,
	264, 1335,
	266, 1335,
	267, 1335,
	268, 1335,
	270, 1335,
	271, 1335,
	273, 1335,
	274, 1335,
	277, 1335,
	278, 1335,
	279, 1335,
	280, 1335,
	281, 1335,
	282, 1335,
	283, 1335,
	286, 1335,
	287, 1335,
	288, 1335,
	289, 1335,
	291, 1335,
	292, 1335,
	293, 1335,
	294, 1335,
	295, 1335,
	296, 1335,
	297, 1335,
	298, 1335,
	299, 1335,
	300, 1335,
	301, 1335,
	302, 1335,
	303, 1335,
	304, 1335,
	305, 1335,
	306, 1335,
	307, 1335,
	308, 1335,
	309, 1335,
	310, 1335,
	311, 1335,
	312, 1335,
	314, 1335,
	316, 1335,
	317, 1335,
	318, 1335,
	319, 1335,
	320, 1335,
	321, 1335,
	322, 1335,
	323, 1335,
	324, 1335,
	325, 1335,
	326, 1335,
	327, 1335,
	328, 1335,
	329, 1335,
	330, 1335,
	332, 1335,
	333, 1335,
	337, 1335,
	338, 1335,
	340, 1335,
	341, 1335,
	342, 1335,
	343, 1335,
	344, 1335,
	347, 1335,
	349, 1335,
	351, 1335,
	352, 1335,
	353, 1335,
	356, 1335,
	357, 1335,
	358, 1335,
	360, 1335,
	362, 1335,
	363, 1335,
	364, 1335,
	365, 1335,
	366, 1335,
	367, 1335,
	368, 1335,
	369, 1335,
	370, 1335,
	371, 1335,
	372, 1335,
	373, 1335,
	374, 1335,
	376, 1335,
	377, 1335,
	378, 1335,
	379, 1335,
	380, 1335,
	381, 1335,
	382, 1335,
	383, 1335,
	384, 1335,
	385, 1335,
	386, 1335,
	387, 1335,
	388, 1335,
	389, 1335,
	390, 1335,
	392, 1335,
	393, 1335,
	395, 1335,
	396, 1335,
	397, 1335,
	398, 1335,
	399, 1335,
	400, 1335,
	401, 1335,
	402, 1335,
	403, 1335,
	404, 1335,
	405, 1335,
	406, 1335,
	407, 1335,
	409, 1335,
	411, 1335,
	412, 1335,
	413, 1335,
	419, 1335,
	420, 1335,
	422, 1335,
	423, 1335,
	424, 1335,
	425, 1335,
	426, 1335,
	427, 1335,
	428, 1335,
	429, 1335,
	430, 1335,
	431, 1335,
	433, 1335,
	434, 1335,
	435, 1335,
	437, 1335,
	438, 1335,
	439, 1335,
	440, 1335,
	441, 1335,
	442, 1335,
	443, 1335,
	445, 1335,
	446, 1335,
	447, 1335,
	448, 1335,
	449, 1335,
	450, 1335,
	451, 1335,
	452, 1335,
	453, 1335,
	454, 1335,
	455, 1335,
	456, 1335,
	458, 1335,
	459, 1335,
	460, 1335,
	461, 1335,
	462, 1335,
	463, 1335,
	465, 1335,
	466, 1335,
	467, 1335,
	468, 1335,
	469, 1335,
	470, 1335,
	472, 1335,
	473, 1335,
	474, 1335,
	475, 1335,
	476, 1335,
	477, 1335,
	478, 1335,
	479, 1335,
	481, 1335,
	483, 1335,
	484, 1335,
	485, 1335,
	486, 1335,
	487, 1335,
	488, 1335,
	489, 1335,
	490, 1335,
	491, 1335,
	492, 1335,
	493, 1335,
	494, 1335,
	495, 1335,
	496, 1335,
	497, 1335,
	498, 1335,
	500, 1335,
	501, 1335,
	503, 1335,
	504, 1335,
	506, 1335,
	507, 1335,
	508, 1335,
	509, 1335,
	510, 1335,
	511, 1335,
	512, 1335,
	513, 1335,
	515, 1335,
	516, 1335,
	517, 1335,
	518, 1335,
	519, 1335,
	521, 1335,
	523, 1335,
	524, 1335,
	525, 1335,
	526, 1335,
	527, 1335,
	528, 1335,
	530, 1335,
	531, 1335,
	532, 1335,
	533, 1335,
	535, 1335,
	536, 1335,
	539, 1335,
	540, 1335,
	541, 1335,
	542, 1335,
	543, 1335,
	544, 1335,
	545, 1335,
	547, 1335,
	550, 1335,
	551, 1335,
	552, 1335,
	553, 1335,
	554, 1335,
	555, 1335,
	557, 1335,
	558, 1335,
	559, 1335,
	560, 1335,
	561, 1335,
	562, 1335,
	567, 1335,
	568, 1335,
	569, 1335,
	570, 1335,
	571, 1335,
	572, 1335,
	-2, 0,
	-1, 1643,
	1, 557,
	601, 557,
	603, 557,
	605, 557,
	-2, 1570,
	-1, 1646,
	4, 2773,
	11, 2773,
	12, 2773,
	14, 2773,
	15, 2773,
	16, 2773,
	17, 2773,
	18, 2773,
	19, 2773,
	21, 2773,
	22, 2773,
	23, 2773,
	24, 2773,
	25, 2773,
	26, 2773,
	27, 2773,
	29, 2773,
	30, 2773,
	33, 2773,
	34, 2773,
	36, 2773,
	38, 2773,
	41, 2773,
	42, 2773,
	44, 2773,
	45, 2773,
	46, 2773,
	47, 2773,
	48, 2773,
	49, 2773,
	50, 2773,
	51, 2773,
	53, 2773,
	54, 2773,
	55, 2773,
	56, 2773,
	58, 2773,
	59, 2773,
	60, 2773,
	61, 2773,
	62, 2773,
	63, 2773,
	64, 2773,
	67, 2773,
	68, 2773,
	69, 2773,
	70, 2773,
	71, 2773,
	73, 2773,
	74, 2773,
	75, 2773,
	76, 2773,
	79, 2773,
	80, 2773,
	81, 2773,
	82, 2773,
	83, 2773,
	84, 2773,
	85, 2773,
	86, 2773,
	88, 2773,
	89, 2773,
	90, 2773,
	91, 2773,
	92, 2773,
	94, 2773,
	95, 2773,
	96, 2773,
	97, 2773,
	98, 2773,
	99, 2773,
	100, 2773,
	101, 2773,
	103, 2773,
	104, 2773,
	105, 2773,
	106, 2773,
	107, 2773,
	108, 2773,
	109, 2773,
	117, 2773,
	118, 2773,
	119, 2773,
	120, 2773,
	121, 2773,
	123, 2773,
	124, 2773,
	125, 2773,
	126, 2773,
	128, 2773,
	129, 2773,
	130, 2773,
	132, 2773,
	133, 2773,
	134, 2773,
	136, 2773,
	137, 2773,
	138, 2773,
	141, 2773,
	142, 2773,
	143, 2773,
	145, 2773,
	146, 2773,
	147, 2773,
	149, 2773,
	150, 2773,
	151, 2773,
	153, 2773,
	154, 2773,
	155, 2773,
	156, 2773,
	157, 2773,
	158, 2773,
	159, 2773,
	160, 2773,
	161, 2773,
	162, 2773,
	163, 2773,
	164, 2773,
	165, 2773,
	166, 2773,
	167, 2773,
	168, 2773,
	169, 2773,
	173, 2773,
	174, 2773,
	175, 2773,
	176, 2773,
	177, 2773,
	178, 2773,
	179, 2773,
	180, 2773,
	183, 2773,
	184, 2773,
	186, 2773,
	187, 2773,
	188, 2773,
	191, 2773,
	192, 2773,
	193, 2773,
	194, 2773,
	195, 2773,
	196, 2773,
	197, 2773,
	198, 2773,
	199, 2773,
	200, 2773,
	201, 2773,
	202, 2773,
	203, 2773,
	204, 2773,
	205, 2773,
	207, 2773,
	208, 2773,
	210, 2773,
	211, 2773,
	213, 2773,
	214, 2773,
	215, 2773,
	216, 2773,
	217, 2773,
	218, 2773,
	219, 2773,
	220, 2773,
	221, 2773,
	222, 2773,
	223, 2773,
	224, 2773,
	225, 2773,
	226, 2773,
	227, 2773,
	228, 2773,
	229, 2773,
	230, 2773,
	232, 2773,
	233, 2773,
	235, 2773,
	236, 2773,
	237, 2773,
	239, 2773,
	240, 2773,
	241, 2773,
	242, 2773,
	244, 2773,
	246, 2773,
	247, 2773,
	248, 2773,
	249, 2773,
	250, 2773,
	251, 2773,
	252, 2773,
	253, 2773,
	254, 2773,
	255, 2773,
	257, 2773,
	258, 2773,
	259, 2773,
	260, 2773,
	261, 2773,
	262, 2773,
	263, 2773,
	264, 2773,
	266, 2773,
	267, 2773,
	268, 2773,
	270, 2773,
	271, 2773,
	272, 2773,
	273, 2773,
	274, 2773,
	275, 2773,
	277, 2773,
	278, 2773,
	279, 2773,
	280, 2773,
	281, 2773,
	282, 2773,
	283, 2773,
	286, 2773,
	287, 2773,
	288, 2773,
	289, 2773,
	290, 2773,
	291, 2773,
	292, 2773,
	293, 2773,
	294, 2773,
	295, 2773,
	296, 2773,
	297, 2773,
	298, 2773,
	299, 2773,
	300, 2773,
	301, 2773,
	302, 2773,
	303, 2773,
	304, 2773,
	305, 2773,
	306, 2773,
	307, 2773,
	308, 2773,
	309, 2773,
	310, 2773,
	311, 2773,
	312, 2773,
	314, 2773,
	315, 2773,
	316, 2773,
	317, 2773,
	318, 2773,
	319, 2773,
	320, 2773,
	321, 2773,
	322, 2773,
	323, 2773,
	324, 2773,
	325, 2773,
	326, 2773,
	327, 2773,
	328, 2773,
	329, 2773,
	330, 2773,
	332, 2773,
	333, 2773,
	336, 2773,
	337, 2773,
	338, 2773,
	340, 2773,
	341, 2773,
	342, 2773,
	343, 2773,
	344, 2773,
	347, 2773,
	351, 2773,
	352, 2773,
	353, 2773,
	354, 2773,
	356, 2773,
	357, 2773,
	358, 2773,
	360, 2773,
	362, 2773,
	363, 2773,
	364, 2773,
	365, 2773,
	366, 2773,
	367, 2773,
	368, 2773,
	369, 2773,
	370, 2773,
	371, 2773,
	372, 2773,
	373, 2773,
	374, 2773,
	376, 2773,
	377, 2773,
	378, 2773,
	379, 2773,
	380, 2773,
	381, 2773,
	382, 2773,
	383, 2773,
	384, 2773,
	385, 2773,
	386, 2773,
	387, 2773,
	388, 2773,
	389, 2773,
	390, 2773,
	392, 2773,
	393, 2773,
	395, 2773,
	396, 2773,
	397, 2773,
	398, 2773,
	399, 2773,
	400, 2773,
	401, 2773,
	402, 2773,
	403, 2773,
	404, 2773,
	405, 2773,
	406, 2773,
	407, 2773,
	409, 2773,
	411, 2773,
	412, 2773,
	413, 2773,
	419, 2773,
	420, 2773,
	421, 2773,
	422, 2773,
	423, 2773,
	424, 2773,
	425, 2773,
	426, 2773,
	427, 2773,
	428, 2773,
	429, 2773,
	430, 2773,
	431, 2773,
	433, 2773,
	434, 2773,
	435, 2773,
	436, 2773,
	437, 2773,
	438, 2773,
	439, 2773,
	440, 2773,
	441, 2773,
	442, 2773,
	443, 2773,
	444, 2773,
	445, 2773,
	446, 2773,
	447, 2773,
	448, 2773,
	449, 2773,
	450, 2773,
	451, 2773,
	452, 2773,
	453, 2773,
	454, 2773,
	455, 2773,
	456, 2773,
	458, 2773,
	459, 2773,
	460, 2773,
	461, 2773,
	462, 2773,
	463, 2773,
	465, 2773,
	466, 2773,
	467, 2773,
	468, 2773,
	469, 2773,
	470, 2773,
	471, 2773,
	472, 2773,
	473, 2773,
	474, 2773,
	475, 2773,
	476, 2773,
	477, 2773,
	478, 2773,
	479, 2773,
	481, 2773,
	483, 2773,
	484, 2773,
	485, 2773,
	486, 2773,
	487, 2773,
	488, 2773,
	489, 2773,
	490, 2773,
	491, 2773,
	492, 2773,
	493, 2773,
	494, 2773,
	495, 2773,
	496, 2773,
	497, 2773,
	498, 2773,
	500, 2773,
	501, 2773,
	502, 2773,
	503, 2773,
	504, 2773,
	506, 2773,
	507, 2773,
	508, 2773,
	509, 2773,
	510, 2773,
	511, 2773,
	512, 2773,
	513, 2773,
	515, 2773,
	516, 2773,
	517, 2773,
	518, 2773,
	519, 2773,
	521, 2773,
	523, 2773,
	524, 2773,
	525, 2773,
	526, 2773,
	527, 2773,
	528, 2773,
	530, 2773,
	531, 2773,
	532, 2773,
	533, 2773,
	535, 2773,
	536, 2773,
	539, 2773,
	540, 2773,
	541, 2773,
	542, 2773,
	543, 2773,
	544, 2773,
	545, 2773,
	547, 2773,
	550, 2773,
	551, 2773,
	552, 2773,
	553, 2773,
	554, 2773,
	555, 2773,
	557, 2773,
	558, 2773,
	559, 2773,
	560, 2773,
	561, 2773,
	562, 2773,
	567, 2773,
	568, 2773,
	569, 2773,
	570, 2773,
	571, 2773,
	572, 2773,
	573, 2773,
	575, 2773,
	583, 2773,
	584, 2773,
	585, 2773,
	586, 2773,
	587, 2773,
	588, 2773,
	590, 2773,
	591, 2773,
	592, 2773,
	593, 2773,
	594, 2773,
	595, 2773,
	596, 2773,
	597, 2773,
	598, 2773,
	600, 2773,
	603, 2773,
	604, 2773,
	606, 2773,
	607, 2773,
	-2, 0,
	-1, 1651,
	190, 2654,
	520, 2654,
	585, 2654,
	604, 2654,
	-2, 0,
	-1, 1704,
	397, 896,
	463, 896,
	504, 896,
	525, 896,
	-2, 0,
	-1, 1715,
	1, 1407,
	601, 1407,
	603, 1407,
	605, 1407,
	-2, 0,
	-1, 1732,
	1, 891,
	601, 891,
	603, 891,
	605, 891,
	-2, 0,
	-1, 1733,
	1, 935,
	601, 935,
	603, 935,
	605, 935,
	-2, 0,
	-1, 1734,
	1, 943,
	601, 943,
	603, 943,
	605, 943,
	-2, 0,
	-1, 1737,
	1, 900,
	601, 900,
	603, 900,
	605, 900,
	-2, 0,
	-1, 1739,
	1, 906,
	601, 906,
	603, 906,
	605, 906,
	-2, 0,
	-1, 1742,
	1, 902,
	601, 902,
	603, 902,
	605, 902,
	-2, 0,
	-1, 1747,
	1, 916,
	601, 916,
	603, 916,
	605, 916,
	-2, 0,
	-1, 1778,
	1, 2637,
	601, 2637,
	603, 2637,
	604, 2637,
	605, 2637,
	-2, 0,
	-1, 1782,
	1, 990,
	601, 990,
	603, 990,
	605, 990,
	-2, 0,
	-1, 1799,
	1, 1457,
	605, 1457,
	-2, 1462,
	-1, 1802,
	172, 1613,
	185, 1613,
	276, 1613,
	345, 1613,
	-2, 1551,
	-1, 1902,
	152, 1572,
	172, 1572,
	185, 1572,
	243, 1572,
	276, 1572,
	345, 1572,
	355, 1572,
	537, 1572,
	-2, 2023,
	-1, 1963,
	603, 2198,
	-2, 0,
	-1, 1998,
	152, 1572,
	172, 1572,
	185, 1572,
	243, 1572,
	276, 1572,
	345, 1572,
	355, 1572,
	537, 1572,
	-2, 1705,
	-1, 2037,
	520, 2651,
	604, 2651,
	607, 2651,
	-2, 0,
	-1, 2054,
	602, 1846,
	-2, 1834,
	-1, 2086,
	190, 2651,
	604, 2651,
	607, 2651,
	-2, 0,
	-1, 2129,
	1, 702,
	605, 702,
	-2, 1462,
	-1, 2274,
	225, 262,
	-2, 2346,
	-1, 2275,
	225, 263,
	-2, 314,
	-1, 2384,
	1, 893,
	601, 893,
	603, 893,
	605, 893,
	-2, 0,
	-1, 2385,
	1, 937,
	601, 937,
	603, 937,
	605, 937,
	-2, 0,
	-1, 2386,
	1, 945,
	601, 945,
	603, 945,
	605, 945,
	-2, 0,
	-1, 2387,
	1, 992,
	601, 992,
	603, 992,
	605, 992,
	-2, 0,
	-1, 2428,
	1, 918,
	601, 918,
	603, 918,
	605, 918,
	-2, 0,
	-1, 2448,
	1, 975,
	601, 975,
	603, 975,
	605, 975,
	-2, 0,
	-1, 2495,
	442, 1640,
	443, 1640,
	-2, 1879,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1899,
	-1, 2527,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1900,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1901,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1902,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1903,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1904,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1905,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1906,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1918,
	-1, 2546,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1919,
	-1, 2547,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1920,
	-1, 2551,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1927,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1931,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1939,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1940,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1942,
	-1, 2736,
	5, 2350,
	190, 2209,
	602, 2347,
	-2, 2338,
	-1, 2737,
	190, 2210,
	-2, 2724,
	-1, 2738,
	190, 2211,
	-2, 2540,
	-1, 2739,
	190, 2212,
	-2, 2420,
	-1, 2740,
	190, 2213,
	-2, 2478,
	-1, 2741,
	190, 2214,
	-2, 2525,
	-1, 2742,
	190, 2215,
	-2, 2649,
	-1, 2743,
	190, 2216,
	-2, 2006,
	-1, 2814,
	1, 1706,
	2, 1706,
	106, 1706,
	152, 1706,
	172, 1706,
	185, 1706,
	191, 1706,
	209, 1706,
	212, 1706,
	239, 1706,
	243, 1706,
	254, 1706,
	272, 1706,
	276, 1706,
	315, 1706,
	345, 1706,
	349, 1706,
	355, 1706,
	432, 1706,
	436, 1706,
	537, 1706,
	548, 1706,
	564, 1706,
	565, 1706,
	566, 1706,
	576, 1706,
	601, 1706,
	603, 1706,
	605, 1706,
	607, 1706,
	-2, 1705,
	-1, 2827,
	602, 2319,
	-2, 2333,
	-1, 2829,
	1, 331,
	564, 331,
	-2, 1599,
	-1, 2859,
	602, 1845,
	-2, 1835,
	-1, 3048,
	1, 1310,
	427, 1274,
	465, 1274,
	579, 1274,
	601, 1310,
	603, 1310,
	605, 1310,
	-2, 1599,
	-1, 3223,
	350, 1643,
	-2, 2763,
	-1, 3224,
	350, 1644,
	-2, 2634,
	-1, 3228,
	442, 2275,
	443, 2275,
	-2, 2004,
	-1, 3229,
	442, 2279,
	443, 2279,
	-2, 2005,
	-1, 3230,
	442, 2276,
	443, 2276,
	-2, 2004,
	-1, 3231,
	442, 2280,
	443, 2280,
	-2, 2005,
	-1, 3244,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1929,
	-1, 3245,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1933,
	-1, 3251,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1935,
	-1, 3478,
	1, 697,
	601, 697,
	603, 697,
	605, 697,
	-2, 1462,
	-1, 3655,
	43, 2310,
	-2, 1062,
	-1, 3660,
	1, 1310,
	601, 1310,
	603, 1310,
	605, 1310,
	-2, 1599,
	-1, 3763,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1937,
	-1, 3770,
	248, 0,
	250, 0,
	336, 0,
	-2, 1956,
	-1, 3838,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1985,
	-1, 3839,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1986,
	-1, 3840,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1987,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1991,
	-1, 3845,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1992,
	-1, 3846,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1993,
	-1, 3894,
	602, 2320,
	-2, 2334,
	-1, 4088,
	604, 2880,
	-2, 1525,
	-1, 4142,
	248, 0,
	250, 0,
	336, 0,
	-2, 1957,
	-1, 4145,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1960,
	-1, 4146,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1962,
	-1, 4255,
	604, 2335,
	-2, 1345,
	-1, 4412,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1961,
	-1, 4413,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1963,
	-1, 4424,
	248, 0,
	-2, 1996,
	-1, 4610,
	248, 0,
	-2, 1997,
	-1, 4823,
	50, 0,
	222, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 2727,
}

const sqlPrivate = 57344

const sqlLast = 134972

var sqlAct = [...]int{
	274, 3644, 4763, 5005, 3133, 3382, 3120, 4868, 4762, 4884,
	4810, 4937, 4480, 4648, 4656, 4822, 2924, 4834, 4950, 4698,
	4719, 3643, 2271, 4794, 4773, 2098, 4776, 4753, 4835, 4891,
	4836, 4462, 2966, 4556, 4580, 1345, 1541, 2991, 2178, 4543,
	4251, 2348, 4527, 3803, 4374, 1262, 4614, 4821, 3904, 4125,
	4369, 1146, 3755, 4303, 4329, 3090, 1340, 3496, 4485, 2505,
	4433, 1093, 1568, 4401, 4080, 4072, 3677, 4356, 4683, 3499,
	2358, 4000, 4358, 4565, 712, 824, 4232, 1338, 4252, 4349,
	3237, 2769, 2360, 2574, 2925, 3557, 1811, 3671, 1084, 2111,
	4379, 1273, 3628, 2513, 4027, 3006, 4029, 4046, 784, 3502,
	4429, 2186, 1406, 824, 3708, 3632, 3633, 3104, 3710, 3109,
	1669, 3079, 3145, 2841, 3635, 1150, 2041, 3617, 3897, 3106,
	3610, 3609, 3428, 3397, 2321, 3435, 3388, 3405, 4124, 723,
	899, 4, 2356, 3365, 4181, 2260, 3140, 4869, 2506, 3135,
	1499, 903, 2258, 3055, 3364, 3386, 2198, 3521, 1348, 2510,
	2807, 2214, 268, 267, 3121, 3864, 1949, 821, 4615, 1910,
	1880, 2587, 1973, 1092, 182, 3221, 1506, 894, 2809, 3083,
	2806, 2259, 780, 2652, 111, 2254, 1343, 1607, 1139, 819,
	2242, 1253, 3023, 2235, 1387, 3091, 2166, 1143, 2170, 3139,
	2787, 2965, 1799, 2022, 2109, 1148, 1974, 1712, 2156, 2643,
	1317, 2494, 2571, 2477, 2842, 2475, 1644, 3114, 757, 1667,
	1331, 2308, 1610, 2948, 825, 2949, 826, 3636, 699, 972,
	1993, 2911, 721, 2766, 1374, 4720, 2654, 830, 833, 1570,
	2870, 1944, 2646, 2796, 1256, 2732, 2777, 1990, 1983, 1235,
	2698, 1270, 2042, 2624, 191, 1894, 1812, 1813, 765, 2476,
	1747, 2478, 192, 2268, 776, 830, 833, 1252, 182, 2307,
	920, 1328, 1642, 1635, 1732, 1537, 4885, 4938, 2334, 1507,
	2499, 1124, 716, 44, 43, 1258, 1233, 740, 41, 32,
	875, 30, 814, 713, 1818, 725, 28, 3274, 993, 1798,
	1547, 3878, 1265, 3879, 2100, 3268, 2100, 876, 3384, 3905,
	5016, 5008, 1738, 2100, 2786, 3696, 4831, 4453, 4450, 1826,
	1827, 2100, 1859, 1860, 1861, 1870, 1871, 1872, 1088, 4997,
	4996, 2100, 2100, 2786, 2786, 4970, 4968, 3687, 4447, 4484,
	4484, 1863, 1857, 4911, 4870, 1088, 3696, 2280, 4871, 1829,
	2121, 3686, 4860, 4858, 2280, 4855, 2786, 2786, 1876, 4856,
	4852, 4819, 2121, 3463, 4853, 2280, 3335, 3336, 4818, 4817,
	4808, 3236, 2280, 3150, 4484, 1882, 4806, 1250, 1089, 4803,
	4484, 4798, 4797, 4568, 1828, 4484, 4484, 4771, 4739, 4732,
	3460, 4484, 2850, 2786, 1848, 4731, 4724, 4697, 4694, 2786,
	2280, 2280, 4484, 1845, 4677, 2004, 4612, 3445, 4319, 4594,
	2850, 1236, 1236, 4109, 895, 4558, 4208, 4503, 4502, 4559,
	1078, 2280, 2280, 4491, 4490, 2118, 4483, 2280, 4484, 1268,
	4484, 4440, 4414, 1383, 4390, 2280, 2850, 1069, 3150, 1383,
	2872, 73, 4387, 898, 897, 1068, 3696, 4298, 4278, 4144,
	4096, 2786, 2786, 2850, 3703, 4090, 4043, 2121, 74, 3703,
	4044, 2786, 3889, 3887, 2357, 1678, 3890, 3888, 3871, 3787,
	3868, 3783, 2786, 2280, 79, 2786, 2649, 1287, 4740, 1513,
	1193, 1851, 1852, 1853, 1854, 2751, 1145, 4616, 3702, 3381,
	1083, 1834, 3703, 2786, 2118, 1549, 3376, 3375, 3326, 3324,
	2786, 2786, 3327, 3325, 3316, 3314, 3285, 3149, 3317, 2786,
	2786, 3150, 3335, 3336, 88, 3353, 3354, 3355, 3283, 3131,
	1237, 3130, 2895, 2344, 3284, 2344, 2786, 2121, 2849, 4607,
	1867, 2846, 2850, 1877, 4140, 2839, 4595, 4568, 3341, 2786,
	1856, 1858, 2831, 3150, 2785, 2343, 2280, 1122, 2786, 2344,
	1239, 3868, 1240, 3117, 1660, 901, 1873, 2779, 1874, 2778,
	1295, 238, 4367, 4319, 1288, 1843, 1844, 2118, 49, 2650,
	110, 4279, 2121, 4109, 4045, 2998, 94, 107, 2910, 2135,
	2786, 2099, 2115, 1865, 2191, 3085, 1288, 3350, 2279, 3016,
	2908, 1969, 1536, 3979, 3758, 3732, 3688, 3273, 1849, 1991,
	2247, 1714, 2600, 2601, 2602, 2619, 2620, 2621, 2823, 240,
	1826, 1827, 2822, 2821, 2820, 3689, 2681, 2819, 1241, 1238,
	1077, 1076, 2622, 1075, 1074, 1073, 1072, 1071, 1067, 1066,
	1065, 1064, 238, 1857, 1063, 94, 95, 1062, 1061, 3194,
	1829, 1060, 1059, 1058, 1875, 3351, 1057, 1056, 1549, 1055,
	2651, 1054, 2648, 1053, 1052, 1882, 1051, 239, 1826, 1827,
	1050, 1032, 1864, 970, 969, 968, 1882, 967, 966, 2101,
	232, 2101, 965, 1879, 2612, 1828, 964, 963, 2101, 233,
	240, 962, 961, 2608, 3341, 1848, 2101, 960, 1829, 959,
	3335, 3336, 958, 3353, 3354, 3355, 2101, 2101, 957, 956,
	955, 954, 953, 952, 951, 950, 193, 949, 948, 3099,
	947, 946, 4139, 945, 944, 943, 942, 941, 940, 939,
	1879, 938, 937, 1828, 936, 935, 924, 1264, 239, 1855,
	923, 1513, 4845, 2118, 2118, 2118, 922, 1549, 918, 917,
	910, 909, 908, 893, 892, 849, 848, 847, 846, 3357,
	837, 836, 1850, 835, 3686, 834, 800, 791, 790, 789,
	771, 2613, 2614, 2615, 2616, 3350, 262, 238, 1350, 1148,
	261, 2607, 1851, 1852, 1853, 1854, 260, 193, 4199, 1868,
	1288, 259, 1834, 99, 258, 257, 256, 255, 1266, 254,
	253, 3351, 252, 251, 250, 249, 1148, 1148, 1148, 3352,
	248, 247, 246, 3335, 3336, 4844, 245, 2118, 244, 2653,
	1881, 243, 242, 241, 1409, 240, 4156, 4381, 1409, 3914,
	3883, 3704, 3431, 3379, 3296, 1350, 3279, 1548, 3270, 3174,
	1834, 1856, 1858, 3065, 1952, 2854, 2828, 1952, 2813, 190,
	102, 1951, 2679, 106, 1951, 2617, 2618, 2121, 2467, 2882,
	1148, 2665, 1148, 4841, 1148, 2164, 2099, 1391, 1392, 1393,
	1378, 1573, 3341, 239, 2118, 3380, 1879, 2663, 1955, 238,
	2324, 1950, 4475, 1740, 2115, 2470, 232, 902, 2610, 1826,
	1827, 1866, 153, 238, 2120, 233, 2017, 1350, 1994, 1849,
	1921, 1840, 1841, 1847, 1869, 1846, 1842, 1520, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 1573, 1515, 1829,
	1912, 4166, 193, 1793, 1573, 4165, 1825, 240, 1543, 1395,
	238, 1272, 1561, 1148, 2647, 1148, 4820, 3357, 238, 4805,
	1573, 240, 3335, 3336, 4705, 3353, 3354, 3355, 1148, 4604,
	1148, 153, 157, 4619, 1828, 3352, 3344, 3345, 3337, 3338,
	3339, 3340, 3342, 3343, 3773, 2863, 1141, 194, 1919, 3101,
	4598, 1370, 1322, 1325, 1879, 239, 1616, 1619, 240, 3351,
	1335, 4428, 4388, 1527, 2778, 3341, 240, 1288, 232, 239,
	3335, 3336, 1372, 4596, 4366, 4214, 4179, 233, 1573, 4178,
	830, 833, 232, 4172, 1402, 4171, 1496, 1501, 4170, 4163,
	1525, 233, 4162, 4160, 4155, 3335, 3336, 3350, 1148, 238,
	1549, 1148, 1879, 4152, 896, 1249, 239, 4151, 4042, 3918,
	1855, 3917, 3916, 3893, 239, 4056, 4383, 1504, 3116, 232,
	1555, 3859, 2611, 3858, 3857, 1612, 3779, 232, 233, 3774,
	1364, 3426, 3372, 1850, 1879, 3363, 233, 3334, 3331, 3330,
	3328, 1834, 1539, 3323, 1538, 3335, 3336, 240, 3322, 3321,
	3318, 1605, 3315, 3295, 3278, 193, 3335, 3336, 1913, 3271,
	1911, 182, 182, 193, 5011, 1647, 1649, 3269, 3132, 1914,
	3350, 1089, 3351, 1683, 3347, 3348, 3349, 2814, 2636, 1825,
	1881, 3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343,
	3977, 1881, 1622, 2287, 3341, 239, 2285, 2420, 1824, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1378, 232, 1682,
	1378, 4057, 4959, 3352, 4958, 1664, 4883, 233, 1912, 4881,
	1274, 3805, 4764, 3377, 4682, 4668, 1645, 4664, 1560, 4663,
	4662, 4642, 1148, 4641, 4639, 4618, 4617, 4592, 1148, 2577,
	4578, 4575, 3341, 4574, 193, 4569, 4554, 1879, 4553, 1638,
	4499, 4470, 3100, 4426, 4409, 4408, 1356, 1803, 4352, 3357,
	1091, 2597, 2598, 2599, 2623, 2609, 2603, 3341, 2605, 2606,
	2604, 2591, 2592, 2593, 2594, 2595, 2596, 4345, 4342, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 4320, 39,
	4198, 3452, 4177, 1688, 4110, 3965, 3964, 3947, 3946, 3944,
	1756, 3351, 3874, 1508, 1659, 3862, 4621, 2680, 3769, 1899,
	3705, 3697, 3663, 3576, 3532, 1797, 3501, 3341, 3454, 1677,
	3300, 3299, 3294, 3260, 1540, 3078, 3352, 1958, 3341, 1957,
	1830, 1831, 1832, 1833, 1835, 1836, 1554, 1956, 1953, 1388,
	1945, 1943, 2861, 1148, 1148, 1148, 2860, 2825, 2818, 1148,
	2784, 2661, 3347, 3348, 3349, 1898, 1270, 2016, 1270, 3346,
	3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343, 1705, 4382,
	4057, 4620, 238, 1409, 3351, 1972, 1879, 1967, 2583, 1966,
	1965, 1964, 1963, 1962, 1148, 1961, 1741, 824, 1350, 1960,
	1959, 1940, 1939, 2059, 824, 1938, 1350, 1937, 1350, 1804,
	1936, 1935, 1934, 1933, 1932, 1931, 1089, 1265, 1930, 1265,
	1929, 2020, 1928, 1927, 1926, 4355, 3423, 1925, 1914, 1900,
	240, 1897, 1892, 2038, 3351, 1363, 1292, 1636, 1971, 1800,
	1980, 2088, 1283, 2090, 1808, 3351, 1807, 1069, 4210, 4148,
	3913, 3886, 3877, 3282, 2852, 1068, 2816, 1641, 2105, 1879,
	2028, 2107, 4448, 4212, 1954, 3352, 1802, 2112, 1350, 3335,
	3336, 2114, 3912, 1913, 1148, 2032, 2117, 238, 239, 2027,
	3450, 1821, 1822, 1895, 3345, 3337, 3338, 3339, 3340, 3342,
	3343, 232, 3692, 2012, 2001, 1390, 2155, 4281, 1148, 2155,
	233, 2155, 4956, 2123, 4949, 2992, 1409, 4665, 4570, 1879,
	1826, 1827, 4561, 1236, 4560, 2180, 1977, 1978, 2053, 4386,
	1879, 4323, 4322, 4321, 4280, 240, 4201, 193, 4115, 2153,
	1946, 1947, 4114, 182, 2325, 4113, 3335, 3336, 3352, 4112,
	1829, 4111, 1089, 2678, 1268, 3881, 1268, 3880, 1378, 830,
	833, 3707, 2664, 2970, 2033, 2127, 830, 833, 3706, 2162,
	1389, 2082, 3699, 1832, 1833, 1835, 1836, 2026, 2662, 3698,
	2126, 4837, 4474, 239, 4907, 1828, 2025, 4905, 1383, 1994,
	4060, 4566, 3756, 3991, 3320, 238, 232, 1952, 3352, 2002,
	1383, 2225, 3962, 1713, 1951, 233, 2021, 3319, 3242, 3352,
	1795, 1992, 1999, 2952, 3347, 3348, 3349, 1386, 2141, 3503,
	1704, 3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343,
	3535, 1970, 193, 1048, 3646, 4927, 3645, 3566, 2244, 3021,
	1923, 2349, 2103, 240, 4599, 1901, 1383, 4557, 4866, 4848,
	4833, 1996, 3618, 2011, 2010, 1573, 1573, 1757, 2009, 2007,
	1935, 2006, 3146, 1935, 1409, 1920, 2005, 4597, 1714, 2261,
	4050, 2262, 238, 2376, 3339, 3340, 3342, 3343, 1049, 4064,
	2129, 2039, 4039, 4430, 238, 3997, 3988, 3970, 3729, 1390,
	238, 239, 2649, 3476, 3346, 3344, 3345, 3337, 3338, 3339,
	3340, 3342, 3343, 2354, 232, 3384, 4266, 3807, 3288, 2644,
	4494, 4466, 3626, 233, 4263, 2859, 4842, 1640, 3341, 1968,
	240, 1948, 3013, 2318, 1615, 1248, 2221, 1532, 2229, 1359,
	1321, 238, 240, 4857, 4854, 238, 3682, 2239, 240, 3938,
	193, 2125, 3010, 3008, 3346, 3344, 3345, 3337, 3338, 3339,
	3340, 3342, 3343, 2224, 1389, 1692, 4657, 4370, 3337, 3338,
	3339, 3340, 3342, 3343, 4770, 2272, 2277, 4635, 239, 1573,
	4523, 1573, 3506, 1573, 3957, 888, 3113, 2158, 2148, 240,
	239, 232, 4843, 240, 2950, 2650, 239, 3601, 4908, 4909,
	233, 1573, 1573, 232, 2185, 1641, 2147, 2146, 4497, 232,
	2155, 2157, 233, 4493, 1573, 2197, 4472, 2996, 233, 830,
	833, 4942, 2230, 3750, 4010, 3480, 1573, 193, 1573, 1573,
	1573, 2130, 2264, 2265, 2448, 4268, 2445, 239, 1028, 193,
	1590, 239, 1582, 2896, 2266, 193, 1046, 2276, 2142, 1044,
	232, 5007, 824, 2231, 232, 1755, 2233, 1042, 3173, 233,
	2219, 4672, 1264, 233, 1264, 2434, 3057, 1040, 2375, 1534,
	1037, 4516, 2432, 2485, 1148, 4505, 2651, 2191, 2648, 2233,
	2314, 1539, 2914, 1538, 2233, 2319, 193, 1373, 2331, 2446,
	193, 4009, 889, 2056, 4312, 4311, 2914, 2912, 4296, 4008,
	4007, 2218, 2215, 3110, 3999, 3994, 3985, 3984, 2234, 1148,
	1879, 2912, 3982, 3981, 3451, 2238, 2447, 3969, 3933, 3932,
	3607, 3606, 3570, 1266, 3444, 1266, 1591, 2352, 3293, 2150,
	2380, 4262, 2278, 2483, 3292, 3291, 2339, 3290, 3246, 3019,
	3018, 3015, 4495, 4467, 3004, 1148, 4264, 1148, 1690, 2189,
	2994, 1754, 2469, 1089, 1148, 1089, 2986, 2059, 2059, 1409,
	1384, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 2300, 1148, 2299,
	1148, 1148, 1148, 1148, 830, 833, 2341, 2985, 1645, 2405,
	1645, 2362, 2328, 3564, 3503, 2481, 1384, 1638, 2980, 2336,
	2262, 2336, 1390, 2333, 2349, 2979, 1148, 2368, 4943, 2487,
	1148, 1148, 2337, 3482, 2474, 2653, 1364, 2853, 1148, 763,
	2927, 2345, 1148, 2346, 1148, 1148, 2152, 763, 2978, 2957,
	3534, 2956, 1409, 1753, 2918, 1640, 2840, 2558, 1148, 1148,
	1148, 1148, 1801, 1087, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 2053, 2053, 2367, 2694, 3343, 2974, 2693, 1355,
	1380, 2515, 2189, 2484, 2151, 1736, 2232, 1389, 4219, 2867,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 2395,
	2384, 2967, 2968, 1148, 2967, 2968, 2967, 2968, 2485, 2232,
	4282, 2625, 2626, 4224, 2232, 1270, 1628, 1836, 1627, 2844,
	2460, 3941, 1409, 2903, 3200, 2625, 2641, 4407, 1706, 1384,
	2428, 1270, 1736, 1626, 1586, 1625, 1380, 2644, 3337, 3338,
	3339, 3340, 3342, 3343, 1535, 2498, 4944, 1148, 1409, 2298,
	2647, 2385, 2689, 2954, 1086, 711, 2482, 2930, 4265, 2392,
	1546, 1034, 1553, 1385, 1559, 3730, 1265, 2457, 2483, 2465,
	2573, 2735, 2735, 2749, 3565, 2625, 4223, 1714, 2770, 2772,
	2471, 706, 1265, 2473, 2776, 2472, 2372, 2479, 2486, 2589,
	1794, 1307, 1735, 1069, 891, 890, 1069, 1069, 1733, 2511,
	2512, 2502, 1089, 2640, 2503, 2504, 1791, 2190, 4908, 1599,
	3012, 2573, 1089, 2386, 2227, 1770, 1089, 2801, 1685, 1385,
	2199, 1381, 2843, 4650, 3189, 3153, 1604, 2941, 2826, 2438,
	1382, 1714, 3234, 1658, 2459, 1663, 2187, 2830, 3203, 1735,
	1982, 2793, 3011, 2203, 3219, 1766, 4945, 4972, 1676, 1380,
	1681, 2581, 1350, 1350, 2426, 2940, 2216, 2001, 2579, 2877,
	1734, 1702, 3009, 3007, 2338, 2881, 1088, 762, 1236, 2585,
	2183, 2866, 1806, 2393, 3739, 762, 3738, 1381, 3479, 2892,
	3335, 3336, 1362, 3353, 3354, 3355, 1382, 2638, 2891, 4260,
	2389, 2383, 2869, 1268, 3191, 1409, 1611, 2653, 3796, 2188,
	2200, 2847, 2691, 2815, 2792, 1089, 2888, 2692, 4839, 1268,
	2695, 1691, 2696, 2697, 1752, 1739, 4019, 1749, 2484, 4627,
	933, 4310, 2191, 2885, 3966, 1986, 2744, 2865, 2184, 2731,
	2059, 2222, 1385, 2917, 182, 1378, 1686, 2761, 2913, 2774,
	2190, 2800, 2899, 2805, 2782, 2783, 2811, 2812, 4652, 1609,
	3954, 2798, 2799, 3983, 2794, 3350, 4947, 3980, 3921, 2929,
	1954, 3551, 3908, 2917, 2901, 1999, 3613, 3233, 1038, 2047,
	3605, 1038, 3202, 1989, 4020, 2217, 764, 2804, 1409, 1038,
	2893, 3257, 2012, 2569, 764, 3543, 2433, 2191, 1984, 1039,
	1381, 2482, 1038, 2431, 1350, 2159, 2160, 3562, 4406, 1382,
	2890, 2902, 2855, 3199, 4920, 1383, 1987, 3014, 2919, 2466,
	2204, 4953, 3255, 3052, 2567, 1148, 1148, 4018, 1148, 3552,
	2862, 2211, 2900, 2977, 2953, 2887, 2955, 2056, 2056, 2248,
	1946, 1947, 2188, 2876, 2255, 2194, 2916, 2879, 2456, 2880,
	3733, 2894, 824, 3544, 1350, 2053, 2284, 2283, 1085, 1985,
	2871, 2886, 3341, 4929, 2884, 798, 4736, 2653, 4973, 2189,
	4928, 1383, 3550, 2838, 1767, 886, 3005, 885, 2555, 3952,
	4896, 3053, 4130, 3082, 2959, 1573, 2205, 2206, 4247, 2212,
	2975, 3614, 2171, 3399, 4840, 3124, 3542, 2172, 1573, 2897,
	1573, 3679, 3197, 2195, 2944, 4129, 4258, 4748, 3141, 2171,
	1588, 2201, 3967, 3793, 2172, 2458, 2928, 1573, 2958, 3201,
	3680, 4261, 4240, 2990, 3051, 3226, 3227, 3357, 2100, 2922,
	1585, 2976, 2210, 2984, 2932, 2935, 2969, 2971, 2972, 2973,
	707, 1350, 2915, 1350, 4457, 3060, 2193, 4532, 3154, 3155,
	3062, 3020, 3048, 3097, 2391, 2202, 3049, 3050, 2249, 3161,
	3162, 3163, 4946, 2257, 3252, 1148, 2563, 3611, 2993, 3351,
	2245, 2982, 830, 833, 3490, 2981, 3175, 4241, 3176, 796,
	1988, 4658, 2960, 3093, 1383, 2988, 2983, 1306, 2564, 2008,
	2997, 3253, 3002, 2565, 3794, 3258, 4679, 2570, 1278, 4838,
	3177, 1264, 3089, 3679, 830, 833, 2213, 3144, 3147, 3087,
	1611, 2173, 4812, 1280, 4813, 1768, 2226, 1264, 3058, 3143,
	1986, 2256, 708, 3171, 3579, 3518, 3481, 4651, 2173, 2177,
	1764, 1148, 3138, 2228, 1539, 3151, 3063, 1148, 1148, 3248,
	1275, 3156, 761, 3157, 1879, 1941, 2177, 182, 2914, 3126,
	2553, 3128, 3076, 2556, 4734, 3598, 1715, 1533, 1080, 1290,
	1020, 3086, 1266, 2933, 2223, 4339, 4259, 2228, 1989, 2225,
	3448, 709, 4692, 710, 1035, 2245, 4951, 2207, 1266, 4895,
	2572, 2245, 3517, 2795, 1082, 3119, 1281, 3205, 3522, 3207,
	2171, 3129, 3398, 1148, 1148, 2172, 4876, 2226, 4735, 1148,
	4126, 1987, 2427, 2552, 2174, 2179, 4877, 2220, 1566, 3148,
	1769, 2181, 1148, 1148, 1645, 2580, 934, 4419, 1148, 1148,
	3127, 2174, 2179, 3352, 1148, 4684, 4918, 2190, 3168, 2241,
	1081, 1687, 3108, 2829, 4781, 4292, 1701, 1703, 4685, 2227,
	1765, 730, 3524, 3170, 3179, 3058, 3181, 1805, 3183, 3178,
	3185, 3186, 2208, 2653, 1279, 2635, 2240, 1361, 3180, 1891,
	3182, 1653, 3184, 3298, 4032, 2797, 2388, 2382, 4974, 1148,
	1148, 1148, 4686, 3195, 4030, 1148, 1021, 1668, 2810, 2252,
	3249, 3254, 3491, 2566, 4236, 1148, 4952, 2175, 4032, 4237,
	2236, 3256, 3214, 2568, 4403, 4533, 3612, 797, 4030, 4242,
	3225, 3953, 1148, 1088, 2175, 4961, 3523, 4531, 4359, 2173,
	2056, 3208, 3281, 4529, 3210, 3809, 4354, 3216, 3215, 2188,
	4120, 2224, 4954, 4445, 4315, 3909, 2989, 2177, 4360, 2498,
	1296, 1294, 3220, 4131, 3752, 1696, 2181, 2250, 4688, 3217,
	4699, 4239, 3235, 1720, 4055, 4786, 799, 4718, 2237, 3528,
	795, 3276, 3277, 2181, 4577, 3272, 3280, 4034, 4243, 4314,
	4528, 4687, 3347, 3348, 3349, 1988, 1982, 4313, 4078, 3346,
	3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343, 3667, 4689,
	2251, 4034, 4894, 3462, 2837, 4340, 2306, 4530, 4033, 838,
	3485, 1979, 1089, 2101, 1148, 1148, 1148, 1148, 3247, 2554,
	1293, 1286, 2174, 2179, 1148, 1148, 1148, 3526, 698, 1148,
	1816, 1815, 4033, 2047, 2047, 845, 4127, 1815, 2501, 1148,
	1270, 1409, 2192, 1026, 1025, 1148, 2143, 1148, 3391, 3392,
	1810, 3848, 925, 4492, 4175, 4402, 1270, 4586, 4979, 3497,
	3436, 4634, 4079, 4003, 3720, 2140, 3986, 3939, 3937, 3668,
	3527, 1986, 3659, 4875, 1409, 3493, 3899, 3718, 926, 3098,
	3092, 2934, 3080, 2332, 2326, 2320, 1270, 3711, 2312, 1409,
	1022, 1265, 1276, 2292, 2291, 3792, 4700, 1579, 3929, 1298,
	4028, 1350, 3287, 3753, 3863, 2175, 2961, 1265, 4238, 4754,
	3374, 2059, 2917, 2491, 4721, 1409, 2439, 770, 2136, 1989,
	4081, 4375, 4549, 3077, 1309, 1350, 3393, 4547, 4469, 1815,
	3900, 3429, 3509, 1350, 1984, 1814, 3443, 1265, 4132, 2176,
	2138, 1814, 3505, 3504, 3240, 1277, 3218, 4248, 4249, 2788,
	2169, 2373, 1987, 3876, 2181, 1148, 2176, 3901, 3396, 3898,
	3458, 3416, 3466, 3395, 4357, 3468, 3469, 2365, 3903, 1148,
	3472, 2355, 3473, 2180, 3474, 3430, 1743, 1742, 2289, 1350,
	1737, 4031, 3401, 2791, 2139, 2059, 3713, 2836, 3486, 3487,
	2835, 2834, 2421, 2833, 4404, 1985, 2832, 1634, 1891, 1632,
	932, 3712, 1148, 4038, 1816, 4031, 1086, 2180, 2167, 3507,
	1816, 3084, 3511, 1023, 4481, 4051, 3477, 1350, 1268, 3438,
	3439, 3440, 3441, 4133, 2790, 3434, 2053, 1378, 3422, 2789,
	3483, 3402, 3470, 1814, 1268, 3385, 3414, 3415, 1079, 1350,
	1024, 1350, 3417, 3418, 4645, 3400, 3849, 3369, 3370, 3371,
	4690, 2168, 2492, 4330, 1620, 3850, 4691, 3721, 4176, 839,
	840, 2244, 2938, 3508, 1268, 1409, 3513, 1621, 2244, 3515,
	4978, 3945, 2330, 3621, 1097, 4760, 1350, 4915, 4551, 3934,
	1350, 3464, 2962, 2963, 4455, 3582, 4454, 3584, 3494, 3056,
	3588, 3567, 1027, 3709, 3594, 3420, 4701, 3421, 3930, 3461,
	2053, 3446, 927, 928, 3537, 3152, 1573, 3261, 3262, 3061,
	1721, 1407, 3059, 2359, 2261, 1509, 1988, 1695, 3580, 1350,
	1573, 4482, 1573, 4464, 4477, 4476, 1409, 3492, 3560, 4767,
	4751, 4182, 4646, 824, 1573, 3865, 2660, 2176, 3471, 3467,
	4446, 911, 3541, 4205, 1787, 1573, 4788, 3455, 3456, 3478,
	3457, 4550, 4919, 3449, 3615, 3631, 4917, 1350, 1789, 3484,
	3577, 4859, 3902, 4675, 4666, 3540, 4761, 916, 1786, 3489,
	4465, 4452, 4425, 4216, 1270, 1784, 1761, 4174, 3675, 3407,
	3555, 4037, 3366, 3768, 3727, 3651, 3726, 3554, 2452, 3556,
	1759, 3525, 1731, 3141, 3437, 1729, 1727, 3533, 1725, 1573,
	1723, 1717, 3141, 2026, 842, 841, 2047, 769, 3673, 3539,
	3571, 1573, 3546, 1573, 3719, 3714, 3715, 3716, 3717, 3459,
	3329, 3549, 3547, 4647, 3590, 1265, 3548, 3500, 3596, 3259,
	3616, 3553, 3619, 1711, 3695, 3081, 3003, 1106, 2995, 3572,
	1633, 3666, 1631, 931, 3935, 3658, 3684, 2951, 2864, 3578,
	2461, 3603, 3591, 1709, 2984, 1630, 2350, 3563, 3403, 2019,
	1409, 2015, 3731, 1409, 1790, 3597, 1671, 4535, 3589, 843,
	844, 2430, 3595, 4513, 3425, 3408, 3669, 3367, 3993, 2397,
	3604, 2270, 3748, 3747, 1810, 830, 833, 3193, 3192, 3359,
	3360, 3361, 3362, 3159, 3741, 2480, 3608, 1148, 2959, 1748,
	929, 930, 2400, 1148, 1148, 3660, 2311, 1148, 1148, 1148,
	2290, 1148, 3623, 2089, 2087, 1924, 1264, 3654, 3602, 3676,
	1148, 2059, 1684, 4832, 3724, 3655, 3656, 3406, 3413, 1148,
	1603, 3581, 1264, 2659, 1148, 1036, 4293, 3720, 3990, 3989,
	1409, 3722, 4297, 4277, 4205, 4892, 1788, 3683, 3789, 1148,
	3718, 1089, 1268, 3746, 182, 182, 1785, 1409, 3693, 3694,
	3711, 3412, 1264, 1783, 1760, 3745, 3681, 2059, 2059, 1148,
	1148, 2454, 1148, 1148, 1148, 3690, 2453, 1266, 1758, 4750,
	1730, 2056, 3674, 1728, 1726, 4373, 1724, 4302, 1722, 1716,
	1148, 912, 913, 1266, 1148, 4290, 2059, 2059, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 3821, 1148,
	3822, 1710, 3725, 1266, 3781, 3782, 3742, 1148, 1148, 2059,
	2347, 4229, 4368, 4228, 1148, 3754, 2053, 3771, 3735, 4077,
	3736, 1708, 3737, 1629, 4068, 1148, 3751, 4006, 2361, 2363,
	3568, 3569, 3987, 3960, 2429, 2056, 1270, 1270, 3958, 3713,
	1148, 2366, 2396, 3936, 2269, 3662, 3657, 3647, 3409, 3410,
	3411, 3743, 3111, 2374, 3712, 2377, 2378, 2379, 272, 3103,
	3749, 3096, 2053, 2053, 3088, 3074, 3073, 3054, 2883, 2878,
	3776, 3778, 1409, 2288, 2286, 2263, 1041, 1043, 1045, 3895,
	2246, 2209, 2196, 2182, 3788, 1350, 1350, 1265, 1265, 2122,
	1020, 2053, 2053, 2119, 2116, 3860, 3811, 3804, 2113, 2108,
	1350, 1350, 2106, 824, 1350, 3795, 3797, 3798, 2102, 2093,
	3721, 3672, 4889, 3066, 1082, 3819, 3069, 3824, 3071, 3820,
	3906, 3907, 3592, 1148, 2053, 3826, 1245, 2255, 2031, 1819,
	3238, 4359, 4909, 3927, 2144, 3919, 3920, 3928, 3852, 3926,
	4644, 3211, 1148, 2132, 2133, 2464, 3209, 3882, 3861, 3047,
	3853, 4360, 1246, 4800, 4389, 4309, 4220, 3142, 2163, 3867,
	2018, 3799, 3872, 3873, 3115, 1584, 4588, 3115, 2914, 914,
	915, 2914, 2939, 1148, 1148, 4581, 4089, 3959, 2191, 3961,
	2329, 182, 1330, 2912, 3818, 2387, 2936, 3869, 3870, 2511,
	3812, 2462, 1781, 1782, 2424, 1329, 2419, 4799, 2394, 4269,
	1707, 4304, 2942, 4606, 4479, 4183, 1021, 4161, 3520, 1826,
	1827, 3884, 2943, 2964, 1268, 1268, 1823, 1148, 2511, 3827,
	1357, 1297, 4912, 266, 3940, 4903, 3239, 1826, 1827, 263,
	1264, 4867, 3885, 3072, 2943, 4065, 4002, 2463, 2313, 1573,
	1820, 3593, 1573, 1368, 3010, 3008, 3017, 1350, 3001, 3187,
	4005, 3856, 2999, 1110, 3971, 830, 833, 1829, 4001, 2945,
	3922, 3000, 2947, 1247, 4759, 1330, 2131, 3719, 3714, 3715,
	3716, 3717, 2059, 3975, 1828, 2946, 695, 4741, 3976, 3978,
	1330, 4712, 4706, 2165, 4643, 4572, 4542, 4456, 4075, 4067,
	4054, 1266, 1828, 3992, 3892, 3661, 3118, 2775, 3998, 2128,
	4004, 2040, 4948, 4478, 2987, 3968, 1531, 4790, 3963, 1530,
	4024, 3447, 4791, 4977, 1573, 3335, 3336, 1826, 1827, 4790,
	1148, 3915, 4708, 1513, 4791, 4153, 4021, 4022, 1270, 1148,
	2655, 4091, 4922, 3911, 4047, 2906, 2959, 2906, 2907, 1573,
	1573, 1573, 4098, 3124, 2904, 2905, 1573, 1573, 1573, 1694,
	4082, 2904, 2690, 1026, 1025, 1693, 4074, 4573, 1763, 4061,
	3141, 1762, 4517, 3764, 3765, 4306, 4301, 1573, 4300, 4149,
	3910, 2056, 4017, 1409, 3800, 3586, 4083, 3583, 4036, 1265,
	1918, 1917, 3213, 4102, 2468, 4086, 4049, 2053, 4965, 4026,
	4930, 4040, 4035, 4745, 4744, 4016, 4014, 4743, 4025, 1409,
	1022, 4053, 1148, 1148, 4085, 4674, 4673, 4623, 1148, 1148,
	2059, 4545, 4509, 1148, 1148, 4449, 1148, 2056, 2056, 4443,
	4347, 1148, 4327, 4267, 4211, 4105, 4095, 4071, 4106, 4041,
	3956, 2281, 1148, 3948, 3665, 3664, 3514, 2047, 4066, 4015,
	3465, 3198, 3190, 4069, 3167, 3166, 2056, 2056, 1148, 3165,
	4084, 3164, 3102, 3828, 3829, 3830, 3831, 3832, 3833, 3834,
	3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844,
	3845, 3846, 3847, 4093, 3851, 4116, 4097, 4118, 4134, 2056,
	4104, 4092, 4087, 3075, 4103, 2937, 2874, 2868, 2857, 2856,
	2845, 2584, 2455, 2425, 4135, 2418, 2417, 4147, 4117, 2416,
	2415, 2414, 2327, 2301, 2297, 2296, 1268, 2295, 2294, 1270,
	2293, 2047, 1264, 1264, 3500, 4128, 1156, 1270, 2096, 2095,
	2094, 1409, 1409, 1023, 1409, 2053, 4143, 2092, 2030, 1780,
	1779, 1270, 1718, 1598, 1597, 1596, 1595, 1594, 1593, 1592,
	1587, 1583, 1573, 1573, 1581, 1580, 1524, 1523, 1522, 1400,
	1024, 4188, 1399, 1398, 1397, 1409, 1396, 1360, 1316, 1315,
	1265, 1314, 270, 270, 270, 1313, 701, 702, 1265, 717,
	701, 717, 728, 1266, 1266, 768, 3429, 1312, 4123, 788,
	1311, 1310, 1265, 1308, 794, 1270, 1303, 1270, 1302, 4221,
	4222, 270, 1301, 1300, 1299, 4206, 4207, 1228, 4173, 900,
	8, 2134, 1027, 1047, 1033, 4209, 3995, 3996, 4649, 4246,
	1350, 4245, 907, 4244, 2451, 4270, 4191, 4193, 4215, 270,
	1409, 4218, 1350, 93, 4257, 1350, 1589, 4256, 862, 87,
	4253, 2253, 4253, 4180, 3955, 4184, 1265, 4187, 1265, 999,
	1409, 4272, 4273, 4189, 4185, 4186, 4190, 4787, 4678, 1564,
	4247, 870, 4769, 4197, 4063, 4200, 3516, 3022, 2399, 1719,
	2401, 4225, 3424, 4305, 2817, 4307, 182, 4733, 4157, 4204,
	4271, 3297, 4613, 4418, 2658, 1922, 3378, 4217, 1573, 1573,
	89, 1132, 1178, 4227, 4240, 4338, 4062, 1268, 4233, 4337,
	4230, 3942, 3634, 4334, 4333, 1268, 2044, 2046, 1096, 1412,
	4811, 4331, 2145, 1138, 2161, 4231, 1350, 2154, 2858, 1268,
	2734, 1155, 1152, 4291, 4235, 2048, 2514, 2050, 1409, 1154,
	1153, 2049, 1942, 1573, 1151, 2043, 4073, 4308, 3122, 3691,
	1639, 1637, 1001, 2149, 3160, 4299, 2578, 2642, 3286, 4241,
	1915, 1112, 2056, 1134, 2639, 1291, 1123, 4286, 1111, 701,
	701, 3404, 1573, 1573, 1573, 1573, 1573, 270, 4276, 4376,
	4325, 3383, 4362, 1268, 3678, 1268, 4289, 1409, 3891, 2490,
	4285, 880, 4328, 4288, 3332, 3529, 3530, 2645, 3531, 1148,
	1148, 1148, 1282, 4234, 4318, 4377, 4317, 4316, 2758, 4326,
	2750, 4336, 2746, 4324, 3475, 3112, 1796, 1409, 4343, 4332,
	4432, 4275, 1148, 4365, 1264, 1148, 1148, 1893, 3123, 2656,
	4353, 4344, 4380, 4371, 4284, 1148, 1792, 4287, 2059, 1394,
	4385, 1116, 2576, 1148, 1148, 1906, 3264, 2500, 3685, 3573,
	3574, 3427, 3575, 4364, 4378, 2851, 4793, 3808, 3196, 2305,
	1409, 1244, 1573, 1243, 1110, 1110, 1110, 2047, 1289, 1242,
	4775, 4772, 2243, 4341, 4361, 4392, 4410, 1350, 4391, 3629,
	3630, 2137, 1493, 4394, 2898, 1266, 1493, 2588, 3648, 4405,
	4398, 1128, 1518, 2443, 1409, 3389, 4052, 1600, 793, 4415,
	2056, 4486, 1148, 1140, 1878, 3043, 3042, 4638, 1379, 1377,
	1376, 4399, 4451, 2047, 2047, 1148, 1375, 4939, 3951, 3950,
	3949, 237, 3232, 1817, 1148, 2827, 1809, 234, 236, 2059,
	235, 4348, 3896, 3433, 4865, 3973, 3620, 23, 1148, 22,
	21, 1148, 2047, 2047, 4196, 116, 4438, 4439, 42, 20,
	155, 133, 152, 2053, 4427, 151, 4500, 4501, 1148, 4459,
	4421, 4460, 125, 150, 149, 1409, 4236, 148, 147, 1904,
	154, 4237, 1350, 1909, 4489, 2047, 146, 145, 140, 144,
	143, 4242, 1573, 1573, 1573, 142, 141, 4461, 139, 4518,
	137, 4520, 2180, 4521, 138, 4458, 132, 136, 4468, 1339,
	135, 134, 4508, 1270, 131, 1264, 130, 129, 128, 127,
	126, 124, 156, 1264, 123, 122, 121, 4534, 120, 119,
	118, 117, 4522, 4239, 781, 782, 61, 1264, 4544, 3631,
	60, 4548, 115, 113, 1409, 4563, 4511, 1573, 4506, 114,
	4243, 19, 4555, 4552, 2053, 4510, 40, 14, 4253, 1502,
	4295, 65, 1519, 1339, 1265, 66, 18, 13, 4519, 35,
	92, 105, 104, 103, 36, 101, 1266, 100, 34, 1148,
	1148, 17, 2909, 4582, 1266, 4537, 4536, 16, 15, 4587,
	98, 1264, 97, 1264, 96, 4567, 1148, 2059, 1266, 4546,
	4591, 33, 4593, 4539, 4540, 31, 11, 4526, 9, 4583,
	37, 2003, 12, 5, 4541, 4562, 4585, 187, 1350, 186,
	189, 1350, 185, 1350, 1350, 188, 4571, 91, 184, 183,
	4525, 90, 1339, 1339, 29, 10, 4584, 179, 4564, 4579,
	4590, 1148, 4380, 1148, 4059, 1148, 4589, 82, 181, 180,
	178, 177, 1266, 4622, 1266, 1270, 4624, 176, 4625, 4626,
	4602, 4603, 83, 80, 175, 86, 4633, 4601, 1148, 174,
	1270, 81, 85, 4512, 4524, 84, 27, 4605, 6, 64,
	4238, 4498, 7, 4400, 3728, 108, 109, 38, 78, 77,
	76, 1268, 75, 26, 63, 25, 173, 218, 217, 216,
	4253, 215, 214, 213, 212, 211, 1265, 4632, 206, 210,
	4661, 4628, 2053, 4611, 4631, 4253, 208, 207, 4670, 4248,
	4249, 1265, 4660, 209, 1270, 1270, 205, 228, 227, 221,
	220, 1148, 1148, 4653, 226, 4681, 225, 4654, 224, 223,
	222, 1148, 219, 231, 204, 203, 1270, 202, 2047, 1270,
	1284, 200, 196, 1573, 199, 201, 198, 197, 4441, 4669,
	4442, 195, 230, 1573, 4695, 4696, 229, 72, 171, 4253,
	4253, 4671, 172, 71, 170, 1265, 1265, 1148, 1148, 169,
	4676, 168, 167, 166, 1305, 165, 4715, 1148, 164, 4717,
	4693, 4253, 4703, 4704, 4253, 70, 270, 1265, 270, 270,
	1265, 1334, 270, 1344, 4729, 4567, 4730, 4710, 4707, 4702,
	4714, 4709, 24, 2, 1358, 4722, 1, 0, 2056, 4723,
	4424, 0, 788, 0, 0, 788, 4726, 0, 4725, 4728,
	0, 0, 0, 1268, 0, 1148, 1148, 4738, 0, 1148,
	0, 4746, 0, 1350, 0, 4727, 1350, 4742, 1268, 270,
	0, 270, 270, 1334, 4747, 270, 270, 0, 4737, 4749,
	1344, 1493, 4514, 0, 0, 0, 0, 4757, 4758, 4795,
	0, 4792, 4789, 0, 270, 0, 1542, 4765, 4784, 4796,
	0, 4785, 4774, 4777, 4766, 0, 2047, 4471, 0, 0,
	0, 0, 1562, 0, 0, 4783, 0, 4779, 0, 1577,
	4816, 0, 1268, 1268, 0, 1148, 1148, 1148, 0, 2056,
	0, 0, 0, 0, 0, 0, 4778, 0, 1602, 0,
	4782, 1344, 0, 0, 1268, 270, 270, 1268, 1334, 4814,
	4801, 0, 0, 3599, 0, 0, 0, 4807, 4815, 3335,
	3336, 1148, 3353, 3354, 3355, 4846, 0, 0, 0, 788,
	0, 270, 270, 4827, 4828, 4830, 4851, 4829, 0, 0,
	0, 3624, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 4847, 3652, 1672, 2180, 0, 1110, 4874, 907, 4861,
	4872, 4863, 4873, 0, 1493, 0, 0, 0, 0, 1264,
	0, 4880, 4882, 0, 1148, 0, 0, 0, 0, 4864,
	0, 2495, 1350, 4862, 0, 0, 4879, 0, 0, 4893,
	4544, 4878, 0, 0, 3350, 0, 0, 4887, 0, 4886,
	4888, 4070, 4910, 0, 0, 0, 3701, 4899, 4900, 4890,
	4849, 0, 0, 1519, 4902, 4906, 4904, 4901, 3723, 0,
	0, 0, 0, 0, 0, 0, 4926, 4913, 4914, 0,
	1266, 4924, 1270, 4916, 1270, 0, 270, 4925, 4795, 0,
	4921, 4935, 0, 0, 4933, 4923, 0, 2056, 0, 4932,
	4931, 4610, 0, 4774, 0, 0, 4777, 0, 0, 4941,
	270, 0, 1519, 0, 0, 0, 0, 4119, 0, 0,
	1350, 0, 4934, 4940, 4936, 0, 4962, 4253, 4955, 4253,
	0, 4957, 4964, 1265, 4963, 1265, 0, 4969, 0, 0,
	0, 3341, 4967, 0, 0, 0, 0, 0, 4637, 1148,
	1148, 4966, 4971, 0, 0, 4960, 0, 1148, 0, 1148,
	1148, 1264, 1493, 0, 4975, 4988, 4985, 0, 4987, 4990,
	4981, 0, 0, 4659, 4989, 4992, 1264, 2752, 0, 4995,
	0, 4994, 0, 4991, 4993, 0, 4984, 0, 0, 3124,
	0, 4998, 0, 0, 4999, 0, 5000, 0, 0, 5006,
	0, 5004, 5002, 0, 5010, 5001, 5003, 0, 0, 0,
	5009, 5012, 1148, 0, 0, 0, 5013, 0, 5015, 5006,
	5017, 1689, 1266, 1020, 0, 0, 0, 0, 3390, 0,
	1264, 1264, 0, 0, 0, 0, 0, 1266, 0, 0,
	4982, 4983, 1826, 1827, 0, 0, 0, 1082, 3351, 0,
	0, 0, 1264, 0, 0, 1264, 0, 0, 0, 0,
	1268, 3419, 1268, 0, 0, 1857, 0, 0, 0, 2582,
	0, 0, 1829, 0, 0, 0, 3432, 0, 0, 0,
	0, 0, 0, 0, 0, 1904, 0, 0, 0, 0,
	0, 1266, 1266, 5014, 0, 0, 0, 0, 1882, 0,
	0, 0, 3453, 1826, 1827, 0, 0, 1828, 0, 0,
	0, 701, 0, 1266, 0, 0, 1266, 0, 0, 0,
	0, 0, 0, 1879, 2047, 0, 1857, 0, 0, 0,
	0, 0, 270, 1829, 270, 0, 0, 0, 270, 1021,
	2757, 0, 0, 3335, 3336, 0, 3353, 3354, 3355, 0,
	0, 1542, 1334, 2023, 270, 0, 270, 2029, 0, 1882,
	0, 0, 0, 270, 0, 717, 0, 0, 1828, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4294, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 2317, 0, 0, 0, 0, 270, 0,
	0, 0, 3352, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 2047, 0, 0, 3350, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 788, 0,
	0, 0, 0, 0, 4346, 1863, 1857, 1493, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 4363, 0, 0,
	0, 0, 1876, 1856, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 1882,
	4384, 0, 0, 0, 0, 0, 1026, 1025, 1828, 0,
	0, 0, 0, 0, 0, 3038, 0, 0, 1848, 0,
	0, 3335, 3336, 0, 3353, 3354, 3355, 1845, 0, 0,
	0, 0, 0, 3432, 0, 3341, 4011, 0, 0, 4012,
	0, 1849, 0, 3772, 1856, 1858, 0, 0, 3030, 3028,
	0, 0, 0, 1022, 0, 3032, 3034, 3024, 0, 0,
	1493, 3347, 3348, 3349, 0, 0, 0, 0, 3346, 3344,
	3345, 3337, 3338, 3339, 3340, 3342, 3343, 3358, 1264, 2444,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 3350, 0, 3044, 0,
	3357, 0, 1849, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1493, 0, 0, 270, 0, 0, 4099, 4100, 4101, 1266,
	0, 1266, 3351, 2361, 4107, 4108, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 1493, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 1509, 0, 0,
	1407, 0, 0, 0, 0, 0, 1023, 1879, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 3341, 0, 1850, 270, 0, 0, 0,
	270, 0, 0, 1024, 0, 0, 270, 1865, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 1849, 0, 0, 3222, 0, 0, 270, 0,
	270, 0, 0, 0, 701, 0, 270, 0, 0, 3026,
	0, 0, 0, 0, 0, 0, 0, 3785, 788, 0,
	3040, 0, 907, 1881, 0, 1027, 1850, 0, 3357, 0,
	0, 0, 0, 0, 3801, 0, 0, 0, 1875, 0,
	0, 0, 3039, 3031, 3029, 3033, 3035, 3025, 3027, 3041,
	0, 270, 0, 1334, 270, 0, 1864, 0, 0, 3037,
	0, 0, 0, 0, 0, 0, 3352, 1879, 788, 0,
	3351, 0, 0, 1493, 0, 270, 2752, 2752, 0, 0,
	0, 0, 0, 2398, 1881, 0, 0, 0, 270, 270,
	0, 270, 3045, 270, 0, 270, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 4202,
	4203, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 2435, 1855, 801, 2436, 0, 2437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 0, 0, 1879, 1850, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 1493, 1339, 2757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 3894,
	0, 0, 788, 1868, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	1339, 0, 0, 4667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 3347, 3348, 3349, 0, 0,
	0, 0, 3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342,
	3343, 0, 4680, 0, 3352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2757,
	2757, 0, 806, 0, 0, 2361, 0, 0, 0, 818,
	0, 0, 4713, 0, 0, 0, 0, 0, 2752, 2752,
	2752, 2752, 0, 811, 0, 2590, 0, 0, 0, 0,
	0, 0, 3046, 0, 0, 1866, 0, 0, 0, 0,
	0, 3036, 0, 1502, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 3310, 0, 0, 0, 3311,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 4393,
	1519, 4395, 4396, 4397, 0, 0, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 808, 0, 0, 0,
	701, 0, 0, 3347, 3348, 3349, 0, 270, 0, 701,
	3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343, 0,
	0, 270, 0, 0, 0, 0, 4802, 0, 0, 0,
	0, 0, 4804, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 1344, 0, 0, 0, 0, 1826, 1827, 4444,
	0, 0, 0, 0, 817, 0, 0, 0, 0, 0,
	0, 2757, 2757, 2757, 2757, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 1344, 0, 0, 717, 0, 717, 0, 0, 0,
	2873, 0, 0, 1882, 0, 0, 270, 1519, 0, 270,
	0, 0, 1828, 270, 0, 270, 0, 0, 1339, 0,
	1334, 0, 270, 270, 0, 1344, 1344, 2889, 0, 0,
	803, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 807, 0, 0, 73, 0, 46, 45, 0, 4538,
	0, 1519, 0, 1519, 0, 0, 0, 0, 2926, 0,
	0, 74, 0, 0, 158, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 762,
	0, 0, 0, 270, 0, 0, 0, 0, 67, 0,
	0, 0, 0, 0, 813, 48, 270, 160, 0, 1834,
	805, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 47, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 4195, 0, 0, 50, 68, 0, 802, 1856, 1858,
	0, 0, 0, 51, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 161, 0, 0, 270, 3064, 0, 0,
	0, 49, 4213, 110, 809, 0, 0, 0, 0, 94,
	107, 0, 0, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 1542, 0, 0, 270, 0, 270, 804,
	0, 0, 0, 0, 0, 270, 1849, 0, 0, 1493,
	0, 0, 0, 73, 0, 3107, 0, 0, 0, 0,
	0, 52, 815, 816, 0, 2926, 0, 701, 0, 0,
	74, 0, 0, 0, 0, 0, 3136, 907, 2926, 95,
	0, 0, 1493, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 2752, 2752, 0, 0, 0, 0, 270, 1334,
	270, 1879, 0, 1493, 0, 0, 88, 0, 0, 0,
	1344, 270, 0, 0, 1334, 0, 1334, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 1110, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	49, 0, 110, 270, 270, 270, 270, 1334, 94, 107,
	1334, 0, 270, 0, 0, 0, 0, 270, 0, 0,
	1850, 0, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 0, 2752, 1407, 0, 99, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 4416, 0, 0, 0, 1881, 56,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 69, 2757, 2757, 0, 0, 0,
	0, 58, 190, 102, 0, 0, 106, 0, 0, 0,
	54, 0, 0, 0, 162, 0, 0, 4416, 0, 0,
	0, 0, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 1519, 1519, 0, 0,
	62, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	73, 2514, 0, 0, 1493, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 74, 0, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	240, 0, 1542, 79, 0, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 157, 2757, 0, 1519, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	194, 0, 2514, 88, 0, 0, 0, 0, 239, 0,
	0, 1826, 1827, 2317, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 232, 0, 1826, 1827, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 901, 0, 1857, 0, 0, 0,
	1876, 190, 102, 1829, 0, 106, 0, 193, 0, 110,
	3, 0, 0, 0, 0, 94, 107, 1882, 1493, 0,
	0, 1493, 0, 0, 0, 0, 1828, 0, 0, 1882,
	0, 238, 0, 0, 0, 0, 1848, 0, 1828, 902,
	0, 0, 0, 0, 153, 1845, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 270, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 95, 0, 701, 0, 240,
	0, 0, 701, 0, 0, 701, 0, 1339, 701, 701,
	0, 0, 0, 0, 701, 0, 0, 0, 1493, 0,
	0, 0, 270, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 4138, 270, 1493, 0, 0, 0, 194,
	0, 0, 0, 1851, 1852, 1853, 1854, 239, 0, 0,
	0, 0, 0, 1834, 0, 1851, 1852, 1853, 1854, 0,
	232, 0, 0, 0, 0, 1834, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 270,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 193, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 1519, 2926, 2926,
	270, 0, 2023, 0, 1856, 1858, 0, 0, 2926, 0,
	2029, 0, 2848, 0, 0, 0, 0, 1843, 1844, 2926,
	2029, 0, 2926, 2029, 0, 0, 2029, 0, 0, 1843,
	1844, 0, 99, 0, 0, 1865, 0, 0, 0, 0,
	270, 270, 2023, 0, 270, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1493, 0, 1849, 0, 2023, 0, 270, 0, 3559, 3559,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 1829, 190, 102,
	0, 0, 106, 0, 0, 2926, 0, 2926, 0, 3587,
	2926, 2023, 0, 0, 2926, 2023, 0, 0, 788, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 238, 0,
	0, 0, 1828, 0, 0, 1879, 902, 0, 0, 0,
	0, 153, 0, 0, 1334, 0, 0, 1879, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 3625, 0, 0, 3627, 2926, 240, 0, 270, 0,
	0, 0, 270, 0, 0, 1344, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 157, 0, 1855, 0, 3107, 0, 0, 1334, 0,
	270, 0, 0, 2926, 1850, 701, 194, 0, 0, 0,
	0, 0, 2926, 0, 239, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 1834,
	0, 1868, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 3734, 1881, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 1881, 0, 0, 0, 1856, 1858,
	1829, 3740, 0, 0, 1542, 0, 0, 1334, 270, 1876,
	270, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 270, 0, 0,
	0, 0, 0, 1866, 1845, 0, 1849, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1846,
	1842, 1493, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 3806, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2317, 73, 0, 0, 0, 0, 0, 0, 0,
	1981, 1867, 0, 0, 1877, 0, 2752, 0, 0, 74,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 79, 0, 1873, 0, 1874,
	1850, 0, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 701, 1493,
	1493, 0, 1493, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1881, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2757, 1862, 0, 0, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 49,
	0, 110, 0, 0, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 1864, 0, 0, 0, 1826, 1827, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 788, 0, 0, 0, 0, 0, 1829, 1493, 2757,
	0, 0, 0, 0, 0, 0, 0, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 95, 0, 0,
	2752, 0, 0, 1882, 3559, 1095, 0, 0, 0, 0,
	1855, 0, 1828, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 270, 0, 0, 2752, 717, 717,
	1344, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	1868, 0, 0, 270, 0, 0, 0, 1339, 0, 0,
	0, 0, 2752, 0, 270, 3107, 0, 0, 3107, 2029,
	0, 0, 0, 0, 270, 0, 0, 3767, 0, 0,
	0, 1881, 0, 0, 270, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 270, 1493, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 2926, 270, 0, 0, 0, 0, 2317,
	0, 0, 0, 3136, 3136, 1493, 0, 0, 0, 907,
	2926, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 2757, 0, 0, 0, 270, 1856, 1858,
	0, 1862, 1840, 1841, 1847, 1869, 1846, 1842, 1493, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 2633, 1843, 1844, 0, 2634, 0, 0, 0,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	2757, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	238, 0, 0, 0, 0, 2757, 0, 0, 902, 0,
	0, 0, 4158, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 157, 0, 270, 0, 0, 0, 0,
	0, 1542, 0, 270, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 239, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 1344, 0, 0, 233, 0,
	0, 0, 1493, 0, 0, 0, 0, 1855, 1344, 0,
	270, 1344, 1862, 0, 0, 0, 0, 0, 1862, 2926,
	2926, 0, 3559, 2926, 1862, 1650, 0, 0, 0, 0,
	1850, 4255, 0, 4255, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2926, 0, 2029, 0, 0,
	0, 1542, 1542, 270, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 270,
	2023, 0, 270, 0, 3559, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 2926, 0, 2926, 270, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 1862,
	0, 2926, 2926, 0, 0, 0, 0, 3107, 3107, 0,
	0, 0, 1862, 0, 4350, 0, 0, 1862, 0, 0,
	0, 0, 0, 88, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 1110,
	1110, 0, 0, 0, 901, 0, 0, 0, 1826, 1827,
	0, 1519, 0, 0, 1870, 1871, 1872, 49, 0, 110,
	0, 0, 1862, 0, 0, 94, 107, 0, 1862, 1353,
	0, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 1095, 1095, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 95, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 1110, 0, 0, 0, 0, 0,
	1544, 0, 1550, 0, 1556, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 2926, 2029, 1339, 2029, 0,
	0, 4463, 0, 0, 0, 79, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4487, 0, 4487, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 0,
	1851, 1852, 1853, 1854, 0, 88, 788, 0, 0, 0,
	1834, 1862, 0, 1656, 0, 1661, 0, 3559, 0, 1334,
	0, 0, 0, 0, 1862, 0, 0, 0, 1674, 0,
	1679, 0, 0, 0, 0, 0, 0, 2023, 0, 270,
	0, 0, 0, 0, 0, 0, 901, 0, 0, 1867,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 110, 99, 0, 0, 0, 4463, 94, 107, 4255,
	2756, 0, 1542, 0, 0, 0, 0, 0, 0, 2926,
	0, 0, 0, 1862, 1843, 1844, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 4576, 1744, 0,
	0, 1750, 1865, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 1849, 190, 102,
	0, 0, 106, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 270, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 902, 3806, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3559, 4630, 1826, 1827, 0, 0, 0, 0,
	0, 4463, 1879, 0, 0, 0, 240, 0, 0, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1857, 0, 0,
	0, 4255, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 4255, 0, 0, 0,
	0, 0, 1903, 0, 0, 0, 194, 0, 1916, 0,
	1882, 0, 0, 0, 239, 0, 0, 0, 1855, 1828,
	270, 0, 0, 0, 0, 0, 0, 232, 0, 1848,
	0, 0, 717, 0, 0, 0, 233, 0, 1845, 0,
	0, 1850, 0, 0, 99, 0, 0, 0, 0, 0,
	4255, 4255, 0, 0, 0, 0, 4350, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 1868, 0,
	0, 0, 4255, 0, 270, 4255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 1542, 0, 0, 1881,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1975, 1975, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 1344, 0, 1834, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 4755, 0, 902, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 4487, 0, 0, 270, 0, 0, 0, 2727,
	2728, 2729, 2730, 2723, 2724, 2725, 2726, 0, 0, 0,
	1866, 0, 0, 0, 0, 1856, 1858, 0, 240, 2926,
	0, 0, 0, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	1843, 1844, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 1849, 1180, 0, 0, 3806, 0, 232,
	2703, 2704, 2705, 2706, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 1542, 0, 2715, 2716, 2717, 2718, 2711, 2712, 2713,
	2714, 2719, 2720, 2721, 2722, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 4463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2699, 2700, 2701, 2702, 2707, 2708, 2709, 2710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 1862, 2926, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 4255, 0,
	4255, 0, 0, 1542, 0, 1862, 0, 1850, 0, 0,
	0, 0, 0, 0, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	0, 0, 0, 0, 0, 1862, 0, 1862, 1862, 1862,
	1862, 0, 0, 0, 0, 1881, 0, 0, 0, 2756,
	2756, 0, 0, 0, 748, 0, 0, 0, 3136, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 2926,
	0, 0, 0, 0, 731, 1271, 0, 0, 0, 732,
	0, 0, 0, 3136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 1862, 0, 0, 1862, 0,
	735, 1862, 0, 0, 1862, 0, 0, 0, 0, 0,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 0, 0, 0,
	0, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2422, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 3356,
	0, 2756, 2756, 2756, 2756, 0, 0, 0, 1862, 0,
	1862, 738, 0, 0, 739, 1862, 0, 0, 0, 2449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2489, 753, 2493, 0, 0,
	0, 0, 0, 0, 2507, 0, 0, 0, 0, 0,
	0, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 0, 2557, 0,
	2559, 2560, 2561, 2562, 750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 2586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1903, 1857,
	0, 0, 2637, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2667, 2670,
	2673, 2676, 0, 0, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 0, 1882, 0, 0, 760, 0, 741, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 2748, 0, 2760, 2762, 2767, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 761, 0, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 3762, 743, 0, 0,
	0, 0, 758, 759, 756, 0, 0, 0, 0, 0,
	751, 0, 0, 744, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1862, 0, 1862, 0,
	0, 0, 0, 0, 0, 745, 0, 752, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1858, 747,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 1271, 0,
	0, 0, 1271, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1271, 0, 1828, 0, 1144,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1862, 0, 2756, 2756, 0, 0, 1862,
	0, 1271, 0, 0, 0, 269, 269, 269, 1271, 3356,
	3356, 0, 0, 1862, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1271, 3067, 3068, 0, 3070, 0,
	0, 0, 3761, 0, 831, 0, 1855, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 1850,
	0, 0, 831, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 0, 2756, 3356, 3356, 3356,
	3356, 0, 0, 1856, 1858, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3188, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1267, 0, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 1884, 0,
	0, 0, 1826, 1827, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1862, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3244, 3245, 0, 0, 0, 1882, 3251,
	0, 0, 1855, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 3265, 3266,
	0, 0, 0, 0, 2637, 1850, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 1271, 0, 0, 0, 0, 0, 0, 3275,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 3250, 1881, 0, 3289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 3301, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 2767, 2767, 2767, 1862, 1862, 0,
	0, 1862, 3356, 3356, 1862, 0, 0, 0, 1862, 1975,
	0, 1849, 0, 0, 0, 1862, 0, 3394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1862, 1862, 1862, 1862, 0, 0, 0, 0,
	0, 1862, 0, 1862, 0, 0, 3356, 3356, 3356, 3356,
	3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
	3356, 3356, 3356, 3356, 3356, 3356, 1879, 0, 0, 3356,
	0, 0, 1862, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 0, 1271,
	1271, 0, 0, 0, 0, 0, 0, 0, 1271, 1095,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 1862,
	0, 0, 3519, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 269, 269, 0, 0, 269, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 1271, 0, 1271, 0, 0,
	0, 0, 269, 0, 269, 269, 0, 0, 269, 269,
	0, 0, 0, 0, 0, 1271, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 831, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 1271, 1271, 1271, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 269,
	0, 1882, 1862, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 269, 269, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 1862, 0, 0, 0, 1862,
	1862, 0, 0, 1862, 1862, 0, 0, 0, 1862, 0,
	0, 0, 1862, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2756, 0, 0, 3243, 0, 0, 0, 0,
	0, 2060, 2060, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 2507, 0, 0,
	0, 0, 0, 3759, 3760, 0, 0, 3763, 0, 2756,
	0, 3766, 0, 269, 0, 0, 0, 0, 0, 0,
	3770, 0, 0, 0, 0, 0, 1856, 1858, 0, 3777,
	0, 0, 0, 0, 3394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 3790,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3813,
	3814, 0, 3815, 3816, 3817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	3823, 0, 0, 0, 3825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 3854, 3855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 3866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	3875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	1862, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 1862, 3356, 2756, 0, 0, 0, 0, 0, 1862,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1997, 0, 1267, 1850, 3356,
	2756, 269, 0, 3931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 269, 1997, 269,
	0, 0, 3943, 0, 1862, 2756, 831, 0, 0, 0,
	0, 0, 1862, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 3972, 0, 1881, 0, 0, 1826,
	1827, 269, 1859, 1860, 1861, 1870, 1871, 1872, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 2060, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 1848, 0, 0, 0, 3356, 0,
	0, 1846, 1842, 1845, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 3356, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 4094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 1271,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 1271, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 269, 1877, 0, 0, 831, 0, 0, 0,
	1856, 1858, 4136, 4137, 0, 0, 0, 0, 4141, 4142,
	0, 0, 0, 4145, 4146, 0, 1873, 0, 1874, 748,
	0, 4150, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 4154, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 1865, 732, 0, 0, 0, 4159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 269,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 1862, 269, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 269, 734, 0, 0, 0, 1862, 269,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 754, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 269, 737, 269, 0, 269, 0, 269, 1855,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 739,
	0, 0, 1850, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 763, 0, 1862, 0,
	0, 0, 269, 269, 269, 269, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 4164, 0, 0, 0, 4411,
	4412, 4413, 741, 0, 1271, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 2507, 0, 0, 4422, 4423, 0, 0, 0,
	0, 761, 0, 742, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 4431, 4434, 0, 0, 0, 0, 0,
	1271, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 2060, 0, 0, 0, 1271,
	1267, 0, 743, 0, 0, 0, 0, 758, 759, 756,
	0, 0, 0, 0, 269, 751, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 4488, 0, 0, 0, 0,
	0, 0, 0, 0, 4496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4504, 0,
	745, 1095, 752, 0, 0, 0, 0, 0, 0, 2060,
	746, 0, 0, 0, 0, 0, 0, 0, 4515, 0,
	0, 0, 0, 269, 747, 0, 0, 0, 0, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 269, 764, 0, 0, 269, 0, 269, 0,
	0, 0, 0, 0, 749, 269, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 1882, 0, 269, 0, 0, 0,
	0, 0, 0, 1828, 1271, 0, 1271, 0, 0, 269,
	1271, 0, 0, 1848, 0, 0, 0, 0, 1271, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 4636, 0, 0, 0, 4640, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 1271, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 269,
	1834, 831, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 1095, 0, 1271, 0, 0, 1271, 0, 1867,
	0, 4711, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1873, 0, 1874, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 2507, 0,
	0, 269, 0, 269, 0, 0, 0, 4434, 0, 0,
	0, 0, 1865, 0, 269, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 1095, 0, 0, 0,
	0, 2060, 2060, 0, 0, 0, 269, 269, 269, 269,
	0, 0, 0, 1875, 0, 269, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 271, 0, 271, 271, 0, 269,
	271, 0, 0, 2060, 0, 4826, 4826, 4826, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 1271, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 4850, 0, 0, 0, 0, 0, 271, 1413, 271,
	271, 0, 1413, 271, 271, 0, 0, 0, 265, 265,
	697, 1850, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 4826, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 1413, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 853, 4826,
	4976, 0, 1413, 854, 0, 0, 0, 4980, 0, 0,
	0, 0, 0, 1271, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 872, 0, 2060, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 856,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 1997, 881, 0, 0, 0,
	0, 0, 1271, 858, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 1271, 1271, 1271, 0, 879, 0, 0,
	1271, 1271, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 852, 0, 0, 0, 0, 1271, 269, 0,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 0, 860, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	883, 0, 0, 269, 2060, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 269, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 1997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 271, 0, 0, 0,
	0, 1271, 0, 0, 0, 1271, 1271, 1413, 1271, 0,
	0, 0, 271, 271, 271, 1271, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 1271, 1271, 271, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 1271,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 831, 0, 0, 0, 271, 0, 0, 0,
	0, 269, 0, 271, 0, 269, 0, 0, 0, 1271,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 1271, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 850, 0, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 0, 0, 0, 0, 0, 1133,
	112, 269, 0, 269, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 867, 886, 0, 885, 0, 0, 868,
	0, 0, 1271, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 878, 0,
	269, 0, 0, 0, 887, 0, 884, 0, 0, 0,
	0, 0, 764, 0, 0, 0, 1271, 1271, 1271, 1271,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1320, 0, 1320, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1413,
	1413, 271, 0, 0, 112, 0, 0, 0, 1413, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 1404, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 1070, 0, 0, 0, 271, 0, 271, 0,
	0, 0, 0, 1090, 271, 1267, 1267, 0, 0, 0,
	0, 0, 0, 1413, 0, 1413, 0, 1413, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 1413, 1654, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 271,
	1254, 0, 271, 0, 0, 0, 0, 0, 0, 1271,
	1413, 0, 1413, 1413, 1413, 0, 0, 0, 0, 0,
	0, 0, 831, 271, 0, 0, 1271, 1271, 1271, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 271,
	0, 271, 0, 271, 0, 271, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 1271, 0, 0, 0, 0, 0, 271, 271, 271,
	271, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 269, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 269, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 1271, 0, 0, 0, 1271, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1320, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 271, 0, 0, 271, 0, 0,
	0, 271, 0, 271, 0, 0, 0, 0, 1267, 0,
	271, 271, 0, 0, 0, 0, 1267, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 1997, 0, 1997, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 271, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1413, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1271, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	112, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 271, 0, 269, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 112, 112, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 112, 1413, 112, 0, 0, 0, 0,
	0, 0, 2303, 0, 0, 0, 2310, 271, 112, 0,
	112, 1413, 0, 0, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 271, 0,
	0, 0, 0, 0, 2335, 0, 2335, 0, 0, 271,
	0, 0, 2342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2310, 0, 0,
	2370, 271, 271, 271, 271, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 2390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 2406, 0, 2408, 0, 2410,
	0, 2412, 0, 2413, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 2440, 2441, 2442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 269, 1896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1902, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 1997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 1998, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 1997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 1997,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 2824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1997, 1997, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 1413, 0,
	0, 0, 0, 0, 0, 1997, 0, 269, 1997, 0,
	0, 1863, 1857, 1413, 0, 0, 0, 0, 0, 1829,
	0, 0, 271, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 2875, 0, 1828, 1320, 0, 0, 0, 1320,
	0, 1320, 0, 271, 1848, 0, 0, 271, 271, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 269, 271,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	1413, 0, 0, 0, 0, 1843, 1844, 0, 0, 271,
	0, 0, 0, 0, 1413, 0, 1413, 0, 0, 0,
	1413, 0, 0, 1865, 0, 0, 0, 271, 1413, 0,
	0, 0, 2310, 0, 0, 0, 271, 0, 1849, 1413,
	271, 2323, 0, 0, 0, 0, 0, 1410, 1090, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1997, 0, 1997, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 3158, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 1413, 0, 1413, 0, 0,
	0, 0, 0, 1879, 3169, 0, 3172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 271, 1413, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 3204,
	1517, 3206, 1517, 0, 0, 0, 0, 0, 3212, 0,
	0, 0, 1850, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 1868,
	0, 1070, 1070, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 3241, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 1574,
	1574, 1902, 0, 1411, 0, 0, 0, 1411, 1410, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 3775, 0, 0, 0, 0,
	1575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1254, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 1575, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 1574, 0, 1574, 0, 1574, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 1574, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 1574, 1574, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 1413, 0, 0, 0,
	3442, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 1320, 271, 1410, 0, 1517, 1517, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 3488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1413, 1413, 0, 0, 0, 0,
	1413, 1413, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3536, 3538, 0, 0,
	2323, 1413, 0, 112, 0, 271, 112, 1413, 112, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 112, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3649, 0, 0, 0, 3653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 1413, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 3744, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 271, 0, 1410,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 2575, 0, 0, 0,
	0, 0, 0, 3757, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 271, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 1575, 1575, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 1413, 1413, 1413,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 1413, 0, 1413, 0, 1575, 0,
	1575, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1254,
	1575, 1575, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 1575, 0, 1254, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 1575, 0, 1575, 1575, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 1413, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	2323, 1413, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 112, 112, 0, 112, 2323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4048, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	4058, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 2323, 0, 0, 0, 0,
	4076, 0, 0, 1863, 1857, 0, 0, 0, 0, 112,
	112, 1829, 112, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 1411, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 4121, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	112, 112, 271, 1851, 1852, 1853, 1854, 1413, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 0, 1410, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 1873, 0,
	1874, 0, 0, 271, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4274,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 112, 0, 1410,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 1863,
	1857, 2323, 0, 0, 0, 1254, 1254, 1829, 0, 0,
	0, 4372, 0, 0, 1850, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 1868, 1828, 0, 1574, 0, 1574, 0, 0, 0,
	1410, 0, 1848, 0, 0, 0, 0, 823, 1574, 0,
	0, 1845, 0, 0, 1575, 0, 0, 0, 0, 1574,
	0, 0, 1881, 0, 0, 0, 0, 1575, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 1574, 0, 1851,
	1852, 1853, 1854, 1866, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 4473, 3313, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 1410, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 112, 0, 4600,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	1850, 0, 1876, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 1868, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 823, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 1254, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 1851, 1852, 1853, 1854, 1866,
	0, 0, 0, 0, 0, 1834, 0, 0, 1411, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 3312, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1867, 0, 1574, 1877, 0, 0,
	0, 4768, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4809, 1849, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 1574, 1574, 1574, 0, 0, 0, 0,
	1574, 1574, 1574, 0, 0, 0, 0, 0, 1875, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 1864, 1410, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 1575,
	0, 1575, 0, 1855, 0, 1411, 0, 0, 1863, 1857,
	0, 0, 0, 1575, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 1575, 1876, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 1881, 1410, 1410, 0, 1410, 0,
	1575, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 1411, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1866, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 1410, 0, 0, 0, 0, 3309,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 0, 0, 0, 1410, 0, 0, 1856, 1858, 0,
	0, 0, 0, 0, 0, 0, 2575, 0, 0, 1411,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1411, 0, 0, 0,
	0, 0, 1574, 1574, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 1875, 0, 0, 0, 0, 1574, 1574, 1574, 1574,
	1574, 0, 1863, 1857, 0, 0, 0, 0, 0, 1864,
	1829, 1410, 0, 0, 0, 0, 0, 0, 0, 1876,
	1879, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 1410, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 1411, 112, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 112, 0, 1410, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 1574, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 112, 1873, 1575, 1874,
	0, 1575, 112, 0, 0, 0, 1843, 1844, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 1865, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 1410, 1849,
	0, 1574, 3308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 1575,
	1575, 0, 0, 1864, 0, 1575, 1575, 1575, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 1411, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 1850, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	1868, 1828, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 1863, 1857, 0, 1574, 0, 0,
	0, 1881, 1829, 0, 0, 0, 0, 1574, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	1411, 1411, 0, 1411, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1575, 1575, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 1851, 1852,
	1853, 1854, 1866, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 3307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 1411,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 1873, 1834, 1874, 0, 0, 0, 1411,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 1849, 1877, 1575, 1575, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 1875, 1575, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 1575, 1575, 1575, 1575, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 1866, 0,
	0, 1575, 1575, 1575, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 2634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 1408, 4756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 1575, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 1575, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 2802,
	0, 0, 0, 0, 0, 0, 0, 2803, 279, 281,
	280, 282, 283, 284, 285, 1414, 286, 287, 1415, 1416,
	1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 1423, 648, 298, 299, 300, 301,
	302, 303, 1424, 1425, 0, 304, 649, 650, 651, 1426,
	305, 306, 652, 1427, 1494, 1428, 307, 308, 309, 310,
	311, 312, 313, 0, 1429, 315, 316, 317, 314, 318,
	1430, 319, 0, 320, 321, 322, 323, 324, 325, 1431,
	326, 327, 328, 1212, 329, 330, 331, 1432, 1433, 1435,
	1434, 1436, 1437, 1438, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 1439, 342, 338, 340, 1440, 343,
	341, 344, 1441, 345, 346, 347, 1442, 1443, 348, 349,
	350, 1444, 351, 352, 353, 1445, 354, 355, 356, 1446,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 1447, 276, 1448,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 661, 1453, 662, 391, 1454,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1456, 1214, 407, 666, 667,
	1457, 668, 1458, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1459, 420, 422, 421, 1460, 423, 670, 1219,
	424, 425, 1220, 1461, 426, 427, 428, 429, 430, 431,
	434, 1462, 1463, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1464, 278, 1223, 477, 478, 1465, 671, 479, 672,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 1474,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1475, 568, 569, 567, 570, 571,
	572, 1476, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1477,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1478, 600, 601, 0,
	597, 588, 1479, 602, 603, 604, 605, 606, 607, 608,
	609, 1480, 610, 684, 685, 686, 687, 1481, 619, 1482,
	611, 612, 613, 688, 614, 689, 1483, 615, 616, 617,
	618, 0, 620, 621, 1484, 1485, 622, 623, 624, 626,
	627, 625, 628, 1486, 629, 1487, 0, 630, 631, 632,
	690, 691, 692, 1488, 634, 633, 635, 693, 636, 637,
	1489, 1490, 1491, 1492, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 3784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3786, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4194, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4192, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4417, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4283, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4122, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3802, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3622, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2657, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	1505, 0, 1408, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	1511, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 1512, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	1510, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 1405, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 2632, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2629, 286, 287,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 2630, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 2628, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 2631, 0, 0, 0, 0, 0,
	0, 1131, 2627, 0, 1091, 1129, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 238,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 240, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 1646, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 232, 638,
	639, 694, 640, 641, 642, 1105, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1907, 1905, 0, 0, 1129, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	238, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 240, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 1646, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 232,
	638, 639, 694, 640, 641, 642, 1105, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 1907, 3263, 0, 0, 1129,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1171, 1135, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 1184, 0, 296, 1191, 297,
	1190, 0, 1201, 298, 299, 300, 301, 302, 303, 1137,
	1170, 1102, 304, 1231, 1232, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 1194, 337, 339, 1188,
	1187, 1107, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1179, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1113,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 1126, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1186, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 1199,
	1200, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 1136, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 1181, 1182, 0, 1142, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1104, 278,
	1223, 477, 478, 1127, 1175, 479, 1189, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 1114,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1185, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 1115, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 238, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 1183, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1230, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 1101, 597, 588, 240,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	1195, 1196, 1197, 1198, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 1125, 615, 616, 617, 618, 0, 620,
	621, 0, 1108, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 1646, 1192, 1229,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	232, 638, 639, 694, 640, 641, 642, 1105, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1907, 1905, 0, 0,
	1129, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 2763, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 2768, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 2764, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 2765, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 2677, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 0, 0, 0, 0, 0, 0,
	0, 1131, 2675, 0, 2674, 1129, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 0, 0,
	0, 0, 0, 0, 1131, 2672, 0, 2671, 1129, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 0, 0, 0, 0, 0, 0, 1131, 2669, 0,
	2668, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 0, 0, 0, 0, 0, 0,
	1131, 2666, 0, 1746, 1129, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 1745, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 1094, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 1109, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 4780,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 1109, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 2509, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 2508, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 1109, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 4507, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	1109, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	4088, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	1976, 0, 0, 0, 0, 0, 0, 1131, 0, 0,
	0, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 3780, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 1976, 0, 0,
	0, 0, 0, 0, 1131, 0, 0, 0, 1129, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 2768, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 0, 0, 0, 0, 0, 0,
	0, 1131, 1905, 0, 2773, 1129, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 2771, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 2759, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 2747, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 279, 281, 280, 282, 283,
	284, 285, 1131, 286, 287, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 1184, 0, 296, 1191, 297,
	1190, 0, 1201, 298, 299, 300, 301, 302, 303, 1137,
	1170, 1102, 304, 1231, 1232, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 1194, 337, 339, 1188,
	1187, 1107, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1179, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1113,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 1126, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1186, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 1199,
	1200, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 1136, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 1181, 1182, 0, 1142, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1104, 278,
	1223, 477, 478, 1127, 1175, 479, 1189, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 1114,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1185, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 1115, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 1183, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1230, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 1101, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	1195, 1196, 1197, 1198, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 1125, 615, 616, 617, 618, 0, 620,
	621, 0, 1108, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 690, 1192, 1229,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1105, 0, 0,
	2745, 0, 2736, 2743, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 2739, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 2740, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 2741, 444, 2738, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 2742, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 2737,
	642, 1105, 0, 0, 2733, 0, 2736, 2743, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 2739, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 2740, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 2741,
	444, 2738, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 2742, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 2737, 642, 1105, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 0, 0, 0, 0, 1913, 0, 1131, 0,
	0, 0, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2488, 286, 287,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 2450, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 2423,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 1751, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 1680, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 1675, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 1662, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 1657,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 1558, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1557,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 1552, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1551, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 1545, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 1354, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	4825, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 4824, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 4823, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 4825, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	4824, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 4436, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 4437,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 4435,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 3230, 3231, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 3228, 3229, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 2496, 2497, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 0, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 2755, 0, 0, 0, 0, 0, 0, 2753, 2754,
	279, 281, 280, 282, 283, 284, 285, 1131, 286, 287,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 0, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 0, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 3223, 3224, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 0, 0, 0, 0, 0,
	0, 0, 2159, 2160, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 0, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 4825, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 0, 1174, 0, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 0,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 4824, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 1091,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 1099, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 1170, 0, 304, 649, 650, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1255, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 278, 1223, 477, 478, 0, 1175, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 1261, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	1263, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 238, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 0,
	597, 588, 240, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	1646, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 232, 638, 639, 694, 640, 641, 642,
	1269, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 1259, 0, 2000,
	0, 0, 1171, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 1170, 0, 304, 649, 650, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1255, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 278, 1223, 477, 478, 0, 1175, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 1261, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 1263,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 238, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 0, 597,
	588, 240, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 1646,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 232, 638, 639, 694, 640, 641, 642, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	3387, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 2000, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 1170, 0, 304, 649, 650, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1255, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 278, 1223, 477, 478, 0, 1175, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 1261, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 1263, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 1251, 0, 1269, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1171, 0, 1259, 0,
	1257, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 1170, 0, 304, 649,
	650, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 666, 667, 0, 668, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1255, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 278, 1223, 477, 478, 0,
	1175, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	1261, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 1263, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 1269, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 0,
	1259, 0, 1257, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 1170, 0,
	304, 649, 650, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1255, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 278, 1223, 477,
	478, 0, 1175, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 1261, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 1263, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 1269, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1171, 0, 1259, 0, 1257, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	1170, 0, 304, 649, 650, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 666, 667, 0, 668, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 0, 278,
	1223, 477, 478, 0, 1175, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	1269, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1171, 0, 0, 0, 4254, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 1170, 0, 304, 649, 650, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 278, 1223, 477, 478, 0, 1175, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 1263,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 273,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 2600,
	2601, 2602, 2619, 2620, 2621, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 2622,
	0, 643, 0, 0, 0, 0, 288, 289, 1897, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 1882, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 2612, 0, 315, 316, 317, 314, 318, 0, 319,
	2608, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 2613, 2614,
	2615, 2616, 371, 372, 373, 658, 0, 0, 2607, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 2617, 2618, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 2610, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 2611,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 1881, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 1572, 2597, 2598,
	2599, 2623, 2609, 2603, 0, 2605, 2606, 2604, 2591, 2592,
	2593, 2594, 2595, 2596, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	238, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 240, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 1646, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 232,
	638, 639, 694, 640, 641, 642, 0, 0, 233, 1643,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 193, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 238, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 240, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	1646, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 232, 638, 639, 694, 640, 641, 642,
	1572, 1571, 233, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 193,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1572,
	1571, 0, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 1670, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 1494, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	0, 1223, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1572, 1571,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 3700, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 1494, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1214, 407, 666, 667, 0, 668, 0,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 0, 0,
	1223, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 2364,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1572, 2274, 0,
	0, 0, 0, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 1670, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 2273,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1572, 1571, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 1670, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 1091, 0, 273, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 1652, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 238, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 240,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 1646, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 273, 0, 0,
	232, 638, 639, 694, 640, 641, 642, 0, 0, 233,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 193, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 1269,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 2014, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 1170, 0, 304, 649, 650, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	278, 1223, 477, 478, 0, 1175, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 273, 3137,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 273, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 4986, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 273, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 3650, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 273, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 1640, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 273, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 3125, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 273, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 3805, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 921, 0, 822, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 2351, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 829, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 919, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 827, 602,
	603, 604, 605, 606, 828, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 822,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 3925, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 832, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 829, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 3924, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	827, 602, 603, 604, 605, 606, 828, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 3923, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 822, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 2085, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	832, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 829, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 2084,
	563, 564, 565, 566, 0, 2086, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 827, 602, 603, 604, 605, 606, 828, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 2083,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 822, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 2036, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 832, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 829,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 2035, 563, 564, 565, 566, 0, 2037, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 827, 602, 603, 604, 605, 606,
	828, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 2034, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 820, 0, 822, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 832, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	829, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 827, 602, 603, 604, 605,
	606, 828, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 2058, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 832, 0, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 0,
	2064, 0, 296, 2054, 297, 2070, 0, 2077, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 2080, 2081,
	0, 0, 305, 306, 0, 0, 1494, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 1194, 337, 339, 2068, 2067, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 2066,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 2075, 2076, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1214, 407,
	2061, 2062, 0, 2057, 0, 408, 409, 1216, 0, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	0, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 0, 0, 1223, 477, 478, 0, 0,
	479, 2069, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 0, 1224, 490,
	1225, 0, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 2051, 504, 505,
	506, 2052, 507, 508, 509, 0, 510, 0, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 2065, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 2063, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	2079, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 2071, 2072, 2073, 2074, 0,
	619, 0, 611, 612, 613, 0, 614, 0, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 0, 2055, 2078, 0, 634, 633, 635, 0,
	636, 637, 0, 0, 0, 0, 638, 639, 0, 640,
	641, 642, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 2045, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 829, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 827, 602, 603, 604, 605, 606, 828,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 822, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 832, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	829, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 2402, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 2403, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 827, 602, 603, 604, 605,
	606, 828, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 2404, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 832, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1572, 1571, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 4013, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1572, 1571, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 3600, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1700,
	0, 1572, 1571, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 1699, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 1698, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	1697, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1565, 0, 1572, 1571, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 1494, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1567, 664, 665, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 0, 1223, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1572, 1571, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1572, 1571, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 1572, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 1494, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 0, 1223, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 2927, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 3642, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 2931, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 3641, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 2930,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 3638, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 3640, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 3637, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 2929, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 3639, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 2927, 305, 306, 652, 0, 0,
	2921, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 2923, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 2931, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 2930, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2920, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 2929, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	2928, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1777, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 1776, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 1775, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 1778, 555, 562, 563, 564, 565, 566,
	0, 1774, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 1772, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	1773, 633, 635, 693, 636, 637, 1498, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1500, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 1261, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1495, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1497, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 1261, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1401, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1403, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 1261, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 727,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 726, 284, 285, 715, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 718,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 724, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	714, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 715, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	718, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 719, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 720, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 715, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 718, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 719, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 720, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	715, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 718, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 4023, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 1261, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 3545, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 3095,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3094, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	2371, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 2309, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 2316, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 2315,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 2302, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2304, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 2267, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 1261, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1618, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1617, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1521, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1514,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1516, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1337, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1336, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1327, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1326, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1324, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1323, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1319, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1318,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 696, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 264, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 718,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 719, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 2411,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 2409, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 2407, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 2322, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2110, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 2104, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 906, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 905, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 904, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 3641, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 4335, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1365, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 1368, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 1366, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 787, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	786, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 785, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 1369, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 783,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1365, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 1368, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 1366, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 787, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 786, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 785, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 1369, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	783, 685, 686, 687, 0, 619, 0, 611, 1367, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 705, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 704, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 703, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 273, 3137,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 273, 4351, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 4629, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 4226, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 3974, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 2808,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 273, 3137, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 3134, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 2228, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 786,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 785, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 783, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 2381, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 2369, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1673, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1666,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	777, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 773, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	778, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 787, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 786, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	785, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	1651, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 783, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1624, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1623, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1608, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1606, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1601, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1578, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1576, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1563, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1526, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1503, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1371, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 786, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 785, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 783, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1342,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1341, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1333, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1332, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 1285, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	792, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 777, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 773, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 772, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 778, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 787, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	786, 547, 548, 549, 550, 774, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 785, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 775, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 783,
	685, 686, 687, 0, 619, 0, 611, 779, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 766, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 767, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 729, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 722, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 700,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3670,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	786, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 785, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 783,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3585, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3561, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3558, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3512,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3510, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3498, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3495, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3105, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 767, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 2340, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 0, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1304, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 1234, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	0, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 0, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 0, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 0, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1614, 0, 1349, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1351, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 1613, 0,
	0, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	0, 479, 0, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 0, 0,
	490, 0, 0, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 0, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 0, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1352, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 0,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 0, 591, 592, 593, 594, 0, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 1529, 0, 1349, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1351, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	1528, 0, 0, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 0, 479, 0, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	0, 0, 490, 0, 0, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	0, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 0, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1352, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 0, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 0, 591, 592, 593, 594, 0, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 0, 0,
	0, 0, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 1347, 0, 1349, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 0, 297,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	1351, 332, 333, 334, 335, 336, 0, 337, 339, 0,
	0, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 1346, 0, 0, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 0, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 0, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 0, 479, 0, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 0, 0, 490, 0, 0, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 0, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1352, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	0, 0, 0, 0, 0, 619, 0, 611, 612, 613,
	0, 614, 0, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 0, 2124, 0,
	1349, 634, 633, 635, 0, 636, 637, 0, 0, 0,
	0, 638, 639, 0, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1351, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 0, 479, 0, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 0, 0, 490, 0, 0, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 0, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1352, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 0, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 0, 0, 0, 0, 0, 619, 0, 611,
	612, 613, 0, 614, 0, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 0,
	2091, 0, 1349, 634, 633, 635, 0, 636, 637, 0,
	0, 0, 0, 638, 639, 0, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1351, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 0, 479,
	0, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 0, 0, 490, 0,
	0, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 0, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	0, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1352, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 0, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 0,
	591, 592, 593, 594, 0, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 0, 0, 0, 0, 0, 619,
	0, 611, 612, 613, 0, 614, 0, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 0, 0, 0, 1349, 634, 633, 635, 0, 636,
	637, 0, 0, 0, 0, 638, 639, 0, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1351, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	0, 479, 0, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 0, 0,
	490, 0, 0, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 0, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 0, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1352, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 0,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 0, 591, 592, 593, 594, 0, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 0, 0, 0, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 1863, 1857, 0, 0, 0, 0, 1828, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 1848, 1876,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 1849, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 1849,
	0, 0, 0, 1829, 0, 0, 0, 0, 1875, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 1879, 1828, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 1868, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1881, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 4752, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 4655, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 0, 0, 0,
	0, 0, 1829, 1855, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 1882, 0,
	0, 0, 0, 0, 0, 1826, 1827, 1828, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 1868, 0, 0, 1845, 1863, 1857, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 1867, 0, 4609, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 1873,
	0, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 1867, 0, 0, 1877,
	0, 1849, 0, 0, 0, 0, 1856, 1858, 0, 1863,
	1857, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1873, 0, 1874, 0, 1876, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 1875, 0, 1865,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 1849, 1864, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 1850, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 1881, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 1875, 0, 4608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 4420, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 1866,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 4250,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 1867,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 0, 1863, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1873, 0, 1874, 0, 1876,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 1865, 1826, 1827, 1828, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 1848, 0, 1849, 0, 0,
	0, 0, 0, 0, 1845, 1863, 1857, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 1875, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1864, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 1850, 0, 0, 0, 1834, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 1865, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 1867, 0, 0, 1877, 0, 1849,
	0, 0, 0, 0, 1856, 1858, 0, 1863, 1857, 1881,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	1873, 0, 1874, 0, 1876, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 1875, 0, 1865, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 1849, 1864, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 1875, 0,
	4169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 1850, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 1881, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	1875, 0, 4168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 4167, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 1863, 1857,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 1866, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 3810, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1876, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	1865, 1826, 1827, 1828, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 1848, 0, 1849, 0, 0, 0, 0,
	0, 0, 1845, 1863, 1857, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 1875, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1864,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 1867,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 1850,
	0, 0, 0, 1834, 0, 1873, 0, 1874, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 1865, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 1867, 0, 0, 1877, 0, 1849, 0, 0,
	0, 0, 1856, 1858, 0, 1863, 1857, 1881, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 1873, 0,
	1874, 0, 1876, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 1875, 0, 1865, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	1849, 1864, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 1875, 0, 3305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 1850, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 1881,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 1875, 0,
	3304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 3303, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 1863, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 1866, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 3302, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 1867, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 1856, 1858, 0, 1863, 1857,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 1873, 0, 1874, 0, 1876, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 1865, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 1849, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 4898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	1865, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 1881, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 1875, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1864,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 4897, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 3267, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 1863, 1857, 0, 0, 0, 0, 3238, 0, 1829,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 1876, 1850,
	0, 0, 0, 1834, 0, 3367, 0, 0, 0, 0,
	3366, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 1867, 1845, 0, 1877, 0, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 3239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 1866, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 1864, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2781, 0, 0,
	0, 0, 0, 1865, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 1849, 0,
	0, 1855, 0, 0, 0, 0, 1863, 1857, 0, 0,
	0, 2780, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 1875, 0, 0, 0, 0, 1828,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1864, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 1850, 1866, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1868,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 1867, 0, 0, 1877, 0,
	0, 0, 0, 1863, 1857, 1856, 1858, 0, 0, 0,
	1881, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 1873, 0, 1874, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 1849, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 1867, 0, 1855, 1877, 1829, 0, 0, 0,
	0, 0, 1856, 1858, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 1873, 0,
	1874, 0, 1882, 0, 0, 0, 0, 1843, 1844, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 1868, 1865, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 1088, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1879, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 1868, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 1875, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1864,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 1850,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	3373, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 1867, 3368, 0, 1877, 1829, 0, 0, 0,
	0, 0, 1856, 1858, 0, 1876, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 3791,
	1874, 0, 1882, 0, 0, 0, 0, 1843, 1844, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1865, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1879, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 1863, 1857, 0, 0, 0, 0, 1856, 1858, 1829,
	0, 1855, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 1868, 0, 1845, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	1867, 0, 0, 1877, 0, 0, 1855, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 1850,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 1865, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 0, 1849, 3306,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3333, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 1867, 0, 0, 1877, 1863, 1857, 0,
	0, 0, 0, 1856, 1858, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 1873,
	1881, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1867, 0, 0, 1877,
	1829, 0, 1855, 0, 0, 0, 1856, 1858, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 1850, 1882, 0, 0, 0,
	0, 1843, 1844, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1865,
	0, 0, 1868, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 1879,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1857, 0, 0, 1849,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2353, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	1855, 971, 0, 1020, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 994, 0, 977, 976, 0, 0, 0,
	1868, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 996, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 0, 981, 0,
	1873, 1881, 1874, 1031, 0, 0, 0, 0, 0, 1843,
	1844, 0, 991, 992, 0, 0, 0, 0, 0, 0,
	0, 1009, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	983, 0, 1849, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 985,
	0, 0, 1866, 0, 0, 0, 0, 0, 1018, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 988, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 997, 995, 1855, 0, 0, 0, 0, 0, 990,
	0, 0, 0, 1006, 0, 0, 1026, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 1028, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 1013, 1014,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 1016, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 1023, 1011, 0, 0,
	0, 0, 0, 0, 0, 1029, 1007, 0, 0, 1000,
	998, 0, 1003, 0, 0, 0, 0, 0, 1004, 0,
	0, 973, 0, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 0, 1005,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 1008, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012,
}

var sqlPact = [...]int{
	6005, -1000, -1000, -1000, -1000, 198, -1000, -1000, 197, 196,
	193, 191, 187, 186, 185, 180, 179, 178, 177, -1000,
	-1000, -1000, -1000, -1000, -1000, 175, -1000, -1000, 174, -1000,
	172, 171, 170, -1000, -1000, 169, -1000, 166, -1000, -1000,
	-1000, -1000, 161, 155, 151, 91743, 91182, 92295, 2419, 115707,
	98955, 2023, 81138, 115146, 80577, 114585, 2238, 8832, 114024, 2855,
	145, -1000, 113463, 144, 143, 142, -1000, 112902, -1000, 2205,
	-1000, 141, -1000, 5632, 70470, 140, 138, 136, 135, 2747,
	133, -1000, 132, 131, -1000, -1000, 130, -1000, 12176, 1522,
	-1000, 129, 128, -1000, 402, 96720, 127, 126, 125, 3079,
	124, 123, 68253, 121, 115, 111, 2790, 2938, -1000, -1000,
	2122, -1000, -1000, 110, 109, 107, 106, 104, 103, 102,
	101, 100, 99, 98, 96, 95, -1000, 93, 92, 90,
	89, 88, -1000, 87, 86, 85, -1000, 84, -1000, 83,
	77, 74, 72, 67, 66, 62, 61, 57, 53, 52,
	50, 49, 48, 134399, -1000, -1000, 46, 2029, 1738, 1735,
	1725, 1717, 1714, 989, 45, 41, 39, 38, 36, 34,
	32, 31, 28, 27, 26, 23, 22, 19, 16, 15,
	14, 13, 165, 12, 11, 10, 9, 8, 6, 5,
	2516, -1000, 1781, 1158, 32195, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 123987, 116259, 4, -65, 3, -1000, 3484, 1003,
	56410, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 307,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 518, 2380, 730,
	-1000, -1000, -1000, 112350, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2412, -53, -1000, 2126, -1000, -1000, -1000, -1000,
	-1000, 724, -1000, 2411, 2339, 360, 2338, -1000, -1000, -1000,
	3521, 2543, 3952, 3951, 3950, 3946, 3944, 123435, 1942, 3941,
	2601, 3939, 3938, 3935, 3923, 3919, 3917, 3916, -1000, 90621,
	1053, 90060, 89499, 3553, 111798, 88938, 111237, 126204, 48383, 1154,
	3520, -1000, -1000, -1000, -1000, -1000, -1000, 116259, -1000, 1052,
	-1000, -1000, 3915, 2150, 723, 98394, -1000, -1000, 110676, 1755,
	-1000, -1000, -1000, 925, 1049, 33917, 33917, 33917, 305, -1000,
	-1000, -1000, -1000, -1000, -1000, 3914, 3912, 3911, 3910, 3907,
	-1000, -1000, 80016, 25119, 79455, 78894, 110115, 24548, 88377, 87816,
	3906, 3905, 3904, 109554, 125652, 3641, 3638, 1050, 2124, 1494,
	-1000, -1000, -1000, -1000, -1000, -1000, -25, 72702, 3675, 116259,
	-1000, 304, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47809,
	815, 47235, 1018, 46661, 910, 108993, -1000, -1000, -1000, -1000,
	74988, -1000, 108432, 2541, 3903, 3902, 1185, 3899, 3427, 1885,
	3898, 1946, 1265, 3897, 3896, 3895, 3894, 3893, 3892, 3891,
	1574, 107871, 3085, 1607, 107310, 1761, 125100, 1047, 87255, 92295,
	2760, 106749, 1495, 1478, -1000, -1000, -1000, -1000, 3193, 2937,
	2935, 1325, -1000, -1000, -1000, -1000, 59807, 7841, 7213, -1000,
	-1000, 11027, 106188, 62652, 92295, 92295, -1000, -1000, -1000, -1000,
	-1000, -1000, 46087, 542, 45513, 1113, 105627, -1000, -1000, 60376,
	3016, -1000, -1000, -1000, -1000, -1000, 105066, 44939, 453, 44365,
	1107, 116259, -1000, 3077, 2086, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 5019, 1633, 3707, 2832, 74417, 2129, 1426,
	3486, 3191, 3171, 1481, 2123, 3139, 3890, 2701, 3138, 3136,
	3134, 3133, 3130, 1605, 2667, 300, 2664, 31621, 3054, 1736,
	43791, 1661, 1535, 3128, 3114, 3716, 2092, 2113, 2083, 78333,
	3888, 3887, 3464, 3113, 3106, 2879, 3096, -1000, 3014, 1571,
	299, -1000, -1000, -1000, -1000, -1000, -1000, 1488, -1000, -1000,
	-1000, -1000, -1000, 82794, -1000, -1000, 1868, -1000, -1000, 1868,
	-1000, -1000, -1000, -1000, -1000, 1412, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3446,
	-1000, 2140, -1000, -1000, 2605, 3461, 3461, 3461, 3516, 495,
	476, -1000, 165, -1000, -1000, 133979, -1000, -1000, 48957, 48957,
	48957, 48957, 48957, 48957, 48957, 48957, 2258, -1000, 720, -1000,
	-1000, 773, -1000, 719, 653, 607, -1000, -1000, -1000, -1000,
	-1000, -1000, 717, -1000, -1000, -1000, -1000, -1000, -1000, 3675,
	-1000, 28044, -1000, -1000, -1000, 458, 716, 48957, -1000, -1000,
	3736, 3735, 943, -1000, 276, 953, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3070, 715,
	712, -1000, 711, 710, 708, 706, 703, -1000, 702, -1000,
	701, 700, 699, 698, 695, 693, 690, 689, -1000, 2117,
	-1000, -1000, -1000, -1000, -1000, -1000, 639, 638, 638, 638,
	-1000, 1043, -1000, -1000, -1000, 259, 636, 256, 635, 627,
	625, -1000, 688, 687, 683, 681, 680, 679, 678, 677,
	675, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1041, -1000,
	-1000, -1000, -1000, -26, 116259, -1000, 518, -26, -1000, -1000,
	673, -1000, 36242, 36242, 36242, -1000, -1000, 2402, 48957, -1000,
	2620, -1000, -17, -17, 894, 58096, -1000, 55266, 894, 461,
	788, 63773, -1000, 3011, -1000, -1000, 655, 272, -1000, -1000,
	-1000, -1000, 25688, 3009, 116259, 116259, 116259, 92295, 92295, 92295,
	116259, 3886, 3350, 48957, -1000, -1000, 69909, 127860, 92847, -1000,
	-1000, 3623, 71029, 69357, 3069, 127860, 3068, 127308, 3885, -1000,
	-1000, -1000, -1000, -1000, 3314, 3878, 3877, 3876, -1000, 116259,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 239, 3313, -1000,
	-1000, 96159, 239, 3307, -1000, 239, 3304, -1000, 95607, -1000,
	-1000, 2324, 3303, -1000, -1000, 257, 3299, -1000, -1000, -1000,
	247, 3298, -1000, -1000, 270, -255, 3294, -1000, -1000, -1000,
	-1000, -1000, -1000, 133979, -1000, -1000, -1000, 126756, -1000, 3455,
	-1000, 116259, -1000, 48957, -1000, -1000, 3621, 1699, 3499, 3560,
	-1000, -1000, -38, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2584, 2591, 1148, 2443, -1000, 3363, 1672, 33917, 3409, -1000,
	-1000, -1000, -1000, -1000, 241, 25688, -1000, -1000, -1000, -1000,
	-1000, -1000, 2526, 3288, 1657, -1000, 2439, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1941, 3287, -1000, 2052,
	3286, 1927, -1000, -1000, 2102, -1000, 3448, 1422, 1790, -1000,
	-1000, -1000, -1000, -1000, -1000, 2167, 3285, -16, -1000, -1000,
	2275, -1000, -1000, -1000, -1000, 2059, -1000, 1324, 3280, -1000,
	2829, 2829, 86694, 3219, 62083, 60376, 72702, -29, -1000, -1000,
	-1000, -263, -1000, 23973, 133979, -1000, -1000, -1000, -1000, 1866,
	133979, 941, -1000, -1000, 3279, -1000, 133979, 938, -1000, -1000,
	3278, -1000, 2665, -1000, 3065, -1000, -1000, 2500, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2499, -1000, -1000, 3868,
	-1000, -1000, 3866, -1000, 3865, 3863, 3862, -1000, 1827, 2108,
	3861, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86142,
	2397, -1000, -1000, 85020, 3061, -1000, 2494, 3555, -1000, 85581,
	1046, -1000, 985, 2491, -1000, 95055, 822, 2490, -1000, 3860,
	3538, 2778, 985, 2489, -1000, -1000, -1000, -1000, -1000, 997,
	-1000, 66013, -1000, 66013, -1000, 1669, -1000, 122883, -17, 92295,
	3675, -1000, -68, -1000, -1000, -1000, 1003, -1000, 59233, -1000,
	59233, 97833, 75557, 955, 3006, 67691, 133794, -1000, 1017, -1000,
	-1000, 133979, -1000, -1000, -1000, 2658, -1000, -153, 2828, -1000,
	75557, 61514, 2654, -1000, 133979, -1000, -1000, -1000, -1000, 133979,
	-1000, -1000, -1000, 75557, 85020, -1000, 104505, 84468, -1000, -1000,
	1551, 2636, -1000, -1000, -1000, 75557, 1328, 75557, 75557, 75557,
	-1000, 103944, -1000, -1000, 2159, 1558, 3456, 2158, 92295, -1000,
	1909, -1000, -1000, -1000, 3478, 3217, 116259, -1000, -1000, 3057,
	-1000, 72150, 94503, -1000, 93951, -1000, 93399, -1000, 92295, -1000,
	92295, -1000, 3859, 3858, 3857, -1000, -1000, 3854, -1000, 3853,
	3471, -1000, 1095, 43217, 133979, 3469, -1000, 3851, 2078, 3054,
	133979, -1000, 3209, 1740, 1733, 116259, -1000, -1000, 116259, -1000,
	116259, -1000, -1000, -1000, 1613, -1000, -1000, 2582, -1000, -1000,
	-1000, -1000, 92295, 92295, 92295, 92295, 1253, -1000, 42643, -1000,
	-1000, 3126, 3850, 1803, -1000, 1870, -1000, 3000, 3477, -1000,
	1534, 1831, 234, 3740, -1000, -1000, 258, -1000, -1000, -38,
	-1000, 122331, -1000, 2605, -1000, 116259, -1000, 2599, 3039, 3050,
	1484, 2425, 2697, -1000, 42069, 2674, 52401, 2435, 165, -1000,
	-1000, 165, 165, 33343, -1000, -1000, 71029, 71029, 25688, 1435,
	48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957,
	48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957,
	48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957, 48957,
	48957, 48957, 48957, 48957, 48957, 48957, 2288, 48957, 1407, 48957,
	48957, 48957, 48957, 2114, -1000, -1000, 2041, 537, 2093, 653,
	-1000, -1000, -1000, 3666, 3666, 3666, 637, 637, 637, 134232,
	134232, 676, 3849, 773, -1000, 48957, -1000, 94, 58655, 48957,
	26259, -1000, 476, 7029, 2577, -1000, 475, 26862, -1000, -1000,
	-1000, 28044, 607, 41466, 48957, 1026, 133979, -1000, -1000, 1449,
	3682, 23398, 3095, 2867, 649, 855, 839, 31018, 30415, 29812,
	29209, 830, 604, 48957, 48957, 48957, 48957, 48957, 48957, 48957,
	48957, -1000, -1000, 3704, -1000, 3682, -1000, -1000, -1000, -1000,
	3682, 1432, 1429, 3682, -1000, 3682, 3682, 8343, 8343, 40892,
	40318, 39744, 52975, 39170, 48957, 28635, 38596, 38022, -1000, 116259,
	-26, 3619, 48957, 357, -1000, 132323, -1000, 357, 357, 648,
	-69, 133979, 2676, 2676, 56972, 2289, 2266, 2266, 2266, -1000,
	894, 18189, 894, 102281, 2282, 894, 894, 224, 303, 474,
	54697, 2620, 102281, 745, 646, 2, -1, -2, -1000, -1000,
	-3, -7, -1000, -1000, 92295, 645, 26259, 25688, 222, 2105,
	-71, 2688, 2685, -1000, 2683, 2682, -1000, 2679, 2395, -1000,
	-1000, 1890, -78, 1406, 92295, 116259, 1483, 3848, -45, -1000,
	6451, -85, -1000, 1307, 221, 3682, -1000, -1000, -1000, -1000,
	-1000, 3847, 3846, -1000, 1037, 644, 640, 343, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 639, 638, 638, 638,
	-1000, 259, 636, 256, 635, 627, 625, -1000, -1000, -1000,
	-1000, -1000, 2998, 92295, 116259, 1453, 3845, 81690, -255, 92847,
	-90, -1000, -1000, 116259, -1000, -1000, -1000, 3844, -1000, 92295,
	-1000, -1000, 92295, 239, 3274, -1000, 92295, -1000, 92295, 232,
	3273, -1000, -1000, 116259, -1000, 92295, 92295, -1000, 116259, 116259,
	116259, 127860, 127860, 230, -1000, 92295, 865, -91, 1189, -38,
	-1000, -1000, -1000, -1000, 1868, -1000, 1811, -1000, -1000, -1000,
	-1000, -1000, -1000, 1492, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 943, -1000, -1000, -1000, -1000, -1000, -1000, 3696,
	3689, -27, -1000, -1000, 25688, -1000, -39, 1688, 1950, 1404,
	-1000, 77772, 2430, 3453, 3843, 2766, 3439, 1660, -1000, 1611,
	-1000, 3534, 82794, 3578, 3594, 1394, -1000, 2997, -1000, -1000,
	-1000, 921, 1789, 1844, 1401, 1399, 82794, 2052, -1000, 71029,
	-1000, 2728, 3513, 1378, 1383, 1378, 1378, 1381, -1000, 82794,
	1841, 1398, 1375, 1368, -1000, -1000, 2024, 2020, -1000, -1000,
	103392, -1000, 1357, 1306, 3636, 3446, 2256, 810, 2017, -1000,
	1300, 2988, -1000, -1000, 1417, -42, 3571, 3580, 1394, -1000,
	2986, 1294, -1000, -1000, -1000, 3512, 92295, 25688, 1581, 1580,
	1560, 1825, 1291, -28, -1000, 3564, 1290, 1289, -1000, 1054,
	5232, 3389, -1000, 127860, 1054, 1054, 1919, 3272, 2804, 1708,
	-1000, 2827, 892, 2824, -1000, -1000, -1000, 892, -29, 72702,
	116259, 219, -1000, 94, 48957, 48957, 94, 48957, 94, -1000,
	3547, 3271, 3270, -1000, -1000, -1000, -1000, -1000, 3841, 2065,
	2600, -1000, -1000, 623, 2488, 2985, 116259, 2706, -32, 92295,
	-1000, 71598, 3269, 127860, 2052, 2486, -1000, -1000, 83907, -1000,
	3266, 518, 2485, -1000, 550, 3810, 3264, -1000, 121779, -1000,
	3455, 1264, 3257, 1108, 416, 3618, -1000, 416, 66573, -1000,
	116259, -1000, -17, 6174, 76668, -92, -94, 465, -1000, 102840,
	116259, 116259, 3398, 2076, 2064, -1000, 976, 60376, -1000, 60376,
	-106, -1000, -153, 2820, 1606, -1000, 955, 955, 892, -1000,
	892, -1000, 92295, 3048, -1000, -1000, 75557, 955, 955, 955,
	-1000, -1000, -1000, -1000, 3809, 3807, 3803, 3802, -1000, -1000,
	982, 92295, 116259, 92295, -1000, -1000, 1700, -1000, 215, -1000,
	127860, -1000, 127860, 116259, 92295, -1000, 982, 116259, 982, 116259,
	982, 116259, 982, 982, -1000, -1000, -1000, -1000, -1000, 94,
	-1000, -1000, 133979, -1000, 48957, -1000, -1000, 1608, 3800, 1702,
	-1000, 3043, -1000, 3042, -1000, 25, -1000, -1000, 1930, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3799, 133979,
	-1000, 1874, -1000, -1000, -1000, -1000, 92295, 92295, 92295, 92295,
	116259, 3386, -1000, 116259, 3380, 92295, -1000, 3738, -1000, -1000,
	82794, -1000, 2599, 3039, -1000, -1000, -1000, -1000, -1000, -1000,
	1719, 2349, -1000, 2627, -1000, 1645, -1000, -1000, -1000, 133979,
	53549, -1000, -1000, 133979, 1943, -1000, 51827, 51253, -1000, -1000,
	1764, 92295, 2703, -1000, 2703, -246, -1000, 132058, 2625, 92295,
	-1000, -1000, -1000, -1000, -1000, 916, 858, 858, 1389, 1389,
	1389, 1389, 3576, 5092, 5906, 6836, 7977, 7977, 589, 589,
	589, 589, 589, 7977, 5031, 637, 637, 5031, 5031, 5031,
	5031, 5031, 637, 637, 637, 7977, 7977, 7977, 637, 134232,
	11597, 10284, 48957, 48957, 1288, 2000, 537, 9741, 48957, 8323,
	8323, 8323, 8323, -1000, 2112, -1000, -1000, -1000, -1000, 2979,
	621, 52975, 52975, -1000, -1000, -1000, -1000, 27453, 48957, -1000,
	-1000, -1000, -1000, 37419, -1000, -1000, 131463, -315, 464, -1000,
	214, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 456, -156, -20, -1000, 48957, 48957,
	48957, 451, -1000, 212, 48957, 116259, -1000, 17525, 742, -93,
	-1000, -107, 1444, -1000, 48957, -1000, -1000, 1287, -1000, 1285,
	1284, 1278, -1000, 620, 450, -1000, 210, -1000, 2263, 619,
	618, 48957, -1000, -1000, -1000, -1000, -1000, 131072, -1000, -1000,
	130870, -1000, -1000, 130807, -1000, -1000, 130605, -1000, -1000, -1000,
	-1000, -1000, 133601, 17129, 16815, 16422, 5212, 16026, 15630, -108,
	449, -109, 447, 915, 902, 446, 445, 440, -114, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -115, 437, -1000, 2970, -156, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 436, -1000, 435, -1000, 133348, -156,
	434, 5132, -1000, 52975, 52975, 52975, 52975, -1000, 432, -1000,
	131930, -1000, 133155, 36845, 36845, 36845, 429, 132970, 48957, -156,
	-116, -1000, -117, -1000, -1000, 521, -124, 1021, 36242, 55848,
	25688, -1000, 1021, 1021, 48957, -1000, 48957, 2649, -1000, -1000,
	-1000, -1000, 2644, 2004, 2676, 56972, -1000, -1000, -1000, -1000,
	102281, -1000, 3675, 3080, -1000, 102281, -1000, -1000, 116259, 518,
	-1000, 102281, 102281, 25688, 894, -1000, 894, 102281, 713, -1000,
	-1000, -1000, -1000, -1000, 428, 64335, -20, 208, 25688, 985,
	-1000, -1000, 2795, 2795, 2795, 2795, 2795, 92295, -1000, -1000,
	127860, 1274, -35, -123, 2816, -1000, 3646, -1000, 2154, -1000,
	71029, -1000, 770, 1183, 25688, -1000, -1000, -1000, 616, -1000,
	3682, 3682, -1000, 3682, 127860, 2969, 190, 2814, -1000, 2394,
	-31, 163, 127860, 3798, -1000, -1000, 239, -1000, 92295, 239,
	239, -1000, 92295, 92295, 2324, -1000, 257, -1000, 247, -1000,
	-1000, -255, -1000, 1007, 33917, -1000, 1868, -1000, -1000, 1612,
	-1000, 2085, -1000, 1387, -1000, -1000, -1000, -1000, 33917, -1000,
	2328, 116259, 116259, 92295, -1000, 116259, -1000, 2230, 127860, -1000,
	2481, 121227, 2465, 120675, 71029, -1000, -1000, 614, 931, 2624,
	2623, 1104, 116259, 116259, 2613, 120123, 119571, -1000, 3794, 116259,
	2141, 48957, 3508, 2267, 2345, 94, 94, -1000, 94, -1000,
	-1000, 612, 1372, 92295, 92295, 116259, 127860, 92295, 1891, -1000,
	-1000, -1000, -1000, -1000, 83346, -1000, -1000, 3703, 3687, -1000,
	1378, -1000, -1000, -1000, 1378, 2052, 1867, 116259, 127860, 92295,
	127860, 119019, 118467, -1000, -1000, 1815, 116259, -1000, -1000, -1000,
	-1000, 1472, -1000, 810, 3675, 3675, 1272, 2960, 2173, 94,
	94, -1000, 94, 611, 25688, 2062, -1000, 3053, 116259, 3732,
	117915, 3730, 116259, 116259, 116259, 127860, 3458, 116259, 116259, 127860,
	-1000, 117363, 5232, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2145, 73846, 1123, 116259, 1324, -1000,
	-1000, 1788, 1271, 1270, 82794, 2221, 1784, 1913, 127860, 60376,
	966, 60376, 2784, -1000, -1000, 22823, -1000, 133979, 133979, -1000,
	133979, -1000, 71598, 75557, 116259, -1000, 1035, 116259, 77220, 948,
	3252, 65453, -263, 955, 75557, 92295, -32, 2706, 116259, -1000,
	-1000, 2052, 3251, 518, 2478, -1000, 127860, 3617, 3250, 610,
	3793, 3792, -1000, 92295, 2389, 2475, -1000, -1000, 116811, 3326,
	810, 116259, 1021, 56972, 2031, -1000, 63214, 1063, 116259, 1929,
	137, -1000, -1000, -1000, 1, 116259, -1000, 787, -1000, -1000,
	6174, 6174, 955, -271, 609, -1000, 874, 867, 60945, -125,
	-1000, 207, 608, 863, 856, -1000, 2680, -1000, -153, -1000,
	75557, 976, 60376, 2936, 2934, -1000, -1000, 1002, -1000, 1530,
	955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -21, 1872, 116259, -255, -255, -50, -35, -1000,
	982, -1000, 982, -1000, 982, -1000, -1000, -1000, 133979, -1000,
	-1000, -1000, 1684, 1682, 116259, -1000, -1000, 116259, -1000, 25688,
	116259, 92295, 25688, 92295, 3038, 3037, -1000, -1000, -1000, 116259,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1151, -1000,
	1943, 2344, -1000, 607, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2557, -1000, -36, 33343, 898, -1000, -1000,
	92295, -22, 48957, 48957, 9391, 9125, 48957, 52975, 52975, -1000,
	48957, 7376, -1000, -1000, -1000, -1000, -1000, 2933, 606, 48957,
	71029, 5290, 911, -1000, 426, 14018, 5031, -1000, 48957, -1000,
	578, -1000, 423, 35668, -1000, 132520, -37, -142, -1000, 18777,
	-156, -144, -1000, -1000, 763, -1000, 3140, -1000, 48957, 132705,
	2536, 2157, 1871, 1711, 3682, 3729, 22248, -1000, 67132, 1023,
	2320, 130214, -1000, -1000, -1000, -1000, 71029, 71029, 48957, 48957,
	-1000, 48957, 48957, 48957, -1000, -1000, -1000, 3682, 909, -1000,
	-1000, -1000, 909, -1000, -1000, 1378, -1000, 1378, -1000, 48957,
	-1000, -1000, 2932, 48957, -1000, 71029, 71029, 52975, 52975, 52975,
	52975, 52975, 52975, 52975, 52975, 52975, 52975, 52975, 52975, 52975,
	52975, 52975, 52975, 52975, 52975, 52975, 52975, 2652, 52975, 3664,
	3664, 3664, 1415, -1000, 3032, 2932, 48957, 48957, 71029, 421,
	420, 418, -1000, 48957, -156, -1000, -1000, 8053, 603, -1000,
	2552, -1000, 2866, -1000, 48957, -1000, -147, -1000, 2620, -1000,
	-1000, 2866, 2866, -145, 133979, 56972, 56972, -1000, 600, 48957,
	2639, -1000, -1000, 741, -316, -1000, 852, -1000, -1000, -1000,
	-1000, -1000, -1000, 850, -1000, 518, -1000, -1000, -1000, 206,
	102281, 102281, 740, -1000, -150, -1000, -1000, -151, -1000, 3616,
	410, 25688, -1000, 1021, 2763, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2660, -267, 127860, 127860, 1780, 2333, 3725, -1000,
	3685, 762, 739, 205, 3682, 409, 408, 406, -255, 127860,
	127860, 1776, 68805, 127860, -1000, -1000, -1000, 239, -1000, -1000,
	-1000, 232, -1000, -1000, -1000, -1000, 2719, -1000, -38, -1000,
	-1000, -1000, 48957, -1000, -1000, 3450, 1269, 1268, -1000, -1000,
	-1000, 2959, -1000, 3248, -1000, 2474, -1000, 1069, 2473, 1838,
	-1000, 48957, 597, 2777, 596, 595, 3791, 2196, 3788, 1106,
	3243, 2324, 3238, 2324, -1000, -1000, -1000, 912, -1000, 133979,
	2267, -1000, 594, 593, -1000, -39, 1674, 1920, 1267, 1001,
	-1000, -1000, 48957, 48957, 101729, -1000, 484, 3448, -23, -1000,
	-1000, -1000, 1775, 1263, 1262, -1000, -1000, -1000, -1000, 2052,
	1771, 1257, 1256, -1000, -1000, -1000, -1000, -1000, 2472, -1000,
	-1000, 3237, 1000, -1000, 3110, 3109, 901, 116259, 3033, 1255,
	3675, 3675, -1000, 999, -1000, -1000, 48957, -1000, -42, 1254,
	3570, 2469, 92295, -1000, 2324, 3232, 1250, -1000, 1249, -1000,
	-1000, -1000, 3563, 3562, 1229, -1000, -1000, -1000, 75557, -1000,
	-1000, 73277, -1000, -1000, 1054, 116259, 127860, 92295, 1822, -1000,
	-1000, 81690, 82242, 116259, 2804, -255, 892, -1000, 2487, 892,
	966, 2931, -1000, 2698, -1000, 996, 92295, 3787, 405, -157,
	-43, 71029, -1000, -1000, -1000, -1000, 2465, 92295, 116259, 1316,
	2721, 116259, 116259, 3612, -1000, 2357, 668, 92295, 904, -1000,
	3675, -1000, -1000, -1000, 993, -1000, 3552, 92295, 3611, 3229,
	985, 94, 92295, 3711, -1000, -1000, 3610, 92295, 3224, 2379,
	2468, 2592, 810, 76116, 985, 2308, -66, -1000, 1929, 35065,
	3445, -158, -1000, -1000, -1000, 1021, 66573, 56972, 48957, 3784,
	-163, -1000, -1000, -1000, -1000, -1000, 99514, 99514, 75557, 75557,
	75557, 955, 116259, 116259, 3783, 75557, 75557, 75557, -44, 592,
	-1000, 846, 844, 840, -1000, -1000, -1000, -1000, -1000, -1000,
	837, 833, 976, -1000, -1000, -153, 60376, 94, -1000, 2327,
	92295, -1000, 21673, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	982, -263, -1000, -1000, 2192, 2433, 2192, 1923, 1900, -1000,
	-1000, 2343, -1000, -1000, -1000, -1000, 2699, 3451, 25688, 3558,
	8323, 48957, 48957, 6562, 669, 491, 8323, 48957, 48957, 71029,
	6550, -164, 48957, 48957, -1000, 48957, 738, 133979, -1000, 3724,
	48957, 404, 400, -1000, -1000, -1000, 3677, -1000, -1000, -1000,
	133979, 48957, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 391,
	-1000, 202, -1000, -1000, -1000, 124539, -1000, 48957, 390, 3507,
	-1000, 389, 386, 10778, 298, 130012, 129949, 129747, 385, -1000,
	-1000, 382, 380, 133979, 3032, 133979, -1000, -1000, 959, 959,
	1348, 1348, 1348, 1348, 3664, 782, 1045, 345, 984, 984,
	984, 1034, 1415, 1415, 984, 984, 984, 1415, 2927, 2655,
	590, 2139, -1000, -1000, 133979, 133979, 376, -1000, -1000, -1000,
	-156, 373, 8053, -1000, 2859, 3505, 133979, -1000, 56972, 2859,
	2859, -1000, -1000, 2004, 116259, 133979, 56972, -1000, 3080, -1000,
	19943, 19363, -1000, 25688, -1000, -1000, -1000, -1000, 3675, -1000,
	64335, -1000, 588, -1000, 164, -1000, 2763, -1000, 831, -1000,
	-1000, 75557, 75557, 2795, -1000, 2877, -267, -160, 116259, -1000,
	-1000, 737, 3782, 753, 25688, 372, -1000, -1000, -1000, -255,
	-255, 116259, 2923, 92295, 116259, 1452, -255, -1000, -1000, -1000,
	3397, 133979, 116259, 116259, 1541, 101177, 116259, 3218, -1000, 3216,
	-1000, 1104, 3972, 129356, 57534, -1000, 57534, 116259, -1000, -1000,
	-1000, -1000, 2032, 1467, 3781, 1173, -1000, 3480, 116259, -1000,
	116259, -1000, -1000, -1000, 116259, 116259, 92295, 116259, -1000, 127860,
	3120, -165, 133979, -46, -1000, 829, -1000, 1385, -1000, 21098,
	116259, 127860, 92295, 116259, 127860, 92295, 3180, 116259, 2229, -1000,
	-1000, 3107, -1000, 94, 3675, -1000, 1248, 3119, -166, 25688,
	-1000, 3723, 3721, 3172, 3485, -1000, 116259, 3720, 116259, 92295,
	3396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1739, 1245,
	1244, 2378, 2370, 2332, -50, 2221, 966, -54, 586, -1000,
	828, -1000, -1000, 827, 826, 966, -1000, 75557, 60376, 3780,
	518, -1000, 2757, -1000, 97272, 77220, 2354, -1000, -1000, 576,
	116259, 116259, 575, -1000, 94, -1000, 3778, 100073, 556, -1000,
	2323, -1000, 714, -1000, 2551, 127860, 2052, 94, 92295, -1000,
	-1000, 518, 371, -55, -1000, 3223, 1089, 25688, 92295, 3170,
	2594, 810, 76116, -1000, 1264, 2697, -1000, -58, -1000, 667,
	94, 2308, -1000, -66, 133979, -1000, 824, -1000, -171, -1000,
	-1000, 359, -1000, 3395, -1000, -1000, -179, -1000, -1000, 3153,
	3153, 75557, 60376, 75557, 75557, 75557, -1000, 976, 892, -1000,
	2561, -1000, -1000, -1000, -1000, -1000, 25688, 1763, -1000, 553,
	552, -1000, -1000, -1000, -1000, 3451, 8323, 8323, 48957, 48957,
	48957, 8323, 6550, -181, -1000, 8323, 8323, -156, -1000, -1000,
	132520, -1000, -1000, -1000, 133979, -1000, 20523, 2209, -1000, 129154,
	-1000, 33343, -1000, -1000, 48957, 48957, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52975, 2922, 551, 71029, -1000, -1000,
	358, 998, 48957, 50679, 2620, 998, 998, -1000, -182, -1000,
	-1000, -1000, 3675, -1000, 3675, 164, -1000, -1000, 3777, 25688,
	-1000, 75557, -1000, -1000, -1000, 2331, -1000, -1000, 3078, -192,
	752, -1000, 3773, -1000, -1000, 118, 127860, 2921, 117, 2801,
	-1000, -1000, -1000, 2799, 3609, -1000, 1993, -1000, 116259, 116259,
	-1000, 116259, -1000, 25688, 116259, 2892, 1252, -1000, 931, 2609,
	549, 52975, 1144, 92295, 860, 2848, 2847, -1000, 3633, 3504,
	2823, -187, -1000, 116259, 48957, 116259, -189, -190, 2454, -1000,
	-1000, 1141, 1251, 48957, 1136, -1000, -1000, -1000, 71029, 548,
	2324, 2324, -195, -196, -1000, -1000, -1000, 48957, 1225, 116259,
	34491, -1000, 3770, 3448, -1000, -1000, -1000, -1000, -1000, -1000,
	116259, -1000, 116259, -1000, -1000, 3028, 3675, 48957, 1221, -1000,
	-1000, -1000, 3717, 2324, 25688, 2324, -1000, 2324, 3485, 1118,
	116259, 127860, 92295, 2214, 2214, 3022, -1000, -1000, -1000, 2511,
	2511, 75557, 60376, 60376, -1000, -74, 966, -1000, 3608, 2203,
	3769, -1000, -1000, -1000, -1000, 2608, -1000, -1000, -1000, 116259,
	2603, 2864, 57534, 546, 544, 116259, 961, -1000, -198, -1000,
	819, 817, 77220, 948, 950, -1000, -80, 543, -1000, 813,
	-1000, -1000, -1000, -1000, 518, 3607, -1000, 3712, 541, 539,
	116259, 2365, 538, 25688, 3443, 810, 76116, -1000, 3326, 1929,
	-1000, 2462, 116259, 3433, -1000, 2697, 537, -1000, 955, 535,
	955, -1000, -204, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-81, -1000, 945, 922, -1000, -1000, 92295, 92295, 48957, 48957,
	-1000, 8323, 8323, 8323, -1000, 326, -1000, -1000, 2308, 3503,
	-1000, -88, 129091, 128712, 4758, 52975, 71029, -207, -1000, -1000,
	116259, 133979, -130, -1000, 133979, 534, 533, 467, -1000, -1000,
	-1000, 670, 605, -1000, -1000, -1000, -1000, 127860, 3765, -1000,
	127860, -255, 127860, 127860, 1737, 100625, 116259, -1000, -1000, 1838,
	2310, -1000, -1000, -1000, 116259, 2467, -1000, -1000, -1000, 1099,
	48957, 2139, 52975, 532, 48957, -1000, 531, 529, 3606, 3373,
	-1000, 2746, 2940, 1992, 57534, -1000, 3451, -1000, 128459, -1000,
	1088, 2033, -1000, -1000, -1000, -1000, 133979, 52975, 3485, 57534,
	-1000, -1000, 528, 527, 133979, 525, 812, 2914, -1000, -1000,
	-1000, -1000, -1000, 94, -1000, 133979, 523, 3570, -1000, -1000,
	-1000, -1000, 2324, 92295, -1000, -1000, -1000, 1211, -1000, -1000,
	-1000, -1000, 3764, 3763, 2913, 81690, -1000, -209, -1000, -1000,
	-1000, 2050, 94, 948, -1000, -1000, 2354, 522, -1000, -1000,
	2504, 2504, -215, 57534, 57534, -216, 2351, 2717, -1000, 100073,
	33917, 33917, 321, 3604, 950, -1000, 3673, -1000, 3374, 3374,
	48957, 3603, 94, -1000, 3711, 57534, -1000, 92295, 57534, 2358,
	2136, 2578, 76116, -1000, 2592, -1000, -1000, -217, 116259, 1929,
	-1000, -1000, 75557, -1000, -1000, 2561, -1000, 116259, -1000, 116259,
	-1000, -1000, -218, -224, -1000, 2115, 48957, 33343, -1000, -1000,
	4758, -225, -1000, -139, -1000, 3599, 50679, 3755, 3752, 3751,
	-1000, -1000, -267, -1000, -255, -255, -255, 116259, -1000, 1956,
	-1000, 2465, -1000, -1000, 3164, 2857, 128422, 2139, 2558, 116259,
	17591, 2052, 2052, -1000, 3586, 2883, -1000, -1000, 2173, 520,
	-1000, -1000, -1000, -1000, 898, 116259, -1000, 2856, 92295, 2139,
	1096, -226, 2192, 2192, 48957, 32769, 2228, -1000, 48957, -1000,
	-1000, 3485, 127860, -1000, -1000, 127860, 2356, -1000, 2895, 3674,
	-1000, 2351, 116259, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1088, -231, -232, -1000, -1000, 3475,
	-1000, 3394, -1000, -1000, -1000, 2757, 94, -1000, -1000, -1000,
	-234, 133979, 94, -1000, 316, -237, 1089, -243, 92295, 2061,
	-1000, 810, -1000, 2594, 1021, -1000, -1000, -244, -1000, -245,
	-252, -1000, -1000, 313, 50105, 50105, 50105, -156, -246, -1000,
	116259, 519, -1000, -1000, -1000, -1000, -1000, 116, -1000, -1000,
	3092, 964, -1000, 879, 1987, 240, 1102, 192, 119, -1000,
	-1000, -1000, 2823, -1000, 116259, -1000, -1000, 963, 518, -1000,
	48957, 1088, -253, -1000, 1061, -258, -1000, 1060, -260, -1000,
	2911, -1000, -261, 2324, -267, 230, 2214, 962, 3545, -1000,
	-1000, -1000, 2569, -269, -1000, -1000, 1992, 1088, 2173, 2423,
	-1000, 2203, 961, -1000, -1000, -1000, 1088, 517, 1992, 514,
	1587, 810, -1000, -1000, 1378, 3443, 3332, 955, -1000, -1000,
	-1000, 3132, -1000, 54123, 2355, 1898, 131665, 3132, 3132, -1000,
	-1000, 127860, 116259, 3530, -1000, 885, 882, 1536, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1021, -270, 3527, 2558,
	133979, -1000, -1000, 2192, 2792, -1000, 2192, 2906, -1000, 2220,
	-1000, -1000, -1000, -1000, 2902, -1000, 1824, 3662, -1000, -1000,
	-1000, 116259, 2173, 1992, 949, 1887, 1880, 3748, 948, 2351,
	1992, 57534, 2173, 57534, 2183, -1000, 116259, -1000, 2136, 1356,
	-1000, -1000, 1907, 3629, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -255, -1000, 809, -1000, 3359, -1000, 1126, 2217, 2217,
	-1000, -1000, 807, 879, -1000, 512, -1000, 510, -1000, 127860,
	2312, -1000, -1000, -1000, 949, 2173, 1021, 509, -1000, 3746,
	-1000, 2351, -1000, 2173, -277, 949, -278, -1000, -1000, -1000,
	-263, 2061, -1000, 1652, 1886, -1000, -1000, 2271, 49531, 48957,
	-1000, 3650, -1000, -1000, 2671, -1000, 48957, 2823, 48957, 48957,
	230, 64894, 1021, 949, -1000, -1000, 2569, 949, 1088, 1021,
	1992, 1587, 66573, -1000, -1000, -1000, 133979, -1000, -1000, -1000,
	133979, -1000, -283, -284, -1000, -271, 99514, -1000, 1021, -1000,
	1021, 1992, -1000, 2173, 2183, -266, 2173, 1201, -302, -1000,
	-1000, 2173, 949, -1000, -1000, -1000, -1000, 462, -1000, 949,
	1021, 48957, 1021, -1000, -303, -1000, 2173, -1000,
}

var sqlPgo = [...]int{
	0, 4646, 4643, 4642, 4625, 4618, 4615, 4613, 4612, 4611,
	4609, 4604, 4603, 151, 4602, 4598, 4597, 4596, 4592, 4591,
	4587, 4586, 4585, 4584, 4582, 4581, 4577, 4575, 4574, 4573,
	4572, 4570, 4569, 4568, 4566, 4564, 4560, 4559, 4558, 4557,
	4556, 4553, 4547, 4546, 4539, 4538, 4535, 4534, 4533, 4532,
	4531, 4529, 4528, 4527, 4526, 4525, 4524, 4523, 4522, 4520,
	4519, 4518, 4517, 4516, 4515, 4514, 4513, 63, 4512, 4509,
	4508, 4506, 4505, 4502, 4501, 4499, 4495, 4494, 4493, 4492,
	4487, 4481, 4480, 4479, 4478, 4477, 4474, 4468, 73, 4467,
	286, 4465, 4464, 4461, 4459, 4458, 4457, 4455, 4452, 4450,
	4449, 4447, 4443, 281, 4442, 130, 167, 4441, 4440, 3959,
	4438, 4436, 279, 4435, 4431, 4424, 4422, 4420, 290, 4418,
	4417, 4411, 4408, 4407, 4405, 4404, 4403, 4402, 4401, 4400,
	4399, 110, 209, 4397, 4396, 1189, 4395, 4391, 4387, 4386,
	4381, 4379, 4373, 4372, 4370, 4366, 4365, 254, 172, 4364,
	278, 4361, 4360, 4359, 4358, 4356, 4355, 4354, 4352, 4351,
	4350, 4349, 4348, 4347, 4346, 4344, 4341, 4340, 4337, 4336,
	4334, 4330, 4328, 4326, 4325, 4320, 4319, 4318, 4317, 4316,
	4310, 4308, 4307, 4304, 4303, 4302, 4295, 4292, 4291, 4290,
	264, 219, 125, 4289, 4288, 274, 273, 4285, 4280, 4279,
	4277, 4276, 139, 4, 41, 4275, 4274, 117, 96, 94,
	112, 108, 104, 4273, 118, 4272, 141, 79, 4271, 21,
	1, 174, 252, 12669, 244, 4270, 4268, 4267, 251, 203,
	4266, 247, 4263, 4262, 4261, 4260, 4259, 4258, 80, 52,
	188, 186, 180, 183, 25, 57, 109, 87, 64, 44,
	10, 85, 225, 20, 11, 267, 4257, 266, 9, 137,
	7, 34, 4256, 4250, 4249, 4248, 3876, 119, 4247, 272,
	248, 182, 4246, 4245, 4244, 537, 4243, 4241, 53, 4238,
	210, 95, 107, 16, 136, 4237, 158, 171, 31, 4236,
	168, 69, 4235, 166, 102, 93, 9469, 11992, 4233, 4232,
	140, 77, 124, 3583, 153, 152, 204, 193, 176, 177,
	56, 216, 214, 187, 178, 4231, 268, 4228, 3589, 89,
	194, 160, 6257, 4227, 4224, 4221, 92, 4220, 111, 4219,
	4213, 68, 19, 3, 2, 147, 39, 38, 8, 4212,
	49, 128, 54, 24, 4211, 26, 4210, 4209, 4208, 4203,
	4201, 91, 189, 4199, 4198, 287, 4197, 88, 59, 40,
	4196, 36, 230, 4195, 236, 145, 4191, 4188, 265, 211,
	200, 4187, 81, 243, 4186, 4185, 4182, 4181, 4179, 4176,
	162, 6, 154, 4168, 4167, 155, 4160, 60, 249, 205,
	4156, 66, 4155, 4154, 185, 55, 146, 284, 197, 233,
	123, 238, 190, 235, 4152, 4150, 4148, 223, 4142, 4137,
	232, 173, 4134, 4131, 261, 288, 99, 50, 86, 246,
	90, 201, 165, 4129, 207, 4128, 4124, 289, 192, 224,
	14, 13, 106, 105, 4121, 5, 245, 161, 237, 127,
	4111, 7250, 475, 3014, 4108, 4106, 144, 133, 83, 134,
	159, 271, 116, 4105, 4104, 3177, 4103, 4101, 4100, 4098,
	199, 4097, 4096, 4093, 150, 170, 220, 4092, 138, 78,
	58, 23, 126, 257, 275, 122, 234, 181, 263, 4091,
	4090, 4089, 196, 4088, 70, 132, 169, 206, 262, 65,
	4086, 242, 4085, 149, 946, 71, 156, 4084, 231, 4082,
	4081, 4080, 4079, 4077, 4075, 4072, 470, 240, 4071, 4070,
	4068, 32, 198, 4067, 270, 226, 191, 395, 61, 4064,
	98, 2247, 4063, 115, 229, 62, 148, 35, 4062, 1717,
	82, 4060, 0, 13779, 8614, 11224, 13044, 4059, 3418, 4058,
	4057, 4056, 217, 84, 4054, 4053, 4052, 114, 4051, 97,
	4050, 4049, 76, 4045, 27, 17, 18, 30, 28, 476,
	51, 4042, 4041, 45, 135, 163, 4040, 276, 239, 4036,
	4035, 4034, 4033, 100, 4032, 46, 4031, 43, 4028, 4027,
	47, 15, 29, 4024, 4022, 157, 4020, 113, 259, 4019,
	179, 4018, 74, 142, 4017, 4016, 4014, 72, 67, 269,
	213, 215, 101, 4012, 280, 4011, 208, 4009, 4008, 22,
	4007, 3999, 250, 121, 120, 48, 253, 143, 42, 184,
	221, 3994, 3991, 175, 3989, 3988, 3986, 277, 3983, 3974,
	33, 3973, 3971, 3969, 12, 3968, 3964, 212, 3275, 3963,
	3961, 37, 3957, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 599,
	599, 599, 600, 600, 601, 601, 601, 24, 45, 17,
	18, 18, 18, 18, 602, 602, 602, 602, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 595, 595, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 603, 603, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 495, 495, 495, 526, 526, 526, 526, 527,
	527, 622, 622, 623, 623, 623, 623, 623, 134, 134,
	393, 393, 393, 55, 55, 55, 55, 55, 590, 590,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 609, 609, 608, 607, 607, 607, 610, 610,
	610, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	216, 16, 16, 16, 113, 113, 113, 113, 113, 113,
	113, 108, 108, 529, 529, 530, 530, 201, 201, 202,
	202, 202, 202, 203, 203, 204, 204, 204, 70, 70,
	213, 213, 215, 215, 214, 214, 214, 214, 214, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 68, 68, 68,
	68, 68, 68, 68, 192, 192, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 76,
	76, 76, 76, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 625, 625, 626, 626, 627, 627, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 85, 85, 353, 353, 317, 317,
	86, 86, 86, 87, 87, 88, 88, 72, 72, 588,
	588, 369, 369, 486, 486, 73, 596, 596, 596, 598,
	598, 597, 597, 90, 90, 392, 392, 91, 91, 91,
	91, 91, 91, 92, 92, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 100, 100, 100, 100, 100, 101,
	101, 101, 98, 98, 98, 95, 95, 95, 94, 94,
	94, 99, 99, 99, 587, 306, 306, 97, 97, 97,
	96, 96, 96, 370, 370, 102, 102, 102, 102, 318,
	103, 103, 103, 103, 103, 103, 103, 103, 106, 106,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 488, 488, 104, 104, 104, 453, 453,
	109, 109, 109, 408, 408, 110, 110, 110, 110, 110,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 592, 592, 362, 362, 269, 269, 269, 269, 122,
	122, 122, 122, 123, 123, 123, 124, 124, 197, 197,
	140, 140, 140, 140, 139, 139, 139, 139, 139, 139,
	139, 139, 62, 62, 62, 63, 63, 64, 64, 65,
	65, 66, 66, 67, 67, 67, 67, 67, 143, 143,
	619, 619, 145, 142, 142, 142, 142, 142, 141, 141,
	144, 144, 144, 144, 146, 148, 148, 148, 148, 148,
	147, 147, 147, 147, 147, 149, 149, 520, 520, 378,
	378, 518, 518, 539, 539, 519, 519, 324, 324, 324,
	324, 324, 325, 325, 325, 528, 528, 528, 528, 528,
	528, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 198, 198, 199, 200, 200, 200,
	200, 200, 175, 175, 175, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 379, 379, 178, 178,
	178, 162, 162, 151, 151, 151, 151, 151, 151, 151,
	156, 156, 156, 156, 156, 156, 156, 156, 152, 152,
	164, 164, 164, 164, 164, 157, 157, 158, 158, 158,
	159, 159, 159, 159, 185, 185, 161, 161, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 153, 153, 153,
	153, 166, 166, 166, 166, 415, 415, 415, 190, 190,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 188, 188, 188, 188,
	188, 188, 611, 611, 612, 612, 612, 182, 182, 182,
	182, 182, 182, 467, 467, 176, 176, 176, 176, 181,
	181, 181, 181, 184, 184, 184, 184, 398, 398, 173,
	173, 173, 174, 174, 174, 179, 179, 180, 354, 354,
	177, 177, 183, 183, 183, 183, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 155, 155, 155, 155, 186,
	186, 172, 172, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 629, 629, 168, 168, 168, 167,
	167, 167, 167, 170, 170, 171, 171, 171, 171, 171,
	171, 169, 160, 189, 589, 589, 585, 585, 585, 585,
	585, 585, 585, 585, 586, 586, 586, 586, 591, 591,
	114, 114, 114, 114, 114, 114, 114, 125, 125, 125,
	125, 125, 125, 125, 128, 128, 115, 115, 115, 115,
	115, 115, 115, 118, 118, 116, 116, 116, 116, 117,
	117, 80, 80, 80, 80, 80, 15, 15, 15, 81,
	81, 260, 260, 219, 219, 219, 342, 342, 220, 220,
	332, 332, 332, 332, 217, 217, 218, 218, 82, 82,
	630, 630, 630, 604, 604, 604, 605, 605, 605, 605,
	605, 605, 326, 326, 327, 327, 433, 433, 433, 433,
	433, 330, 330, 330, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 340, 341, 341, 333, 333, 339, 338,
	338, 337, 337, 336, 336, 334, 335, 335, 335, 344,
	344, 343, 346, 346, 345, 432, 548, 548, 550, 550,
	550, 550, 550, 550, 550, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 416, 416, 631, 631, 632, 633, 546, 546,
	546, 547, 542, 542, 543, 543, 543, 543, 543, 328,
	328, 329, 329, 329, 329, 544, 545, 360, 360, 471,
	549, 549, 551, 551, 553, 634, 634, 634, 634, 634,
	634, 635, 635, 635, 431, 431, 430, 430, 351, 351,
	554, 554, 554, 554, 555, 555, 555, 555, 555, 558,
	557, 556, 556, 556, 556, 556, 84, 84, 84, 395,
	395, 394, 394, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 194, 194,
	272, 272, 272, 78, 78, 78, 12, 12, 12, 12,
	12, 12, 12, 287, 287, 13, 13, 13, 606, 606,
	606, 83, 83, 83, 83, 83, 83, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 594, 594, 593,
	593, 273, 273, 637, 637, 89, 89, 89, 89, 89,
	89, 89, 89, 489, 489, 490, 490, 77, 77, 77,
	77, 77, 417, 417, 414, 414, 413, 413, 359, 359,
	469, 469, 469, 470, 277, 277, 278, 278, 238, 238,
	238, 31, 30, 22, 22, 26, 26, 27, 27, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 28, 28,
	48, 48, 48, 48, 49, 49, 49, 49, 52, 52,
	53, 53, 47, 47, 47, 47, 50, 50, 44, 44,
	54, 54, 54, 54, 54, 613, 615, 615, 614, 614,
	618, 618, 618, 618, 618, 618, 616, 616, 617, 617,
	620, 620, 621, 621, 121, 121, 126, 126, 126, 126,
	126, 127, 127, 127, 127, 129, 129, 129, 129, 138,
	138, 193, 193, 193, 193, 193, 193, 193, 56, 56,
	56, 56, 69, 69, 69, 69, 136, 639, 639, 639,
	137, 137, 137, 638, 638, 270, 270, 427, 427, 428,
	428, 640, 640, 429, 429, 429, 429, 429, 263, 262,
	264, 264, 265, 265, 75, 75, 75, 253, 253, 252,
	254, 254, 255, 255, 250, 250, 531, 531, 257, 257,
	257, 258, 258, 246, 246, 247, 247, 248, 248, 249,
	249, 261, 261, 641, 641, 112, 112, 112, 196, 196,
	316, 316, 316, 424, 424, 424, 352, 352, 284, 284,
	426, 426, 426, 426, 391, 391, 391, 195, 195, 367,
	367, 381, 381, 382, 382, 483, 483, 383, 119, 119,
	120, 120, 135, 135, 223, 223, 221, 221, 221, 221,
	221, 221, 221, 221, 228, 228, 229, 229, 230, 230,
	231, 232, 232, 232, 232, 371, 371, 233, 233, 233,
	222, 222, 222, 224, 224, 224, 224, 224, 224, 224,
	227, 227, 227, 227, 234, 234, 234, 226, 226, 565,
	565, 565, 567, 567, 569, 569, 568, 568, 564, 564,
	566, 566, 636, 636, 397, 397, 397, 349, 350, 347,
	347, 348, 348, 357, 357, 355, 356, 356, 358, 358,
	468, 468, 468, 239, 239, 239, 388, 388, 388, 388,
	389, 389, 420, 420, 418, 418, 418, 418, 419, 419,
	421, 421, 421, 422, 422, 423, 423, 385, 385, 386,
	386, 387, 387, 387, 387, 449, 449, 225, 225, 225,
	364, 364, 364, 365, 365, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 440, 440, 438, 438,
	438, 438, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 473, 474, 474, 366, 366, 475, 425, 425, 583,
	583, 583, 584, 584, 466, 466, 476, 476, 476, 476,
	476, 476, 464, 464, 465, 465, 484, 485, 485, 401,
	401, 401, 401, 399, 399, 402, 402, 402, 402, 402,
	400, 400, 477, 477, 477, 477, 390, 390, 478, 478,
	478, 478, 479, 480, 480, 481, 481, 434, 435, 435,
	491, 491, 491, 491, 493, 363, 363, 363, 363, 363,
	541, 540, 540, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 508, 508, 508, 508, 508, 508,
	508, 494, 494, 494, 494, 494, 498, 498, 498, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	499, 499, 504, 504, 505, 505, 505, 500, 501, 506,
	506, 506, 506, 642, 642, 510, 510, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 496, 496, 496, 503,
	503, 503, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 409, 409, 411, 411, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	443, 443, 443, 443, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 559,
	559, 559, 559, 559, 559, 559, 559, 445, 445, 562,
	562, 563, 563, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 570, 570, 571, 571, 573, 573,
	574, 574, 575, 576, 576, 576, 577, 578, 578, 572,
	572, 579, 579, 579, 579, 580, 580, 581, 581, 581,
	581, 581, 582, 582, 582, 582, 582, 455, 455, 456,
	456, 462, 462, 462, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 323,
	323, 322, 274, 274, 274, 274, 274, 274, 376, 376,
	374, 374, 374, 377, 377, 375, 375, 373, 373, 372,
	372, 452, 452, 450, 450, 454, 454, 403, 403, 509,
	509, 509, 509, 509, 509, 509, 509, 404, 404, 404,
	412, 405, 405, 406, 406, 406, 406, 406, 446, 447,
	407, 407, 407, 448, 448, 457, 461, 461, 460, 459,
	459, 458, 458, 436, 436, 437, 437, 384, 384, 643,
	643, 380, 380, 482, 482, 482, 482, 320, 320, 368,
	368, 319, 319, 311, 311, 312, 312, 312, 312, 361,
	361, 463, 463, 511, 511, 512, 512, 513, 513, 514,
	514, 515, 516, 517, 451, 451, 295, 294, 281, 282,
	293, 292, 291, 280, 283, 288, 289, 290, 285, 286,
	302, 301, 300, 251, 256, 307, 308, 308, 310, 310,
	309, 309, 297, 298, 299, 487, 279, 313, 313, 314,
	314, 314, 315, 315, 315, 315, 275, 275, 276, 276,
	303, 303, 304, 305, 305, 296, 296, 296, 266, 266,
	266, 267, 267, 268, 268, 525, 525, 522, 522, 522,
	523, 523, 523, 524, 524, 524, 524, 521, 521, 521,
	521, 521, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 533, 533,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 535, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 538,
	538,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 3, 3, 6, 4, 9, 7, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 5,
	2, 0, 1, 2, 3, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 3, 4, 3, 3, 4, 3, 4, 4,
	4, 3, 5, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 2, 0, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 7, 2, 5, 0, 1,
	3, 3, 1, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 5, 2, 6,
	9, 4, 7, 7, 10, 7, 10, 10, 13, 5,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 6, 4,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	9, 5, 3, 1, 5, 9, 6, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 13, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 605, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 389, 435, 447, 404, 143, 426, 409,
	-144, -145, 465, -56, -69, -137, -136, 73, 130, 419,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -624, 102, -566,
	-93, -96, -129, -628, 164, 224, -115, -116, -117, 371,
	-123, -124, 428, -126, -127, -128, 431, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 470, -180, -189, -158, 530, 49, 485,
	82, 148, 439, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -565, -94, -95, -98, -100, -101, -97, -99,
	427, -224, -222, 602, 545, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 566, 575, -227, -225, -226, -234, 457, 553,
	505, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, -318, 2, -297, -303, -304, -305, -296,
	-266, -535, -538, 4, -532, -536, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 341,
	221, 343, 344, 347, 365, 351, 352, 353, 356, 357,
	360, 363, 364, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 376, 377, 379, 380, 381, 383, 384, 385,
	387, 389, 390, 392, 393, 395, 396, 397, 398, 399,
	400, 401, 403, 404, 406, 405, 407, 409, 411, 412,
	413, 419, 426, 420, 422, 423, 424, 425, 427, 428,
	429, 430, 431, 433, 434, 435, 437, 438, 439, 440,
	441, 443, 445, 446, 450, 451, 467, 468, 487, 447,
	448, 449, 452, 453, 454, 455, 456, 460, 458, 459,
	461, 462, 463, 465, 466, 469, 470, 472, 473, 474,
	475, 476, 477, 478, 481, 483, 484, 485, 504, 486,
	488, 492, 493, 494, 495, 489, 490, 503, 497, 498,
	500, 501, 506, 507, 508, 509, 510, 511, 512, 513,
	515, 523, 524, 525, 527, 530, 531, 532, 533, 521,
	535, 536, 539, 540, 541, 544, 542, 543, 545, 547,
	550, 551, 552, 558, 557, 559, 561, 562, 567, 568,
	570, 571, 572, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 155, 167, 168, 180, 195,
	196, 208, 210, 218, 219, 220, 241, 242, 244, 249,
	271, 340, 342, 358, 362, 378, 382, 386, 388, 402,
	442, 479, 491, 496, 516, 517, 518, 519, 526, 528,
	553, 554, 555, 560, 569, -318, 2, -297, 349, -290,
	2, -266, -266, 389, 28, 2, 28, 377, 459, 508,
	510, 2, -592, -362, 2, 28, -269, -266, 102, 206,
	457, -290, 2, -592, 206, -362, 25, 2, -266, 2,
	363, 22, 27, 66, 77, 98, 141, 166, 189, 192,
	-627, 365, 396, 445, 461, 503, 513, 527, 2, 557,
	292, 458, 505, 234, 120, 532, 452, -606, 450, 451,
	363, 394, 437, 209, 546, -270, 2, 447, -266, 292,
	2, 605, 94, 74, 442, 462, -147, 2, 282, 524,
	-148, -149, -146, 516, -520, 452, 437, 314, -266, 605,
	605, 605, 28, -279, -266, 505, 234, 452, 120, 501,
	605, 2, 505, 368, 557, 458, 120, 399, 234, 532,
	192, 141, 27, 452, -606, 580, 581, 292, 127, -590,
	2, -585, 4, -536, -532, -312, -311, 505, 511, 120,
	-305, -296, 595, -304, 605, 605, 605, 605, 2, 252,
	253, 398, 397, 462, 463, 28, 605, 605, 605, 605,
	450, 2, 166, 22, 27, 66, 93, 98, 127, 189,
	192, 354, -625, 365, 396, 461, 503, 507, 513, 527,
	-605, 486, 68, 425, 452, -604, -606, 292, 532, 141,
	-413, 120, 282, 204, 540, 510, 508, 538, 133, 240,
	543, 542, 605, 605, -106, 2, 602, 32, 31, -105,
	-109, 143, 465, -216, 505, 245, 2, -266, 605, 605,
	605, 2, 252, 253, 450, 451, 28, 605, 605, 190,
	-585, 2, 605, 605, 605, 2, 28, 252, 253, 450,
	451, 245, 2, 68, 454, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 2, -191, 462, 486, 215, 47, 46, 74, 28,
	395, 79, 369, 121, 127, 150, 533, 207, 234, 235,
	260, 93, 94, -415, 44, 253, 68, 252, 451, -611,
	450, -467, 506, 453, 459, 500, 264, 447, 524, 102,
	547, 438, 572, 399, 400, 498, 413, 283, 159, 191,
	4, 120, 314, 437, 464, 268, 267, 516, 282, 446,
	372, 84, 605, -636, 2, 505, -638, 2, 524, 524,
	2, -638, 2, -638, 2, -638, 2, -639, 524, 569,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, -222, -224,
	-223, 605, 605, 605, 605, 605, 605, 605, -191, 462,
	2, 74, 28, -355, -357, 537, 243, 152, 355, -221,
	-223, 2, -565, -518, 2, -441, -539, -443, 593, 594,
	586, 502, 67, -322, 334, 573, -455, 127, 538, 349,
	-538, -444, -457, 155, 365, 442, -377, 8, 9, 5,
	6, 7, -275, -445, -451, 529, 170, 339, -315, 606,
	10, 602, -562, -223, -456, 37, 210, 65, -522, -314,
	-276, -494, 244, -313, -296, -559, -560, 4, -532, -533,
	-523, -497, -505, -501, -502, -508, -266, -535, 77, 111,
	112, 110, 115, 114, 285, 284, 116, 113, 464, 546,
	66, 36, 218, 219, 249, 340, 220, 75, -561, 142,
	-534, 241, 242, 479, 51, 402, 180, 126, 125, 342,
	56, 54, 554, -506, 122, 516, 517, 518, 519, 195,
	196, 58, 167, 168, 362, 386, 496, 526, 528, 208,
	271, 43, 106, 191, 239, 222, 248, 250, 254, 272,
	275, 315, 331, 336, 359, 361, 436, 471, -642, 555,
	491, 69, 70, -567, 405, -568, -290, -567, 605, 605,
	607, 605, -347, -349, -350, 2, 28, 139, 602, 2,
	-472, 2, -473, -477, -223, 265, -476, 602, -474, 600,
	-297, 350, -563, 443, -559, -560, -275, -296, -314, 4,
	-532, -534, 604, -351, 602, 120, 452, 505, 78, 234,
	93, 166, -408, 602, -266, 28, 349, 520, 607, -348,
	393, -453, 602, 349, 352, 190, 352, 60, 296, 2,
	2, 2, 2, 2, 218, -266, 505, 119, 2, 263,
	2, 2, 2, 2, 2, 2, 2, -370, 218, 2,
	-297, 557, -370, 218, 2, -370, 218, 2, -414, 2,
	87, -280, 218, 2, -266, -306, 218, 2, -301, -303,
	-310, 218, 2, -308, -266, -527, 218, 2, -526, 4,
	-532, 116, 464, -441, 2, -135, 2, 60, -266, 557,
	2, 467, 2, 602, -147, 2, 71, 524, 43, 462,
	-148, 2, -428, 2, -429, -262, -263, -264, -484, -265,
	251, 392, 401, 576, 131, 334, 572, -619, 190, 585,
	520, -518, -518, -518, -378, 604, 2, 2, 2, 2,
	2, 2, -477, 218, -297, 2, -294, -521, 4, -532,
	-536, -533, -537, -535, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 148, 152, 170, 172, 185,
	189, 190, 206, 209, 212, 225, 238, 243, 245, 265,
	269, 276, 284, 285, 334, 339, 345, 349, 350, 354,
	355, 375, 391, 408, 432, 457, 464, 482, 499, 505,
	514, 520, 522, 529, 537, 538, 546, 548, 556, 563,
	564, 565, 566, -538, 77, 2, -477, 218, 2, -300,
	218, -477, -303, 2, -280, 2, -293, -599, -517, -521,
	512, 162, 420, 8, 2, -319, 218, -297, -299, -303,
	-301, 2, 2, 2, 2, -308, 2, -526, 218, 2,
	28, 28, 557, 393, 245, 520, 607, -368, -311, -312,
	-517, -361, -266, 604, -441, 2, -135, -118, 2, 185,
	-441, 218, 2, -135, 218, 2, -441, 218, 2, -135,
	218, 2, -266, 2, -607, 2, -529, 218, -525, 10,
	-524, 5, 4, -532, -536, -533, 218, -266, 2, 296,
	2, 2, 527, 2, 98, 505, 119, 2, 424, -626,
	445, 531, 2, 2, 2, 2, 2, 2, 2, 505,
	-285, 2, -266, 185, 489, -308, 218, -309, 2, 458,
	-637, 405, -526, 218, 2, 557, -301, 218, 2, -301,
	234, 247, -280, 218, 2, 510, 508, 510, 508, 190,
	2, 245, 2, 245, 2, -478, 2, -479, -473, -480,
	600, 350, -488, 2, -487, -524, 553, -106, 602, -106,
	602, 462, 602, -529, -297, -297, -441, 2, -135, -118,
	2, -441, 2, -135, 2, -266, 2, -132, -529, -131,
	602, 190, -266, 2, -441, 2, -135, -118, 2, -441,
	2, -135, 2, -216, 185, 2, 120, 505, -191, 2,
	185, 548, 2, 8, 2, 225, -529, 453, 400, 177,
	2, 467, 2, 468, 74, -415, 572, 74, 190, 2,
	190, 2, -398, 2, 566, 393, 190, 2, 2, -589,
	2, 349, 190, 2, 190, 2, 190, 2, 190, 2,
	190, 2, -190, 463, 525, 504, 397, 253, 2, -135,
	563, -118, 253, 252, -441, 563, 2, -612, 185, 451,
	-441, 2, 523, 262, 160, 190, -398, 2, 190, 2,
	190, 2, 5, 2, 398, 487, 2, 251, 392, 487,
	2, -297, 505, 557, 458, 120, 28, 2, 450, 2,
	2, 88, 89, 190, 2, 190, 2, 205, 190, 2,
	190, 505, -379, 604, 572, 2, -390, -477, -427, -428,
	-427, 520, -355, -357, -191, 467, 2, -228, -388, -230,
	185, -418, -419, -231, 276, 172, 345, -232, -397, 28,
	139, -397, -397, 60, 603, 603, 11, 12, 76, 41,
	593, 594, 595, 596, 183, 597, 598, 591, 592, 590,
	583, 584, 588, 257, 258, 95, 587, 585, 86, 290,
	444, 173, 174, 175, 176, 421, 232, 34, 233, 14,
	15, 16, -322, 33, 354, 275, 573, 222, 471, 586,
	17, 18, 19, 248, 250, 336, 50, 225, -274, 365,
	-321, 502, 67, -441, -441, -441, -441, -441, -441, -441,
	-441, 361, 602, -384, -436, 600, -223, 602, 602, 602,
	602, -517, -223, -441, -455, 603, -375, 602, -223, -455,
	-450, 602, 442, 600, 602, -458, -441, 5, 5, 5,
	602, 604, -570, 567, 185, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 388, -499, 602, -498, 602, -498, -498, 558, -496,
	602, 575, 568, 602, -496, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 558, 607,
	-567, -351, 602, -380, -482, -441, 595, -380, -380, 349,
	-372, -441, 106, -401, 254, 315, 191, 272, 436, 239,
	-438, 606, -438, -466, 575, -223, -474, -296, -223, -476,
	602, -472, -466, -107, -517, -90, -103, -112, -135, -150,
	-195, -196, 595, -297, 602, 190, 602, 604, -521, 190,
	-361, -280, -307, -266, -297, -313, -314, -319, -291, -266,
	2, 138, -372, -585, 532, 452, 28, 458, -527, -269,
	38, -452, -491, -492, -541, 606, -540, -494, -504, -500,
	-503, 378, 382, -523, 54, 554, -506, 244, 4, -532,
	-534, 241, 242, 479, 51, 402, 180, 126, 125, 342,
	56, 516, 517, 518, 519, 195, 196, 58, 555, 491,
	69, 70, -585, 532, 452, 28, 458, 185, -527, 185,
	-527, 2, 2, 155, 2, 2, 2, -266, -244, 607,
	64, 429, 155, -370, 218, -244, 155, -244, 155, -320,
	218, -319, -244, 155, -244, 607, 155, -244, 607, 155,
	604, 607, 155, -527, 2, -414, -520, -372, 38, -428,
	2, 127, 4, 5, -640, 607, 274, -325, 289, 333,
	214, 350, 570, 343, 131, -528, 5, 4, -451, -463,
	127, 282, 244, -511, -513, 8, -512, 9, -514, 593,
	594, -519, -518, 109, 604, -521, -241, 422, 465, 364,
	-240, 24, 29, 143, 236, 319, 551, 161, -337, 237,
	-334, 368, 155, 483, 541, -599, -602, 449, 512, 162,
	420, 90, 343, 465, 364, 422, 155, -394, -396, 38,
	118, 319, 363, 61, 228, 294, 295, 485, 560, 155,
	465, 364, 422, 364, -13, -255, 24, 143, -257, -252,
	465, -602, 99, 422, 579, 427, 374, 497, 391, -602,
	270, -601, 562, 332, -599, -243, 483, 541, -599, -602,
	449, 422, -242, -339, -334, 368, 155, 606, 24, 143,
	422, 465, 364, -622, -623, 29, 422, 364, -593, -287,
	-564, 225, 566, 155, -287, -287, -477, 218, -616, 185,
	2, -609, -131, 266, 5, 10, -529, -131, -368, 607,
	607, -521, 595, 451, 450, 155, 155, 155, 155, 253,
	185, 334, 334, 2, 2, 2, 2, 2, 192, -604,
	-627, 2, 2, -297, 218, -353, 349, -588, -369, 505,
	-297, 185, 334, 43, -300, 218, 2, -303, 557, -593,
	334, -302, 218, -297, 38, 602, 334, 2, -414, 2,
	234, -564, 334, -478, -316, -297, -473, -316, 465, -290,
	38, -438, -297, 603, 607, -488, -488, -529, -204, 566,
	190, 602, -216, 566, 566, 253, -485, 607, -484, 225,
	-530, -529, -132, -529, 425, 253, -529, -588, -280, 2,
	-297, 2, 505, 255, -529, -204, 225, -529, -529, -529,
	-520, 28, 468, 2, -190, 463, 525, 89, 468, 2,
	-297, 505, 120, 234, 80, -616, 185, 2, -266, -591,
	185, -586, 437, 452, 532, -585, -297, 120, -297, 120,
	-297, 120, -297, -297, 2, 2, 2, 2, 2, 85,
	2, -135, -441, 2, 85, 2, 46, 484, -612, 185,
	2, 523, 2, 523, 2, -266, -266, -266, 486, 274,
	-297, -297, -297, -298, -303, 453, 506, 533, 451, -441,
	2, -629, 2, 190, 185, 2, 505, 234, 505, 234,
	120, 190, 74, 120, 28, 505, 448, 604, 4, -244,
	607, -270, -228, -388, -520, -389, -388, -229, -228, -231,
	185, 401, 542, 319, 469, 259, -419, -418, 28, -441,
	-423, 179, 318, -441, -421, -443, 593, 594, -512, -514,
	-371, 343, -222, -222, -222, -358, -468, -441, 391, 234,
	-493, -491, -491, -295, -521, 516, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, 275, 222, 471, 50, 225, -441, 520, -441,
	-441, -441, -441, 312, 334, 339, 529, 170, 539, 139,
	343, -643, 499, 40, -448, -223, -376, 602, -462, 35,
	482, 28, -455, 602, 2, -436, -441, -437, -323, -321,
	-266, 593, 594, 595, 596, 597, 598, 583, 584, 585,
	14, 15, 16, 588, 592, 590, 591, 183, 95, 587,
	290, 444, 86, 173, 174, 175, 176, 257, 258, 17,
	18, 19, 34, 586, -373, -372, -372, 603, 556, 28,
	139, 595, 2, 603, 607, 38, 603, -441, -373, -454,
	-450, -372, -461, -460, 563, -409, -410, 571, 299, 123,
	216, 297, -411, 456, -515, 8, -521, 595, -571, 178,
	209, 602, 603, 2, 603, 2, 603, -441, 2, 603,
	-441, 2, 603, -441, 2, 603, -441, 2, 603, 2,
	603, 2, -441, -441, -441, -441, -441, -441, -441, -372,
	8, -515, -515, 516, 516, -515, -515, -515, -507, 378,
	379, 380, 381, 277, 278, 279, 280, 382, 383, 384,
	385, 304, 305, 306, 307, 300, 301, 302, 303, 308,
	309, 310, 311, 200, 201, 202, 203, 196, 197, 198,
	199, -507, -403, 2, -509, -372, 4, 571, 299, 123,
	216, 297, 456, 5, -403, 2, -404, 2, -441, -372,
	-405, -442, -443, 593, 594, 586, -322, -455, -406, 2,
	-441, -373, -441, 57, 269, 522, -407, -441, 190, -372,
	-372, 2, -372, 2, -568, 38, -372, -364, 607, 190,
	38, 4, -364, -364, 602, 603, 607, -402, 213, 293,
	288, 247, -402, -472, -401, 254, -399, 359, -399, -399,
	-466, -281, 600, 608, -521, -466, -465, -464, 38, -290,
	356, -466, -466, 604, 603, -465, 601, -583, 602, 605,
	605, 605, 605, 605, -297, 602, -372, -521, 604, 488,
	2, 603, 248, 248, 248, 248, 248, 349, 443, 603,
	520, -587, -306, -310, 506, 2, 566, -105, 351, 603,
	607, -363, 37, 600, 604, -515, 2, 2, -510, 558,
	602, 602, -410, 602, 190, -587, -310, 506, 2, -592,
	-362, -362, 520, -266, 2, -297, -370, -244, 155, -370,
	-370, -244, 607, 155, -280, -301, -306, -308, -310, -266,
	-526, -527, -244, -302, -619, 603, 524, -429, -324, 401,
	481, 423, 460, 501, 8, 9, 8, 9, 607, -521,
	607, -620, 93, 520, 78, 452, -259, 283, 520, -432,
	218, 78, -542, 93, -283, -543, -266, 72, 538, 391,
	189, 153, -620, 93, 391, -620, 93, 2, 236, 93,
	465, 486, 28, 60, -477, 41, 41, 28, -600, -601,
	270, 190, 572, 505, 234, 452, 520, 520, -477, -396,
	-491, 118, 294, 295, 60, -516, -511, 593, 594, -516,
	60, -516, -516, -516, 566, -300, -477, 452, 520, 520,
	520, 411, 411, -252, -148, 520, 520, 28, -191, 430,
	127, -641, 585, 411, 520, 190, 270, -601, 607, 41,
	41, 28, -600, 190, 520, -319, -281, 552, 42, 552,
	42, 552, 520, 42, 452, 520, 607, 42, 520, 520,
	-13, 465, -594, -271, 105, 325, 287, 326, 97, 322,
	96, 321, 103, 323, 104, 324, 559, 337, 63, 320,
	298, 327, -272, -273, 146, 370, 550, 120, -526, -13,
	-13, 465, 364, 422, 155, -617, 225, 28, -606, 225,
	-485, 225, -485, -311, -266, 604, -135, -441, -441, -135,
	-441, -135, 46, 155, 155, 2, -637, 263, 602, -328,
	334, 190, -361, -486, 245, 607, -369, -585, 155, -526,
	-395, -394, 334, -302, 218, 2, 155, -351, 334, 149,
	602, 399, 2, 155, -282, 218, -267, -266, -414, -246,
	509, 155, -392, 548, -424, -135, 602, 127, 38, -424,
	-381, -382, -483, -383, -283, 602, -290, -438, -106, -487,
	603, 603, 603, -203, 353, -202, -266, 5, -216, -352,
	-284, -283, 119, 403, 403, -210, 566, -131, -132, 603,
	607, -485, 225, 489, -204, -204, -485, -485, -297, 185,
	-529, -204, -204, -204, 2, 2, 2, 2, -398, -297,
	-280, -319, -297, 28, 604, -527, -527, -310, -306, -398,
	-280, -398, -280, -398, -280, -398, -398, -135, -441, 486,
	2, 462, 185, 185, 604, -398, -354, 432, 2, 399,
	120, 505, 368, 234, -297, -319, -297, -319, -280, 120,
	-280, 121, -297, 4, -477, -389, -229, 350, 259, 469,
	-421, -422, -443, 442, 443, -422, 442, 443, 8, 9,
	8, 9, -233, 473, 338, -370, 607, -238, 39, 135,
	259, -297, 572, 151, -441, -441, 520, -643, 499, -448,
	151, -441, 312, 339, 529, 170, 539, 139, 343, 190,
	602, -442, -442, 603, -374, -441, -441, 601, 610, 603,
	604, 603, -357, 607, -355, -441, -372, -372, 603, 604,
	-372, -361, 601, 601, 607, 603, -459, -460, 144, -441,
	520, 520, 520, 520, 602, 603, 604, -576, 360, 602,
	602, -441, 603, 603, 603, 603, 38, 607, 607, 607,
	603, 607, 607, 607, 603, 603, 603, 607, 603, 572,
	572, 603, 603, 603, 603, 607, 603, 607, 603, 190,
	603, 603, -412, 375, 603, 11, 12, 593, 594, 595,
	596, 183, 597, 598, 591, 592, 590, 583, 584, 585,
	86, 290, 444, 14, 15, 16, -322, 248, 225, -442,
	-442, -442, -442, 603, -446, -447, 190, 185, 38, -407,
	-407, -407, 603, 190, -372, 603, 603, 602, -569, 292,
	334, 603, -435, -434, 564, -482, -365, 2, -472, -292,
	-521, -435, -435, -372, -441, 254, 254, -400, 548, 349,
	-402, -472, -465, -517, -440, -439, 187, 39, 135, 328,
	329, 330, 221, 188, -465, -290, -351, -465, -465, -521,
	-466, -466, -464, 603, -584, -517, 603, -366, -475, -563,
	-357, 604, -521, -213, -564, -192, 5, 339, -192, -192,
	-192, -192, -297, -527, 520, 520, 225, 25, 376, -491,
	600, 601, 8, -521, 602, -515, -515, -515, -527, 190,
	190, 225, 349, 190, -526, 2, -244, -370, -244, -244,
	-319, -320, -244, -244, -244, -393, 566, -518, -428, 536,
	83, 401, 516, -518, -240, 422, -283, -283, -297, -307,
	204, 412, -526, 334, -432, 218, -245, 334, 218, -291,
	-491, 602, -416, 568, 259, 259, 548, -283, -291, 259,
	218, -283, 218, -291, 2, -291, -595, 401, 344, -441,
	60, -335, 281, 399, 335, -241, 422, 465, 364, -135,
	-135, -135, 602, -619, 548, 138, -297, -319, -297, -307,
	-526, -302, 465, 364, 422, 331, -313, -516, -516, -394,
	465, 364, 422, -307, -526, -300, -526, -251, 218, -266,
	-251, 218, 452, -280, 411, 572, 45, -641, -517, -517,
	520, 190, -242, -135, -135, -135, 602, -281, -243, 422,
	5, 218, -283, 5, -283, 218, 5, -266, -283, -307,
	-526, -623, 24, 143, -283, -307, -526, -271, 370, -529,
	339, 544, -280, -593, -287, 452, 520, 520, -477, -613,
	-614, 206, 435, 452, 438, -527, -131, -207, 566, -131,
	-201, 229, 595, -590, -529, -266, 557, -266, -326, -329,
	-327, -283, -433, -432, -546, -547, -542, 275, 234, 538,
	247, 171, 93, -219, -220, 568, 566, 155, -317, -297,
	600, -204, -529, -297, -486, -308, -309, 155, -351, 334,
	-526, 38, 155, 602, 2, 2, -301, 349, 334, -282,
	218, -247, 145, -641, -280, -435, -365, -391, -426, 432,
	349, -352, 553, -290, -391, -367, 607, 190, 585, 604,
	-352, -481, 595, -106, -106, -204, 607, 602, 585, 585,
	602, -529, 603, 607, 604, 602, 585, 585, -212, 353,
	-211, 147, 261, 246, 475, 476, 477, 478, 137, 474,
	124, 317, -485, -529, -210, -132, 190, 190, -65, 566,
	505, -204, 606, 438, -266, -398, -398, -398, 462, 462,
	-266, -361, -293, -280, -297, -294, -319, 185, 185, -280,
	542, -422, 350, 286, -468, -239, 574, -297, 606, -441,
	-441, 151, 151, -441, -442, -442, -441, 151, 190, 602,
	-441, -452, 33, 33, 603, 607, -437, -441, -321, 603,
	556, -357, -357, 603, 595, -521, 606, 603, -450, 148,
	-441, 514, 299, 216, 297, -411, 297, -411, -411, -515,
	5, -521, 595, -577, -286, 602, -266, 564, -356, 355,
	603, -493, -491, -441, -441, -441, -441, -441, -515, -496,
	-496, -511, -511, -441, -446, -441, -493, -491, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, 139, 334,
	343, -442, -447, -446, -441, -441, -491, 603, 603, 603,
	-372, -105, 602, 292, -385, 209, -441, -485, 607, -385,
	-385, 603, -472, -472, 602, -441, 254, 601, 607, 609,
	585, 585, -351, 604, -464, -465, 601, 603, 607, 603,
	607, -425, 38, 603, -521, -435, -215, -214, 136, 53,
	107, 134, 339, 248, -615, 566, -527, -527, 452, 352,
	5, 8, 600, 601, 604, -515, 603, 603, 603, -527,
	-527, 452, -585, 532, 452, 28, -527, -244, -244, 119,
	319, -441, 520, 520, 60, 225, 155, 334, 550, 334,
	-543, 153, -548, -441, 602, 234, 602, 602, 2, -235,
	-236, -237, 143, 465, 24, -621, 2, 548, 155, -244,
	155, -244, 570, -335, 602, 602, 520, 452, -259, 520,
	566, -372, -441, -205, 127, -520, -602, 606, -602, 606,
	452, 520, 520, 452, 520, 520, 334, 155, 566, 169,
	169, 572, -251, 185, 520, -517, -517, 566, -372, 520,
	-495, 48, 26, 334, -301, -244, 155, 520, 520, 532,
	465, -529, -529, 339, -13, -307, -526, -302, 465, 364,
	422, -592, -592, 206, -310, -617, -485, -209, 353, -208,
	147, 434, 137, 261, 230, -485, -207, 190, 245, 566,
	-302, 2, 603, 603, 607, 607, -549, -245, -297, -282,
	234, 234, -289, -267, 38, 347, 347, 602, -297, -86,
	566, -484, -517, -596, 566, 43, -300, 38, 155, -593,
	-135, -302, -489, -490, 5, 38, -297, 155, 349, 334,
	-248, 268, -641, -525, -564, -357, -391, -380, 335, 91,
	603, -435, -382, -365, -441, 2, 603, -202, -203, -529,
	-529, -529, -204, -216, -284, 2, -530, -529, -529, 607,
	602, 585, 585, 585, 585, 585, -210, -485, -131, -135,
	353, -297, 595, -398, -341, -340, 368, 343, -341, 442,
	442, 350, 179, 264, -238, -281, -441, -441, 151, 33,
	33, -441, -441, -452, 603, -441, -441, -372, 601, 5,
	-441, 603, 603, 8, -441, 603, 604, -578, -266, -441,
	603, 60, 603, 603, 607, 607, 603, 603, 603, 603,
	603, 603, 603, -447, 190, 139, 343, 602, 603, 603,
	-105, -449, 212, 60, -472, -449, -449, -400, -361, -472,
	-439, -281, 600, -281, 600, -521, -517, -475, 602, 604,
	-214, 585, -529, -529, -192, 206, -615, -615, 566, -310,
	601, 2, 600, -521, 603, -310, 190, -587, -310, 506,
	119, -283, -283, 505, 442, -251, 391, -432, 155, 155,
	-550, 93, -552, 76, 171, 102, 334, 339, 538, 391,
	72, 127, 349, 408, -631, -632, -633, 38, 577, 578,
	603, -359, -469, -563, 602, -266, -359, -361, 334, 494,
	127, 349, 334, 127, 349, 561, 119, 2, 532, 79,
	-283, -291, -361, -361, -297, -307, -526, 163, 603, 607,
	585, 2, 595, 595, -307, -526, -302, -307, -526, -300,
	155, -251, 366, 169, -135, -517, 520, 163, 603, -281,
	5, 5, 155, -278, 76, -283, 5, -283, -301, 119,
	452, 520, 520, 349, 349, 352, -613, -614, -207, 607,
	602, 585, 585, 585, -207, -530, -131, 2, -351, -342,
	236, -283, -547, -544, -545, 391, -433, -551, -553, 171,
	391, -330, 602, -282, -267, 602, -135, 2, -218, -217,
	-266, 5, 602, -328, 353, 601, -598, 353, -597, 117,
	137, -526, -395, -135, -302, -351, 603, 607, 149, -417,
	548, -281, -297, 155, -249, 267, -641, -525, -246, -420,
	-418, 140, 602, 349, -135, -357, 585, 603, 603, 119,
	603, -211, -212, -529, -131, -529, -529, -529, -210, -485,
	-66, -67, 234, 93, 373, -294, 505, 234, 602, 602,
	-238, -441, -441, -441, 603, -357, -521, 595, -572, 368,
	603, -468, -441, -441, -442, 190, 602, -452, 603, -573,
	565, -441, -386, -387, -441, 440, 108, 210, -573, -573,
	603, -517, -517, 2, -529, 352, 2, 520, 600, 2,
	190, -527, 190, 190, 225, 225, 38, 411, -432, -291,
	-291, -295, -288, -266, 171, 218, 339, 561, -416, 259,
	602, -442, 542, -297, 602, 2, 217, 217, 30, 60,
	-634, 131, 238, 603, 607, -470, -277, -266, -441, -470,
	603, 603, 339, 542, 339, 561, -441, 542, -491, 602,
	-244, -244, 603, 603, -441, 520, -520, 100, -518, 2,
	-602, -251, -280, 185, -517, -441, 520, 5, -244, -295,
	-244, -244, -278, 532, -307, -526, -302, -618, 506, 459,
	533, 453, 193, 441, -618, 185, -208, -209, -529, -131,
	-131, -207, 38, -336, -337, 2, -549, 259, -288, 259,
	227, 154, -359, 602, 602, -361, -630, 566, 603, 607,
	585, 585, -326, -219, -87, -88, 521, -484, 607, 602,
	585, -351, 38, 5, 602, 602, -266, 349, 602, -281,
	-261, 92, -641, -525, -247, -391, 335, -361, 93, -420,
	-448, -204, 602, -204, 603, 607, 28, 602, 28, 602,
	-297, -319, -372, -372, 603, -357, 60, 607, 603, 603,
	-442, -452, 603, -574, -575, -286, 607, 602, 602, 466,
	601, 601, -527, 2, -527, -527, -527, 452, -251, 391,
	-266, -543, -552, -288, 334, 548, -441, -442, -268, 602,
	-441, 602, 602, 38, 127, 238, 132, 223, -431, -635,
	101, 495, 226, -469, -238, 603, -430, 548, 408, -442,
	-278, -359, 602, 602, 602, 585, 190, -135, 602, -495,
	-244, -301, 520, 2, 2, 190, -592, 603, -608, 406,
	-135, -219, 602, -331, 81, 94, 128, 217, 194, 235,
	486, 492, 28, -331, 603, -359, -359, 603, -332, 349,
	119, 319, -217, -518, -518, 603, 38, -88, 9, -597,
	-598, -441, 38, -135, -489, -359, -297, -359, 349, -253,
	-252, 276, -525, -248, 603, -291, -391, -530, -67, -361,
	-361, 603, 603, -579, 399, 443, 211, -372, -358, 603,
	607, 38, -387, 2, 2, 2, -615, -310, 411, -245,
	155, 213, 603, -554, 291, -266, 603, -395, -395, 38,
	132, 223, -338, -334, 602, -239, -470, 213, -297, -603,
	548, 603, -344, -343, -340, -346, -345, -340, -372, -518,
	100, 366, -372, -278, -527, -527, 349, -610, 191, -609,
	5, 10, -332, -360, -471, -283, -430, 603, 603, 82,
	119, -342, -135, 603, -135, 603, 603, -417, 603, -297,
	-250, -531, 411, 413, -641, -249, -435, 603, 603, 603,
	603, -580, -581, 50, 535, 109, -441, -580, -580, -575,
	-577, 190, 171, 566, -555, -558, -557, 582, 472, 191,
	367, 603, 494, 560, 603, 603, -634, -361, 566, -351,
	-441, -430, 603, 607, 553, 603, 607, 553, 603, 190,
	603, -244, -615, -244, -618, -206, 566, 46, -260, -259,
	603, 607, -431, -430, -338, 390, 133, 143, -336, -630,
	-430, 602, -431, 602, -258, -257, -641, -511, -261, 140,
	-204, -582, 153, -581, 387, 184, 442, 387, 184, -582,
	-582, -527, -288, 55, -557, 582, -558, 582, 542, 133,
	-435, 603, 55, -554, -343, 225, -345, 190, 366, 190,
	450, -609, 30, -471, -338, -431, -220, 566, 443, 443,
	2, -219, -332, -431, -359, -338, -359, -254, -255, -256,
	-361, -253, 335, 542, 109, 209, 515, 319, 33, 585,
	-556, 319, 429, 64, 465, -556, 585, -555, 602, 602,
	-527, 353, -220, -338, -435, 2, -332, -338, 603, -220,
	603, -250, 465, 442, 357, -581, -441, 23, 339, 127,
	-441, -634, -372, -372, -244, -203, 602, -435, -220, -260,
	-220, -430, -435, -431, -258, -381, 603, 603, -203, -435,
	-435, -431, -338, -254, -435, -333, -334, 520, 603, -338,
	-220, 602, -220, -435, -372, -435, 603, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 560, 561, 563, 564, 565, 567,
	568, 570, 572, 574, 575, 576, 578, 579, 581, 582,
	583, 584, 585, 587, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	660, 662, 0, 1431, 1433, 1435, 1437, 0, 816, 0,
	36, 37, 39, 0, -2, 339, 341, 343, 345, 0,
	376, 378, 379, 381, 383, 384, 385, 387, -2, 0,
	493, 494, 496, 498, -2, 0, 1030, 1032, 1034, 0,
	649, 651, 0, 1037, 1039, 1041, 0, 0, 672, 673,
	0, 1542, -2, 664, 666, 668, 670, 741, 743, 745,
	747, 749, 751, 753, 755, 757, 759, 760, 762, 764,
	766, 768, 770, 771, 773, 775, 777, 778, 780, 781,
	783, 785, 787, 789, 791, 793, 795, 797, 799, 801,
	803, 805, 807, -2, 810, 811, 812, -2, -2, 0,
	-2, -2, -2, 1449, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 437, 439, 441, 443, 445, 448,
	450, 452, 1600, 500, 502, 504, 506, 508, 510, 512,
	0, -2, 1614, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1573, 1575, 1577, 1579, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 562, 566, 569, 571, 573, 577, 580,
	586, 588, 590, 545, 546, 549, 2312, 2330, 2331, 2332,
	2335, 2336, 2337, 2338, 2339, 2340, 2798, 2879, 2880, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 547, 548, 1219, 0, 614,
	612, 2297, 615, 2594, 617, 619, 487, 488, 489, 490,
	491, 492, 0, 642, 628, 1612, 643, 645, 646, 647,
	648, 609, 607, 0, 647, 642, 2366, 640, 1429, 1430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 416, 1278, 1279, 1280, 1414, 1415, 2642, 1456, 0,
	239, 661, -2, -2, 2763, -2, 695, 696, -2, -2,
	710, 714, 705, 2767, 0, 2645, 2629, -2, 717, 1432,
	1434, 1436, 814, 815, 2316, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 249, -2, -2, -2, -2, 0, 0, 2690, 2418,
	2265, 2332, 2268, 2263, 340, 342, 344, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 377, 380, 382, 386,
	-2, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 1093, 1094, 1336, 0, 0,
	0, -2, 495, 497, 550, 551, 0, 1601, 1601, 558,
	559, -2, 0, 0, 0, 0, 310, 300, 1031, 1033,
	1035, 1036, 0, 0, 0, 0, 0, 650, 652, 0,
	0, 279, 1038, 1040, 1042, 1043, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 665, 667, 669, 671, 742,
	744, 746, 748, 750, 752, 754, 756, 758, 761, 763,
	765, 767, 769, 772, 774, 776, 779, 782, 784, 786,
	788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
	808, 809, 822, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 924, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 1011, 0, 0,
	825, 828, 829, 830, 831, 832, 833, 0, 897, 922,
	923, 933, 813, 0, 1259, 1602, 1458, 1439, 1453, 1458,
	1441, 1442, 1443, 1444, 1445, 1450, 1452, 1446, 1447, 1448,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	438, 440, 442, 444, 446, 449, 451, 453, -2, 1571,
	1572, 501, 503, 505, 507, 509, 511, 513, 653, 0,
	655, 0, 827, -2, 0, 1606, 1606, 1606, 0, 0,
	1572, 1570, 0, 658, 659, 721, 722, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 2139, 1967, 0, 723,
	-2, 2000, 2002, 2738, 2567, 2763, 2138, 2004, 2005, 2006,
	2007, 2008, 0, 2010, 2011, 2012, 2013, 2014, 2015, 0,
	2017, 0, 2022, 2023, 2024, 0, 2745, 2242, 2326, -2,
	0, 0, 2751, 2322, 0, 2105, 2040, -2, -2, 2349,
	2328, 1811, 1812, 1813, 1814, 1815, -2, -2, 2781, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	0, 2726, 2746, 2747, 2752, 2754, 2748, 2735, 2065, 2432,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1838, 1847, -2, -2, -2, -2, -2,
	-2, -2, 2739, 2740, 2757, 2760, 2766, 2771, 2772, 2744,
	2753, 2780, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 1839, -2,
	-2, -2, -2, 1589, 2608, 1592, 1219, 1590, 1574, 1576,
	0, 1578, 0, 0, 0, 1583, 1609, 1607, 0, 1658,
	1587, 1588, 1681, 1681, 1705, 0, 1686, 0, 1705, 1601,
	1732, 0, 1692, 2634, 2041, 2042, 0, 2332, 2327, -2,
	-2, 2778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 616, 618, 0, 0, 0, 641,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 422, 423, 2746, 0, 0, 0, 428, 0,
	430, 431, 432, 433, 434, 435, 436, 209, 2746, 518,
	543, 0, 209, 2746, 521, 209, 2746, 524, 0, 527,
	1334, 209, 2746, 530, 2293, 209, 2746, 533, 535, 2301,
	209, 2746, 539, 2308, 2306, 540, 0, 542, 229, 225,
	226, 227, 228, 1425, 1426, 1427, 1428, 0, 1455, 1335,
	663, 0, 689, 0, 693, 694, 2734, -2, 0, 2654,
	698, 699, -2, 701, 1459, 1463, 1464, 1465, 1466, 1467,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 690,
	691, 708, 709, 715, 718, 0, 817, 818, 819, 820,
	821, 71, 0, 2746, 1732, 73, 0, 2287, 2357, 2358,
	2359, 2360, 2361, 2779, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2781, 77, 0, 2746, 82, 0,
	2746, 0, -2, 95, 0, 108, 0, 135, 0, 2290,
	-2, -2, -2, 2283, 116, 0, 2746, 0, 2262, -2,
	0, 221, 301, 302, 303, 0, 1068, -2, 0, 1272,
	1274, 1274, 0, -2, 0, 0, 0, 1021, 2259, 2264,
	1022, 1023, 2269, 0, 348, 349, 350, 351, 352, 0,
	353, 2746, 355, 356, 0, 358, 359, 2746, 361, 362,
	0, 364, 0, 366, 0, 261, 265, 2746, 313, 314,
	2345, 2346, 2353, 2354, 2355, 2356, 2746, 390, 392, 0,
	394, 395, 0, 397, 0, 0, 0, 401, -2, 417,
	0, 414, 404, 405, 407, 408, 409, 410, 411, 0,
	457, 455, 2298, 0, 0, -2, 2746, 0, 1065, 0,
	0, 1314, -2, 0, 1265, 0, 1321, 2746, 1317, 0,
	-2, 0, 1599, 2746, 1476, 1097, 1098, 1099, 1100, 1744,
	484, 0, 1507, 0, 1509, 0, 1528, 1738, 1681, 0,
	0, 1743, 0, -2, 603, 2315, -2, 553, 0, 554,
	0, -2, 0, 327, 0, 0, 1046, 1048, 1049, 1051,
	1052, 1055, 1056, 1057, 1058, 0, 1060, 1718, 280, 282,
	0, 0, 0, 1045, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 0, 0, 674, 0, 0, 823, 824,
	0, 0, 840, 841, 842, 0, 327, 2646, 2603, 2454,
	849, 0, 852, 855, -2, 0, 0, 0, 0, 859,
	0, 864, 865, 866, 0, -2, 0, 873, 875, 1029,
	877, 0, 0, 879, 0, 883, 0, 886, 0, 888,
	0, 890, -2, -2, -2, 898, 899, -2, 904, -2,
	0, 908, -2, 0, 911, 0, 914, -2, 0, 924,
	920, 921, 0, 0, 0, 0, 941, 942, 0, 951,
	0, 954, 955, 956, 0, 960, 961, 0, 963, 964,
	965, 966, 0, 2717, 2651, 2418, 0, 974, -2, 980,
	982, 0, -2, 0, 998, 0, 1002, 0, 0, 1010,
	0, 0, 826, 0, 834, 835, 209, 1736, 1438, -2,
	1440, 0, -2, 0, 654, 0, 657, 1631, 1557, 1554,
	0, 1628, 1629, 1558, 0, 0, 0, 1565, 0, 1604,
	1605, 0, 0, 0, 1544, 1545, 0, 0, 0, 0,
	2144, 2145, 2146, 2147, 2160, 2148, 2149, 2159, 2157, 2158,
	2150, 2151, 2156, 2170, 2171, 2161, 2162, 2152, 2165, 2163,
	2164, 2166, 2167, 2168, 2169, 0, 0, 2175, 0, 2153,
	2154, 2155, 2183, 0, 0, 2184, 0, 2186, 0, 2176,
	2172, 2173, 2174, 0, 1946, 1948, 2250, 0, 0, 0,
	2182, 2177, 2178, 1884, 1885, 1886, 1887, 1888, 1921, 1925,
	1926, 0, 0, 2001, 2247, 2246, 2003, 0, 0, 2198,
	0, 2016, -2, 0, 2139, 2193, 0, 0, 2025, 2026,
	2027, 0, 0, 2198, 0, 0, 2241, 2037, 2038, 1876,
	0, 0, 2107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 1824, 0, 1826, 0, 1827, 1828, 1835, 1848,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 2222, -2, 0, 0, 0, 0, 1840, 0,
	1591, 0, 0, 1662, 2251, 2255, 2256, 1662, 1662, 0,
	0, 2199, 1729, 1729, 0, 0, 1724, 1724, 1724, 1722,
	1705, 0, 1705, 1715, 0, 1705, 1705, 0, -2, 1686,
	0, 0, 1715, 0, 1699, 591, 593, 595, 597, 598,
	599, 601, 1733, 1734, 0, 0, 0, 0, 2333, 0,
	0, 0, 0, 2305, 0, 0, 2318, 0, 0, 2292,
	373, 0, 0, 0, 2700, 2645, 0, -2, 621, 644,
	1601, 0, 2201, 1759, 1763, 0, 1765, 1766, 1767, 1768,
	1769, 0, 0, 1760, -2, 1836, 1838, 1859, 2350, 2351,
	2352, 1819, 1820, 1821, 1822, 1823, 1831, 1818, 1818, 1818,
	1829, 1858, 1850, 1858, 1854, 1804, 1805, 1806, 1841, 1842,
	1843, 1844, 0, 2700, 2645, 0, -2, 0, 631, 0,
	0, 1539, 418, 0, 425, 426, 427, 0, 514, 0,
	207, 208, 0, 209, 2746, 519, 0, 522, 0, 209,
	2746, 2257, 528, 0, 531, 0, 0, 537, 0, 0,
	0, 0, 0, 209, 1541, 0, 0, 0, 0, -2,
	703, 711, 712, 713, 0, 1461, 0, 1468, 732, 733,
	734, 1470, 1471, 0, 1473, 706, 735, 736, 737, 738,
	739, 740, 0, 2271, 2272, 2273, 2274, 2277, 2278, 0,
	0, 704, 725, 707, 0, 719, 117, 1411, 0, 0,
	164, 0, 1411, 1411, 0, 0, 0, 0, 192, 0,
	1131, 0, 0, 0, 0, 135, 149, 160, 129, 130,
	131, 0, 0, 0, 0, 0, 0, 83, 1241, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 1257, 0,
	0, 0, 0, 0, 97, 98, 0, 0, 103, 104,
	0, 148, 0, 0, 0, 0, 0, 1504, 0, 139,
	0, 0, 134, 136, 135, 119, 0, 0, 135, 150,
	162, 0, 196, 198, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 231, 0, 0, 0, 1266, 0,
	0, 0, 1598, 0, 0, 0, 0, 2746, 1409, 0,
	1394, 0, 1718, 2503, -2, -2, 280, 1718, 1020, 0,
	0, 2333, 2267, 0, 0, 0, 0, 0, 0, 365,
	0, 0, 0, 393, 396, 398, 399, 400, 0, 1313,
	0, 406, 447, 1190, 2746, 0, 0, 474, 469, 0,
	471, 0, 0, 0, 1240, 2746, 1238, 2302, 0, 1263,
	0, 1219, 2746, 2300, 0, 0, 0, 1322, 2342, 1331,
	1335, 1494, 0, 486, 0, 1510, 1512, 0, 0, 1739,
	0, 1741, 1681, 1601, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 0, 1059, 286, 0, 1717, 0,
	0, 315, 1718, 280, 2620, 1044, 327, 327, 1718, 676,
	1718, 678, 0, 0, 843, 844, 0, 327, 327, 327,
	850, 851, 853, 854, -2, -2, -2, -2, 856, 857,
	948, 0, 0, 0, 947, 867, 0, 869, 872, 876,
	0, 1014, 2629, 2645, 2700, 1027, 948, 2418, 948, 2418,
	948, 2418, 948, 948, 892, 936, 944, 903, 910, 0,
	905, 909, 912, 915, 0, 917, 925, 0, -2, 0,
	928, 0, 930, 0, 932, 948, 949, 952, 959, 962,
	967, 968, 969, 970, 2313, 971, 972, 973, -2, 977,
	978, 0, 989, 994, 995, 991, 0, 0, 0, 0,
	0, 0, 1005, 1006, 0, 0, 1013, 0, 836, 1258,
	0, 1451, 1631, 1557, 656, 1548, 1630, 1549, 1556, 1559,
	0, 0, 1561, 0, 1563, 0, 1626, 1627, 1634, 1635,
	0, 1645, 1646, 1638, 0, -2, 0, 0, 1641, 1642,
	1567, 0, 1584, 1585, 1586, 1615, 1618, 1350, 0, 2879,
	1880, 1754, 1881, 1882, 2286, 0, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, -2, -2, -2, -2,
	-2, -2, -2, -2, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, -2, -2, -2, 1922, 1923,
	1924, -2, 2185, 2187, 0, 2250, 0, -2, 0, -2,
	-2, -2, -2, 1943, 0, 1945, 1950, 1952, 1954, 0,
	0, 0, 0, 2249, 1964, 2233, 2234, 0, 0, 2141,
	2142, 2143, 1949, 0, 1968, 2248, 2245, 0, 0, 2179,
	0, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 0, 2197, 1614, 2029, 0, 0,
	0, 0, 2036, 2021, 2195, 0, 2194, 0, 0, 0,
	2205, 0, 2240, 2236, 0, 2284, 1875, 1862, 1863, 1864,
	1865, 1866, 1867, 1877, 0, 2281, 2319, 2325, 2115, 0,
	0, 0, 2066, 2067, 2068, 2069, 2070, 0, 2072, 2073,
	0, 2075, 2076, 0, 2078, 2079, 0, 2081, 2082, 2083,
	2084, 2085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 0, 0, 2087, 0, 2208, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2089, 0, 2091, 2199, 2219,
	0, 0, 1969, 0, 0, 0, 0, 2139, 0, 2094,
	2199, 2227, 0, 0, 0, 0, 0, 2199, 0, 2232,
	0, 2101, 0, 2103, 1593, 0, 0, 1749, 0, 0,
	0, 2254, 1749, 1749, 0, 1657, 0, 0, 1725, 1726,
	1727, 1728, 0, 0, 1729, 0, 1719, 1723, 1720, 1721,
	1715, 1678, 0, 0, 2288, 1715, 1684, 1714, 0, 1219,
	1704, 1715, 1715, 0, -2, 1688, 1705, 0, 0, 592,
	594, 596, 600, 602, 0, 0, 1614, -2, 0, -2,
	329, 1218, 0, 0, 0, 0, 0, 0, 611, 613,
	0, 0, 534, 0, 0, 627, 0, 605, 0, 608,
	0, 1750, 1753, 0, 0, 1764, 1770, 1771, 0, -2,
	0, 0, 1860, 0, 0, 0, 0, 0, 639, 0,
	642, 0, 0, 0, 429, 544, 209, 516, 0, 209,
	209, 525, 0, 0, 209, 536, 209, 2309, 209, 2307,
	230, 541, 1540, 242, 0, 692, 0, 1460, 1469, 0,
	729, 0, 731, 0, 2275, 2279, 2276, 2280, 0, 720,
	0, 0, 0, 0, 1410, 0, 1357, 0, 0, 168,
	2746, 0, 211, 0, 0, 1183, 2294, 0, 1173, 0,
	0, 2440, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	1243, 1245, 1252, 1254, 0, 1248, 2282, 0, 0, 1249,
	0, 1251, 1253, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1275, 0, 0, 1276, 1277, 1482,
	1483, 0, 1503, 1504, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 2261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 0, 1309, 1307, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 0, 0, 0, 0, -2, 1270,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 318, 2260, 2270, 0, 1053, 1054, 354, 357,
	360, 363, 248, 0, 0, 402, 0, 0, 1103, 1078,
	0, 0, 456, 327, 0, 0, 470, 474, 2311, 1063,
	1236, 1239, 0, 1219, 2746, 1286, 0, 0, 0, 0,
	0, 0, 1320, 0, 0, 2746, 2289, 2341, 2342, 1496,
	1504, 0, 1749, 0, 1526, 1513, 0, 0, 0, 1526,
	1530, 1531, 1533, 1534, 0, 0, 1740, 1746, 552, 604,
	1601, 1601, 327, 325, 2570, 323, 320, 322, 0, 0,
	1516, 1518, 0, 0, 0, 274, 0, 283, 1718, 281,
	0, 286, 0, 0, 0, 468, 675, 680, 838, 0,
	327, 846, 847, 848, 894, 938, 946, 993, 858, 860,
	861, 862, 0, 0, 0, 1028, 1024, 1025, 1026, 878,
	948, 881, 948, 884, 948, 887, 889, 907, 913, 926,
	919, 927, 0, 0, 0, 940, 957, 0, 976, 0,
	0, 0, 0, 0, 0, 0, 999, 1000, 1001, 1003,
	1008, 1007, 1012, 837, 1737, 1552, 1553, 1555, 0, 1564,
	0, 0, 1640, -2, -2, 1639, 1643, 1644, -2, -2,
	-2, -2, 1560, 0, 1569, 1566, 0, 1625, 1348, 1349,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1965,
	0, -2, 1944, 1947, 1951, 1953, 1955, 0, 0, 0,
	0, 0, 0, 2188, 0, 2190, 1966, 2243, 2246, 2181,
	0, 2137, 0, 0, 1613, 1614, 1614, 0, 2035, 0,
	2196, 0, 2203, 2204, 0, 2028, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 2071, 2074, 2077, 2080, 0, 0, 0, 0,
	2060, 0, 0, 0, 2064, 1830, 1816, 0, 1858, 1856,
	1857, 1851, 1858, 1855, 1808, 0, 1807, 0, 2086, 0,
	2088, 2090, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 1974, 1994, 2093, 2225, 2226, 0, 0, 0, 0,
	0, 0, 2099, 0, 2231, 2100, 2102, 1601, 0, 1594,
	0, 1659, 1648, 1748, 0, 2252, 1718, 1661, 1663, 2253,
	2291, 1648, 1648, 0, 2200, 0, 0, 1709, 0, 0,
	0, 1711, 1682, 0, 0, 1676, 0, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1683, 1219, 1713, 1685, 1689, 2319,
	0, 1715, 0, 1700, 0, 1702, 1735, 0, 1694, 1697,
	0, 0, 2334, 1749, 0, 367, 374, 375, 368, 369,
	370, 371, 0, 1397, 0, 0, 0, 0, 0, 2202,
	0, 1755, 0, 1761, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 1538, 424, 515, 209, 520, 523,
	2258, 209, 529, 532, 538, 238, 0, 688, -2, 727,
	728, 730, 0, 726, 165, 1411, 0, 0, 1353, 1355,
	1359, 1365, 1368, 0, 170, 2746, 182, 0, 2746, 0,
	1147, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	2746, 209, 2746, 209, 186, 188, 191, 0, 195, 193,
	0, 1135, 0, 0, 1138, 118, 1411, 0, 0, 121,
	125, 137, 0, 0, 0, 147, 0, 0, 0, 1370,
	1374, 1382, 0, 0, 0, 1246, 1247, 1250, 1256, 84,
	0, 0, 0, 1378, 1380, 1386, 96, 99, 2746, 2303,
	101, 2746, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 123, 127, 138, 0, 1388, 120, 0,
	224, 0, 0, 214, 209, 2746, 0, 216, 0, 217,
	218, 232, 0, 0, 0, 1066, 1067, 1308, 0, 1261,
	1262, 0, 1273, 1267, 0, 0, 0, 0, 0, 1390,
	1391, 0, 0, 0, 1409, 1406, 1718, 244, 0, 1718,
	252, 0, 2266, 0, 266, 389, 0, 0, 0, 0,
	1102, 1201, 1104, 1106, 1107, 1108, 211, 0, 2342, 1173,
	2492, 2342, 0, 0, 1073, 0, 0, 0, 462, 458,
	0, 467, 473, 472, 478, -2, 0, 0, 0, 0,
	-2, 0, 0, 1324, 1318, 1319, 0, 0, 0, 0,
	2746, 1498, 1504, 0, 1599, 1614, 485, 1505, 1526, 0,
	0, 0, 1515, 1511, 1508, 1749, 0, 0, 0, 0,
	0, 1742, 1745, 555, 556, 304, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 284, 0,
	287, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	0, 0, 286, 316, 276, 1718, 0, 0, 677, 0,
	0, 845, 0, 868, 871, 880, 882, 885, 929, 931,
	948, 958, 983, 984, 1125, 0, 1125, 0, 0, 1004,
	1562, 0, 1637, 1568, 1619, 1620, 0, 1350, 0, 1883,
	1928, 0, 0, -2, 0, 0, 1932, 0, 0, 0,
	-2, 0, 0, 0, 2189, 2191, 0, 2245, 2180, 2030,
	0, 0, 0, 2034, 2018, 2019, 0, 2140, 2206, 2235,
	2239, 0, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 0,
	2285, 2320, 2324, 2113, 2114, 2118, 2299, 0, 0, 0,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1853, 0, 0, 2207, 2218, 2220, 1970, 1971, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, -2, -2,
	-2, 1988, 1989, 1990, -2, -2, -2, 1995, 0, 0,
	0, 2221, 2223, 2224, 2228, 2229, 0, 2096, 2097, 2098,
	2230, 0, 1601, 1595, 1656, 0, 1747, 1660, 0, 1656,
	1656, 1608, 1707, 0, 0, 1731, 0, 1679, 0, 1680,
	0, 0, 1712, 0, 1687, 1690, 1691, 1701, 0, 1693,
	0, 1696, 0, 2030, -2, 328, 330, 332, 0, 335,
	336, 0, 0, 0, 620, 0, 1397, 1397, 0, 622,
	606, 0, 0, 1757, 0, 0, 1833, 1837, 1861, 633,
	635, 0, 0, 2700, 2645, 0, 632, 517, 526, 240,
	0, 1716, 0, 0, 0, 0, 0, 0, 210, 0,
	1182, 0, 1145, 0, 0, 1172, 0, 0, 1188, 172,
	173, 174, 0, 0, 0, 0, 184, 0, 0, 180,
	0, 190, 194, 1132, 0, 0, 0, 0, 1358, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	1489, 0, 1479, 0, 0, 141, 0, 0, 0, 0,
	212, 0, 0, 0, 1347, 234, 0, 0, 0, 0,
	0, 1260, 1311, 1312, 1269, 1371, 1375, 1383, 0, 0,
	0, 0, 0, 647, 1408, 0, 252, 250, 0, 253,
	0, 256, 257, 0, 0, 252, 246, 0, 0, 0,
	1219, 403, 1076, 1189, 0, 0, 1191, 1109, 1113, 0,
	2342, 2342, 0, 2296, 0, 1074, 0, 0, 1190, 454,
	0, 461, 0, 475, 0, 0, 1240, 0, 0, 1264,
	1284, 1219, 0, 1323, 1325, 0, 1333, 0, 0, 0,
	1500, 1504, 0, 1493, 1494, 1633, 1506, 1524, -2, 0,
	0, 1614, 1532, 1529, 1535, 1536, 0, 324, 0, 319,
	321, 0, 307, 0, 1517, 1519, 0, 1047, 1050, 0,
	0, 0, 0, 0, 0, 0, 275, 286, 1718, 311,
	0, 839, 863, 939, 985, 1124, 0, 0, 987, 0,
	0, 1636, 1623, 1624, 1621, 1350, 1930, 1934, 0, 0,
	0, 1936, -2, 0, 1958, -2, -2, 2192, 2244, 2009,
	1614, 2031, 2033, 2020, 2238, 1878, 0, 2120, 2117, 0,
	2104, 0, 2055, 2056, 0, 0, 2059, 2061, 2062, 2063,
	1817, 1810, 1809, 2217, 0, 0, 0, 0, 2095, 1596,
	0, 2109, 0, 0, 1664, 2109, 2109, 1708, 0, 1710,
	1677, 1665, 0, 1674, 0, 2320, 1703, 1695, 0, 0,
	333, 0, 337, 338, 372, 0, 623, 624, 0, 0,
	1751, 1756, 0, 1762, 1832, 0, 0, 0, 0, 0,
	241, 166, 167, 1362, 1366, 1363, 0, 169, 0, 0,
	1146, 0, 1149, 0, 0, 0, 0, 1156, 1173, 0,
	0, 0, 0, 0, 0, 1175, 0, 1174, 0, 0,
	1205, 0, 1338, 1345, 0, -2, 0, 0, 0, 176,
	200, 0, 0, 0, 0, 203, 1412, 178, 0, 0,
	209, 209, 0, 0, 1354, 1356, 1369, 0, 0, 0,
	0, 154, 0, 0, 1372, 1376, 1384, 1379, 1381, 1387,
	0, 102, 0, 1490, 140, 0, 0, 0, 0, 1389,
	222, 223, 0, 209, 0, 209, 215, 209, 1347, 0,
	0, 0, 0, 0, 0, 0, 1392, 1393, 243, 0,
	0, 0, 0, 0, 245, 317, 252, 391, 0, 1134,
	0, 1201, 1193, 1194, 1195, 0, 1105, 1200, 1202, 0,
	0, 1110, 0, 0, 0, 0, 1090, 1075, 0, 1086,
	0, 0, 1103, 1078, 0, 459, 476, 0, 479, 0,
	482, 1064, 1237, 1281, 1219, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 1502, 1504, 0, 1495, 1496, 1526,
	1632, 0, 0, 0, 1514, 1633, 0, 326, 327, 0,
	327, 288, 0, 289, 290, 291, 298, 299, 277, 278,
	679, 681, 0, 0, 687, 1123, 0, 0, 0, 0,
	1622, 1938, -2, -2, 1959, 0, 2321, 2323, 1614, 0,
	2106, 1616, 0, 0, -2, 0, 0, 0, 1597, 1580,
	0, 1655, 1647, 1649, 1651, 2632, 2413, 2745, 1581, 1582,
	1730, 0, 0, 1698, 334, 1396, 625, 0, 0, 1758,
	0, 630, 0, 0, 0, 0, 0, 1364, 171, 0,
	0, 1150, 1151, 2295, 1153, 0, 1155, 1157, 1158, 1159,
	0, 1162, 0, 2344, 0, 1167, 1170, 1171, 0, 0,
	1184, 1206, 0, 1215, 0, 1340, 1350, 1344, 0, 1342,
	1217, 0, 175, 202, 177, 204, 199, 0, 1347, 0,
	179, 189, 0, 0, 122, 0, 0, 2407, 157, 155,
	153, 100, 1351, 0, 143, 124, 0, 224, 233, 1346,
	235, 219, 209, 0, 1373, 1377, 1385, 0, 1400, 1401,
	1402, 1403, 0, 0, 0, 0, 254, 0, 255, 258,
	259, 0, 0, 1078, 1133, 1077, 1192, 0, 1203, 1204,
	0, 0, 0, 0, 0, 0, 1080, 0, 1079, 0,
	0, 0, 0, 0, 460, 463, 0, 466, 0, 0,
	0, 0, 0, 1326, 1324, 0, 1332, 0, 0, 0,
	1478, 0, 0, 1497, 1498, 483, 1520, 0, 0, 1526,
	1537, 306, 0, 309, 285, 0, 683, 0, 685, 0,
	986, 988, 0, 0, 2032, 2124, 0, 0, 2057, 2058,
	-2, 0, 1998, 2108, 2110, 0, 0, 0, 0, 0,
	1666, 1675, 1397, 1752, 637, 634, 636, 0, 1360, 0,
	1367, 211, 1148, 1152, 0, 0, 0, 1163, 1223, 0,
	0, 1240, 1240, 1176, 0, 0, 1209, 1210, 1130, 0,
	1211, 1212, 1213, 1339, 1625, 1345, 1186, 0, 0, 201,
	206, 0, 0, 0, 0, 0, 0, 142, 0, 213,
	236, 1347, 0, 1404, 1405, 0, 0, 251, 270, 0,
	1282, 1080, 0, 1111, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1112, 1217, 0, 0, 1181, 1088, 0,
	1091, 0, 1087, 1084, 1085, 1076, 0, 464, 465, 480,
	0, 481, 0, 1285, 0, 0, 1333, 0, 0, 1485,
	1477, 1504, 1499, 1500, 1749, 1523, 1527, 0, 682, 0,
	0, 996, 997, 0, 0, 0, 0, 2119, 1617, 1999,
	0, 0, 1650, 1652, 1653, 1654, 626, 0, 1361, 183,
	0, 0, 1161, 1228, 0, 0, 0, 0, 0, 1177,
	1207, 1208, 1205, 1129, 0, 1343, 1341, 0, 1219, 181,
	0, 1217, 0, 1139, 0, 0, 1142, 0, 0, 158,
	2407, 156, 0, 209, 1397, 209, 0, 273, 0, 264,
	262, 263, 1072, 0, 1197, 1199, 1215, 1217, 1130, 0,
	1092, 1134, 1090, 477, 1283, 1316, 1217, 0, 1215, 0,
	1492, 1504, 1486, 1487, 0, 1502, 0, 327, 684, 686,
	2116, 2136, 2125, -2, 2703, 2414, 0, 2136, 2136, 2111,
	2112, 0, 0, 0, 1164, 1224, 1225, 0, 1220, 1221,
	1222, 2343, 1165, 1166, 1168, 1169, 1749, 0, 0, 1223,
	205, 187, 1136, 0, 0, 1137, 0, 0, 161, 0,
	163, 237, 1395, 1398, 0, 260, 0, 0, 1069, 1071,
	1196, 0, 1130, 1215, 1078, 0, 0, 0, 1078, 1080,
	1215, 0, 1130, 0, 1481, 1491, 0, 1501, 1478, 0,
	308, 2121, 0, 0, 2127, 2128, 2129, 2130, 2131, 2122,
	2123, 638, 1154, 0, 1226, 0, 1227, 0, 0, 0,
	1185, 1214, 0, 1228, 1140, 0, 1143, 0, 159, 0,
	0, 268, 269, 1198, 1078, 1130, 1749, 0, 1081, 0,
	1083, 1080, 1089, 1130, 0, 1078, 0, 1474, 1480, 1484,
	2304, 1485, 1521, 0, 0, 2133, 2134, 0, 0, 0,
	1229, 0, 1232, 1233, 0, 1230, 0, 1205, 0, 0,
	209, 0, 1749, 1078, 1180, 1082, 1072, 1078, 1217, 1749,
	1215, 1492, 0, 2132, 2135, 2126, 1160, 1231, 1234, 1235,
	1216, 1187, 0, 0, 1399, 271, 0, 1178, 1749, 1070,
	1749, 1215, 1329, 1130, 1481, 1749, 1127, 0, 0, 1179,
	1327, 1130, 1078, 1475, 1522, 1141, 1126, 0, 272, 1078,
	1749, 0, 1749, 1330, 0, 1328, 1127, 1144,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	602, 603, 595, 593, 607, 594, 604, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 610, 3,
	583, 585, 584, 588, 606, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 600, 3, 601, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 608, 590, 609, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 605, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1699
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1941
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1953
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				ToStoreID:       sqlDollar[6].union.int64(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				ToStoreID:       sqlDollar[7].union.int64(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.int64(),
				ToStoreID:       sqlDollar[8].union.int64(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:     sqlDollar[7].union.int64(),
				ToStoreID:       sqlDollar[9].union.int64(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2012
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2021
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2032
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2061
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2071
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2091
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2097
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2123
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2128
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2263
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2276
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2516
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2520
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2607
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2866
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "alter function")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3150
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3159
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3165
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3170
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3175
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = nil
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3283
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3297
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3504
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3509
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3528
		{
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplemented(sqllex, "create access method")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplemented(sqllex, "create cast")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3549
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3551
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3553
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			return unimplemented(sqllex, "create publication")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3559
		{
			return unimplemented(sqllex, "create rule")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return unimplemented(sqllex, "create server")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3568
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3571
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3572
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3576
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplemented(sqllex, "drop server")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3723
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3758
		{

			sqlVAL.union.val = nil
		}
	case 475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3845
		{
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3871
		{
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "DROP")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4071
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4137
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4161
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "DELETE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "INSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "DELETE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "INSERT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4250
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4283
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4374
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4390
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "GRANT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4486
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "RESET")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "RESET")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "USE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4573
		{
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "USE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return unimplemented(sqllex, "set from current")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = tree.Low
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = tree.Normal
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = tree.High
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5027
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.str = "client_encoding"
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.str = "timezone"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5113
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5185
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5338
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = true
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = false
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5449
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5517
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5568
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = true
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = false
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5592
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = true
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = false
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5677
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5681
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5685
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5696
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5718
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5748
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5753
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5758
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5779
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5837
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5845
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5866
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5871
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
		}
	case 996:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5889
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5993
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6006
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6359
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6459
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6474
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{

			sqlVAL.union.val = nil
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.str = ""
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6518
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = nil
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6541
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6545
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6571
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6584
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6598
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6681
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6692
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.str = ""
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6941
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{

			sqlVAL.union.val = true
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = false
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7003
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7099
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7127
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7137
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7217
		{
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7220
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7379
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7388
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7396
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7444
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7522
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.str = ""
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = true
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{

			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = false
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7571
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7585
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7597
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7609
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7619
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7629
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = nil
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7738
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7766
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7768
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7770
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7774
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7809
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7826
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7844
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7860
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7876
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = false
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = true
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = false
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = true
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7940
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.str = ""
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.str = ""
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8019
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8244
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8250
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8262
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8268
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8282
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8288
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8347
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = true
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = false
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.Types
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8440
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8499
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8551
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8606
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8627
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8670
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8786
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8791
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{

		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8823
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.str = ""
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.str = ""
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.str = ""
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8892
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8921
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8952
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9028
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9032
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9123
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9138
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9440
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9494
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = nil
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9507
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9508
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = false
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9542
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9600
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9659
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9754
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9785
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9787
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9824
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9871
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9883
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9902
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9944
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9954
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10000
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10030
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10063
		{
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10065
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = nil
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = true
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = false
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.str = tree.AstFull
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.str = tree.AstRight
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.str = tree.AstInner
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10183
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.str = tree.AstHash
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.str = ""
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10297
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10359
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10367
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10386
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10396
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10416
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10477
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = types.Geography
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10527
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10535
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10561
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10569
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = nil
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = types.Int2
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = types.Int
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = types.Float4
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.Float
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10628
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = types.Bool
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = types.Float
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10661
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10667
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10689
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = types.String
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = true
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = types.Date
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10746
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10760
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10769
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10777
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10794
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = true
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = false
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = false
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = types.Interval
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10818
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = nil
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10947
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11156
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11351
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11373
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11590
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11616
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11640
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11674
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11685
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11686
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11701
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11776
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11977
		{
			return unimplemented(sqllex, "treat")
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.str = ""
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12249
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12666
		{
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12819
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12835
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12844
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12872
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12889
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13128
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.str = ""
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
